{"version":3,"sources":["reportWebVitals.ts","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","state/AppState.ts","positions/base/PositionFactory.ts","positions/base/PriceOracle.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","positions/Revault.ts","positions/consts.ts","positions/index.ts","state/AllPositionsState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AppHeader.tsx","state/PositionDialogState.ts","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts","../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppState","createStore","name","initialState","loading","wallet","balance","zero","network","alertDialog","actions","connect","a","setState","_withLoading","ethereum","window","alert","_onConnect","on","withLoading","thunk","showAlert","t","message","setWeb3Instance","Web3","account","getNetwork","bn","web3","eth","getBalance","useAppState","createHook","useIsAppConnected","selector","state","utils","isAddress","coingeckoIds","bsc","poly","PriceOracle","prices","token","amount","id","tokenId","address","this","isZero","esdt","fetchPricesElrond","fetchPrices","mul","div","ether","coingeckoId","_","find","v","k","shortname","addresses","fetch","join","response","json","result","mapKeys","toChecksumAddress","mapValues","bn18","usd","value","updateResults","tokenIds","body","variables","i","query","map","headers","accept","pragma","JSON","stringify","method","data","inputs","results","isEmpty","Error","merge","registry","oracle","types","keys","args","type","p","current","startsWith","Address","fromString","e","isElrondAddress","PositionFactory","Severity","Farm","asset0","asset1","lpToken","poolId","masterchef","contracts","Pancakeswap_Masterchef","cake","erc20s","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getData","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","networks","Promise","all","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","to18","decimals","valueOf","muln","useLegacyTx","tx","encodeABI","from","send","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","contract","require","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","lt","severity","Critical","getPositionData","posData","getBalanceReward","Aave_aUSDC","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","borrowBalanceCurrent","Compound_cUSDC","balanceOfUnderlying","getAccountLiquidityWithInterest","exchangeRateCurrent","exchangeRate","claimAndTransferAllCompToOwner","Loops","erc20sOrig","REVA","erc20","contractsOrig","Revault_Farm","CakeVault","revault","reva","pendingCakeValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","getArgs","getAssets","getRewardAssets","getHealth","findCakeVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","revaChef","chef","tokens","tvlBusd","parseInt","vaultLength","vaultsLength","times","n","getUserVaultPrincipal","r","principals","filter","vaults","cakeVaults","depositTokenAddress","length","abi","encodeFunctionSignature","Revault","register","BUSD","WBNB","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","ElrondMaiar","Strategies","USDC_EGLD","MEX_EGLD","STORAGE_KEY","loadFromStorage","parse","localStorage","getItem","saveToStorage","setItem","AllPositionsState","positions","load","dispatch","addPosition","getState","position","create","delete","posId","sendTransaction","harvest","console","log","catch","useAllPositionsActions","useAllPositionRows","createSelector","values","sortBy","health","fmtHealth","fmt18","reduce","sum","add","split","useAllPositions","AddPositionDialogState","show","valid","allTypes","sort","closeDialog","setType","isValidInput","setAddress","useAddPositionDialog","AddPositionBtn","isConnected","Button","variant","size","disabled","onClick","AddPositionDialog","appStateActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","style","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","onChange","target","MenuItem","TextField","DialogActions","AppHeader","fontSize","display","flexDirection","justifyContent","ConnectBtn","WalletInfo","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","selectMethod","setMethodArg","index","arg","setUseLegacy","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","BN","positionMethods","selectedMethodArgTypes","positionData","columns","field","headerName","width","align","AllPositionsTable","appState","appActions","rows","positionDialogActions","useEffect","height","onCellClick","toString","PositionDialog","allPositionsActions","DialogContentText","argType","autoFocus","margin","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","href","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","hidden","maxWidth","left","top","Geom1","Geom2","document","getElementById","provider","ProxyProvider","timeout","assets","pool","farm","strategy","balanceEGLD","pair","SmartContract","getAccount","getAddressEsdtList","base64","esdts","lpTotalStakedInFarm","farmNftTotalSupply","token0Id","farmNfts","creator","farmNftBalance","nft","b","farmNftPercentOfSupply","lpBalance","token0r","token1r","percentOfPool","dec","token1","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.4827ede1.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, bn, getNetwork, Network, setWeb3Instance, web3, zero } from \"@defi.org/web3-candies\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    loading: false,\n    wallet: \"\",\n    balance: zero,\n    network: {} as Network,\n\n    alertDialog: \"\",\n  },\n\n  actions: {\n    connect:\n      () =>\n      async ({ setState }) => {\n        await _withLoading(setState, async () => {\n          setState({ wallet: \"\", balance: zero, network: {} as Network });\n\n          const ethereum = (window as any).ethereum;\n          if (!ethereum) {\n            alert(\"install metamask\");\n            return;\n          }\n          await _onConnect(setState, ethereum);\n\n          ethereum.on(\"accountsChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n          ethereum.on(\"chainChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n        });\n      },\n\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n  },\n});\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any, ethereum: any) {\n  setWeb3Instance(new Web3(ethereum));\n  const wallet = await account();\n  setState({\n    wallet,\n    network: await getNetwork(),\n    balance: bn(await web3().eth.getBalance(wallet)),\n  });\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet),\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network } from \"@defi.org/web3-candies\";\nimport Web3 from \"web3\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = args.type + \":\" + args.address;\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidInput(type: string, address: string) {\n    return !!type && (Web3.utils.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport { bn18, ether, getNetwork, Token } from \"@defi.org/web3-candies\";\n\nconst coingeckoIds = {\n  eth: \"ethereum\",\n  bsc: \"binance-smart-chain\",\n  poly: \"polygon-pos\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(token: Token, amount: BN): Promise<BN> {\n    const id = (token as any).tokenId || token.address;\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if ((token as any).esdt) await this.fetchPricesElrond(id);\n      else await this.fetchPrices(id);\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(...addresses: string[]): Promise<{ [address: string]: BN }> {\n    const network = await getNetwork();\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === network.shortname)!;\n    const response = await fetch(`https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => Web3.utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(...tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    const body = {\n      variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n      query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n    };\n    const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n      headers: {\n        accept: \"*/*\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"application/json\",\n        pragma: \"no-cache\",\n      },\n      body: JSON.stringify(body),\n      method: \"POST\",\n    });\n    const json = await response.json();\n\n    const result = _(json.data)\n      .mapKeys((v, k) => body.variables[k])\n      .mapValues((v) => bn18(v))\n      .value();\n\n    return this.updateResults(tokenIds, result);\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, contracts, erc20s, getNetwork, networks, to18, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.bsc;\n    }\n\n    getAssets() {\n      return [this.asset0, this.asset1];\n    }\n\n    getRewardAssets() {\n      return [this.cake];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n      this.data.amount0 = to18(r0, await this.asset0.methods.decimals().call())\n        .mul(amountLP)\n        .div(bn(totalSupply));\n      this.data.amount1 = to18(r1, await this.asset1.methods.decimals().call())\n        .mul(amountLP)\n        .div(bn(totalSupply));\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.masterchef.methods.deposit(this.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, bn18, contract, erc20s, ether, getNetwork, networks, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.aave, this.data.rewardAmount);\n      this.data.tvl = await this.oracle.valueOf(this.asset, to18(await erc20s.eth.Aave_aUSDC().methods.totalSupply().call(), 6));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimRewardsToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      this.data.borrowBalance = to18(await this.instance.methods.borrowBalanceCurrent().call(), 6);\n      this.data.supplyBalance = to18(await erc20s.eth.Compound_cUSDC().methods.balanceOfUnderlying(this.args.address).call(), 6);\n      this.data.rewardAmount = bn(await this.instance.methods[\"claimComp()\"]().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.rewardAsset, this.data.rewardAmount);\n      const { accountLiquidity, accountShortfall } = await this.instance.methods.getAccountLiquidityWithInterest().call();\n      this.data.accountLiquidity = bn(accountLiquidity);\n      this.data.accountShortfall = bn(accountShortfall);\n      const [totalSupply, exchangeRate] = await Promise.all([\n        erc20s.eth.Compound_cUSDC().methods.totalSupply().call(),\n        erc20s.eth.Compound_cUSDC().methods.exchangeRateCurrent().call(),\n      ]);\n      this.data.tvl = to18(totalSupply, 8).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimAndTransferAllCompToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, contract, networks, web3, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s } from \"./consts\";\nimport _ from \"lodash\";\nimport { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\n\nexport namespace Revault {\n  export class CakeVault implements Position {\n    revault = contracts.bsc.Revault_Farm();\n    cake = erc20s.bsc.CAKE();\n    reva = erc20s.bsc.REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pendingCake: zero,\n      pendingCakeValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.cake];\n\n    getRewardAssets = () => [this.cake, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.cake, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.cake, amount: this.data.pendingCake, value: this.data.pendingCakeValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findCakeVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pendingCake = bn(returnedTokenAmount);\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingCakeValue] = await Promise.all([\n        this.oracle.valueOf(this.cake, this.data.amount),\n        this.oracle.valueOf(this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.cake, this.data.pendingCake),\n      ]);\n\n      const chef = contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), await this.revault.methods.revaChef().call());\n      const { tvlBusd } = await chef.methods.tokens(this.cake.address).call();\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findCakeVault() {\n      const vaultsLength = parseInt(await this.revault.methods.vaultLength().call());\n      const principals = await Promise.all(\n        _.times(vaultsLength).map((n) =>\n          this.revault.methods\n            .getUserVaultPrincipal(n, this.args.address)\n            .call()\n            .then((r) => ({ id: n, principal: bn(r) }))\n        )\n      );\n      const vaults = await Promise.all(\n        principals\n          .filter((p) => !p.principal.isZero())\n          .map((p) =>\n            this.revault.methods\n              .vaults(p.id)\n              .call()\n              .then((r) => ({ ...r, id: p.id, principal: p.principal }))\n          )\n      );\n      const cakeVaults = vaults.filter((v) => v.depositTokenAddress.toLowerCase() === this.cake.address.toLowerCase());\n      if (cakeVaults.length !== 1) throw new Error(`expected only 1 vault with balance, got: ${cakeVaults}`);\n\n      const vault = { ...cakeVaults[0], payload: \"\" };\n      switch (vault.id) {\n        case 2:\n          vault.payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\");\n          break;\n        default:\n          throw new Error(`unsupported yet ${cakeVaults}`);\n      }\n      return vault;\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { erc20s as erc20sOrig, contracts as contractsOrig, erc20, contract } from \"@defi.org/web3-candies\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {\n  bsc: {\n    REVA: () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\"),\n  },\n});\n\nexport const contracts = _.merge({}, contractsOrig, {\n  bsc: {\n    Revault_Farm: () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\"),\n  },\n});\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"@defi.org/web3-candies\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n    \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n    \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n    \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n    \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n    \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n\n    \"bsc:Revault:Vault:CAKE\": (args, oracle) => new Revault.CakeVault(args, oracle),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.MEX_EGLD()),\n    // \"egld:Maiar:Farm:MEX\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, [ElrondMaiar.tokens.MEX()]),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs, Threat } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { fmt18, zero } from \"@defi.org/web3-candies\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nconst saveToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n  },\n\n  actions: {\n    load:\n      () =>\n      async ({ dispatch }) => {\n        await dispatch(load);\n      },\n\n    addPosition:\n      (type: string, address: string) =>\n      async ({ getState, dispatch }) => {\n        const position = PositionFactory.create({ type, address, id: \"\" });\n        if (!position) {\n          alert(`unknown type ${type} at ${address}`);\n          return;\n        }\n\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        data[position.getArgs().id] = position.getArgs();\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    delete:\n      (posId: string) =>\n      async ({ getState, dispatch }) => {\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        delete data[posId];\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load({ getState, setState }: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD\");\n  const current = getState().positions;\n  const positions = _.mapValues(loadFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n  await Promise.all(_.map(positions, (p) => p.load().catch((e) => console.log(p.getArgs().type, e))));\n  setState({ positions });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        health: fmtHealth(p.getHealth()),\n        value: \"$\" + fmt18(p.getAmounts().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        pending: \"$\" + fmt18(p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        tvl: \"$\" + fmt18(p.getTVL()).split(\".\")[0],\n        position: p,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nfunction fmtHealth(health: Threat[]) {\n  if (!health.length) return \"🟢\";\n  return health.map((t) => t.message).join(\"⚠️\");\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidInput(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidInput(getState().type, address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => allPositionActions.addPosition(state.type, state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button } from \"@mui/material\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nexport const AppHeader = () => (\n  <div style={{ fontSize: \"large\", minWidth: \"42em\" }}>\n    <br />\n    <br />\n\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ConnectBtn />\n\n      <AddPositionBtn />\n    </div>\n\n    <div />\n    <WalletInfo />\n    <div />\n\n    <br />\n  </div>\n);\n\nconst ConnectBtn = () => {\n  const [isConnected, actions] = useIsAppConnected();\n\n  return (\n    <Button variant={\"contained\"} size={\"large\"} onClick={actions.connect}>\n      {isConnected ? \"Refresh\" : \"Connect\"}\n    </Button>\n  );\n};\n\nconst WalletInfo = () => {\n  const [state] = useAppState();\n  return (\n    <div>\n      <p>Network 🌐 {state.network?.name}</p>\n      <p>Wallet 🔑 {state.wallet}</p>\n      <p>Balance 💰 {fmt18(state.balance)}</p>\n    </div>\n  );\n};\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\nimport BN from \"bn.js\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state.position,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) => state.selectedMethod,\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) => state.useLegacy,\n    (state) =>\n      JSON.stringify(\n        _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n        null,\n        4\n      ),\n    (position, positionMethods, selectedMethod, selectedMethodArgTypes, useLegacy, positionData) => ({\n      position,\n      positionMethods,\n      selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy,\n      positionData,\n    })\n  ),\n});\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Type\", width: 300, align: \"left\" },\n  { field: \"health\", headerName: \"Health\", width: 60, align: \"center\" },\n  { field: \"value\", headerName: \"Market Value\", width: 100, align: \"right\" },\n  { field: \"pending\", headerName: \"Pending\", width: 100, align: \"right\" },\n  { field: \"tvl\", headerName: \"TVL\", width: 150, align: \"right\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: 500, width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.positionData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useAppState } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [state] = useAppState();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={state.loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { Address, ContractFunction, ProxyProvider, SmartContract } from \"@elrondnetwork/erdjs/out\";\nimport _ from \"lodash\";\n\nexport namespace ElrondMaiar {\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"EGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n  export const Strategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n  };\n\n  export class Farm implements Position {\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      balanceEGLD: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => ({ id: -508, name: \"Elrond\", shortname: \"egld\" });\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [tokens.MEX()];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [balanceEGLD, esdts, lpTotalStakedInFarm, farmNftTotalSupply, token0Id, reserves] = await Promise.all([\n        provider.getAccount(account).then((r) => bn(r.balance.toString())),\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(farm, \"getFarmTokenSupply\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      this.data.balanceEGLD = balanceEGLD;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      const farmNftBalance = farmNfts.map((nft) => bn(nft.balance)).reduce((sum, b) => sum.add(b), zero);\n      const farmNftPercentOfSupply = farmNftBalance.mul(ether).div(farmNftTotalSupply);\n      const lpBalance = lpTotalStakedInFarm.mul(farmNftPercentOfSupply).div(ether);\n\n      const [token0r, token1r, totalSupply] = reserves;\n      const percentOfPool = lpBalance.mul(ether).div(totalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(this.strategy.assets[0], token0.muln(2).mul(lpTotalStakedInFarm).div(totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function base64Str(s: string) {\n    return Buffer.from(s, \"base64\").toString(\"utf8\");\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n","var map = {\n\t\"./bls.js\": 479,\n\t\"./bls_c.js\": 480\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 973;"],"sourceRoot":""}