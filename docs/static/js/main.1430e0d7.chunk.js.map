{"version":3,"sources":["assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positionsv1/base/consts.ts","state/AppState.ts","positionsv1/base/PositionFactory.ts","ui/AppHeader.tsx","positionsv1/base/PriceOracle.ts","positionsv1/Pancakeswap.ts","positionsv1/base/PositionV1.ts","positionsv1/Loops.ts","positionsv1/Revault.ts","positionsv1/Unicly.ts","positionsv1/TokenBalances.ts","positionsv1/Uniswap.ts","positionsv1/OffChain.ts","positionsv1/AlphaHomora.ts","positionsv1/Balancer.ts","positionsv1/ElrondMaiar.ts","positionsv1/TraderJoe.ts","positionsv1/Ribbon.ts","positionsv1/LooksRare.ts","positionsv1/SushiSwap.ts","positionsv1/Fodl.ts","positionsv1/QuickSwap.ts","positionsv1/Pangolin.ts","positionsv1/Rook.ts","positionsv1/Aave.ts","positionsv1/SpookySwap.ts","positionsv1/SpiritSwap.ts","positionsv1/Bitcoin.ts","positionsv1/Liquity.ts","positionsv1/Raydium.ts","positionsv1/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx"],"names":["erc20s","_","merge","erc20sOrig","networks","networksOrig","off","id","name","shortname","publicRpcUrl","btc","egld","sol","currentNetwork","_currentNetwork","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","netId","wrap","_context","prev","next","bn","window","ethereum","chainId","toNumber","console","log","abrupt","find","n","stop","sendWithTxType","_x","_x2","_sendWithTxType","_callee2","tx","useLegacyTx","_context2","t0","account","t1","sent","t2","t3","from","type","send","call","isNetworkDisabled","network","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","_ref2","_ref","setState","_withLoading","showAlert","alert","_ref4","_ref3","clickNetwork","networkId","_ref6","_callee5","_ref5","getState","_context5","_callee4","_getState$network","_context4","_ethereum","removeAllListeners","on","_callee3","_context3","_onConnect","request","method","_switchNetwork","_x3","_x4","_x5","_withLoading2","_callee6","t","_context6","concat","message","stack","finish","_x6","_onConnect2","_callee7","_context7","setWeb3Instance","Web3","Error","_x7","_switchNetwork2","_callee8","_context8","params","utils","numberToHex","PositionFactory","useAppState","createHook","useIsAppConnected","selector","state","_state$network","isAddress","useIsLoading","useAppActions","AppHeader","_useAppState","_useAppState2","_slicedToArray","_jsx","style","display","flexDirection","justifyContent","margin","children","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","map","ToggleButton","textTransform","disabled","coingeckoIds","_coingeckoIds","_defineProperty","eth","bsc","poly","arb","avax","oeth","ftm","PriceOracle","_classCallCheck","warm","prices","USD","ether","_createClass","key","token","tokenId","symbol","coingeckoId","address","price","this","getId","_valueOf","amount","isZero","fetchPricesElrond","fetchCoingeckoPrices","fetchOffchainPrice","fetchPrices","toString","zero","times","div","_warmup","positions","bynetwork","coingeckoFetches","elrondFetch","_this","groupBy","getNetwork","keys","filter","getAssets","getRewardAssets","flatten","a","uniq","Promise","all","_toConsumableArray","_fetchPrices","addresses","url","response","json","result","isEmpty","v","k","join","fetch","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","_fetchPricesElrond","tokenIds","body","variables","i","query","headers","JSON","stringify","data","_fetchCoingeckoPrices","_x8","_fetchOffchainPrice","exchange_rate","_x9","inputs","results","registry","_PositionFactory","oracle","register","types","allTypes","create","args","uniqueId","shouldLoad","current","isValidArgs","_web","_web$utils","startsWith","e","isElrondAddress","trim","length","isOffChainSymbol","isBitcoinAddress","isSolanaAddress","Pancakeswap","_Pancakeswap","Farm","BUSD","WBNB","erc20","require","CAKE","BTCB","LP","ORBS","asset0","asset1","lpToken","poolId","masterchef","contract","cake","chef","options","lp","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getName","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","_load","_yield$Promise$all","_yield$Promise$all2","userInfo","reserves","token0","totalSupply","pending","lpStaked","_reserve0","_reserve1","r0","r1","amountLP","_yield$Promise$all3","_yield$Promise$all4","getReserves","pendingCake","then","mantissa","balanceOf","toLowerCase","valueOf","_callContract","_sendTransaction","encodeABI","_harvest","deposit","_Farm","_inherits","_super","_createSuper","_this2","_load2","_yield$Promise$all5","_yield$Promise$all6","total0","total1","val0","val1","_yield$Promise$all7","_yield$Promise$all8","plus","Loops","Severity","_Loops","AaveLoop","CompoundLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","aave","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","minus","lt","severity","Critical","posData","atoken","getPositionData","getBalanceReward","t4","t5","t6","t7","owner","claimRewardsToOwner","WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","ctoken","exchangeRate","underlyingBalance","liquidity","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","_callContract2","_sendTransaction2","_x10","_x11","_harvest2","claimAndTransferAllCompToOwner","_x12","Revault","Unicly","TokenBalances","_Revault","SingleVault","_loop","RevaStake","REVA","revault","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","vault","_yield$this$revault$m","returnedRevaAmount","returnedTokenAmount","info","tvlBusd","findVault","principal","payload","harvestVault","tokens","_findVault","_supportedVaults","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","_objectSpread","staking","pendingAmount","poolInfo","userPoolInfo","_callee9","_context9","_Unicly","XUnicFarm","Strategies","uPunks","uJenny","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","xunicrate","pendingxUNICs","getxUNICRate","totalLPTokens","_TokenBalances","TokenBalance","mcap","nativeTokens","WMATIC","WAVAX","NativeTokenBalance","_TokenBalance","_len","Array","_key","getBalance","bnm","forEach","input","Uniswap","OffChain","AlphaHomora","Balancer","ElrondMaiar","TraderJoe","Ribbon","LooksRare","SushiSwap","Fodl","QuickSwap","Pangolin","Rook","Aave","SpookySwap","SpiritSwap","Bitcoin","Liquity","Raydium","maxUint128","pow","_Uniswap","V2LP","V3LP","WBTC","token1","nftPositionManager","nftManager","principal0","principal1","valueIfHodl","valueNow","ilValue","il","pending0","pending1","pendingValue0","pendingValue1","totalFeesValue","High","gt","pos","res","decreaseLiquidity","maxUint256","loadFromPositionGraph","loadTVL","fee","collect","_loadFromPositionGraph","principalValue0","principalValue1","collectedValue0","collectedValue1","position","pool","totalValueLockedUSD","depositedToken0","withdrawnToken0","depositedToken1","withdrawnToken1","collectedFeesToken0","collectedFeesToken1","_loadTVL","factory","a0","a1","v0","v1","getPool","router","pair","factoryAddress","_yield$Promise$all9","_yield$Promise$all10","lpAmount","lpTotalSupply","_this3","getPair","_callee10","_context10","_x13","_OffChain","AssetPosition","zeroAddress","BN","_AlphaHomora","LYF","WETHe","WBTCe","alphaHomoraBank","maxHistoryBlocks","supply0","supply1","borrow0","borrow1","ilAmount","debtRatio","lpSupplied","farmAbi","nft","totalLPs","share","debts","totalValue0","totalValue1","getPositionInfo","collateralSize","internalType","outputs","stateMutability","collToken","getUnderlyingToken","collId","getPositionDebts","indexOf","_Balancer","_balToken","DAI","USDT","overridePrice","balToken","gaugeAddress","undefined","gauge","bal","amounts","values","lpTokenAddress","workingBalance","totalWorkingBalance","bpt","totalBptsStaked","bptTotalSupply","bptBalance","poolTokens","poolAmounts","poolValues","loadFromPool","lp_token","claimable_tokens","catch","claimable_reward_write","getPoolTokens","every","eqIgnoreCase","balances","reduce","sum","b","_loadFromPool","x","_ElrondMaiar","esdt","FarmStrategies","USDC_EGLD","assets","farm","L_USDC_EGLD","MEX_EGLD","L_MEX_EGLD","mex","lpBalanceStaked","_this$getAssets","_this$getAssets2","farmEsdts","pairEsdts","totalLPSupply","totalLPStaked","asset0InPair","asset1InPair","asset0TotalValue","asset1TotalValue","esdts","lpNameSuffix","lps","getESDTs","getTotalSupply","tokenIdentifier","balance","split","MexFarm","MexFarmStrategies","MEX","L_MEX","totalAssetStaked","farmNftWrapper","_this4","creator","decimals","dec","_getESDTs","get","_getTotalSupply","_TraderJoe","masterchefAddress","reward","pendingTokens","pendingJoe","lpAddress","_Ribbon","_rewardTokens","ThetaVault","rewardTokens","vaultAddress","rewardToken","strike","_yield$this$vault$met","unredeemedShares","fbalance","fratio","staked","total","currentOption","depositReceipts","liquidityGauge","pricePerShare","totalBalance","t8","t9","t10","t11","t12","bn9","t13","_LooksRare","Staking","AutoCompund","looks","checkPending","stakedLooks","pendingEth","totalShares","sharePrice","tvlAmount","calculateSharesValueInLOOKS","calculatePendingRewards","calculateSharePriceInLOOKS","_Staking","_SushiSwap","getFarmContract","getRewardContract","pendingSushi","lpSupply","_Fodl","XFodlStake","fodl","xfodl","myXfodl","xfodlTotalSupply","fodlStaked","_QuickSwap","orbs","stakingAddress","stakedBalance","totalStaked","earned","amount0InLp","amount1InLp","totalLpSupply","tvl_amount0","tvl_amount1","tvl_value0","tvl_value1","stakingToken","stake","_Pangolin","pendingReward","_Rook","XRook","rook","xrook","totalValueLocked","_Aave","Collateral","aToken","_SpookySwap","boo","pendingBOO","_SpiritSwap","_Bitcoin","BitcoinBalance","bech32","fetchTVL","fetchBalance","fetchPrice","_fetchTVL","r","_fetchBalance","_fetchPrice","parseFloat","_Liquity","Pool","CDP","lusd","lqty","manager","CR_LIQUIDATION","CR_RECOVERY","debt","cr","ltv","liquidationPrice","entireSystemDebt","entireSystemCR","recoveryMode","lte","toFixed","systemColl","systemDebt","crWithGasFeeRebate","getEntireDebtAndColl","getEntireSystemColl","getEntireSystemDebt","checkRecoveryMode","coll","pendingRewardValue","pendingETH","pendingETHValue","totalDeposits","rewards","getTotalLUSDDeposits","getCompoundedLUSDDeposit","getDepositorLQTYGain","getDepositorETHGain","withdrawFromSP","_Raydium","tokenName","lpMintAddress","amountToken","amountSol","valueToken","valueSol","lpInfo","totalLps","totalTokens","totalSol","totalTokensValue","totalSolValue","fetchLpAmount","fetchLpInfo","tokenAmountLp","tokenAmountCoin","tokenAmountPc","_fetchLpInfo","pairs","lpMint","_fetchLpAmount","_response$result$valu","jsonrpc","mint","encoding","it","parsed","tokenAmount","convertDecimals","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","load","api","addPosition","update","newArgs","delete","posId","sendTransaction","harvest","_ref8","_ref7","warmup","loaded","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","chain","health","marketValue","num","useAllPositions","useAllPositionsValuePerPosition","Math","round","rows","sorted","labels","useAllPositionsValuePerAssetClass","reduced","ext","includes","assetClass","ac","useAllPositionsValuePerChain","grouped","totalPerChain","totalMarketValue","grandtotal","idiv","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","_ref10","_ref9","_ref12","_ref11","_ref14","_ref13","_ref16","_ref15","callContract","usePositionDialogActions","usePositionDialogSelector","_state$position","m","endsWith","substring","_state$position2","_state$position3","_state$position4","fmtData","positionMethods","selectedMethodArgTypes","rewardAssets","rawData","isArray","toFormat","AddPositionDialogState","show","valid","sort","setType","setAddress","setInput","setName","useAddPositionDialog","AddPositionBtn","_useIsAppConnected","isConnected","_useAddPositionDialog","Button","onClick","AddPositionDialog","_useAppActions","appActions","_useAddPositionDialog3","_useAddPositionDialog4","_useAllPositionsActio","allPositionActions","close","_jsxs","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","ChartJS","ArcElement","Tooltip","Legend","columns","field","headerName","headerAlign","width","align","valueFormatter","sortable","AllPositionsTable","appState","_useAllPositionRows","_useAllPositionRows2","_useAllPositions","_usePositionDialogAct","positionDialogActions","_useAllPositionsValue","totalValuesPerChain","_useAllPositionsValue3","valuesPerPosition","_useAllPositionsValue5","valuesPerAssetClass","useEffect","_appState$network","height","ListItemText","Pie","datasets","backgroundColor","colorOf","responsive","plugins","legend","DataGrid","onCellClick","autoHeight","hideFooter","bgColors","PositionDialog","_selector$position","_selector$position$ge","_selector$position2","_selector$position2$g","_selector$position3","_selector$position3$g","_selector$position4","_selector$position4$g","_selector$position5","_selector$position5$g","_selector$position6","_selector$position6$g","appStateActions","_usePositionDialogSel","_usePositionDialogSel2","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","accept","hidden","addEventListener","file","files","reader","FileReader","onload","_e$target","_e$target$result","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","_useIsLoading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","React","StrictMode","HashRouter","Route","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById"],"mappings":"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","file":"static/js/main.1430e0d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {});\n\nexport const networks = _.merge({}, networksOrig, {\n  off: { id: -1, name: \"OffChain\", shortname: \"off\", publicRpcUrl: \"\" },\n  btc: { id: -2, name: \"Bitcoin\", shortname: \"btc\", publicRpcUrl: \"\" },\n  egld: { id: -508, name: \"Elrond\", shortname: \"egld\", publicRpcUrl: \"\" },\n  sol: { id: -600, name: \"Solana\", shortname: \"sol\", publicRpcUrl: \"\" },\n});\n\nexport async function currentNetwork() {\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positionsv1/base/consts\";\nimport { Network } from \"../positionsv1/base/PositionV1\";\n\n// defaults.middlewares.plus((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs, Network } from \"./PositionV1\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { web3 } from \"@defi.org/web3-candies\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => PositionV1;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): PositionV1 | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = _.uniqueId(args.type + \":\" + args.address + \"-\" + args.name + \"-\");\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: PositionV1, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return (\n      (!!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address) || isOffChainSymbol(type, address))) ||\n      isBitcoinAddress(type, address) ||\n      isSolanaAddress(type, address)\n    );\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isOffChainSymbol(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:OffChain:Asset\") && _.trim(address).length > 0;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isBitcoinAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:Bitcoin\") && _.trim(address).length > 0 && address.startsWith(\"bc1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isSolanaAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"sol:\") && _.trim(address).length === 44;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport { BN, bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1 } from \"./PositionV1\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\nimport { OffChain } from \"../OffChain\";\nimport { Raydium } from \"../Raydium\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n  [networks.oeth.id]: \"optimistic-ethereum\",\n  [networks.ftm.id]: \"fantom\",\n};\n\nexport class PriceOracle {\n  warm = false;\n  prices: Record<string, BN> = {\n    USD: ether,\n  };\n\n  getId(networkId: number, token: Token) {\n    if (networkId === networks.egld.id) return (token as ElrondMaiar.ESDT).tokenId;\n    if (networkId === networks.off.id) return (token as OffChain.Asset).symbol;\n    if (networkId === networks.sol.id) return (token as Raydium.SolToken).coingeckoId;\n    return token.address;\n  }\n\n  overridePrice(networkId: number, token: Token, price: BN) {\n    this.prices[this.getId(networkId, token)] = price;\n  }\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const id = this.getId(networkId, token);\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (networkId === networks.egld.id) await this.fetchPricesElrond([id]);\n      else if (networkId === networks.sol.id) await this.fetchCoingeckoPrices([id]);\n      else if (networkId === networks.off.id) await this.fetchOffchainPrice(id);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.times(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: PositionV1[]) {\n    if (this.warm) return;\n    this.warm = true;\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[networks.egld.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n\n    try {\n      const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n      const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(addresses, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchCoingeckoPrices(coingeckoIds: string[]): Promise<{ [ids: string]: BN }> {\n    if (_.isEmpty(coingeckoIds)) return {};\n    console.log(\"fetchCoingeckoPrices\", coingeckoIds);\n\n    try {\n      const url = `https://api.coingecko.com/api/v3/simple/price?ids=${coingeckoIds.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(coingeckoIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  async fetchOffchainPrice(symbol: string) {\n    try {\n      const response = await fetch(`https://api.api-ninjas.com/v1/exchangerate?pair=${symbol}_USD`);\n      const json = await response.json();\n      const result = bn18(json.exchange_rate || 1);\n      return this.updateResults(symbol, { [symbol]: result });\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PancakeswapLpAbi, PancakeswapMasterchefV2Abi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // https://docs.pancakeswap.finance/code/migration/masterchef-v2/list-of-farms\n\n  export function register() {\n    const lp_BUSD_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BUSD/BNB\", \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_BTCB_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BTCB/BNB\", \"0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_CAKE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP CAKE/BNB\", \"0x0eD7e52944161450477ee417DE9Cd3a859b14fD0\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ORBS_BUSD = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ORBS/BUSD\", \"0xB87b857670A44356f2b70337E0F218713D2378e8\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ORBS_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ORBS/BNB\", \"0xcD71C49f6e9283Af099faE404f7F38aB543B7ca1\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOGE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOGE/BNB\", \"0xac109C8025F272414fd9e2faA805a583708A017f\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_TON_BTCB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP TON/BTCB\", \"0x1893da6b92660b85538f58217808685b80fb083e\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n\n    PositionFactory.register({\n      \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), lp_BUSD_BNB(), 3),\n      \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), lp_CAKE_BNB(), 2),\n      \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), lp_BTCB_BNB(), 11),\n      \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Farm(args, oracle, erc20(\"DOGE\", \"0xbA2aE424d960c26247Dd6c32edC70B295c744C43\"), erc20s.bsc.WBNB(), lp_DOGE_BNB(), 37),\n\n      \"bsc:Pancakeswap:LP:ORBS/BUSD\": (args, oracle) => new LP(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), lp_ORBS_BUSD()),\n      \"bsc:Pancakeswap:LP:ORBS/BNB\": (args, oracle) => new LP(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.WBNB(), lp_ORBS_BNB()),\n      \"bsc:Pancakeswap:LP:TON/BTCB\": (args, oracle) => new LP(args, oracle, erc20(\"TON\", \"0x76A797A59Ba2C17726896976B7B3747BfD1d220f\"), erc20s.bsc.BTCB(), lp_TON_BTCB()),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<PancakeswapMasterchefV2Abi>(require(\"../abi/PancakeswapMasterchefV2Abi.json\"), \"0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652\");\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      lp: this.lpToken.address,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLpAbi,\n      public poolId: number\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call().then(this.cake.mantissa),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call().then(this.lpToken.mantissa),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = pending;\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).times(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).times(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).times(2).times(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n\n  class LP extends Farm {\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpToken: Token & PancakeswapLpAbi) {\n      super(args, oracle, asset0, asset1, lpToken, -1);\n    }\n\n    async load() {\n      const [total0, total1, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpToken.address).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpToken.address).call().then(this.asset1.mantissa),\n        this.lpToken.methods.totalSupply().call().then(this.lpToken.mantissa),\n      ]);\n      const amountLP = await this.lpToken.methods.balanceOf(this.args.address).call().then(this.lpToken.mantissa);\n      this.data.amount0 = total0.times(amountLP).div(totalSupply);\n      this.data.amount1 = total1.times(amountLP).div(totalSupply);\n\n      let val0, val1;\n      [this.data.value0, this.data.value1, val0, val1] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, total0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, total1),\n      ]);\n      this.data.tvl = val0.plus(val1);\n    }\n  }\n}\n","import { BN, Token, networks } from \"@defi.org/web3-candies\";\n\nexport type Network = (typeof networks)[keyof typeof networks];\n\nexport type PositionArgs = {\n  type: string;\n  address: string;\n  id: string;\n  input?: string;\n  name?: string;\n};\n\nexport interface PositionV1 {\n  getName(): string;\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number | BN[] };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20, erc20s, ether, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi, AaveSAAVEAbi, CompoundCTokenAbi, CompoundLoopAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Loops {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n      \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n    });\n  }\n\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements PositionV1 {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20<AaveSAAVEAbi>(\"stkAAVE\", \"0x4da27a545c0c5B758a6BA100e3a049001de870f5\", 0, require(\"../abi/AaveSAAVEAbi.json\"));\n    aave = erc20(\"AAVE\", \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\");\n    weth = erc20s.eth.WETH();\n\n    data = {\n      contract: this.instance.options.address,\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH.minus(this.data.totalDebtETH),\n        value: this.data.totalCollateralValue.minus(this.data.totalDebtValue),\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20(\"Aave: aUSDC\", \"0xBcca60bB61934080951369a648Fb03DF4F96263C\");\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements PositionV1 {\n    WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL = 0.005; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20(\"COMP\", \"0xc00e94Cb662C3520282E6f5717214004A7f26888\");\n\n    data = {\n      contract: this.instance.options.address,\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance.minus(this.data.borrowBalance),\n        value: this.data.supplyBalance.minus(this.data.borrowBalance),\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.times(this.WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL).div(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20<CompoundCTokenAbi>(\"Compound: cUSDC\", \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\", 0, require(\"../abi/CompoundCTokenAbi.json\"));\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).times(bn18(exchangeRate).times(100)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport type { RevaultChefAbi, RevaultFarmAbi, RevaultStakingAbi } from \"../../typechain-abi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Revault {\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.CAKE()),\n      \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.BUSD()),\n      \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    });\n    for (let i = 0; i < 4; i++) {\n      PositionFactory.register({\n        [`bsc:Revault:RevaStaking:x${i + 1}`]: (args, oracle) => new RevaStake(args, oracle, i),\n      });\n    }\n  }\n\n  const REVA = () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\");\n  const revaultFarm = () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\");\n  const revaultChef = () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\");\n  const revaStaking = () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\");\n\n  class SingleVault implements PositionV1 {\n    revault = revaultFarm();\n    chef = revaultChef();\n    reva = REVA();\n\n    data = {\n      revault: this.revault.options.address,\n      chef: this.chef.options.address,\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  class RevaStake implements PositionV1 {\n    staking = revaStaking();\n    reva = REVA();\n\n    data = {\n      staking: this.staking.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi, UniclyXUnicAbi } from \"../../typechain-abi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Unicly {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n      \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n    });\n  }\n\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", 0, require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", 0, require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements PositionV1 {\n    xfarm = contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\");\n    unic = erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\");\n    xunic = erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\");\n    eth = erc20s.eth.WETH();\n\n    data = {\n      xfarm: this.xfarm.options.address,\n      unic: this.unic.options.address,\n      xunic: this.xunic.options.address,\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).times(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).times(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.times(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).times(2).times(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { Network, PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bnm, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport Web3 from \"web3\";\n\nexport namespace TokenBalances {\n  class TokenBalance implements PositionV1 {\n    data = {\n      name: \"\",\n      amount: zero,\n      value: zero,\n      totalSupply: zero,\n      mcap: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token: Token) {\n      token.name = args.name || token.name;\n    }\n\n    getName = () => this.data.name;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      [this.data.name, this.data.amount, this.data.totalSupply] = await Promise.all([\n        this.token.methods.name().call(),\n        this.token.methods.balanceOf(this.args.address).call().then(this.token.mantissa),\n        this.token.methods.totalSupply().call().then(this.token.mantissa),\n      ]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.mcap;\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  const nativeTokens = {\n    eth: () => _.merge(erc20s.eth.WETH(), { name: \"ETH\" }),\n    bsc: () => _.merge(erc20s.bsc.WBNB(), { name: \"BNB\" }),\n    poly: () => _.merge(erc20s.poly.WMATIC(), { name: \"MATIC\" }),\n    avax: () => _.merge(erc20s.avax.WAVAX(), { name: \"AVAX\" }),\n    arb: () => _.merge(erc20s.arb.WETH(), { name: \"AETH\" }),\n    oeth: () => _.merge(erc20s.oeth.WETH(), { name: \"ETH\" }),\n  };\n\n  class NativeTokenBalance extends TokenBalance {\n    getName = () => this.token.name;\n\n    async load() {\n      [this.data.amount, this.data.totalSupply] = await Promise.all([web3().eth.getBalance(this.args.address).then(bnm), this.token.methods.totalSupply().call().then(bnm)]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n  }\n\n  export function register() {\n    _.forEach(networks, (n) => {\n      if (n.id < 0) return;\n      PositionFactory.register({\n        [`${n.shortname}:Token`]: (args, oracle) => new TokenBalance(args, oracle, n, erc20(\"\", Web3.utils.toChecksumAddress(args.input!))),\n      });\n\n      const t = (nativeTokens as any)[n.shortname];\n      if (t) PositionFactory.register({ [`${n.shortname}:TokenBase`]: (args, oracle) => new NativeTokenBalance(args, oracle, n, t()) });\n    });\n  }\n}\n","import { Network, PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, maxUint256, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { UniswapNftManagerAbi, UniswapV2Abi, UniswapV2FactoryAbi, UniswapV3FactoryAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nconst maxUint128 = bn(2).pow(bn(128)).minus(1).toString();\n\nexport namespace Uniswap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Uniswap:V2LP:USDC/ETH\": (args, oracle) => new V2LP(args, oracle, erc20s.eth.USDC(), erc20s.eth.WETH()),\n\n      \"eth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.WBTC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:USDC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:TON/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20(\"TON\", \"0x582d872A1B094FC48F5DE31D3B73F2D9bE47def1\"), erc20s.eth.WETH()),\n\n      \"arb:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.arb, erc20(\"WBTC\", \"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f\"), erc20s.arb.WETH()),\n\n      \"poly:Uniswap:V3LP:MATIC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.poly, erc20s.poly.WMATIC(), erc20s.poly.WETH()),\n\n      \"oeth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.oeth, erc20s.oeth.WETH(), erc20s.oeth.WBTC()),\n    });\n  }\n\n  class V3LP implements PositionV1 {\n    nftPositionManager = contract<UniswapNftManagerAbi>(require(\"../abi/UniswapNftManagerAbi.json\"), \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\");\n\n    data = {\n      nftManager: this.nftPositionManager.options.address,\n      id: 0,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      principal0: zero,\n      principal1: zero,\n      valueIfHodl: zero,\n      valueNow: zero,\n      ilValue: zero,\n      il: zero,\n      pending0: zero,\n      pending1: zero,\n      pendingValue0: zero,\n      pendingValue1: zero,\n      totalFeesValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!) || 0;\n      if (this.data.id <= 0) throw new Error(\"unknown positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [this.token0, this.token1];\n    getPendingRewards = () => [\n      { asset: this.token0, amount: this.data.pending0, value: this.data.pendingValue0 },\n      { asset: this.token1, amount: this.data.pending1, value: this.data.pendingValue1 },\n    ];\n    getHealth = () => {\n      if (this.data.value0.isZero() || this.data.value1.isZero())\n        return [\n          {\n            severity: Severity.High,\n            message: \"Range\",\n          },\n        ];\n      if (!this.data.totalFeesValue.isZero() && this.data.ilValue.gt(this.data.totalFeesValue))\n        return [\n          {\n            severity: Severity.High,\n            message: \"IL\",\n          },\n        ];\n      return [];\n    };\n\n    async load() {\n      const pos = await this.nftPositionManager.methods.positions(this.data.id).call();\n      if (web3().utils.toChecksumAddress(pos.token0) !== web3().utils.toChecksumAddress(this.token0.address)) throw new Error(`invalid tokens for pos, ${JSON.stringify(pos)}`);\n\n      const res = await this.nftPositionManager.methods.decreaseLiquidity([this.data.id, pos.liquidity, 0, 0, maxUint256]).call({ from: this.args.address });\n      this.data.amount0 = await this.token0.mantissa(res.amount0);\n      this.data.amount1 = await this.token1.mantissa(res.amount1);\n\n      [this.data.value0, this.data.value1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.amount0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.amount1),\n      ]);\n\n      if (this.getNetwork().id === networks.eth.id) await this.loadFromPositionGraph();\n\n      if (this.data.tvl.isZero()) await this.loadTVL(parseInt(pos.fee));\n    }\n\n    getContractMethods = () => _.functions(this.nftPositionManager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      alert(`target:\\n${this.nftPositionManager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]), useLegacyTx);\n    }\n\n    async loadFromPositionGraph() {\n      const response = await fetch(\"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: `{position(id:${this.data.id}) {\n          depositedToken0\n          depositedToken1\n          withdrawnToken0\n          withdrawnToken1\n          collectedFeesToken0\n          collectedFeesToken1\n          pool {\n            id\n            totalValueLockedUSD\n          }\n        }\n      }`,\n        }),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      this.data.tvl = bn(json.data.position.pool.totalValueLockedUSD);\n      this.data.principal0 = bn(json.data.position.depositedToken0).minus(bn(json.data.position.withdrawnToken0));\n      this.data.principal1 = bn(json.data.position.depositedToken1).minus(bn(json.data.position.withdrawnToken1));\n\n      const [principalValue0, principalValue1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.principal0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.principal1),\n      ]);\n      this.data.valueIfHodl = principalValue0.plus(principalValue1);\n      this.data.valueNow = this.data.value0.plus(this.data.value1);\n      this.data.ilValue = this.data.valueIfHodl.minus(this.data.valueNow);\n      this.data.il = bn(1).minus(this.data.valueNow.div(this.data.valueIfHodl));\n      const pending = await this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]).call({ from: this.args.address });\n      this.data.pending0 = await this.token0.mantissa(pending.amount0);\n      this.data.pending1 = await this.token1.mantissa(pending.amount1);\n      this.data.pendingValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.pending0);\n      this.data.pendingValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.pending1);\n      const collectedValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, bn(json.data.position.collectedFeesToken0));\n      const collectedValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, bn(json.data.position.collectedFeesToken1));\n\n      this.data.totalFeesValue = this.data.pendingValue0.plus(this.data.pendingValue1).plus(collectedValue0).plus(collectedValue1);\n    }\n\n    async loadTVL(fee: number) {\n      const factory = contract<UniswapV3FactoryAbi>(require(\"../abi/UniswapV3FactoryAbi.json\"), await this.nftPositionManager.methods.factory().call());\n      const pool = await factory.methods.getPool(this.token0.address, this.token1.address, fee).call();\n      const [a0, a1] = await Promise.all([\n        this.token0.methods.balanceOf(pool).call().then(this.token0.mantissa),\n        this.token1.methods.balanceOf(pool).call().then(this.token1.mantissa),\n      ]);\n      const [v0, v1] = await Promise.all([this.oracle.valueOf(this.network.id, this.token0, a0), this.oracle.valueOf(this.network.id, this.token1, a1)]);\n      this.data.tvl = v0.plus(v1);\n    }\n  }\n\n  class V2LP implements PositionV1 {\n    router = contract<UniswapV2Abi>(require(\"../abi/UniswapV2Abi.json\"), \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\n    data = {\n      router: this.router.options.address,\n      pair: \"\",\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [];\n    getData = () => this.data;\n    getHealth = () => [];\n    getPendingRewards = () => [];\n    getTVL = () => this.data.tvl;\n    getAmounts = () => [\n      { asset: this.asset0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.asset1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n\n    async load() {\n      const factoryAddress = await this.router.methods.factory().call();\n      const factory = contract<UniswapV2FactoryAbi>(require(\"../abi/UniswapV2FactoryAbi.json\"), factoryAddress);\n      this.data.pair = await factory.methods.getPair(this.asset0.address, this.asset1.address).call();\n      const lpToken = erc20(\"LP\", this.data.pair);\n\n      const [lpAmount, lpTotalSupply, total0, total1] = await Promise.all([\n        lpToken.methods.balanceOf(this.args.address).call().then(bn),\n        lpToken.methods.totalSupply().call().then(bn),\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((t) => this.asset0.mantissa(t)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((t) => this.asset1.mantissa(t)),\n      ]);\n\n      this.data.amount0 = total0.times(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0)).plus(await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1));\n    }\n\n    getContractMethods = () => _.functions(this.router.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.router.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.router.methods as any)[method](...args);\n      alert(`target:\\n${this.router.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { BN, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace OffChain {\n  export function register() {\n    PositionFactory.register({\n      \"x:OffChain:Asset\": (args, oracle) => new AssetPosition(args, oracle),\n    });\n  }\n\n  export type Asset = Token & { symbol: string };\n\n  class AssetPosition implements PositionV1 {\n    token: Asset;\n    data = {\n      amount: zero,\n      value: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.input) throw new Error(\"input amount required\");\n      if (!args.address) throw new Error(\"address symbol required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { symbol: args.address });\n      this.data.amount = BN(args.input);\n    }\n\n    getName = () => `OffChain:${this.token.name}`;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.off;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => zero;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { Abi, bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport type { AlphaHomoraBankAbi } from \"../../typechain-abi/AlphaHomoraBankAbi\";\nimport _ from \"lodash\";\n\nexport namespace AlphaHomora {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AlphaHomora:WETHe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX()),\n      \"avax:AlphaHomora:WBTCe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WBTCe(), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class LYF implements PositionV1 {\n    alphaHomoraBank = contract<AlphaHomoraBankAbi>(require(\"../abi/AlphaHomoraBankAbi.json\"), \"0x376d16C7dE138B01455a51dA79AD65806E9cd694\");\n    maxHistoryBlocks = {\n      [networks.avax.id]: 10_000_000,\n    };\n\n    data = {\n      contract: this.alphaHomoraBank.options.address,\n      id: 0,\n      supply0: zero,\n      supply1: zero,\n      borrow0: zero,\n      borrow1: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      pending: zero,\n      pendingValue: zero,\n      tvl: zero,\n      valueIfHodl: zero,\n      ilAmount: zero,\n      il: zero,\n      debtRatio: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!);\n      if (!this.data.id) throw new Error(\"invalid input positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => networks.avax;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n\n    async load() {\n      const pos = await this.alphaHomoraBank.methods.getPositionInfo(this.data.id).call();\n      const lpSupplied = bn(pos.collateralSize);\n      const farmAbi = [\n        {\n          inputs: [{ internalType: \"uint256\", name: \"id\", type: \"uint256\" }],\n          name: \"getUnderlyingToken\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ] as Abi;\n      const nft = contract(farmAbi, pos.collToken);\n      const lpToken = erc20(\"\", await nft.methods.getUnderlyingToken(pos.collId).call());\n      const totalLPs = await lpToken.methods.totalSupply().call().then(bn);\n      const share = lpSupplied.times(ether).div(totalLPs);\n      const total0 = await this.token0.methods.balanceOf(lpToken.address).call().then(this.token0.mantissa);\n      const total1 = await this.token1.methods.balanceOf(lpToken.address).call().then(this.token1.mantissa);\n      this.data.supply0 = total0.times(share).div(ether);\n      this.data.supply1 = total1.times(share).div(ether);\n\n      const debts = await this.alphaHomoraBank.methods.getPositionDebts(this.data.id).call();\n      this.data.borrow0 = await this.token0.mantissa(debts.debts[_.indexOf(debts.tokens, this.token0.address)]);\n      this.data.borrow1 = await this.token1.mantissa(debts.debts[_.indexOf(debts.tokens, this.token1.address)]);\n\n      this.data.amount0 = this.data.supply0.minus(this.data.borrow0);\n      this.data.amount1 = this.data.supply1.minus(this.data.borrow1);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.amount1);\n\n      const totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, total0);\n      const totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, total1);\n      this.data.tvl = totalValue0.plus(totalValue1);\n    }\n\n    //     private async loadDeposits() {\n    //       const depositAbi = _(this.alphaHomoraBank.options.jsonInterface).find((x) => x.type === \"function\" && x.name === \"execute\")!;\n    //       const depositSig = web3().eth.abi.encodeFunctionSignature(depositAbi);\n    //\n    //       const currentBlock = await web3().eth.getBlockNumber();\n    //       const earliestBlock = currentBlock - this.maxHistoryBlocks[this.getNetwork().id];\n    //\n    //       const apiKey = \"\";\n    //       const alltxsResponse = await fetch(`https://api.snowtrace.io/api?module=account&action=txlist\n    // &fromBlock=${earliestBlock}\n    // &toBlock=${currentBlock}\n    // &address=${this.args.address}\n    // &sort=asc&apikey=${apiKey}`);\n    //       const alltxs = await alltxsResponse.json();\n    //       const relevantTxs = _.filter(alltxs.result, (tx) => eqIgnoreCase(tx.to, this.alphaHomoraBank.options.address) && tx.input.startsWith(depositSig));\n    //       if (relevantTxs.length !== 1) {\n    //         console.error(\"no / too many deposits\");\n    //         return;\n    //       }\n    //       const deposit = relevantTxs[0];\n    //       const receipt = await web3().eth.getTransactionReceipt(deposit.hash);\n    //       const events = parseEvents(receipt, this.token0);\n    //\n    //       const depositEvent = events.find((e) => e.event === \"Transfer\" && eqIgnoreCase(e.address, this.token0.address) && eqIgnoreCase(e.returnValues.from, this.args.address))!;\n    //       const deposit0 = bn(depositEvent.returnValues.value);\n    //       const deposit1 = _.reduce(relevantTxs, (sum, tx) => sum.plus(bn(tx.value)), zero);\n    //       const valueNow0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, deposit0);\n    //       const valueNow1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, deposit1);\n    //\n    //       this.data.valueIfHodl = valueNow0.plus(valueNow1);\n    //       const valueNow = this.data.value0.plus(this.data.value1);\n    //       this.data.ilAmount = this.data.valueIfHodl.minus(valueNow);\n    //       this.data.il = ether.minus(valueNow.times(ether).div(this.data.valueIfHodl));\n    //     }\n\n    //   private async loadDebtRatio() {\n    //     /*\n    //       struct TokenFactors {\n    //     uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //     uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //     uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    //     mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // }\n    //        */\n    //\n    //     /*\n    //       struct TokenFactors {\n    //   uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //   uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //   uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    // }\n    //\n    // IBaseOracle public immutable source; // Main oracle source\n    // mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // mapping(address => bool) public whitelistERC1155; // Mapping from token address to whitelist status\n    //      */\n    //     const proxyOracleAbi: Abi = [\n    //       {\n    //         name: \"tokenFactors\",\n    //         type: \"function\",\n    //         stateMutability: \"view\",\n    //         inputs: [\n    //           {\n    //             internalType: \"address\",\n    //             name: \"token\",\n    //             type: \"address\",\n    //           },\n    //         ],\n    //         outputs: [\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"borrowFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"collateralFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"liqIncentive\",\n    //             type: \"uint256\",\n    //           },\n    //         ],\n    //       },\n    //     ];\n    //     const o = contract(proxyOracleAbi, await this.alphaHomoraBank.methods.oracle().call());\n    //     const f0 = bn((await o.methods.tokenFactors(this.token0.address).call()).borrowFactor).toNumber() / 1e4;\n    //     const f1 = bn((await o.methods.tokenFactors(this.token1.address).call()).borrowFactor).toNumber() / 1e4;\n    //     console.log(f0, f1);\n    //   }\n\n    getContractMethods = () => _.functions(this.alphaHomoraBank.methods);\n    async callContract(method: string, args: string[]) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      alert(`target:\\n${this.alphaHomoraBank.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { Network, PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { BN, bn, contract, eqIgnoreCase, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { BalancerGaugeAbi, BalancerV2VaultAbi } from \"../../typechain-abi\";\n\nexport namespace Balancer {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Balancer:WBTC/ETH\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.eth,\n          [erc20s.eth.WBTC(), erc20s.eth.WETH()],\n          \"0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e\",\n          \"0x4E3c048BE671852277Ad6ce29Fd5207aA12fabff\"\n        ),\n\n      \"poly:Balancer:USDC/DAI/MAI/USDT\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.USDC(), erc20s.poly.DAI(), erc20(\"MAI\", \"0xa3Fa99A148fA48D14Ed51d610c367C61876997F1\"), erc20s.poly.USDT()],\n          \"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012\"\n        ),\n      \"poly:Balancer:MATIC/sMATIC\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.WMATIC(), erc20(\"sMATIC\", \"0x3A58a54C066FdC0f2D55FC9C89F0415C92eBf3C4\")],\n          \"0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366\",\n          \"0x9928340f9E1aaAd7dF1D95E27bd9A5c715202a56\"\n        ),\n\n      \"arb:Balancer:MAI/USDT/USDC\": (args, oracle) => {\n        oracle.overridePrice(networks.arb.id, erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"), ether);\n        return new Farm(\n          args,\n          oracle,\n          networks.arb,\n          [\n            erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"),\n            erc20(\"USDT\", \"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9\"),\n            erc20(\"USDC\", \"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8\"),\n          ],\n          \"0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d\"\n        );\n      },\n    });\n  }\n\n  const balToken = {\n    [networks.eth.id]: () => erc20(\"BAL\", \"0xba100000625a3754423978a60c9317c58a424e3D\"),\n    [networks.poly.id]: () => erc20(\"BAL\", \"0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3\"),\n    [networks.arb.id]: () => erc20(\"BAL\", \"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8\"),\n  };\n\n  const balV2 = () => contract<BalancerV2VaultAbi>(require(\"../abi/BalancerV2VaultAbi.json\"), \"0xBA12222222228d8Ba445958a75a0704d566BF2C8\");\n\n  class Farm implements PositionV1 {\n    vault = balV2();\n    gauge = contract<BalancerGaugeAbi>(require(\"../abi/BalancerGaugeAbi.json\"), this.gaugeAddress);\n    bal = balToken[this.network.id]();\n\n    data = {\n      vault: this.vault.options.address,\n      gauge: this.gauge.options.address,\n      amounts: [] as BN[],\n      values: [] as BN[],\n      tvl: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public tokens: Token[], public poolId: string, public gaugeAddress: string = \"\") {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => this.tokens;\n    getAmounts = () => _.map(this.tokens, (asset, i) => ({ asset, amount: this.data.amounts[i] || zero, value: this.data.values[i] || zero }));\n    getRewardAssets = () => [this.bal];\n    getPendingRewards = () => [{ asset: this.bal, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      if (!this.gaugeAddress) return await this.loadFromPool();\n\n      const [lpTokenAddress, workingBalance, totalWorkingBalance] = await Promise.all([\n        this.gauge.methods.lp_token().call(),\n        this.gauge.methods.balanceOf(this.args.address).call().then(bn),\n        this.gauge.methods.totalSupply().call().then(bn),\n      ]);\n      const pending = await this.gauge.methods\n        .claimable_tokens(this.args.address)\n        .call()\n        .catch(() => this.gauge.methods.claimable_reward_write(this.args.address, this.bal.address).call())\n        .then(bn);\n\n      const bpt = erc20(\"BPT\", lpTokenAddress);\n      const [totalBptsStaked, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.gaugeAddress).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n      const bptBalance = totalBptsStaked.times(workingBalance).div(totalWorkingBalance);\n\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).times(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).times(totalBptsStaked).div(bptTotalSupply))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.plus(bn(b)), zero);\n\n      this.data.pending = pending;\n      this.data.pendingValue = await this.oracle.valueOf(this.network.id, this.bal, this.data.pending);\n    }\n\n    private async loadFromPool() {\n      const bpt = erc20(\n        \"BPT\",\n        await this.vault.methods\n          .getPool(this.poolId)\n          .call()\n          .then((x) => x[\"0\"])\n      );\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      const [bptBalance, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.args.address).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).times(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.plus(bn(b)), zero);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.gauge.methods.claimable_tokens(this.args.address), useLegacyTx);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { networks } from \"./base/consts\";\n\nexport namespace ElrondMaiar {\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    MEX_EGLD: () => esdt(\"MEX/EGLD LP\", \"EGLDMEX-0be9e5\", 18),\n    USDC_EGLD: () => esdt(\"USDC/EGLD LP\", \"EGLDUSDC-594e5e\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string; lp: ESDT };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    L_USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\",\n      lp: tokens.MEX_EGLD(),\n    }),\n    L_MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\",\n      lp: tokens.MEX_EGLD(),\n    }),\n  };\n\n  class Farm implements PositionV1 {\n    mex = tokens.MEX();\n\n    data = {\n      pool: this.strategy.pool,\n      farm: this.strategy.farm,\n      lp: this.strategy.lp.tokenId,\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.egld;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () =>\n      this.getAssets().length > 1\n        ? [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n            {\n              asset: this.getAssets()[1],\n              amount: this.data.amount1,\n              value: this.data.value1,\n            },\n          ]\n        : [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n          ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [asset0, asset1] = this.getAssets();\n      const [farmEsdts, pairEsdts, totalLPSupply] = await Promise.all([getESDTs(this.strategy.farm), getESDTs(this.strategy.pool), getTotalSupply(this.strategy.lp)]);\n      const totalLPStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === this.strategy.lp.tokenId)!.balance);\n      const asset0InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset0.tokenId)!.balance);\n      const asset1InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset1.tokenId)!.balance);\n      const asset0TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset0, totalLPStaked.times(asset0InPair).div(totalLPSupply));\n      const asset1TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset1, totalLPStaked.times(asset1InPair).div(totalLPSupply));\n      this.data.tvl = asset0TotalValue.plus(asset1TotalValue);\n\n      const esdts = await getESDTs(this.args.address);\n      const lpNameSuffix = this.strategy.lp.tokenId.split(\"-\")[0];\n      const lps = _.find(esdts, (t) => t.tokenIdentifier.startsWith(lpNameSuffix));\n      if (!lps) return;\n\n      this.data.lpBalanceStaked = bn(lps!.balance);\n      this.data.amount0 = this.data.lpBalanceStaked.times(asset0InPair).div(totalLPSupply);\n      this.data.amount1 = this.data.lpBalanceStaked.times(asset1InPair).div(totalLPSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, asset1, this.data.amount1);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\",\n      lp: tokens.MEX(),\n    }),\n    L_MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\",\n      lp: tokens.LKMEX(),\n    }),\n  };\n\n  class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as Strategy).lp];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const asset = this.getAssets()[0];\n\n      const farmEsdts = await getESDTs(this.strategy.farm);\n      const totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      this.data.tvl = await this.oracle.valueOf(networks.egld.id, asset, totalAssetStaked);\n\n      const esdts = await getESDTs(this.args.address);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === this.strategy.pool.toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n\n      this.data.amount0 = bn(farmNftWrapper.balance.toString());\n      this.data.value0 = await this.oracle.valueOf(networks.egld.id, asset, this.data.amount0);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  async function getESDTs(address: string) {\n    const response = await fetch(`https://gateway.elrond.com/address/${address}/esdt`);\n    const json = await response.json();\n    return _.get(json, [\"data\", \"esdts\"], []);\n  }\n\n  async function getTotalSupply(token: ESDT) {\n    const response = await fetch(`https://gateway.elrond.com/network/esdt/supply/${token.tokenId}`);\n    const json = await response.json();\n    return bn(_.get(json, [\"data\", \"supply\"], \"0\"));\n  }\n\n  export function register() {\n    PositionFactory.register({\n      \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n      \"egld:Maiar:LFarm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_USDC_EGLD()),\n      \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n      \"egld:Maiar:LFarm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_MEX_EGLD()),\n      \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n      \"egld:Maiar:MEXLFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.L_MEX()),\n    });\n  }\n\n  // export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n  //   const assets = _.map(tokens, (t) => t());\n\n  // https://gateway.elrond.com/address/:bech32Address/balance\n\n  // const [esdts, balanceEGLD] = await Promise.all([getESDTs(address), provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString()))]);\n\n  // const balances = await Promise.all(\n  //   _(esdts)\n  //     .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n  //     .filter((t) => !!t.asset)\n  //     .map(async (t) => {\n  //       const amount = to18(t.esdt.balance, t.asset!.dec);\n  //       return {\n  //         asset: t.asset!,\n  //         amount,\n  //         value: await oracle.valueOf(networks.egld.id, t.asset!, amount),\n  //       };\n  //     })\n  //     .value()\n  // );\n\n  // balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(networks.egld.id, tokens.EGLD(), balanceEGLD) });\n\n  // return balances;\n  // }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n\n// farms v2:\n// EGLD/MEX => MEX : erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\n// EGLD/MEX => LKMEX: erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\n// EGLD/USDC => MEX: erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\n// EGLD/USDC => LKMEX: erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\n// MEX => MEX: erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\n// MEX => LKMEX: erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\n","import _ from \"lodash\";\nimport type { TraderJoeFarmAbi } from \"../../typechain-abi\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace TraderJoe {\n  const orbs = () => erc20(\"ORBS\", \"0x340fE1D898ECCAad394e2ba0fC1F93d27c7b717A\");\n\n  export function register() {\n    PositionFactory.register({\n      \"avax:TraderJoe:Farm:WETH/AVAX\": (args, oracle) => new Farm(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX(), 26),\n      \"avax:TraderJoe:Farm:sAVAX/AVAX\": (args, oracle) =>\n        new Farm(args, oracle, erc20(\"sAVAX\", \"0x2b2C81e08f1Af8835a78Bb2A90AE924ACE0eA4bE\"), erc20s.avax.WAVAX(), 51, \"0x188bed1968b795d5c9022f6a0bb5931ac4c18f00\"),\n\n      \"avax:TraderJoe:LP:ORBS/AVAX\": (args, oracle) => new LP(args, oracle, orbs(), erc20s.avax.WAVAX(), \"0x0315522354037e48C75756aD68358CE185dad911\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<TraderJoeFarmAbi>(require(\"../abi/TraderJoeFarmAbi.json\"), this.masterchefAddress);\n    reward = erc20(\"JOE\", \"0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd\");\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public poolId: number,\n      public masterchefAddress: string = \"0xd6a4F121CA35509aF06A0Be99093d08462f53052\"\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingTokens(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken);\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.times(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.times(lpStaked).div(lpTotalSupply))).plus(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.times(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending.pendingJoe);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"TraderJoeLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.times(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.plus(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { Network, PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn9, contract, erc20, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { RibbonGaugeAbi, RibbonThetaVaultAbi } from \"../../typechain-abi\";\n\nexport namespace Ribbon {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Ribbon:T-CC:ETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x25751853Eab4D0eB3652B5eB6ecB102A2789644B\"),\n      \"eth:Ribbon:T-CC:stETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x53773E034d9784153471813dacAFF53dBBB78E8c\"),\n      \"eth:Ribbon:T-CC:WBTC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WBTC(), \"0x65a833afDc250D9d38f8CD9bC2B1E3132dB13B2F\"),\n      \"eth:Ribbon:T-CSP:yvUSDC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.USDC(), \"0xCc323557c71C0D1D20a1861Dc69c06C5f3cC9624\"),\n\n      \"avax:Ribbon:T-CC:AVAX\": (args, oracle) => new ThetaVault(args, oracle, networks.avax, erc20s.avax.WAVAX(), \"0x98d03125c62DaE2328D9d3cb32b7B969e6a87787\"),\n    });\n  }\n\n  const rewardTokens = {\n    [networks.eth.id]: () => erc20(\"RBN\", \"0x6123B0049F904d730dB3C36a31167D9d4121fA6B\"),\n    [networks.avax.id]: () => erc20s.avax.WAVAX(),\n  };\n\n  class ThetaVault implements PositionV1 {\n    rewardToken = rewardTokens[this.network.id]();\n    vault = contract<RibbonThetaVaultAbi>(require(\"../abi/RibbonThetaVaultAbi.json\"), this.vaultAddress);\n\n    data = {\n      vault: this.vaultAddress,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      strike: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset: Token, public vaultAddress: string) {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.asset];\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.rewardToken];\n    getPendingRewards = () => [{ asset: this.rewardToken, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const { amount, unredeemedShares } = await this.vault.methods.depositReceipts(this.args.address).call();\n      this.data.amount = await this.asset.mantissa(bn(amount).plus(bn(unredeemedShares)));\n\n      // farms only on ETH\n      if (this.network.id === networks.eth.id) {\n        const farm = contract<RibbonGaugeAbi>(require(\"../abi/RibbonGaugeAbi.json\"), await this.vault.methods.liquidityGauge().call());\n        const [fbalance, fratio] = await Promise.all([farm.methods.balanceOf(this.args.address).call().then(bn), this.vault.methods.pricePerShare().call().then(bn)]);\n        const staked = await this.asset.mantissa(fbalance.times(fratio).div(await this.asset.amount(1)));\n        this.data.amount = this.data.amount.plus(staked);\n\n        this.data.pending = await farm.methods.claimable_tokens(this.args.address).call().then(bn);\n        this.data.pendingValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardToken, this.data.pending);\n      }\n\n      this.data.value = await this.oracle.valueOf(this.network.id, this.asset, this.data.amount);\n\n      const total = await this.asset.mantissa(await this.vault.methods.totalBalance().call());\n      this.data.tvl = await this.oracle.valueOf(this.network.id, this.asset, total);\n\n      const currentOption = contract(require(\"../abi/RibbonOptionAbi.json\"), await this.vault.methods.currentOption().call());\n      this.data.strike = bn9(await currentOption.methods[\"strikePrice()\"]().call()).times(10);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, ether, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { LooksrareStakingAbi } from \"../../typechain-abi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace LooksRare {\n  export function register() {\n    PositionFactory.register({\n      \"eth:LooksRare:LooksStaking\": (args, oracle) => new Staking(args, oracle),\n      \"eth:LooksRare:LooksAutoCompound\": (args, oracle) => new AutoCompund(args, oracle),\n    });\n  }\n\n  class Staking implements PositionV1 {\n    eth = erc20s.eth.WETH();\n    looks = erc20(\"LOOKS\", \"0xf4d2888d29D722226FafA5d9B24F9164c092421E\");\n    vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0xBcD7254A1D759EFA08eC7c3291B2E85c5dCC12ce\");\n    checkPending = true;\n\n    data = {\n      vault: this.vault.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getNetwork = () => networks.eth;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.looks];\n    getAmounts = () => [{ asset: this.looks, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.eth];\n    getPendingRewards = () => [{ asset: this.eth, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const [stakedLooks, pendingEth, totalShares, sharePrice] = await Promise.all([\n        this.vault.methods.calculateSharesValueInLOOKS(this.args.address).call().then(this.looks.mantissa),\n        this.checkPending ? this.vault.methods.calculatePendingRewards(this.args.address).call().then(bn) : zero,\n        this.vault.methods.totalShares().call().then(this.looks.mantissa),\n        this.vault.methods.calculateSharePriceInLOOKS().call().then(bn),\n      ]);\n      this.data.amount = stakedLooks;\n      this.data.pendingAmount = pendingEth;\n      const tvlAmount = totalShares.times(sharePrice).div(ether);\n\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.looks, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.looks, tvlAmount),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class AutoCompund extends Staking {\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      super(args, oracle);\n      this.vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0x3ab16Af1315dc6C95F83Cbf522fecF98D00fd9ba\");\n      this.data.vault = this.vault.options.address;\n      this.checkPending = false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, Contract, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { Network, PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { SushiswapMinichefAbi } from \"../../typechain-abi\";\n\nexport namespace SushiSwap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:SushiSwap:Farm:USDC/ETH\": (args, oracle) => new Farm(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH(), 1),\n      \"poly:SushiSwap:Farm:ETH/MATIC\": (args, oracle) => new Farm(args, oracle, networks.poly, erc20s.poly.WETH(), erc20s.poly.WMATIC(), 0),\n      \"arb:SushiSwap:Farm:USDC/ETH\": (args, oracle) => new Farm(args, oracle, networks.arb, erc20s.arb.USDC(), erc20s.arb.WETH(), 0),\n      \"arb:SushiSwap:LP:USDC/ETH\": (args, oracle) => new LP(args, oracle, networks.arb, erc20s.arb.USDC(), erc20s.arb.WETH(), \"0x905dfCD5649217c42684f23958568e533C711Aa3\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = getFarmContract(this.network);\n    reward = getRewardContract(this.network);\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingSushi(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken || (await this.masterchef.methods.lpToken(this.poolId).call()));\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.times(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.times(lpStaked).div(lpTotalSupply))).plus(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.times(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      const tx = this.network.id === networks.poly.id ? this.masterchef.methods.deposit(this.poolId, 0, this.args.address) : this.masterchef.methods.deposit(this.poolId, 0);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"LP\", this.lpAddress);\n\n    data = {\n      lp: this.lp.options.address,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => this.network;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [balance, total0, total1, lpSupply] = await Promise.all([\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.asset0.methods\n          .balanceOf(this.lp.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(this.lp.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.times(balance).div(lpSupply);\n      this.data.amount1 = total1.times(balance).div(lpSupply);\n\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0)).plus(await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1));\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest() {}\n  }\n\n  function getFarmContract(network: Network): Contract {\n    switch (network.shortname) {\n      case \"arb\":\n        return contract<SushiswapMinichefAbi>(require(\"../abi/SushiswapMinichefAbi.json\"), \"0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3\");\n      case \"poly\":\n        return contract<SushiswapMinichefAbi>(require(\"../abi/SushiswapMinichefAbi.json\"), \"0x0769fd68dFb93167989C6f7254cd0D766Fb2841F\");\n      case \"eth\":\n      default:\n        return contract(require(\"../abi/SushiswapMasterchefAbi.json\"), \"0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd\");\n    }\n  }\n\n  function getRewardContract(network: Network) {\n    switch (network.shortname) {\n      case \"arb\":\n        return erc20(\"SUSHI\", \"0xd4d42F0b6DEF4CE0383636770eF773390d85c61A\");\n      case \"poly\":\n        return erc20(\"SUSHI\", \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\");\n      case \"eth\":\n      default:\n        return erc20(\"SUSHI\", \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\");\n    }\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20, zero } from \"@defi.org/web3-candies\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Fodl {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n    });\n  }\n\n  export class XFodlStake implements PositionV1 {\n    fodl = erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\");\n    xfodl = erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\");\n\n    data = {\n      fodl: this.fodl.address,\n      xfodl: this.xfodl.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(this.xfodl.mantissa),\n        this.xfodl.methods.totalSupply().call().then(this.xfodl.mantissa),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(this.fodl.mantissa),\n      ]);\n      this.data.amount = myXfodl.times(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { QuickswapStakingAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace QuickSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x614389EaAE0A6821DC49062D56BDA3d9d45Fa2ff\");\n  const quick = () => erc20(\"QUICK\", \"0x831753DD7087CaC61aB5644b308642cc1c33Dc13\");\n\n  export function register() {\n    PositionFactory.register({\n      \"poly:QuickSwap:Farm:ORBS/USDC\": (args, oracle) => new Farm(args, oracle, erc20s.poly.USDC(), orbs(), \"0x9CA237962823A0a74bbC8354764e1DAC9e4057F0\"),\n\n      \"poly:QuickSwap:LP:ORBS/QUICK\": (args, oracle) => new LP(args, oracle, orbs(), quick(), \"0x882624931b4A799d50242e5b25E2Fa2719E4d072\"),\n      \"poly:QuickSwap:LP:ORBS/JPYC\": (args, oracle) =>\n        new LP(args, oracle, orbs(), erc20(\"JPYC\", \"0x431D5dfF03120AFA4bDf332c61A6e1766eF37BDB\"), \"0xD01C074C78E9647a5ddAE2648f1A089b98D5380a\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    staking = contract<QuickswapStakingAbi>(require(\"../abi/QuickswapStakingAbi.json\"), this.stakingAddress);\n    reward = erc20(\"dQUICK\", \"0xf28164A485B0B2C90639E47b0f377b4a438a16B1\");\n\n    data = {\n      contract: this.stakingAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public stakingAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, totalStaked, earned, lpAddress] = await Promise.all([\n        this.staking.methods.balanceOf(this.args.address).call().then(bn),\n        this.staking.methods.totalSupply().call().then(bn),\n        this.staking.methods.earned(this.args.address).call().then(this.reward.mantissa),\n        this.staking.methods.stakingToken().call(),\n      ]);\n      this.data.rewardAmount = earned;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(bn),\n      ]);\n      this.data.amount0 = stakedBalance.times(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.times(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_amount0 = totalStaked.times(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.times(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.plus(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.staking.methods.stake(0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"QuickswapLP\", this.lpAddress);\n\n    data = {\n      contract: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [balance, totalSupply] = await Promise.all([this.lp.methods.balanceOf(this.args.address).call().then(bn), this.lp.methods.totalSupply().call().then(bn)]);\n\n      const [amount0InLp, amount1InLp] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n      ]);\n      this.data.amount0 = amount0InLp.times(balance).div(totalSupply);\n      this.data.amount1 = amount1InLp.times(balance).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, amount0InLp);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, amount1InLp);\n      this.data.tvl = tvl_value0.plus(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PangolinChefAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Pangolin {\n  const orbs = () => erc20(\"ORBS\", \"0x340fE1D898ECCAad394e2ba0fC1F93d27c7b717A\");\n  const png = () => erc20(\"PNG\", \"0x60781C2586D68229fde47564546784ab3fACA982\");\n\n  export function register() {\n    PositionFactory.register({\n      \"avax:Pangolin:Farm:ORBS/AVAX\": (args, oracle) => new Farm(args, oracle, orbs(), erc20s.avax.WAVAX(), 36),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    chef = contract<PangolinChefAbi>(require(\"../abi/PangolinChefAbi.json\"), \"0x1f806f7C8dED893fd3caE279191ad7Aa3798E928\");\n    reward = png();\n\n    data = {\n      chef: this.chef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.avax;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, pending, lpAddress] = await Promise.all([\n        this.chef.methods\n          .userInfo(this.poolId, this.args.address)\n          .call()\n          .then((x) => bn(x.amount)),\n        this.chef.methods.pendingReward(this.poolId, this.args.address).call().then(bn),\n        this.chef.methods.lpToken(this.poolId).call(),\n      ]);\n      this.data.rewardAmount = pending;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply, totalStaked] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(bn),\n        lp.methods.balanceOf(this.chef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = stakedBalance.times(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.times(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n\n      const tvl_amount0 = totalStaked.times(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.times(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.isZero() ? tvl_value1.times(2) : tvl_value0.plus(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.chef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.chef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.chef.methods as any)[method](...args);\n      alert(`target:\\n${this.chef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.chef.methods.deposit(this.poolId, 0, this.args.address), useLegacyTx);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { contract, erc20, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { RookLiquidityPoolAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Rook {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Rook:xRook\": (args, oracle) => new XRook(args, oracle),\n    });\n  }\n\n  class XRook implements PositionV1 {\n    pool = contract<RookLiquidityPoolAbi>(require(\"../abi/RookLiquidityPoolAbi.json\"), \"0x4F868C1aa37fCf307ab38D215382e88FCA6275E2\");\n    rook = erc20(\"ROOK\", \"0xfA5047c9c78B8877af97BDcb85Db743fD7313d4a\");\n    xrook = erc20(\"xROOK\", \"0x8aC32F0a635a0896a8428A9c31fBf1AB06ecf489\");\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [this.xrook];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getTVL = () => this.data.tvl;\n    getAmounts = () => [{ asset: this.rook, amount: this.data.amount, value: this.data.value }];\n\n    async load() {\n      this.data.amount = await this.pool.methods.underlyingBalance(this.rook.address, this.args.address).call().then(this.rook.mantissa);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.rook, this.data.amount);\n      const tvlAmount = await this.pool.methods.totalValueLocked(this.rook.address).call().then(this.rook.mantissa);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.rook, tvlAmount);\n    }\n\n    getContractMethods = () => _.functions(this.xrook.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xrook.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.xrook.methods as any)[method](...args);\n      alert(`target:\\n${this.xrook.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { Network, PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks } from \"./base/consts\";\nimport { erc20, Token, zero } from \"@defi.org/web3-candies\";\n\nexport namespace Aave {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AaveV3:aAVAX\": (args, oracle) => new Collateral(args, oracle, networks.avax, erc20(\"aAVAX\", \"0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97\"), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class Collateral implements PositionV1 {\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public aToken: Token, public token: Token) {}\n\n    getName = () => \"\";\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.aToken];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      const [amount, totalSupply] = await Promise.all([\n        this.aToken.methods.balanceOf(this.args.address).call().then(this.aToken.mantissa),\n        this.aToken.methods.totalSupply().call().then(this.aToken.mantissa),\n      ]);\n\n      this.data.amount = amount;\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.token, totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.tvl;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { contract, erc20, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport type { SpookyChefAbi } from \"../../typechain-abi\";\n\nexport namespace SpookySwap {\n  const orbs = () => erc20(\"ORBS\", \"0x3E01B7E242D5AF8064cB9A8F9468aC0f8683617c\");\n  const usdc = () => erc20(\"USDC\", \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\");\n  const ftm = () => erc20(\"FTM\", \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\");\n\n  export function register() {\n    PositionFactory.register({\n      \"ftm:SpookySwap:LP:ORBS/USDC\": (args, oracle) => new LP(args, oracle, orbs(), usdc(), \"0x4FaA520fe975228F54b30c6996129950E975BD8f\", 43),\n      \"ftm:SpookySwap:LP:ORBS/FTM\": (args, oracle) => new LP(args, oracle, orbs(), ftm(), \"0x3Ae87E47c69144d1794a78c0709485978C1002A5\", -1),\n    });\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"SpookySwapLP\", this.lpAddress);\n    boo = erc20(\"BOO\", \"0x841FAD6EAe12c286d1Fd18d1d525DFfA75C7EFFE\");\n    masterchef = contract<SpookyChefAbi>(require(\"../abi/SpookyChefAbi.json\"), \"0x18b4f774fdC7BF685daeeF66c2990b1dDd9ea6aD\");\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.ftm;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.boo];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.boo,\n        amount: this.data.pending,\n        value: this.data.pendingValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      let [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      if (this.poolId > 0) {\n        lpAmount = lpAmount.plus(await this.lp.mantissa((await this.masterchef.methods.userInfo(this.poolId, this.args.address).call()).amount));\n        this.data.pending = await this.masterchef.methods.pendingBOO(this.poolId, this.args.address).call().then(this.boo.mantissa);\n        this.data.pendingValue = await this.oracle.valueOf(this.getNetwork().id, this.boo, this.data.pending);\n      }\n      this.data.amount0 = total0.times(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.plus(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { erc20, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace SpiritSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x3E01B7E242D5AF8064cB9A8F9468aC0f8683617c\");\n  const usdc = () => erc20(\"USDC\", \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\");\n  const ftm = () => erc20(\"FTM\", \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\");\n\n  export function register() {\n    PositionFactory.register({\n      \"ftm:SpiritSwap:LP:ORBS/USDC\": (args, oracle) => new LP(args, oracle, orbs(), usdc(), \"0x4B668A229740b4F6d04cE2D1b05648Ef1d508EC1\"),\n      \"ftm:SpiritSwap:LP:ORBS/FTM\": (args, oracle) => new LP(args, oracle, orbs(), ftm(), \"0x1F0700387Dfe4Aec7b8C99fbf54cdCDbBB5603B5\"),\n    });\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"SpiritSwapLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.ftm;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.times(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.plus(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn, bnm, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace Bitcoin {\n  export function register() {\n    PositionFactory.register({\n      \"x:Bitcoin\": (args, oracle) => new BitcoinBalance(args, oracle),\n    });\n  }\n\n  export type BTC = Token & { bech32: string };\n\n  class BitcoinBalance implements PositionV1 {\n    token: BTC;\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.address) throw new Error(\"bitcoin bech32 bc1 address required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { bech32: args.address });\n    }\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.btc;\n    getData = () => this.data;\n    getAssets = () => [this.token];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      this.data.tvl = await fetchTVL();\n      this.data.amount = await fetchBalance(this.token.bech32);\n      this.data.value = await fetchPrice().then((p) => this.data.amount.times(p));\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  async function fetchTVL() {\n    const r = await fetch(\"https://blockchain.info/q/marketcap\");\n    const json = await r.json();\n    return bn(json);\n  }\n\n  async function fetchBalance(bech32: string) {\n    const r = await fetch(`https://blockchain.info/q/addressbalance/${bech32}`);\n    const json = await r.json();\n    return bnm(json, 8);\n  }\n\n  async function fetchPrice() {\n    const r = await fetch(\"https://blockchain.info/q/24hrprice\");\n    const json = await r.json();\n    return parseFloat(json);\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { bn18, contract, erc20, erc20s, ether, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport type { LiquityStabilityPoolAbi, LiquityTroveManagerAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Liquity {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Liquity:LUSD\": (args, oracle) => new Pool(args, oracle),\n      \"eth:Liquity:Trove\": (args, oracle) => new CDP(args, oracle),\n    });\n  }\n\n  const lusd = () => erc20(\"LUSD\", \"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0\");\n  const lqty = () => erc20(\"LQTY\", \"0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D\");\n\n  class CDP implements PositionV1 {\n    manager = contract<LiquityTroveManagerAbi>(require(\"../abi/LiquityTroveManagerAbi.json\"), \"0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2\");\n\n    CR_LIQUIDATION = bn18(1.1);\n    CR_RECOVERY = bn18(1.5);\n\n    data = {\n      manager: this.manager.options.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      debt: zero,\n      cr: zero,\n      ltv: zero,\n      liquidationPrice: zero,\n      entireSystemDebt: zero,\n      entireSystemCR: zero,\n      recoveryMode: 0,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [erc20s.eth.WETH()];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () =>\n      this.data.cr.lte(this.CR_LIQUIDATION)\n        ? [\n            {\n              severity: Severity.Critical,\n              message: `⚠️ LIQUIDATION`,\n            },\n          ]\n        : this.data.cr.lt(this.CR_RECOVERY)\n        ? [\n            {\n              severity: Severity.High,\n              message: `CR ${this.data.cr.toFixed(3)}%`,\n            },\n          ]\n        : [];\n    getAmounts = () => [{ asset: erc20s.eth.WETH(), amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const eth = erc20s.eth.WETH();\n      const price = await this.oracle.valueOf(this.getNetwork().id, eth, ether);\n      const [pos, systemColl, systemDebt, recoveryMode] = await Promise.all([\n        this.manager.methods.getEntireDebtAndColl(this.args.address).call(),\n        this.manager.methods.getEntireSystemColl().call().then(eth.mantissa),\n        this.manager.methods.getEntireSystemDebt().call().then(lusd().mantissa),\n        this.manager.methods.checkRecoveryMode(price.toString()).call(),\n      ]);\n      this.data.recoveryMode = recoveryMode ? 1 : 0;\n      this.data.amount = await eth.mantissa(pos.coll);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, eth, this.data.amount);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, eth, systemColl);\n      this.data.debt = await lusd().mantissa(pos.debt);\n      this.data.cr = this.data.value.times(ether).div(this.data.debt);\n      this.data.ltv = ether.times(ether).div(this.data.cr);\n      const crWithGasFeeRebate = this.data.value.times(ether).div(this.data.debt.minus(await lusd().amount(200)));\n      this.data.liquidationPrice = price.times(this.CR_LIQUIDATION).div(crWithGasFeeRebate);\n      this.data.entireSystemDebt = await lusd().mantissa(systemDebt);\n      this.data.entireSystemCR = this.data.tvl.times(ether).div(this.data.entireSystemDebt);\n    }\n\n    getContractMethods = () => _.functions(this.manager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.manager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.manager.methods as any)[method](...args);\n      alert(`target:\\n${this.manager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class Pool implements PositionV1 {\n    pool = contract<LiquityStabilityPoolAbi>(require(\"../abi/LiquityStabilityPoolAbi.json\"), \"0x66017D22b0f8556afDd19FC67041899Eb65a21bb\");\n\n    data = {\n      pool: this.pool.options.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      pendingReward: zero,\n      pendingRewardValue: zero,\n      pendingETH: zero,\n      pendingETHValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [lusd()];\n    getRewardAssets = () => [lqty(), erc20s.eth.WETH()];\n    getPendingRewards = () => [\n      { asset: lqty(), amount: this.data.pendingReward, value: this.data.pendingRewardValue },\n      { asset: erc20s.eth.WETH(), amount: this.data.pendingETH, value: this.data.pendingETHValue },\n    ];\n    getHealth = () => [];\n    getAmounts = () => [{ asset: lusd(), amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [totalDeposits, deposit, rewards, eth] = await Promise.all([\n        this.pool.methods.getTotalLUSDDeposits().call().then(lusd().mantissa),\n        this.pool.methods.getCompoundedLUSDDeposit(this.args.address).call().then(lusd().mantissa),\n        this.pool.methods.getDepositorLQTYGain(this.args.address).call().then(lqty().mantissa),\n        this.pool.methods.getDepositorETHGain(this.args.address).call().then(erc20s.eth.WETH().mantissa),\n      ]);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, lusd(), totalDeposits);\n      this.data.amount = deposit;\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, lusd(), this.data.amount);\n      this.data.pendingReward = rewards;\n      this.data.pendingRewardValue = await this.oracle.valueOf(this.getNetwork().id, lqty(), this.data.pendingReward);\n      this.data.pendingETH = eth;\n      this.data.pendingETHValue = await this.oracle.valueOf(this.getNetwork().id, erc20s.eth.WETH(), this.data.pendingETH);\n    }\n\n    getContractMethods = () => _.functions(this.pool.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.pool.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.pool.methods as any)[method](...args);\n      alert(`target:\\n${this.pool.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.pool.methods.withdrawFromSP(0), useLegacyTx);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn18, convertDecimals, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport _ from \"lodash\";\n\nexport namespace Raydium {\n  export function register() {\n    PositionFactory.register({\n      \"sol:Raydium:Pool:ORBS/SOL\": (args, oracle) => new Pool(args, oracle, \"ORBS\", \"2iHXwoH2LaMyiLL2WKDNx732rQ7CsMScNRavB1bmT5aZ\", \"orbs\"),\n    });\n  }\n\n  export type SolToken = Token & { sol: true; coingeckoId: string };\n\n  class Pool implements PositionV1 {\n    sol = erc20(\"SOL\", zeroAddress) as SolToken;\n    token = erc20(this.tokenName, zeroAddress) as SolToken;\n\n    data = {\n      tokenName: this.tokenName,\n      lpMintAddress: this.lpMintAddress,\n      amountToken: zero,\n      amountSol: zero,\n      valueToken: zero,\n      valueSol: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public tokenName: string, public lpMintAddress: string, coingeckoId: string) {\n      this.sol.sol = true;\n      this.sol.coingeckoId = \"solana\";\n      this.token.sol = true;\n      this.token.coingeckoId = coingeckoId;\n    }\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.sol;\n    getData = () => this.data;\n    getAssets = () => [this.token, this.sol];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getAmounts = () => [\n      { asset: this.token, amount: this.data.amountToken, value: this.data.valueToken },\n      { asset: this.sol, amount: this.data.amountSol, value: this.data.valueSol },\n    ];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const lpAmount = await this.fetchLpAmount();\n      const lpInfo = await this.fetchLpInfo();\n\n      const totalLps = bn18(lpInfo.tokenAmountLp);\n      const totalTokens = bn18(lpInfo.tokenAmountCoin);\n      const totalSol = bn18(lpInfo.tokenAmountPc);\n\n      this.data.amountToken = totalTokens.times(lpAmount).div(totalLps);\n      this.data.amountSol = totalSol.times(lpAmount).div(totalLps);\n\n      this.data.valueToken = await this.oracle.valueOf(networks.sol.id, this.token, this.data.amountToken);\n      this.data.valueSol = await this.oracle.valueOf(networks.sol.id, this.sol, this.data.amountSol);\n\n      const totalTokensValue = await this.oracle.valueOf(networks.sol.id, this.token, totalTokens);\n      const totalSolValue = await this.oracle.valueOf(networks.sol.id, this.sol, totalSol);\n      this.data.tvl = totalTokensValue.plus(totalSolValue);\n    }\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n\n    async fetchLpInfo() {\n      const pairs = await fetch(\"https://api.raydium.io/v2/main/pairs\").then((x) => x.json());\n      return _.find(pairs, (p) => p.lpMint === this.lpMintAddress);\n    }\n\n    async fetchLpAmount() {\n      const response = await fetch(`https://api.mainnet-beta.solana.com`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          jsonrpc: \"2.0\",\n          id: 1,\n          method: \"getTokenAccountsByOwner\",\n          params: [this.args.address, { mint: this.lpMintAddress }, { encoding: \"jsonParsed\" }],\n        }),\n      }).then((it) => it.json());\n      const { amount, decimals } = response.result.value[0].account.data.parsed.info.tokenAmount;\n      return convertDecimals(amount, decimals, 18);\n    }\n  }\n}\n","import { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { TokenBalances } from \"./TokenBalances\";\nimport { Uniswap } from \"./Uniswap\";\nimport { OffChain } from \"./OffChain\";\nimport { AlphaHomora } from \"./AlphaHomora\";\nimport { Balancer } from \"./Balancer\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { TraderJoe } from \"./TraderJoe\";\nimport { Ribbon } from \"./Ribbon\";\nimport { LooksRare } from \"./LooksRare\";\nimport { SushiSwap } from \"./SushiSwap\";\nimport { Fodl } from \"./Fodl\";\nimport { QuickSwap } from \"./QuickSwap\";\nimport { Pangolin } from \"./Pangolin\";\nimport { Rook } from \"./Rook\";\nimport { Aave } from \"./Aave\";\nimport { SpookySwap } from \"./SpookySwap\";\nimport { SpiritSwap } from \"./SpiritSwap\";\nimport { Bitcoin } from \"./Bitcoin\";\nimport { Liquity } from \"./Liquity\";\nimport { Raydium } from \"./Raydium\";\n\nexport function registerAllPositions() {\n  OffChain.register();\n  TokenBalances.register();\n  Bitcoin.register();\n\n  Uniswap.register();\n  SushiSwap.register();\n  Pancakeswap.register();\n  Revault.register();\n  AlphaHomora.register();\n  Balancer.register();\n  ElrondMaiar.register();\n  TraderJoe.register();\n  Ribbon.register();\n  LooksRare.register();\n  Unicly.register();\n  Fodl.register();\n  Loops.register();\n  QuickSwap.register();\n  Pangolin.register();\n  Rook.register();\n  Aave.register();\n  SpookySwap.register();\n  SpiritSwap.register();\n  Liquity.register();\n  Raydium.register();\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { PositionArgs, PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport { registerAllPositions } from \"../positionsv1\";\nimport { BN, Token, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positionsv1/base/consts\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, PositionV1>,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string, input: string, name: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, input, name, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    update: (position: PositionV1, newArgs: PositionArgs) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = newArgs;\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions...\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p\n        .load()\n        .then(() => ((p as any).loaded = true))\n        .catch((e) => {\n          (p as any).loaded = false;\n          console.log(p.getArgs().type, e);\n        });\n    })\n  );\n  api.setState({ positions });\n  console.log(`...done loading ${network?.name}`);\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\n\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        name: p.getArgs().name || p.getName() || p.getArgs().type,\n        chain: p.getNetwork().name,\n        health: p.getHealth(),\n        marketValue: num(marketValue(p)),\n        pending: num(p.getPendingRewards().reduce((sum, v) => sum.plus(v.value), zero)),\n        tvl: num(p.getTVL()),\n        position: p,\n        address: p.getArgs().address,\n        loaded: !!(p as any).loaded,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nexport const useAllPositionsValuePerPosition = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.map(state.positions, (position) => ({ position, marketValue: Math.round(num(marketValue(position))) })),\n    (rows) => {\n      const sorted = _.sortBy(rows, (r) => -r.marketValue);\n      return {\n        labels: sorted.map((p) => p.position.getArgs().name || p.position.getName() || p.position.getArgs().type),\n        values: sorted.map((p) => p.marketValue),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerAssetClass = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .map((position) => position.getAmounts())\n        .flatten()\n        .value(),\n    (amounts) => {\n      const reduced = _(amounts)\n        .groupBy((a) => assetClass(a.asset))\n        .map((values, key) => ({ assetClass: key, value: _.reduce(values, (sum, a) => sum + num(a.value), 0) }))\n        .sortBy((v) => -v.value)\n        .value();\n      return {\n        labels: _.map(reduced, (ac) => ac.assetClass),\n        values: _.map(reduced, (ac) => Math.round(ac.value)),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerChain = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.groupBy(state.positions, (p) => p.getNetwork().name),\n    (grouped) => {\n      const totalPerChain = _(grouped)\n        .map((positions, chain) => ({\n          chain,\n          marketValue: Math.round(num(totalMarketValue(positions))),\n        }))\n        .sortBy((t) => -t.marketValue)\n        .value();\n      return {\n        labels: _.map(totalPerChain, (t) => t.chain),\n        values: _.map(totalPerChain, (t) => t.marketValue),\n        grandtotal: _.reduce(totalPerChain, (sum, t) => sum + t.marketValue, 0),\n      };\n    }\n  ),\n});\n\nfunction num(bn: BN) {\n  return bn.times(1000).idiv(1000).toNumber();\n}\n\nfunction marketValue(p: PositionV1) {\n  return _.reduce(p.getAmounts(), (sum, v) => sum.plus(v.value), zero);\n}\n\nfunction totalMarketValue(positions: PositionV1[]) {\n  return _.reduce(positions, (sum, pos) => sum.plus(marketValue(pos)), zero);\n}\n\nfunction assetClass(a: Token): string {\n  const ext = (a as any).symbol || (a as any).tokenId;\n  if (ext) return ext;\n  if (a.name.toLowerCase().includes(\"usd\") || [\"dai\", \"mai\", \"mim\"].includes(a.name.toLowerCase())) return \"USD\";\n  if (a.name.toLowerCase().includes(\"btc\")) return \"BTC\";\n  if (a.name.toLowerCase().includes(\"eth\")) return \"ETH\";\n  if (a.name.toLowerCase().includes(\"bnb\")) return \"BNB\";\n  if (a.name.toLowerCase().includes(\"avax\")) return \"AVAX\";\n  if (a.name.toLowerCase().includes(\"matic\")) return \"MATIC\";\n  if (a.name.toLowerCase().includes(\"ftm\")) return \"FTM\";\n  if ((a as any).bech32) return \"BTC\";\n  return a.name || a.address;\n}\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport _ from \"lodash\";\nimport { BN } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as PositionV1 | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: PositionV1) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        try {\n          const result = await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs));\n          showAlert(_.toString(result) || \"undefined\");\n        } catch (e: any) {\n          showAlert(_.toString(e));\n        }\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), fmtData),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      rawData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n\nfunction fmtData(data: any): any {\n  if (_.isArray(data)) return _.map(data, fmtData);\n  return data instanceof BN ? data.toFormat(3) : data;\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport _ from \"lodash\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    input: \"\",\n    name: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", input: \"\", name: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        address = _.trim(address);\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n\n    setInput:\n      (input: string) =>\n      async ({ setState }) => {\n        input = _.trim(input);\n        setState({ input });\n      },\n\n    setName:\n      (name: string) =>\n      async ({ setState }) => {\n        name = _.trim(name);\n        setState({ name });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address, state.input, state.name)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Name?\" onChange={(e) => actions.setName(e.target.value)} />}\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Input?\" onChange={(e) => actions.setInput(e.target.value)} />}\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions, useAllPositionsValuePerAssetClass, useAllPositionsValuePerChain, useAllPositionsValuePerPosition } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { Threat } from \"../positionsv1/base/PositionV1\";\nimport { ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { ArcElement, Chart as ChartJS, Legend, Tooltip } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\nimport { BN } from \"@defi.org/web3-candies\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst columns: GridColDef[] = [\n  { field: \"loaded\", headerName: \"🌐\", headerAlign: \"center\", width: 20, align: \"center\", valueFormatter: (v) => (v.value ? \"✅\" : \"❔\") },\n  { field: \"chain\", headerName: \"Chain\", headerAlign: \"center\", width: 120, align: \"left\" },\n  { field: \"name\", headerName: \"Position\", headerAlign: \"center\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"center\",\n    valueFormatter: (v) => {\n      if (!v.value || !(v.value as Threat[]).length) return \"🟢\";\n      return (v.value as Threat[]).map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"marketValue\",\n    headerName: \"Market Value\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + BN(v.value).toFormat(0),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + BN(v.value).toFormat(0),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    headerAlign: \"center\",\n    width: 130,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + BN(v.value).toFormat(0),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", headerAlign: \"center\", width: 450, align: \"left\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(undefined);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n  const [totalValuesPerChain] = useAllPositionsValuePerChain(undefined);\n  const [valuesPerPosition] = useAllPositionsValuePerPosition(undefined);\n  const [valuesPerAssetClass] = useAllPositionsValuePerAssetClass(undefined);\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <ListItemText>Total Market Value: $ {BN(totalValuesPerChain.grandtotal).toFormat()}</ListItemText>\n\n      <div style={{ display: \"flex\" }}>\n        <div>\n          <ListItemText>Value Per Chain:</ListItemText>\n          <Pie\n            data={{\n              labels: totalValuesPerChain.labels,\n              datasets: [\n                {\n                  data: totalValuesPerChain.values,\n                  backgroundColor: totalValuesPerChain.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Position:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerPosition.labels,\n              datasets: [\n                {\n                  data: valuesPerPosition.values,\n                  backgroundColor: valuesPerPosition.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Asset Class:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerAssetClass.labels,\n              datasets: [\n                {\n                  data: valuesPerAssetClass.values,\n                  backgroundColor: valuesPerAssetClass.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n      </div>\n\n      <br />\n\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <br />\n      <AddPositionBtn />\n    </div>\n  );\n};\n\nfunction colorOf(num: number) {\n  return bgColors[num % bgColors.length];\n}\n\nconst bgColors = [\n  \"#413d5e\",\n  \"#495371\",\n  \"#638c93\",\n  \"#98B4AA\",\n  \"#F1E0AC\", //\n];\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(undefined);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  // const updatePos = () => appStateActions.withLoading(() => allPositionsActions.update(selector.position!, selector.position!.getArgs())).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.rawData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.name || selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n          {selector.position?.getArgs()?.input && <DialogContentText>Input: {selector.position?.getArgs()?.input}</DialogContentText>}\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positionsv1/base/PositionV1\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}