{"version":3,"sources":["assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positionsv1/base/consts.ts","state/AppState.ts","positionsv1/base/PositionFactory.ts","ui/AppHeader.tsx","positionsv1/base/PriceOracle.ts","positionsv1/Pancakeswap.ts","positionsv1/base/PositionV1.ts","positionsv1/Loops.ts","positionsv1/Revault.ts","positionsv1/Unicly.ts","positionsv1/TokenBalances.ts","positionsv1/Uniswap.ts","positionsv1/OffChain.ts","positionsv1/AlphaHomora.ts","positionsv1/Balancer.ts","positionsv1/ElrondMaiar.ts","positionsv1/TraderJoe.ts","positionsv1/Ribbon.ts","positionsv1/LooksRare.ts","positionsv1/SushiSwap.ts","positionsv1/Fodl.ts","positionsv1/QuickSwap.ts","positionsv1/Pangolin.ts","positionsv1/Rook.ts","positionsv1/Aave.ts","positionsv1/SpookySwap.ts","positionsv1/SpiritSwap.ts","positionsv1/Bitcoin.ts","positionsv1/Liquity.ts","positionsv1/Raydium.ts","positionsv1/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx"],"names":["erc20s","_","merge","erc20sOrig","networks","networksOrig","off","id","name","shortname","btc","egld","sol","currentNetwork","_currentNetwork","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","netId","wrap","_context","prev","next","bn","window","ethereum","chainId","toNumber","console","log","abrupt","find","n","stop","sendWithTxType","_x","_x2","_sendWithTxType","_callee2","tx","useLegacyTx","_context2","t0","account","t1","sent","t2","t3","from","type","send","call","isNetworkDisabled","network","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","_ref2","_ref","setState","_withLoading","showAlert","alert","_ref4","_ref3","clickNetwork","networkId","_ref6","_callee5","_ref5","getState","_context5","_callee4","_getState$network","_context4","_ethereum","removeAllListeners","on","_callee3","_context3","_onConnect","request","method","_switchNetwork","_x3","_x4","_x5","_withLoading2","_callee6","t","_context6","concat","message","stack","finish","_x6","_onConnect2","_callee7","_context7","setWeb3Instance","Web3","Error","_x7","_switchNetwork2","_callee8","_context8","params","utils","numberToHex","PositionFactory","useAppState","createHook","useIsAppConnected","selector","state","_state$network","isAddress","useIsLoading","useAppActions","AppHeader","_useAppState","_useAppState2","_slicedToArray","_jsx","style","display","flexDirection","justifyContent","margin","children","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","map","ToggleButton","textTransform","disabled","coingeckoIds","_coingeckoIds","_defineProperty","eth","bsc","poly","arb","avax","oeth","ftm","PriceOracle","_classCallCheck","warm","prices","USD","ether","_createClass","key","token","tokenId","symbol","coingeckoId","address","price","this","getId","_valueOf","amount","isZero","fetchPricesElrond","fetchCoingeckoPrices","fetchPrices","toString","zero","times","div","_warmup","positions","bynetwork","coingeckoFetches","elrondFetch","_this","groupBy","getNetwork","keys","filter","getAssets","getRewardAssets","flatten","a","uniq","Promise","all","_toConsumableArray","_fetchPrices","addresses","url","response","json","result","isEmpty","v","k","join","fetch","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","_fetchPricesElrond","tokenIds","body","variables","i","query","headers","JSON","stringify","data","_fetchCoingeckoPrices","_x8","inputs","results","registry","_PositionFactory","oracle","register","types","allTypes","create","args","uniqueId","shouldLoad","current","isValidArgs","_web","_web$utils","startsWith","e","isElrondAddress","trim","length","isOffChainSymbol","isBitcoinAddress","isSolanaAddress","Pancakeswap","Severity","Loops","_Pancakeswap","Farm","BUSD","WBNB","erc20","require","CAKE","BTCB","LP","ORBS","asset0","asset1","lpToken","poolId","masterchef","contract","cake","chef","options","lp","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getName","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","_load","_yield$Promise$all","_yield$Promise$all2","userInfo","reserves","token0","totalSupply","pending","lpStaked","_reserve0","_reserve1","r0","r1","amountLP","_yield$Promise$all3","_yield$Promise$all4","getReserves","pendingCake","balanceOf","toLowerCase","mantissa","valueOf","_callContract","_sendTransaction","encodeABI","_harvest","deposit","_Farm","_inherits","_super","_createSuper","_this2","_load2","_yield$Promise$all5","_yield$Promise$all6","total0","total1","val0","val1","_yield$Promise$all7","_yield$Promise$all8","then","plus","_Loops","AaveLoop","CompoundLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","aave","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","minus","lt","severity","Critical","posData","atoken","getPositionData","getBalanceReward","t4","t5","t6","t7","owner","claimRewardsToOwner","WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","ctoken","exchangeRate","underlyingBalance","liquidity","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","_callContract2","_sendTransaction2","_x9","_x10","_x11","_harvest2","claimAndTransferAllCompToOwner","_x12","Revault","Unicly","TokenBalances","_Revault","SingleVault","_loop","RevaStake","REVA","revaultFarm","revaultChef","revaStaking","revault","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","vault","_yield$this$revault$m","returnedRevaAmount","returnedTokenAmount","info","tvlBusd","findVault","principal","payload","harvestVault","tokens","_findVault","_supportedVaults","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","_objectSpread","staking","pendingAmount","poolInfo","userPoolInfo","_callee9","_context9","_Unicly","XUnicFarm","Strategies","uPunks","uJenny","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","xunicrate","pendingxUNICs","getxUNICRate","totalLPTokens","_TokenBalances","TokenBalance","mcap","nativeTokens","WMATIC","WAVAX","NativeTokenBalance","_TokenBalance","_len","Array","_key","getBalance","forEach","input","Uniswap","OffChain","AlphaHomora","Balancer","ElrondMaiar","TraderJoe","Ribbon","LooksRare","SushiSwap","Fodl","QuickSwap","Pangolin","Rook","Aave","SpookySwap","SpiritSwap","Bitcoin","Liquity","Raydium","maxUint128","pow","_Uniswap","V2LP","V3LP","WBTC","token1","nftPositionManager","nftManager","principal0","principal1","valueIfHodl","valueNow","ilValue","il","pending0","pending1","pendingValue0","pendingValue1","totalFeesValue","High","gt","pos","res","decreaseLiquidity","maxUint256","loadFromPositionGraph","loadTVL","fee","collect","_loadFromPositionGraph","principalValue0","principalValue1","collectedValue0","collectedValue1","position","pool","totalValueLockedUSD","depositedToken0","withdrawnToken0","depositedToken1","withdrawnToken1","collectedFeesToken0","collectedFeesToken1","_loadTVL","factory","a0","a1","v0","v1","getPool","router","pair","factoryAddress","_yield$Promise$all9","_yield$Promise$all10","lpAmount","lpTotalSupply","_this3","getPair","_callee10","_context10","_x13","_OffChain","AssetPosition","zeroAddress","_AlphaHomora","LYF","WETHe","WBTCe","alphaHomoraBank","maxHistoryBlocks","supply0","supply1","borrow0","borrow1","ilAmount","debtRatio","lpSupplied","farmAbi","nft","totalLPs","share","debts","totalValue0","totalValue1","getPositionInfo","collateralSize","internalType","outputs","stateMutability","collToken","getUnderlyingToken","collId","getPositionDebts","indexOf","_Balancer","_balToken","DAI","USDT","overridePrice","balToken","balV2","gaugeAddress","undefined","gauge","bal","amounts","values","lpTokenAddress","workingBalance","totalWorkingBalance","bpt","totalBptsStaked","bptTotalSupply","bptBalance","poolTokens","poolAmounts","poolValues","loadFromPool","lp_token","claimable_tokens","catch","claimable_reward_write","getPoolTokens","every","eqIgnoreCase","balances","reduce","sum","b","_loadFromPool","x","_ElrondMaiar","EGLD","esdt","MEX","RIDE","LKMEX","MEX_EGLD","USDC_EGLD","LKFARM","FarmStrategies","assets","farm","L_USDC_EGLD","L_MEX_EGLD","mex","lpBalanceStaked","_this$getAssets","_this$getAssets2","farmEsdts","pairEsdts","totalLPSupply","totalLPStaked","asset0InPair","asset1InPair","asset0TotalValue","asset1TotalValue","esdts","lpNameSuffix","lps","getESDTs","getTotalSupply","tokenIdentifier","balance","split","MexFarm","MexFarmStrategies","L_MEX","totalAssetStaked","farmNftWrapper","_this4","creator","decimals","dec","_getESDTs","get","_getTotalSupply","_TraderJoe","orbs","masterchefAddress","reward","pendingTokens","pendingJoe","lpAddress","_Ribbon","_rewardTokens","ThetaVault","rewardTokens","vaultAddress","rewardToken","strike","_yield$this$vault$met","unredeemedShares","fbalance","fratio","staked","total","currentOption","depositReceipts","liquidityGauge","pricePerShare","totalBalance","t8","t9","t10","t11","t12","bn9","t13","_LooksRare","Staking","AutoCompund","looks","checkPending","stakedLooks","pendingEth","totalShares","sharePrice","tvlAmount","calculateSharesValueInLOOKS","calculatePendingRewards","calculateSharePriceInLOOKS","_Staking","_SushiSwap","getFarmContract","getRewardContract","pendingSushi","_Fodl","XFodlStake","fodl","xfodl","myXfodl","xfodlTotalSupply","fodlStaked","_QuickSwap","quick","stakingAddress","stakedBalance","totalStaked","earned","amount0InLp","amount1InLp","totalLpSupply","tvl_amount0","tvl_amount1","tvl_value0","tvl_value1","stakingToken","stake","_Pangolin","png","pendingReward","_Rook","XRook","rook","xrook","totalValueLocked","_Aave","Collateral","aToken","_SpookySwap","usdc","boo","pendingBOO","_SpiritSwap","_Bitcoin","BitcoinBalance","bech32","fetchTVL","fetchBalance","fetchPrice","_fetchTVL","r","_fetchBalance","convertDecimals","_fetchPrice","parseFloat","_Liquity","Pool","CDP","lusd","lqty","manager","CR_LIQUIDATION","CR_RECOVERY","debt","cr","ltv","liquidationPrice","entireSystemDebt","entireSystemCR","recoveryMode","lte","toFixed","systemColl","systemDebt","crWithGasFeeRebate","getEntireDebtAndColl","getEntireSystemColl","getEntireSystemDebt","checkRecoveryMode","coll","pendingRewardValue","pendingETH","pendingETHValue","totalDeposits","rewards","getTotalLUSDDeposits","getCompoundedLUSDDeposit","getDepositorLQTYGain","getDepositorETHGain","withdrawFromSP","_Raydium","tokenName","lpMintAddress","amountToken","amountSol","valueToken","valueSol","lpInfo","totalLps","totalTokens","totalSol","totalTokensValue","totalSolValue","fetchLpAmount","fetchLpInfo","tokenAmountLp","tokenAmountCoin","tokenAmountPc","_fetchLpInfo","pairs","lpMint","_fetchLpAmount","_response$result$valu","jsonrpc","mint","encoding","it","parsed","tokenAmount","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","load","api","addPosition","update","newArgs","delete","posId","sendTransaction","harvest","_ref8","_ref7","warmup","loaded","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","chain","health","marketValue","num","useAllPositions","useAllPositionsValuePerPosition","Math","round","rows","sorted","labels","useAllPositionsValuePerAssetClass","reduced","ext","includes","assetClass","ac","useAllPositionsValuePerChain","grouped","totalPerChain","totalMarketValue","grandtotal","idiv","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","_ref10","_ref9","_ref12","_ref11","_ref14","_ref13","_ref16","_ref15","callContract","usePositionDialogActions","usePositionDialogSelector","_state$position","m","endsWith","substring","_state$position2","_state$position3","_state$position4","fmtData","positionMethods","selectedMethodArgTypes","rewardAssets","rawData","isArray","BN","toFormat","AddPositionDialogState","show","valid","sort","setType","setAddress","setInput","setName","useAddPositionDialog","AddPositionBtn","_useIsAppConnected","isConnected","_useAddPositionDialog","Button","onClick","AddPositionDialog","_useAppActions","appActions","_useAddPositionDialog3","_useAddPositionDialog4","_useAllPositionsActio","allPositionActions","close","_jsxs","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","ChartJS","ArcElement","Tooltip","Legend","columns","field","headerName","headerAlign","width","align","valueFormatter","sortable","AllPositionsTable","appState","_useAllPositionRows","_useAllPositionRows2","_useAllPositions","_usePositionDialogAct","positionDialogActions","_useAllPositionsValue","totalValuesPerChain","_useAllPositionsValue3","valuesPerPosition","_useAllPositionsValue5","valuesPerAssetClass","useEffect","_appState$network","height","ListItemText","Pie","datasets","backgroundColor","colorOf","responsive","plugins","legend","DataGrid","onCellClick","autoHeight","hideFooter","bgColors","PositionDialog","_selector$position","_selector$position$ge","_selector$position2","_selector$position2$g","_selector$position3","_selector$position3$g","_selector$position4","_selector$position4$g","_selector$position5","_selector$position5$g","_selector$position6","_selector$position6$g","appStateActions","_usePositionDialogSel","_usePositionDialogSel2","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","accept","hidden","addEventListener","file","files","reader","FileReader","onload","_e$target","_e$target$result","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","_useIsLoading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","React","StrictMode","HashRouter","Route","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById"],"mappings":"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","file":"static/js/main.4086f914.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {});\n\nexport const networks = _.merge({}, networksOrig, {\n  off: { id: -1, name: \"OffChain\", shortname: \"off\" },\n  btc: { id: -2, name: \"Bitcoin\", shortname: \"btc\" },\n  egld: { id: -508, name: \"Elrond\", shortname: \"egld\" },\n  sol: { id: -600, name: \"Solana\", shortname: \"sol\" },\n});\n\nexport async function currentNetwork() {\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positionsv1/base/consts\";\n\n// defaults.middlewares.plus((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./PositionV1\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => PositionV1;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): PositionV1 | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = _.uniqueId(args.type + \":\" + args.address + \"-\" + args.name + \"-\");\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: PositionV1, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return (\n      (!!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address) || isOffChainSymbol(type, address))) ||\n      isBitcoinAddress(type, address) ||\n      isSolanaAddress(type, address)\n    );\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isOffChainSymbol(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:OffChain:Asset\") && _.trim(address).length > 0;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isBitcoinAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:Bitcoin\") && _.trim(address).length > 0 && address.startsWith(\"bc1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isSolanaAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"sol:\") && _.trim(address).length === 44;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport { BN, bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1 } from \"./PositionV1\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\nimport { OffChain } from \"../OffChain\";\nimport { Raydium } from \"../Raydium\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n  [networks.oeth.id]: \"optimistic-ethereum\",\n  [networks.ftm.id]: \"fantom\",\n};\n\nexport class PriceOracle {\n  warm = false;\n  prices: Record<string, BN> = {\n    USD: ether,\n  };\n\n  getId(networkId: number, token: Token) {\n    if (networkId === networks.egld.id) return (token as ElrondMaiar.ESDT).tokenId;\n    if (networkId === networks.off.id) return (token as OffChain.Asset).symbol;\n    if (networkId === networks.sol.id) return (token as Raydium.SolToken).coingeckoId;\n    return token.address;\n  }\n\n  overridePrice(networkId: number, token: Token, price: BN) {\n    this.prices[this.getId(networkId, token)] = price;\n  }\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const id = this.getId(networkId, token);\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (networkId === networks.egld.id) await this.fetchPricesElrond([id]);\n      else if (networkId === networks.sol.id) await this.fetchCoingeckoPrices([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.times(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: PositionV1[]) {\n    if (this.warm) return;\n    this.warm = true;\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[networks.egld.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n\n    try {\n      const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n      const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(addresses, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchCoingeckoPrices(coingeckoIds: string[]): Promise<{ [ids: string]: BN }> {\n    if (_.isEmpty(coingeckoIds)) return {};\n    console.log(\"fetchCoingeckoPrices\", coingeckoIds);\n\n    try {\n      const url = `https://api.coingecko.com/api/v3/simple/price?ids=${coingeckoIds.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(coingeckoIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PancakeswapLpAbi, PancakeswapMasterchefV2Abi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // https://docs.pancakeswap.finance/code/migration/masterchef-v2/list-of-farms\n\n  export function register() {\n    const lp_BUSD_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BUSD/BNB\", \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_BTCB_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BTCB/BNB\", \"0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_CAKE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP CAKE/BNB\", \"0x0eD7e52944161450477ee417DE9Cd3a859b14fD0\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ORBS_BUSD = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ORBS/BUSD\", \"0xB87b857670A44356f2b70337E0F218713D2378e8\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOGE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOGE/BNB\", \"0xac109C8025F272414fd9e2faA805a583708A017f\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_TON_BTCB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP TON/BTCB\", \"0x1893da6b92660b85538f58217808685b80fb083e\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n\n    PositionFactory.register({\n      \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), lp_BUSD_BNB(), 3),\n      \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), lp_CAKE_BNB(), 2),\n      \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), lp_BTCB_BNB(), 11),\n      \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Farm(args, oracle, erc20(\"DOGE\", \"0xbA2aE424d960c26247Dd6c32edC70B295c744C43\"), erc20s.bsc.WBNB(), lp_DOGE_BNB(), 37),\n\n      \"bsc:Pancakeswap:LP:ORBS/BUSD\": (args, oracle) => new LP(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), lp_ORBS_BUSD()),\n      \"bsc:Pancakeswap:LP:TON/BTCB\": (args, oracle) => new LP(args, oracle, erc20(\"TON\", \"0x76A797A59Ba2C17726896976B7B3747BfD1d220f\"), erc20s.bsc.BTCB(), lp_TON_BTCB()),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<PancakeswapMasterchefV2Abi>(require(\"../abi/PancakeswapMasterchefV2Abi.json\"), \"0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652\");\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      lp: this.lpToken.address,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLpAbi,\n      public poolId: number\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).times(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).times(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).times(2).times(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n\n  class LP extends Farm {\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpToken: Token & PancakeswapLpAbi) {\n      super(args, oracle, asset0, asset1, lpToken, -1);\n    }\n\n    async load() {\n      const [total0, total1, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpToken.address).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpToken.address).call().then(this.asset1.mantissa),\n        this.lpToken.methods.totalSupply().call().then(this.lpToken.mantissa),\n      ]);\n      const amountLP = await this.lpToken.methods.balanceOf(this.args.address).call().then(this.lpToken.mantissa);\n      this.data.amount0 = total0.times(amountLP).div(totalSupply);\n      this.data.amount1 = total1.times(amountLP).div(totalSupply);\n\n      let val0, val1;\n      [this.data.value0, this.data.value1, val0, val1] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, total0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, total1),\n      ]);\n      this.data.tvl = val0.plus(val1);\n    }\n  }\n}\n","import { BN, Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  address: string;\n  id: string;\n  input?: string;\n  name?: string;\n};\n\nexport interface PositionV1 {\n  getName(): string;\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number | BN[] };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20, erc20s, ether, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi, AaveSAAVEAbi, CompoundCTokenAbi, CompoundLoopAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Loops {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n      \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n    });\n  }\n\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements PositionV1 {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20<AaveSAAVEAbi>(\"stkAAVE\", \"0x4da27a545c0c5B758a6BA100e3a049001de870f5\", 0, require(\"../abi/AaveSAAVEAbi.json\"));\n    aave = erc20(\"AAVE\", \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\");\n    weth = erc20s.eth.WETH();\n\n    data = {\n      contract: this.instance.options.address,\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH.minus(this.data.totalDebtETH),\n        value: this.data.totalCollateralValue.minus(this.data.totalDebtValue),\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20(\"Aave: aUSDC\", \"0xBcca60bB61934080951369a648Fb03DF4F96263C\");\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements PositionV1 {\n    WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL = 0.005; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20(\"COMP\", \"0xc00e94Cb662C3520282E6f5717214004A7f26888\");\n\n    data = {\n      contract: this.instance.options.address,\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance.minus(this.data.borrowBalance),\n        value: this.data.supplyBalance.minus(this.data.borrowBalance),\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.times(this.WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL).div(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20<CompoundCTokenAbi>(\"Compound: cUSDC\", \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\", 0, require(\"../abi/CompoundCTokenAbi.json\"));\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).times(bn18(exchangeRate).times(100)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport type { RevaultChefAbi, RevaultFarmAbi, RevaultStakingAbi } from \"../../typechain-abi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Revault {\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.CAKE()),\n      \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.BUSD()),\n      \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    });\n    for (let i = 0; i < 4; i++) {\n      PositionFactory.register({\n        [`bsc:Revault:RevaStaking:x${i + 1}`]: (args, oracle) => new RevaStake(args, oracle, i),\n      });\n    }\n  }\n\n  const REVA = () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\");\n  const revaultFarm = () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\");\n  const revaultChef = () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\");\n  const revaStaking = () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\");\n\n  class SingleVault implements PositionV1 {\n    revault = revaultFarm();\n    chef = revaultChef();\n    reva = REVA();\n\n    data = {\n      revault: this.revault.options.address,\n      chef: this.chef.options.address,\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  class RevaStake implements PositionV1 {\n    staking = revaStaking();\n    reva = REVA();\n\n    data = {\n      staking: this.staking.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi, UniclyXUnicAbi } from \"../../typechain-abi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Unicly {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n      \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n    });\n  }\n\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", 0, require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", 0, require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements PositionV1 {\n    xfarm = contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\");\n    unic = erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\");\n    xunic = erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\");\n    eth = erc20s.eth.WETH();\n\n    data = {\n      xfarm: this.xfarm.options.address,\n      unic: this.unic.options.address,\n      xunic: this.xunic.options.address,\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).times(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).times(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.times(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).times(2).times(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport Web3 from \"web3\";\n\nexport namespace TokenBalances {\n  class TokenBalance implements PositionV1 {\n    data = {\n      name: \"\",\n      amount: zero,\n      value: zero,\n      totalSupply: zero,\n      mcap: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token: Token) {\n      token.name = args.name || token.name;\n    }\n\n    getName = () => this.data.name;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      [this.data.name, this.data.amount, this.data.totalSupply] = await Promise.all([\n        this.token.methods.name().call(),\n        this.token.methods.balanceOf(this.args.address).call().then(this.token.mantissa),\n        this.token.methods.totalSupply().call().then(this.token.mantissa),\n      ]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.mcap;\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  const nativeTokens = {\n    eth: () => _.merge(erc20s.eth.WETH(), { name: \"ETH\" }),\n    bsc: () => _.merge(erc20s.bsc.WBNB(), { name: \"BNB\" }),\n    poly: () => _.merge(erc20s.poly.WMATIC(), { name: \"MATIC\" }),\n    avax: () => _.merge(erc20s.avax.WAVAX(), { name: \"AVAX\" }),\n    arb: () => _.merge(erc20s.arb.WETH(), { name: \"AETH\" }),\n    oeth: () => _.merge(erc20s.oeth.WETH(), { name: \"ETH\" }),\n  };\n\n  class NativeTokenBalance extends TokenBalance {\n    getName = () => this.token.name;\n\n    async load() {\n      [this.data.amount, this.data.totalSupply] = await Promise.all([web3().eth.getBalance(this.args.address).then(bn), this.token.methods.totalSupply().call().then(bn)]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n  }\n\n  export function register() {\n    _.forEach(networks, (n) => {\n      if (n.id < 0) return;\n      PositionFactory.register({\n        [`${n.shortname}:Token`]: (args, oracle) => new TokenBalance(args, oracle, n, erc20(\"\", Web3.utils.toChecksumAddress(args.input!))),\n      });\n\n      const t = (nativeTokens as any)[n.shortname];\n      if (t) PositionFactory.register({ [`${n.shortname}:TokenBase`]: (args, oracle) => new NativeTokenBalance(args, oracle, n, t()) });\n    });\n  }\n}\n","import { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, maxUint256, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { UniswapNftManagerAbi, UniswapV2Abi, UniswapV2FactoryAbi, UniswapV3FactoryAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nconst maxUint128 = bn(2).pow(bn(128)).minus(1).toString();\n\nexport namespace Uniswap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Uniswap:V2LP:USDC/ETH\": (args, oracle) => new V2LP(args, oracle, erc20s.eth.USDC(), erc20s.eth.WETH()),\n\n      \"eth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.WBTC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:USDC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:TON/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20(\"TON\", \"0x582d872A1B094FC48F5DE31D3B73F2D9bE47def1\"), erc20s.eth.WETH()),\n\n      \"arb:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.arb, erc20(\"WBTC\", \"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f\"), erc20s.arb.WETH()),\n\n      \"poly:Uniswap:V3LP:MATIC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.poly, erc20s.poly.WMATIC(), erc20s.poly.WETH()),\n\n      \"oeth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.oeth, erc20s.oeth.WETH(), erc20s.oeth.WBTC()),\n    });\n  }\n\n  class V3LP implements PositionV1 {\n    nftPositionManager = contract<UniswapNftManagerAbi>(require(\"../abi/UniswapNftManagerAbi.json\"), \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\");\n\n    data = {\n      nftManager: this.nftPositionManager.options.address,\n      id: 0,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      principal0: zero,\n      principal1: zero,\n      valueIfHodl: zero,\n      valueNow: zero,\n      ilValue: zero,\n      il: zero,\n      pending0: zero,\n      pending1: zero,\n      pendingValue0: zero,\n      pendingValue1: zero,\n      totalFeesValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!) || 0;\n      if (this.data.id <= 0) throw new Error(\"unknown positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [this.token0, this.token1];\n    getPendingRewards = () => [\n      { asset: this.token0, amount: this.data.pending0, value: this.data.pendingValue0 },\n      { asset: this.token1, amount: this.data.pending1, value: this.data.pendingValue1 },\n    ];\n    getHealth = () => {\n      if (this.data.value0.isZero() || this.data.value1.isZero())\n        return [\n          {\n            severity: Severity.High,\n            message: \"Range\",\n          },\n        ];\n      if (!this.data.totalFeesValue.isZero() && this.data.ilValue.gt(this.data.totalFeesValue))\n        return [\n          {\n            severity: Severity.High,\n            message: \"IL\",\n          },\n        ];\n      return [];\n    };\n\n    async load() {\n      const pos = await this.nftPositionManager.methods.positions(this.data.id).call();\n      if (web3().utils.toChecksumAddress(pos.token0) !== web3().utils.toChecksumAddress(this.token0.address)) throw new Error(`invalid tokens for pos, ${JSON.stringify(pos)}`);\n\n      const res = await this.nftPositionManager.methods.decreaseLiquidity([this.data.id, pos.liquidity, 0, 0, maxUint256]).call({ from: this.args.address });\n      this.data.amount0 = await this.token0.mantissa(res.amount0);\n      this.data.amount1 = await this.token1.mantissa(res.amount1);\n\n      [this.data.value0, this.data.value1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.amount0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.amount1),\n      ]);\n\n      if (this.getNetwork().id === networks.eth.id) await this.loadFromPositionGraph();\n\n      if (this.data.tvl.isZero()) await this.loadTVL(parseInt(pos.fee));\n    }\n\n    getContractMethods = () => _.functions(this.nftPositionManager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      alert(`target:\\n${this.nftPositionManager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]), useLegacyTx);\n    }\n\n    async loadFromPositionGraph() {\n      const response = await fetch(\"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: `{position(id:${this.data.id}) {\n          depositedToken0\n          depositedToken1\n          withdrawnToken0\n          withdrawnToken1\n          collectedFeesToken0\n          collectedFeesToken1\n          pool {\n            id\n            totalValueLockedUSD\n          }\n        }\n      }`,\n        }),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      this.data.tvl = bn(json.data.position.pool.totalValueLockedUSD);\n      this.data.principal0 = bn(json.data.position.depositedToken0).minus(bn(json.data.position.withdrawnToken0));\n      this.data.principal1 = bn(json.data.position.depositedToken1).minus(bn(json.data.position.withdrawnToken1));\n\n      const [principalValue0, principalValue1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.principal0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.principal1),\n      ]);\n      this.data.valueIfHodl = principalValue0.plus(principalValue1);\n      this.data.valueNow = this.data.value0.plus(this.data.value1);\n      this.data.ilValue = this.data.valueIfHodl.minus(this.data.valueNow);\n      this.data.il = bn(1).minus(this.data.valueNow.div(this.data.valueIfHodl));\n      const pending = await this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]).call({ from: this.args.address });\n      this.data.pending0 = await this.token0.mantissa(pending.amount0);\n      this.data.pending1 = await this.token1.mantissa(pending.amount1);\n      this.data.pendingValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.pending0);\n      this.data.pendingValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.pending1);\n      const collectedValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, bn(json.data.position.collectedFeesToken0));\n      const collectedValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, bn(json.data.position.collectedFeesToken1));\n\n      this.data.totalFeesValue = this.data.pendingValue0.plus(this.data.pendingValue1).plus(collectedValue0).plus(collectedValue1);\n    }\n\n    async loadTVL(fee: number) {\n      const factory = contract<UniswapV3FactoryAbi>(require(\"../abi/UniswapV3FactoryAbi.json\"), await this.nftPositionManager.methods.factory().call());\n      const pool = await factory.methods.getPool(this.token0.address, this.token1.address, fee).call();\n      const [a0, a1] = await Promise.all([\n        this.token0.methods.balanceOf(pool).call().then(this.token0.mantissa),\n        this.token1.methods.balanceOf(pool).call().then(this.token1.mantissa),\n      ]);\n      const [v0, v1] = await Promise.all([this.oracle.valueOf(this.network.id, this.token0, a0), this.oracle.valueOf(this.network.id, this.token1, a1)]);\n      this.data.tvl = v0.plus(v1);\n    }\n  }\n\n  class V2LP implements PositionV1 {\n    router = contract<UniswapV2Abi>(require(\"../abi/UniswapV2Abi.json\"), \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\n    data = {\n      router: this.router.options.address,\n      pair: \"\",\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [];\n    getData = () => this.data;\n    getHealth = () => [];\n    getPendingRewards = () => [];\n    getTVL = () => this.data.tvl;\n    getAmounts = () => [\n      { asset: this.asset0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.asset1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n\n    async load() {\n      const factoryAddress = await this.router.methods.factory().call();\n      const factory = contract<UniswapV2FactoryAbi>(require(\"../abi/UniswapV2FactoryAbi.json\"), factoryAddress);\n      this.data.pair = await factory.methods.getPair(this.asset0.address, this.asset1.address).call();\n      const lpToken = erc20(\"LP\", this.data.pair);\n\n      const [lpAmount, lpTotalSupply, total0, total1] = await Promise.all([\n        lpToken.methods.balanceOf(this.args.address).call().then(bn),\n        lpToken.methods.totalSupply().call().then(bn),\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((t) => this.asset0.mantissa(t)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((t) => this.asset1.mantissa(t)),\n      ]);\n\n      this.data.amount0 = total0.times(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0)).plus(await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1));\n    }\n\n    getContractMethods = () => _.functions(this.router.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.router.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.router.methods as any)[method](...args);\n      alert(`target:\\n${this.router.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn18, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace OffChain {\n  export function register() {\n    PositionFactory.register({\n      \"x:OffChain:Asset\": (args, oracle) => new AssetPosition(args, oracle),\n    });\n  }\n\n  export type Asset = Token & { symbol: string };\n\n  class AssetPosition implements PositionV1 {\n    token: Asset;\n    data = {\n      amount: zero,\n      value: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.input) throw new Error(\"input amount required\");\n      if (!args.address) throw new Error(\"address symbol required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { symbol: args.address });\n      this.data.amount = bn18(args.input);\n    }\n\n    getName = () => `OffChain:${this.token.name}`;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.off;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => zero;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { Abi, bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport type { AlphaHomoraBankAbi } from \"../../typechain-abi/AlphaHomoraBankAbi\";\nimport _ from \"lodash\";\n\nexport namespace AlphaHomora {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AlphaHomora:WETHe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX()),\n      \"avax:AlphaHomora:WBTCe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WBTCe(), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class LYF implements PositionV1 {\n    alphaHomoraBank = contract<AlphaHomoraBankAbi>(require(\"../abi/AlphaHomoraBankAbi.json\"), \"0x376d16C7dE138B01455a51dA79AD65806E9cd694\");\n    maxHistoryBlocks = {\n      [networks.avax.id]: 10_000_000,\n    };\n\n    data = {\n      contract: this.alphaHomoraBank.options.address,\n      id: 0,\n      supply0: zero,\n      supply1: zero,\n      borrow0: zero,\n      borrow1: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      pending: zero,\n      pendingValue: zero,\n      tvl: zero,\n      valueIfHodl: zero,\n      ilAmount: zero,\n      il: zero,\n      debtRatio: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!);\n      if (!this.data.id) throw new Error(\"invalid input positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => networks.avax;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n\n    async load() {\n      const pos = await this.alphaHomoraBank.methods.getPositionInfo(this.data.id).call();\n      const lpSupplied = bn(pos.collateralSize);\n      const farmAbi = [\n        {\n          inputs: [{ internalType: \"uint256\", name: \"id\", type: \"uint256\" }],\n          name: \"getUnderlyingToken\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ] as Abi;\n      const nft = contract(farmAbi, pos.collToken);\n      const lpToken = erc20(\"\", await nft.methods.getUnderlyingToken(pos.collId).call());\n      const totalLPs = await lpToken.methods.totalSupply().call().then(bn);\n      const share = lpSupplied.times(ether).div(totalLPs);\n      const total0 = await this.token0.methods.balanceOf(lpToken.address).call().then(this.token0.mantissa);\n      const total1 = await this.token1.methods.balanceOf(lpToken.address).call().then(this.token1.mantissa);\n      this.data.supply0 = total0.times(share).div(ether);\n      this.data.supply1 = total1.times(share).div(ether);\n\n      const debts = await this.alphaHomoraBank.methods.getPositionDebts(this.data.id).call();\n      this.data.borrow0 = await this.token0.mantissa(debts.debts[_.indexOf(debts.tokens, this.token0.address)]);\n      this.data.borrow1 = await this.token1.mantissa(debts.debts[_.indexOf(debts.tokens, this.token1.address)]);\n\n      this.data.amount0 = this.data.supply0.minus(this.data.borrow0);\n      this.data.amount1 = this.data.supply1.minus(this.data.borrow1);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.amount1);\n\n      const totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, total0);\n      const totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, total1);\n      this.data.tvl = totalValue0.plus(totalValue1);\n    }\n\n    //     private async loadDeposits() {\n    //       const depositAbi = _(this.alphaHomoraBank.options.jsonInterface).find((x) => x.type === \"function\" && x.name === \"execute\")!;\n    //       const depositSig = web3().eth.abi.encodeFunctionSignature(depositAbi);\n    //\n    //       const currentBlock = await web3().eth.getBlockNumber();\n    //       const earliestBlock = currentBlock - this.maxHistoryBlocks[this.getNetwork().id];\n    //\n    //       const apiKey = \"\";\n    //       const alltxsResponse = await fetch(`https://api.snowtrace.io/api?module=account&action=txlist\n    // &fromBlock=${earliestBlock}\n    // &toBlock=${currentBlock}\n    // &address=${this.args.address}\n    // &sort=asc&apikey=${apiKey}`);\n    //       const alltxs = await alltxsResponse.json();\n    //       const relevantTxs = _.filter(alltxs.result, (tx) => eqIgnoreCase(tx.to, this.alphaHomoraBank.options.address) && tx.input.startsWith(depositSig));\n    //       if (relevantTxs.length !== 1) {\n    //         console.error(\"no / too many deposits\");\n    //         return;\n    //       }\n    //       const deposit = relevantTxs[0];\n    //       const receipt = await web3().eth.getTransactionReceipt(deposit.hash);\n    //       const events = parseEvents(receipt, this.token0);\n    //\n    //       const depositEvent = events.find((e) => e.event === \"Transfer\" && eqIgnoreCase(e.address, this.token0.address) && eqIgnoreCase(e.returnValues.from, this.args.address))!;\n    //       const deposit0 = bn(depositEvent.returnValues.value);\n    //       const deposit1 = _.reduce(relevantTxs, (sum, tx) => sum.plus(bn(tx.value)), zero);\n    //       const valueNow0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, deposit0);\n    //       const valueNow1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, deposit1);\n    //\n    //       this.data.valueIfHodl = valueNow0.plus(valueNow1);\n    //       const valueNow = this.data.value0.plus(this.data.value1);\n    //       this.data.ilAmount = this.data.valueIfHodl.minus(valueNow);\n    //       this.data.il = ether.minus(valueNow.times(ether).div(this.data.valueIfHodl));\n    //     }\n\n    //   private async loadDebtRatio() {\n    //     /*\n    //       struct TokenFactors {\n    //     uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //     uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //     uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    //     mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // }\n    //        */\n    //\n    //     /*\n    //       struct TokenFactors {\n    //   uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //   uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //   uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    // }\n    //\n    // IBaseOracle public immutable source; // Main oracle source\n    // mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // mapping(address => bool) public whitelistERC1155; // Mapping from token address to whitelist status\n    //      */\n    //     const proxyOracleAbi: Abi = [\n    //       {\n    //         name: \"tokenFactors\",\n    //         type: \"function\",\n    //         stateMutability: \"view\",\n    //         inputs: [\n    //           {\n    //             internalType: \"address\",\n    //             name: \"token\",\n    //             type: \"address\",\n    //           },\n    //         ],\n    //         outputs: [\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"borrowFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"collateralFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"liqIncentive\",\n    //             type: \"uint256\",\n    //           },\n    //         ],\n    //       },\n    //     ];\n    //     const o = contract(proxyOracleAbi, await this.alphaHomoraBank.methods.oracle().call());\n    //     const f0 = bn((await o.methods.tokenFactors(this.token0.address).call()).borrowFactor).toNumber() / 1e4;\n    //     const f1 = bn((await o.methods.tokenFactors(this.token1.address).call()).borrowFactor).toNumber() / 1e4;\n    //     console.log(f0, f1);\n    //   }\n\n    getContractMethods = () => _.functions(this.alphaHomoraBank.methods);\n    async callContract(method: string, args: string[]) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      alert(`target:\\n${this.alphaHomoraBank.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { BN, bn, contract, eqIgnoreCase, erc20, ether, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { BalancerGaugeAbi, BalancerV2VaultAbi } from \"../../typechain-abi\";\n\nexport namespace Balancer {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Balancer:WBTC/ETH\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.eth,\n          [erc20s.eth.WBTC(), erc20s.eth.WETH()],\n          \"0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e\",\n          \"0x4E3c048BE671852277Ad6ce29Fd5207aA12fabff\"\n        ),\n\n      \"poly:Balancer:USDC/DAI/MAI/USDT\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.USDC(), erc20s.poly.DAI(), erc20(\"MAI\", \"0xa3Fa99A148fA48D14Ed51d610c367C61876997F1\"), erc20s.poly.USDT()],\n          \"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012\"\n        ),\n      \"poly:Balancer:MATIC/sMATIC\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.WMATIC(), erc20(\"sMATIC\", \"0x3A58a54C066FdC0f2D55FC9C89F0415C92eBf3C4\")],\n          \"0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366\",\n          \"0x9928340f9E1aaAd7dF1D95E27bd9A5c715202a56\"\n        ),\n\n      \"arb:Balancer:MAI/USDT/USDC\": (args, oracle) => {\n        oracle.overridePrice(networks.arb.id, erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"), ether);\n        return new Farm(\n          args,\n          oracle,\n          networks.arb,\n          [\n            erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"),\n            erc20(\"USDT\", \"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9\"),\n            erc20(\"USDC\", \"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8\"),\n          ],\n          \"0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d\"\n        );\n      },\n    });\n  }\n\n  const balToken = {\n    [networks.eth.id]: () => erc20(\"BAL\", \"0xba100000625a3754423978a60c9317c58a424e3D\"),\n    [networks.poly.id]: () => erc20(\"BAL\", \"0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3\"),\n    [networks.arb.id]: () => erc20(\"BAL\", \"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8\"),\n  };\n\n  const balV2 = () => contract<BalancerV2VaultAbi>(require(\"../abi/BalancerV2VaultAbi.json\"), \"0xBA12222222228d8Ba445958a75a0704d566BF2C8\");\n\n  class Farm implements PositionV1 {\n    vault = balV2();\n    gauge = contract<BalancerGaugeAbi>(require(\"../abi/BalancerGaugeAbi.json\"), this.gaugeAddress);\n    bal = balToken[this.network.id]();\n\n    data = {\n      vault: this.vault.options.address,\n      gauge: this.gauge.options.address,\n      amounts: [] as BN[],\n      values: [] as BN[],\n      tvl: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public tokens: Token[], public poolId: string, public gaugeAddress: string = \"\") {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => this.tokens;\n    getAmounts = () => _.map(this.tokens, (asset, i) => ({ asset, amount: this.data.amounts[i] || zero, value: this.data.values[i] || zero }));\n    getRewardAssets = () => [this.bal];\n    getPendingRewards = () => [{ asset: this.bal, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      if (!this.gaugeAddress) return await this.loadFromPool();\n\n      const [lpTokenAddress, workingBalance, totalWorkingBalance] = await Promise.all([\n        this.gauge.methods.lp_token().call(),\n        this.gauge.methods.balanceOf(this.args.address).call().then(bn),\n        this.gauge.methods.totalSupply().call().then(bn),\n      ]);\n      const pending = await this.gauge.methods\n        .claimable_tokens(this.args.address)\n        .call()\n        .catch(() => this.gauge.methods.claimable_reward_write(this.args.address, this.bal.address).call())\n        .then(bn);\n\n      const bpt = erc20(\"BPT\", lpTokenAddress);\n      const [totalBptsStaked, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.gaugeAddress).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n      const bptBalance = totalBptsStaked.times(workingBalance).div(totalWorkingBalance);\n\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).times(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).times(totalBptsStaked).div(bptTotalSupply))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.plus(bn(b)), zero);\n\n      this.data.pending = pending;\n      this.data.pendingValue = await this.oracle.valueOf(this.network.id, this.bal, this.data.pending);\n    }\n\n    private async loadFromPool() {\n      const bpt = erc20(\n        \"BPT\",\n        await this.vault.methods\n          .getPool(this.poolId)\n          .call()\n          .then((x) => x[\"0\"])\n      );\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      const [bptBalance, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.args.address).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).times(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.plus(bn(b)), zero);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.gauge.methods.claimable_tokens(this.args.address), useLegacyTx);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { networks } from \"./base/consts\";\n\nexport namespace ElrondMaiar {\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    MEX_EGLD: () => esdt(\"MEX/EGLD LP\", \"EGLDMEX-0be9e5\", 18),\n    USDC_EGLD: () => esdt(\"USDC/EGLD LP\", \"EGLDUSDC-594e5e\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string; lp: ESDT };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    L_USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\",\n      lp: tokens.MEX_EGLD(),\n    }),\n    L_MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\",\n      lp: tokens.MEX_EGLD(),\n    }),\n  };\n\n  class Farm implements PositionV1 {\n    mex = tokens.MEX();\n\n    data = {\n      pool: this.strategy.pool,\n      farm: this.strategy.farm,\n      lp: this.strategy.lp.tokenId,\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.egld;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () =>\n      this.getAssets().length > 1\n        ? [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n            {\n              asset: this.getAssets()[1],\n              amount: this.data.amount1,\n              value: this.data.value1,\n            },\n          ]\n        : [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n          ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [asset0, asset1] = this.getAssets();\n      const [farmEsdts, pairEsdts, totalLPSupply] = await Promise.all([getESDTs(this.strategy.farm), getESDTs(this.strategy.pool), getTotalSupply(this.strategy.lp)]);\n      const totalLPStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === this.strategy.lp.tokenId)!.balance);\n      const asset0InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset0.tokenId)!.balance);\n      const asset1InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset1.tokenId)!.balance);\n      const asset0TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset0, totalLPStaked.times(asset0InPair).div(totalLPSupply));\n      const asset1TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset1, totalLPStaked.times(asset1InPair).div(totalLPSupply));\n      this.data.tvl = asset0TotalValue.plus(asset1TotalValue);\n\n      const esdts = await getESDTs(this.args.address);\n      const lpNameSuffix = this.strategy.lp.tokenId.split(\"-\")[0];\n      const lps = _.find(esdts, (t) => t.tokenIdentifier.startsWith(lpNameSuffix));\n      if (!lps) return;\n\n      this.data.lpBalanceStaked = bn(lps!.balance);\n      this.data.amount0 = this.data.lpBalanceStaked.times(asset0InPair).div(totalLPSupply);\n      this.data.amount1 = this.data.lpBalanceStaked.times(asset1InPair).div(totalLPSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, asset1, this.data.amount1);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\",\n      lp: tokens.MEX(),\n    }),\n    L_MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\",\n      lp: tokens.LKMEX(),\n    }),\n  };\n\n  class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as Strategy).lp];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const asset = this.getAssets()[0];\n\n      const farmEsdts = await getESDTs(this.strategy.farm);\n      const totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      this.data.tvl = await this.oracle.valueOf(networks.egld.id, asset, totalAssetStaked);\n\n      const esdts = await getESDTs(this.args.address);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === this.strategy.pool.toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n\n      this.data.amount0 = bn(farmNftWrapper.balance.toString());\n      this.data.value0 = await this.oracle.valueOf(networks.egld.id, asset, this.data.amount0);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  async function getESDTs(address: string) {\n    const response = await fetch(`https://gateway.elrond.com/address/${address}/esdt`);\n    const json = await response.json();\n    return _.get(json, [\"data\", \"esdts\"], []);\n  }\n\n  async function getTotalSupply(token: ESDT) {\n    const response = await fetch(`https://gateway.elrond.com/network/esdt/supply/${token.tokenId}`);\n    const json = await response.json();\n    return bn(_.get(json, [\"data\", \"supply\"], \"0\"));\n  }\n\n  export function register() {\n    PositionFactory.register({\n      \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n      \"egld:Maiar:LFarm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_USDC_EGLD()),\n      \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n      \"egld:Maiar:LFarm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_MEX_EGLD()),\n      \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n      \"egld:Maiar:MEXLFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.L_MEX()),\n    });\n  }\n\n  // export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n  //   const assets = _.map(tokens, (t) => t());\n\n  // https://gateway.elrond.com/address/:bech32Address/balance\n\n  // const [esdts, balanceEGLD] = await Promise.all([getESDTs(address), provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString()))]);\n\n  // const balances = await Promise.all(\n  //   _(esdts)\n  //     .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n  //     .filter((t) => !!t.asset)\n  //     .map(async (t) => {\n  //       const amount = to18(t.esdt.balance, t.asset!.dec);\n  //       return {\n  //         asset: t.asset!,\n  //         amount,\n  //         value: await oracle.valueOf(networks.egld.id, t.asset!, amount),\n  //       };\n  //     })\n  //     .value()\n  // );\n\n  // balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(networks.egld.id, tokens.EGLD(), balanceEGLD) });\n\n  // return balances;\n  // }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n\n// farms v2:\n// EGLD/MEX => MEX : erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\n// EGLD/MEX => LKMEX: erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\n// EGLD/USDC => MEX: erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\n// EGLD/USDC => LKMEX: erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\n// MEX => MEX: erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\n// MEX => LKMEX: erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\n","import _ from \"lodash\";\nimport type { TraderJoeFarmAbi } from \"../../typechain-abi\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace TraderJoe {\n  const orbs = () => erc20(\"ORBS\", \"0x340fE1D898ECCAad394e2ba0fC1F93d27c7b717A\");\n\n  export function register() {\n    PositionFactory.register({\n      \"avax:TraderJoe:Farm:WETH/AVAX\": (args, oracle) => new Farm(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX(), 26),\n      \"avax:TraderJoe:Farm:sAVAX/AVAX\": (args, oracle) =>\n        new Farm(args, oracle, erc20(\"sAVAX\", \"0x2b2C81e08f1Af8835a78Bb2A90AE924ACE0eA4bE\"), erc20s.avax.WAVAX(), 51, \"0x188bed1968b795d5c9022f6a0bb5931ac4c18f00\"),\n\n      \"avax:TraderJoe:LP:ORBS/AVAX\": (args, oracle) => new LP(args, oracle, orbs(), erc20s.avax.WAVAX(), \"0x0315522354037e48C75756aD68358CE185dad911\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<TraderJoeFarmAbi>(require(\"../abi/TraderJoeFarmAbi.json\"), this.masterchefAddress);\n    reward = erc20(\"JOE\", \"0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd\");\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public poolId: number,\n      public masterchefAddress: string = \"0xd6a4F121CA35509aF06A0Be99093d08462f53052\"\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingTokens(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken);\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.times(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.times(lpStaked).div(lpTotalSupply))).plus(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.times(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending.pendingJoe);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"TraderJoeLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.times(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.plus(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn9, contract, erc20, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { RibbonGaugeAbi, RibbonThetaVaultAbi } from \"../../typechain-abi\";\n\nexport namespace Ribbon {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Ribbon:T-CC:ETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x25751853Eab4D0eB3652B5eB6ecB102A2789644B\"),\n      \"eth:Ribbon:T-CC:stETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x53773E034d9784153471813dacAFF53dBBB78E8c\"),\n      \"eth:Ribbon:T-CC:WBTC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WBTC(), \"0x65a833afDc250D9d38f8CD9bC2B1E3132dB13B2F\"),\n      \"eth:Ribbon:T-CSP:yvUSDC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.USDC(), \"0xCc323557c71C0D1D20a1861Dc69c06C5f3cC9624\"),\n\n      \"avax:Ribbon:T-CC:AVAX\": (args, oracle) => new ThetaVault(args, oracle, networks.avax, erc20s.avax.WAVAX(), \"0x98d03125c62DaE2328D9d3cb32b7B969e6a87787\"),\n    });\n  }\n\n  const rewardTokens = {\n    [networks.eth.id]: () => erc20(\"RBN\", \"0x6123B0049F904d730dB3C36a31167D9d4121fA6B\"),\n    [networks.avax.id]: () => erc20s.avax.WAVAX(),\n  };\n\n  class ThetaVault implements PositionV1 {\n    rewardToken = rewardTokens[this.network.id]();\n    vault = contract<RibbonThetaVaultAbi>(require(\"../abi/RibbonThetaVaultAbi.json\"), this.vaultAddress);\n\n    data = {\n      vault: this.vaultAddress,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      strike: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset: Token, public vaultAddress: string) {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.asset];\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.rewardToken];\n    getPendingRewards = () => [{ asset: this.rewardToken, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const { amount, unredeemedShares } = await this.vault.methods.depositReceipts(this.args.address).call();\n      this.data.amount = await this.asset.mantissa(bn(amount).plus(bn(unredeemedShares)));\n\n      // farms only on ETH\n      if (this.network.id === networks.eth.id) {\n        const farm = contract<RibbonGaugeAbi>(require(\"../abi/RibbonGaugeAbi.json\"), await this.vault.methods.liquidityGauge().call());\n        const [fbalance, fratio] = await Promise.all([farm.methods.balanceOf(this.args.address).call().then(bn), this.vault.methods.pricePerShare().call().then(bn)]);\n        const staked = await this.asset.mantissa(fbalance.times(fratio).div(await this.asset.amount(1)));\n        this.data.amount = this.data.amount.plus(staked);\n\n        this.data.pending = await farm.methods.claimable_tokens(this.args.address).call().then(bn);\n        this.data.pendingValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardToken, this.data.pending);\n      }\n\n      this.data.value = await this.oracle.valueOf(this.network.id, this.asset, this.data.amount);\n\n      const total = await this.asset.mantissa(await this.vault.methods.totalBalance().call());\n      this.data.tvl = await this.oracle.valueOf(this.network.id, this.asset, total);\n\n      const currentOption = contract(require(\"../abi/RibbonOptionAbi.json\"), await this.vault.methods.currentOption().call());\n      this.data.strike = bn9(await currentOption.methods[\"strikePrice()\"]().call()).times(10);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, ether, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { LooksrareStakingAbi } from \"../../typechain-abi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace LooksRare {\n  export function register() {\n    PositionFactory.register({\n      \"eth:LooksRare:LooksStaking\": (args, oracle) => new Staking(args, oracle),\n      \"eth:LooksRare:LooksAutoCompound\": (args, oracle) => new AutoCompund(args, oracle),\n    });\n  }\n\n  class Staking implements PositionV1 {\n    eth = erc20s.eth.WETH();\n    looks = erc20(\"LOOKS\", \"0xf4d2888d29D722226FafA5d9B24F9164c092421E\");\n    vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0xBcD7254A1D759EFA08eC7c3291B2E85c5dCC12ce\");\n    checkPending = true;\n\n    data = {\n      vault: this.vault.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getNetwork = () => networks.eth;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.looks];\n    getAmounts = () => [{ asset: this.looks, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.eth];\n    getPendingRewards = () => [{ asset: this.eth, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const [stakedLooks, pendingEth, totalShares, sharePrice] = await Promise.all([\n        this.vault.methods.calculateSharesValueInLOOKS(this.args.address).call().then(bn),\n        this.checkPending ? this.vault.methods.calculatePendingRewards(this.args.address).call().then(bn) : zero,\n        this.vault.methods.totalShares().call().then(bn),\n        this.vault.methods.calculateSharePriceInLOOKS().call().then(bn),\n      ]);\n      this.data.amount = stakedLooks;\n      this.data.pendingAmount = pendingEth;\n      const tvlAmount = totalShares.times(sharePrice).div(ether);\n\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.looks, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.looks, tvlAmount),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class AutoCompund extends Staking {\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      super(args, oracle);\n      this.vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0x3ab16Af1315dc6C95F83Cbf522fecF98D00fd9ba\");\n      this.data.vault = this.vault.options.address;\n      this.checkPending = false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, Contract, contract, erc20, erc20s, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { SushiswapMinichefAbi } from \"../../typechain-abi\";\n\nexport namespace SushiSwap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:SushiSwap:Farm:USDC/ETH\": (args, oracle) => new Farm(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH(), 1),\n      \"poly:SushiSwap:Farm:ETH/MATIC\": (args, oracle) => new Farm(args, oracle, networks.poly, erc20s.poly.WETH(), erc20s.poly.WMATIC(), 0),\n      \"arb:SushiSwap:Farm:USDC/ETH\": (args, oracle) => new Farm(args, oracle, networks.arb, erc20s.arb.USDC(), erc20s.arb.WETH(), 0),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = getFarmContract(this.network);\n    reward = getRewardContract(this.network);\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingSushi(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken || (await this.masterchef.methods.lpToken(this.poolId).call()));\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.times(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.times(lpStaked).div(lpTotalSupply))).plus(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.times(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      const tx = this.network.id === networks.poly.id ? this.masterchef.methods.deposit(this.poolId, 0, this.args.address) : this.masterchef.methods.deposit(this.poolId, 0);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n  }\n\n  function getFarmContract(network: Network): Contract {\n    switch (network.shortname) {\n      case \"arb\":\n        return contract<SushiswapMinichefAbi>(require(\"../abi/SushiswapMinichefAbi.json\"), \"0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3\");\n      case \"poly\":\n        return contract<SushiswapMinichefAbi>(require(\"../abi/SushiswapMinichefAbi.json\"), \"0x0769fd68dFb93167989C6f7254cd0D766Fb2841F\");\n      case \"eth\":\n      default:\n        return contract(require(\"../abi/SushiswapMasterchefAbi.json\"), \"0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd\");\n    }\n  }\n\n  function getRewardContract(network: Network) {\n    switch (network.shortname) {\n      case \"arb\":\n        return erc20(\"SUSHI\", \"0xd4d42F0b6DEF4CE0383636770eF773390d85c61A\");\n      case \"poly\":\n        return erc20(\"SUSHI\", \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\");\n      case \"eth\":\n      default:\n        return erc20(\"SUSHI\", \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\");\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, zero } from \"@defi.org/web3-candies\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Fodl {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n    });\n  }\n\n  export class XFodlStake implements PositionV1 {\n    fodl = erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\");\n    xfodl = erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\");\n\n    data = {\n      fodl: this.fodl.address,\n      xfodl: this.xfodl.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(bn),\n        this.xfodl.methods.totalSupply().call().then(bn),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(bn),\n      ]);\n      this.data.amount = myXfodl.times(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { QuickswapStakingAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace QuickSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x614389EaAE0A6821DC49062D56BDA3d9d45Fa2ff\");\n  const quick = () => erc20(\"QUICK\", \"0x831753DD7087CaC61aB5644b308642cc1c33Dc13\");\n\n  export function register() {\n    PositionFactory.register({\n      \"poly:QuickSwap:Farm:ORBS/USDC\": (args, oracle) => new Farm(args, oracle, erc20s.poly.USDC(), orbs(), \"0x9CA237962823A0a74bbC8354764e1DAC9e4057F0\"),\n\n      \"poly:QuickSwap:LP:ORBS/QUICK\": (args, oracle) => new LP(args, oracle, orbs(), quick(), \"0x882624931b4A799d50242e5b25E2Fa2719E4d072\"),\n      \"poly:QuickSwap:LP:ORBS/JPYC\": (args, oracle) =>\n        new LP(args, oracle, orbs(), erc20(\"JPYC\", \"0x431D5dfF03120AFA4bDf332c61A6e1766eF37BDB\"), \"0xD01C074C78E9647a5ddAE2648f1A089b98D5380a\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    staking = contract<QuickswapStakingAbi>(require(\"../abi/QuickswapStakingAbi.json\"), this.stakingAddress);\n    reward = erc20(\"dQUICK\", \"0xf28164A485B0B2C90639E47b0f377b4a438a16B1\");\n\n    data = {\n      contract: this.stakingAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public stakingAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, totalStaked, earned, lpAddress] = await Promise.all([\n        this.staking.methods.balanceOf(this.args.address).call().then(bn),\n        this.staking.methods.totalSupply().call().then(bn),\n        this.staking.methods.earned(this.args.address).call().then(this.reward.mantissa),\n        this.staking.methods.stakingToken().call(),\n      ]);\n      this.data.rewardAmount = earned;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(bn),\n      ]);\n      this.data.amount0 = stakedBalance.times(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.times(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_amount0 = totalStaked.times(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.times(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.plus(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.staking.methods.stake(0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"QuickswapLP\", this.lpAddress);\n\n    data = {\n      contract: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [balance, totalSupply] = await Promise.all([this.lp.methods.balanceOf(this.args.address).call().then(bn), this.lp.methods.totalSupply().call().then(bn)]);\n\n      const [amount0InLp, amount1InLp] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n      ]);\n      this.data.amount0 = amount0InLp.times(balance).div(totalSupply);\n      this.data.amount1 = amount1InLp.times(balance).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, amount0InLp);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, amount1InLp);\n      this.data.tvl = tvl_value0.plus(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PangolinChefAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Pangolin {\n  const orbs = () => erc20(\"ORBS\", \"0x340fE1D898ECCAad394e2ba0fC1F93d27c7b717A\");\n  const png = () => erc20(\"PNG\", \"0x60781C2586D68229fde47564546784ab3fACA982\");\n\n  export function register() {\n    PositionFactory.register({\n      \"avax:Pangolin:Farm:ORBS/AVAX\": (args, oracle) => new Farm(args, oracle, orbs(), erc20s.avax.WAVAX(), 36),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    chef = contract<PangolinChefAbi>(require(\"../abi/PangolinChefAbi.json\"), \"0x1f806f7C8dED893fd3caE279191ad7Aa3798E928\");\n    reward = png();\n\n    data = {\n      chef: this.chef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.avax;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, pending, lpAddress] = await Promise.all([\n        this.chef.methods\n          .userInfo(this.poolId, this.args.address)\n          .call()\n          .then((x) => bn(x.amount)),\n        this.chef.methods.pendingReward(this.poolId, this.args.address).call().then(bn),\n        this.chef.methods.lpToken(this.poolId).call(),\n      ]);\n      this.data.rewardAmount = pending;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply, totalStaked] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(bn),\n        lp.methods.balanceOf(this.chef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = stakedBalance.times(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.times(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n\n      const tvl_amount0 = totalStaked.times(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.times(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.isZero() ? tvl_value1.times(2) : tvl_value0.plus(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.chef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.chef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.chef.methods as any)[method](...args);\n      alert(`target:\\n${this.chef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.chef.methods.deposit(this.poolId, 0, this.args.address), useLegacyTx);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { contract, erc20, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { RookLiquidityPoolAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Rook {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Rook:xRook\": (args, oracle) => new XRook(args, oracle),\n    });\n  }\n\n  class XRook implements PositionV1 {\n    pool = contract<RookLiquidityPoolAbi>(require(\"../abi/RookLiquidityPoolAbi.json\"), \"0x4F868C1aa37fCf307ab38D215382e88FCA6275E2\");\n    rook = erc20(\"ROOK\", \"0xfA5047c9c78B8877af97BDcb85Db743fD7313d4a\");\n    xrook = erc20(\"xROOK\", \"0x8aC32F0a635a0896a8428A9c31fBf1AB06ecf489\");\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [this.xrook];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getTVL = () => this.data.tvl;\n    getAmounts = () => [{ asset: this.rook, amount: this.data.amount, value: this.data.value }];\n\n    async load() {\n      this.data.amount = await this.pool.methods.underlyingBalance(this.rook.address, this.args.address).call().then(this.rook.mantissa);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.rook, this.data.amount);\n      const tvlAmount = await this.pool.methods.totalValueLocked(this.rook.address).call().then(this.rook.mantissa);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.rook, tvlAmount);\n    }\n\n    getContractMethods = () => _.functions(this.xrook.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xrook.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.xrook.methods as any)[method](...args);\n      alert(`target:\\n${this.xrook.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks } from \"./base/consts\";\nimport { erc20, Network, Token, zero } from \"@defi.org/web3-candies\";\n\nexport namespace Aave {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AaveV3:aAVAX\": (args, oracle) => new Collateral(args, oracle, networks.avax, erc20(\"aAVAX\", \"0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97\"), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class Collateral implements PositionV1 {\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public aToken: Token, public token: Token) {}\n\n    getName = () => \"\";\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.aToken];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      const [amount, totalSupply] = await Promise.all([\n        this.aToken.methods.balanceOf(this.args.address).call().then(this.aToken.mantissa),\n        this.aToken.methods.totalSupply().call().then(this.aToken.mantissa),\n      ]);\n\n      this.data.amount = amount;\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.token, totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.tvl;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { contract, erc20, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport type { SpookyChefAbi } from \"../../typechain-abi\";\n\nexport namespace SpookySwap {\n  const orbs = () => erc20(\"ORBS\", \"0x3E01B7E242D5AF8064cB9A8F9468aC0f8683617c\");\n  const usdc = () => erc20(\"USDC\", \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\");\n  const ftm = () => erc20(\"FTM\", \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\");\n\n  export function register() {\n    PositionFactory.register({\n      \"ftm:SpookySwap:LP:ORBS/USDC\": (args, oracle) => new LP(args, oracle, orbs(), usdc(), \"0x4FaA520fe975228F54b30c6996129950E975BD8f\", 43),\n      \"ftm:SpookySwap:LP:ORBS/FTM\": (args, oracle) => new LP(args, oracle, orbs(), ftm(), \"0x3Ae87E47c69144d1794a78c0709485978C1002A5\", -1),\n    });\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"SpookySwapLP\", this.lpAddress);\n    boo = erc20(\"BOO\", \"0x841FAD6EAe12c286d1Fd18d1d525DFfA75C7EFFE\");\n    masterchef = contract<SpookyChefAbi>(require(\"../abi/SpookyChefAbi.json\"), \"0x18b4f774fdC7BF685daeeF66c2990b1dDd9ea6aD\");\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.ftm;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.boo];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.boo,\n        amount: this.data.pending,\n        value: this.data.pendingValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      let [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      if (this.poolId > 0) {\n        lpAmount = lpAmount.plus(await this.lp.mantissa((await this.masterchef.methods.userInfo(this.poolId, this.args.address).call()).amount));\n        this.data.pending = await this.masterchef.methods.pendingBOO(this.poolId, this.args.address).call().then(this.boo.mantissa);\n        this.data.pendingValue = await this.oracle.valueOf(this.getNetwork().id, this.boo, this.data.pending);\n      }\n      this.data.amount0 = total0.times(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.plus(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { erc20, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace SpiritSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x3E01B7E242D5AF8064cB9A8F9468aC0f8683617c\");\n  const usdc = () => erc20(\"USDC\", \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\");\n  const ftm = () => erc20(\"FTM\", \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\");\n\n  export function register() {\n    PositionFactory.register({\n      \"ftm:SpiritSwap:LP:ORBS/USDC\": (args, oracle) => new LP(args, oracle, orbs(), usdc(), \"0x4B668A229740b4F6d04cE2D1b05648Ef1d508EC1\"),\n      \"ftm:SpiritSwap:LP:ORBS/FTM\": (args, oracle) => new LP(args, oracle, orbs(), ftm(), \"0x1F0700387Dfe4Aec7b8C99fbf54cdCDbBB5603B5\"),\n    });\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"SpiritSwapLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.ftm;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.times(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.plus(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn18, convertDecimals, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace Bitcoin {\n  export function register() {\n    PositionFactory.register({\n      \"x:Bitcoin\": (args, oracle) => new BitcoinBalance(args, oracle),\n    });\n  }\n\n  export type BTC = Token & { bech32: string };\n\n  class BitcoinBalance implements PositionV1 {\n    token: BTC;\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.address) throw new Error(\"bitcoin bech32 bc1 address required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { bech32: args.address });\n    }\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.btc;\n    getData = () => this.data;\n    getAssets = () => [this.token];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      this.data.tvl = await fetchTVL();\n      this.data.amount = await fetchBalance(this.token.bech32);\n      this.data.value = await fetchPrice().then((p) => this.data.amount.times(p));\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  async function fetchTVL() {\n    const r = await fetch(\"https://blockchain.info/q/marketcap\");\n    const json = await r.json();\n    return bn18(json);\n  }\n\n  async function fetchBalance(bech32: string) {\n    const r = await fetch(`https://blockchain.info/q/addressbalance/${bech32}`);\n    const json = await r.json();\n    return convertDecimals(json, 8, 18);\n  }\n\n  async function fetchPrice() {\n    const r = await fetch(\"https://blockchain.info/q/24hrprice\");\n    const json = await r.json();\n    return parseFloat(json);\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { bn18, contract, erc20, erc20s, ether, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport type { LiquityStabilityPoolAbi, LiquityTroveManagerAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Liquity {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Liquity:LUSD\": (args, oracle) => new Pool(args, oracle),\n      \"eth:Liquity:Trove\": (args, oracle) => new CDP(args, oracle),\n    });\n  }\n\n  const lusd = () => erc20(\"LUSD\", \"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0\");\n  const lqty = () => erc20(\"LQTY\", \"0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D\");\n\n  class CDP implements PositionV1 {\n    manager = contract<LiquityTroveManagerAbi>(require(\"../abi/LiquityTroveManagerAbi.json\"), \"0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2\");\n\n    CR_LIQUIDATION = bn18(1.1);\n    CR_RECOVERY = bn18(1.5);\n\n    data = {\n      manager: this.manager.options.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      debt: zero,\n      cr: zero,\n      ltv: zero,\n      liquidationPrice: zero,\n      entireSystemDebt: zero,\n      entireSystemCR: zero,\n      recoveryMode: 0,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [erc20s.eth.WETH()];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () =>\n      this.data.cr.lte(this.CR_LIQUIDATION)\n        ? [\n            {\n              severity: Severity.Critical,\n              message: `⚠️ LIQUIDATION`,\n            },\n          ]\n        : this.data.cr.lt(this.CR_RECOVERY)\n        ? [\n            {\n              severity: Severity.High,\n              message: `CR ${this.data.cr.toFixed(3)}%`,\n            },\n          ]\n        : [];\n    getAmounts = () => [{ asset: erc20s.eth.WETH(), amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const eth = erc20s.eth.WETH();\n      const price = await this.oracle.valueOf(this.getNetwork().id, eth, ether);\n      const [pos, systemColl, systemDebt, recoveryMode] = await Promise.all([\n        this.manager.methods.getEntireDebtAndColl(this.args.address).call(),\n        this.manager.methods.getEntireSystemColl().call().then(eth.mantissa),\n        this.manager.methods.getEntireSystemDebt().call().then(lusd().mantissa),\n        this.manager.methods.checkRecoveryMode(price.toString()).call(),\n      ]);\n      this.data.recoveryMode = recoveryMode ? 1 : 0;\n      this.data.amount = await eth.mantissa(pos.coll);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, eth, this.data.amount);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, eth, systemColl);\n      this.data.debt = await lusd().mantissa(pos.debt);\n      this.data.cr = this.data.value.times(ether).div(this.data.debt);\n      this.data.ltv = ether.times(ether).div(this.data.cr);\n      const crWithGasFeeRebate = this.data.value.times(ether).div(this.data.debt.minus(await lusd().amount(200)));\n      this.data.liquidationPrice = price.times(this.CR_LIQUIDATION).div(crWithGasFeeRebate);\n      this.data.entireSystemDebt = await lusd().mantissa(systemDebt);\n      this.data.entireSystemCR = this.data.tvl.times(ether).div(this.data.entireSystemDebt);\n    }\n\n    getContractMethods = () => _.functions(this.manager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.manager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.manager.methods as any)[method](...args);\n      alert(`target:\\n${this.manager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class Pool implements PositionV1 {\n    pool = contract<LiquityStabilityPoolAbi>(require(\"../abi/LiquityStabilityPoolAbi.json\"), \"0x66017D22b0f8556afDd19FC67041899Eb65a21bb\");\n\n    data = {\n      pool: this.pool.options.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      pendingReward: zero,\n      pendingRewardValue: zero,\n      pendingETH: zero,\n      pendingETHValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [lusd()];\n    getRewardAssets = () => [lqty(), erc20s.eth.WETH()];\n    getPendingRewards = () => [\n      { asset: lqty(), amount: this.data.pendingReward, value: this.data.pendingRewardValue },\n      { asset: erc20s.eth.WETH(), amount: this.data.pendingETH, value: this.data.pendingETHValue },\n    ];\n    getHealth = () => [];\n    getAmounts = () => [{ asset: lusd(), amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [totalDeposits, deposit, rewards, eth] = await Promise.all([\n        this.pool.methods.getTotalLUSDDeposits().call().then(lusd().mantissa),\n        this.pool.methods.getCompoundedLUSDDeposit(this.args.address).call().then(lusd().mantissa),\n        this.pool.methods.getDepositorLQTYGain(this.args.address).call().then(lqty().mantissa),\n        this.pool.methods.getDepositorETHGain(this.args.address).call().then(erc20s.eth.WETH().mantissa),\n      ]);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, lusd(), totalDeposits);\n      this.data.amount = deposit;\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, lusd(), this.data.amount);\n      this.data.pendingReward = rewards;\n      this.data.pendingRewardValue = await this.oracle.valueOf(this.getNetwork().id, lqty(), this.data.pendingReward);\n      this.data.pendingETH = eth;\n      this.data.pendingETHValue = await this.oracle.valueOf(this.getNetwork().id, erc20s.eth.WETH(), this.data.pendingETH);\n    }\n\n    getContractMethods = () => _.functions(this.pool.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.pool.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.pool.methods as any)[method](...args);\n      alert(`target:\\n${this.pool.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.pool.methods.withdrawFromSP(0), useLegacyTx);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn18, convertDecimals, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport _ from \"lodash\";\n\nexport namespace Raydium {\n  export function register() {\n    PositionFactory.register({\n      \"sol:Raydium:Pool:ORBS/SOL\": (args, oracle) => new Pool(args, oracle, \"ORBS\", \"2iHXwoH2LaMyiLL2WKDNx732rQ7CsMScNRavB1bmT5aZ\", \"orbs\"),\n    });\n  }\n\n  export type SolToken = Token & { sol: true; coingeckoId: string };\n\n  class Pool implements PositionV1 {\n    sol = erc20(\"SOL\", zeroAddress) as SolToken;\n    token = erc20(this.tokenName, zeroAddress) as SolToken;\n\n    data = {\n      tokenName: this.tokenName,\n      lpMintAddress: this.lpMintAddress,\n      amountToken: zero,\n      amountSol: zero,\n      valueToken: zero,\n      valueSol: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public tokenName: string, public lpMintAddress: string, coingeckoId: string) {\n      this.sol.sol = true;\n      this.sol.coingeckoId = \"solana\";\n      this.token.sol = true;\n      this.token.coingeckoId = coingeckoId;\n    }\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.sol;\n    getData = () => this.data;\n    getAssets = () => [this.token, this.sol];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getAmounts = () => [\n      { asset: this.token, amount: this.data.amountToken, value: this.data.valueToken },\n      { asset: this.sol, amount: this.data.amountSol, value: this.data.valueSol },\n    ];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const lpAmount = await this.fetchLpAmount();\n      const lpInfo = await this.fetchLpInfo();\n\n      const totalLps = bn18(lpInfo.tokenAmountLp);\n      const totalTokens = bn18(lpInfo.tokenAmountCoin);\n      const totalSol = bn18(lpInfo.tokenAmountPc);\n\n      this.data.amountToken = totalTokens.times(lpAmount).div(totalLps);\n      this.data.amountSol = totalSol.times(lpAmount).div(totalLps);\n\n      this.data.valueToken = await this.oracle.valueOf(networks.sol.id, this.token, this.data.amountToken);\n      this.data.valueSol = await this.oracle.valueOf(networks.sol.id, this.sol, this.data.amountSol);\n\n      const totalTokensValue = await this.oracle.valueOf(networks.sol.id, this.token, totalTokens);\n      const totalSolValue = await this.oracle.valueOf(networks.sol.id, this.sol, totalSol);\n      this.data.tvl = totalTokensValue.plus(totalSolValue);\n    }\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n\n    async fetchLpInfo() {\n      const pairs = await fetch(\"https://api.raydium.io/v2/main/pairs\").then((x) => x.json());\n      return _.find(pairs, (p) => p.lpMint === this.lpMintAddress);\n    }\n\n    async fetchLpAmount() {\n      const response = await fetch(`https://api.mainnet-beta.solana.com`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          jsonrpc: \"2.0\",\n          id: 1,\n          method: \"getTokenAccountsByOwner\",\n          params: [this.args.address, { mint: this.lpMintAddress }, { encoding: \"jsonParsed\" }],\n        }),\n      }).then((it) => it.json());\n      const { amount, decimals } = response.result.value[0].account.data.parsed.info.tokenAmount;\n      return convertDecimals(amount, decimals, 18);\n    }\n  }\n}\n","import { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { TokenBalances } from \"./TokenBalances\";\nimport { Uniswap } from \"./Uniswap\";\nimport { OffChain } from \"./OffChain\";\nimport { AlphaHomora } from \"./AlphaHomora\";\nimport { Balancer } from \"./Balancer\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { TraderJoe } from \"./TraderJoe\";\nimport { Ribbon } from \"./Ribbon\";\nimport { LooksRare } from \"./LooksRare\";\nimport { SushiSwap } from \"./SushiSwap\";\nimport { Fodl } from \"./Fodl\";\nimport { QuickSwap } from \"./QuickSwap\";\nimport { Pangolin } from \"./Pangolin\";\nimport { Rook } from \"./Rook\";\nimport { Aave } from \"./Aave\";\nimport { SpookySwap } from \"./SpookySwap\";\nimport { SpiritSwap } from \"./SpiritSwap\";\nimport { Bitcoin } from \"./Bitcoin\";\nimport { Liquity } from \"./Liquity\";\nimport { Raydium } from \"./Raydium\";\n\nexport function registerAllPositions() {\n  OffChain.register();\n  TokenBalances.register();\n  Bitcoin.register();\n\n  Uniswap.register();\n  SushiSwap.register();\n  Pancakeswap.register();\n  Revault.register();\n  AlphaHomora.register();\n  Balancer.register();\n  ElrondMaiar.register();\n  TraderJoe.register();\n  Ribbon.register();\n  LooksRare.register();\n  Unicly.register();\n  Fodl.register();\n  Loops.register();\n  QuickSwap.register();\n  Pangolin.register();\n  Rook.register();\n  Aave.register();\n  SpookySwap.register();\n  SpiritSwap.register();\n  Liquity.register();\n  Raydium.register();\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { PositionArgs, PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport { registerAllPositions } from \"../positionsv1\";\nimport { BN, Token, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positionsv1/base/consts\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, PositionV1>,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string, input: string, name: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, input, name, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    update: (position: PositionV1, newArgs: PositionArgs) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = newArgs;\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions...\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p\n        .load()\n        .then(() => ((p as any).loaded = true))\n        .catch((e) => {\n          (p as any).loaded = false;\n          console.log(p.getArgs().type, e);\n        });\n    })\n  );\n  api.setState({ positions });\n  console.log(`...done loading ${network?.name}`);\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\n\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        name: p.getArgs().name || p.getName() || p.getArgs().type,\n        chain: p.getNetwork().name,\n        health: p.getHealth(),\n        marketValue: num(marketValue(p)),\n        pending: num(p.getPendingRewards().reduce((sum, v) => sum.plus(v.value), zero)),\n        tvl: num(p.getTVL()),\n        position: p,\n        address: p.getArgs().address,\n        loaded: !!(p as any).loaded,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nexport const useAllPositionsValuePerPosition = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.map(state.positions, (position) => ({ position, marketValue: Math.round(num(marketValue(position))) })),\n    (rows) => {\n      const sorted = _.sortBy(rows, (r) => -r.marketValue);\n      return {\n        labels: sorted.map((p) => p.position.getArgs().name || p.position.getName() || p.position.getArgs().type),\n        values: sorted.map((p) => p.marketValue),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerAssetClass = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .map((position) => position.getAmounts())\n        .flatten()\n        .value(),\n    (amounts) => {\n      const reduced = _(amounts)\n        .groupBy((a) => assetClass(a.asset))\n        .map((values, key) => ({ assetClass: key, value: _.reduce(values, (sum, a) => sum + num(a.value), 0) }))\n        .sortBy((v) => -v.value)\n        .value();\n      return {\n        labels: _.map(reduced, (ac) => ac.assetClass),\n        values: _.map(reduced, (ac) => Math.round(ac.value)),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerChain = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.groupBy(state.positions, (p) => p.getNetwork().name),\n    (grouped) => {\n      const totalPerChain = _(grouped)\n        .map((positions, chain) => ({\n          chain,\n          marketValue: Math.round(num(totalMarketValue(positions))),\n        }))\n        .sortBy((t) => -t.marketValue)\n        .value();\n      return {\n        labels: _.map(totalPerChain, (t) => t.chain),\n        values: _.map(totalPerChain, (t) => t.marketValue),\n        grandtotal: _.reduce(totalPerChain, (sum, t) => sum + t.marketValue, 0),\n      };\n    }\n  ),\n});\n\nfunction num(bn: BN) {\n  return bn.times(1000).idiv(1000).toNumber();\n}\n\nfunction marketValue(p: PositionV1) {\n  return _.reduce(p.getAmounts(), (sum, v) => sum.plus(v.value), zero);\n}\n\nfunction totalMarketValue(positions: PositionV1[]) {\n  return _.reduce(positions, (sum, pos) => sum.plus(marketValue(pos)), zero);\n}\n\nfunction assetClass(a: Token): string {\n  const ext = (a as any).symbol || (a as any).tokenId;\n  if (ext) return ext;\n  if (a.name.toLowerCase().includes(\"usd\") || [\"dai\", \"mai\", \"mim\"].includes(a.name.toLowerCase())) return \"USD\";\n  if (a.name.toLowerCase().includes(\"btc\")) return \"BTC\";\n  if (a.name.toLowerCase().includes(\"eth\")) return \"ETH\";\n  if (a.name.toLowerCase().includes(\"bnb\")) return \"BNB\";\n  if (a.name.toLowerCase().includes(\"avax\")) return \"AVAX\";\n  if (a.name.toLowerCase().includes(\"matic\")) return \"MATIC\";\n  if (a.name.toLowerCase().includes(\"ftm\")) return \"FTM\";\n  if ((a as any).bech32) return \"BTC\";\n  return a.name || a.address;\n}\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport _ from \"lodash\";\nimport { BN } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as PositionV1 | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: PositionV1) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        try {\n          const result = await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs));\n          showAlert(_.toString(result) || \"undefined\");\n        } catch (e: any) {\n          showAlert(_.toString(e));\n        }\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), fmtData),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      rawData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n\nfunction fmtData(data: any): any {\n  if (_.isArray(data)) return _.map(data, fmtData);\n  return data instanceof BN ? data.toFormat(3) : data;\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport _ from \"lodash\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    input: \"\",\n    name: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", input: \"\", name: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        address = _.trim(address);\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n\n    setInput:\n      (input: string) =>\n      async ({ setState }) => {\n        input = _.trim(input);\n        setState({ input });\n      },\n\n    setName:\n      (name: string) =>\n      async ({ setState }) => {\n        name = _.trim(name);\n        setState({ name });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address, state.input, state.name)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Name?\" onChange={(e) => actions.setName(e.target.value)} />}\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Input?\" onChange={(e) => actions.setInput(e.target.value)} />}\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions, useAllPositionsValuePerAssetClass, useAllPositionsValuePerChain, useAllPositionsValuePerPosition } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { Threat } from \"../positionsv1/base/PositionV1\";\nimport { ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { ArcElement, Chart as ChartJS, Legend, Tooltip } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\nimport { BN } from \"@defi.org/web3-candies\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst columns: GridColDef[] = [\n  { field: \"loaded\", headerName: \"🌐\", headerAlign: \"center\", width: 20, align: \"center\", valueFormatter: (v) => (v.value ? \"✅\" : \"❔\") },\n  { field: \"chain\", headerName: \"Chain\", headerAlign: \"center\", width: 120, align: \"left\" },\n  { field: \"name\", headerName: \"Position\", headerAlign: \"center\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"center\",\n    valueFormatter: (v) => {\n      if (!v.value || !(v.value as Threat[]).length) return \"🟢\";\n      return (v.value as Threat[]).map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"marketValue\",\n    headerName: \"Market Value\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + BN(v.value).toFormat(0),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + BN(v.value).toFormat(0),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    headerAlign: \"center\",\n    width: 130,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + BN(v.value).toFormat(0),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", headerAlign: \"center\", width: 450, align: \"left\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(undefined);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n  const [totalValuesPerChain] = useAllPositionsValuePerChain(undefined);\n  const [valuesPerPosition] = useAllPositionsValuePerPosition(undefined);\n  const [valuesPerAssetClass] = useAllPositionsValuePerAssetClass(undefined);\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <ListItemText>Total Market Value: $ {BN(totalValuesPerChain.grandtotal).toFormat()}</ListItemText>\n\n      <div style={{ display: \"flex\" }}>\n        <div>\n          <ListItemText>Value Per Chain:</ListItemText>\n          <Pie\n            data={{\n              labels: totalValuesPerChain.labels,\n              datasets: [\n                {\n                  data: totalValuesPerChain.values,\n                  backgroundColor: totalValuesPerChain.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Position:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerPosition.labels,\n              datasets: [\n                {\n                  data: valuesPerPosition.values,\n                  backgroundColor: valuesPerPosition.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Asset Class:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerAssetClass.labels,\n              datasets: [\n                {\n                  data: valuesPerAssetClass.values,\n                  backgroundColor: valuesPerAssetClass.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n      </div>\n\n      <br />\n\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <br />\n      <AddPositionBtn />\n    </div>\n  );\n};\n\nfunction colorOf(num: number) {\n  return bgColors[num % bgColors.length];\n}\n\nconst bgColors = [\n  \"#413d5e\",\n  \"#495371\",\n  \"#638c93\",\n  \"#98B4AA\",\n  \"#F1E0AC\", //\n];\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(undefined);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  // const updatePos = () => appStateActions.withLoading(() => allPositionsActions.update(selector.position!, selector.position!.getArgs())).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.rawData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.name || selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n          {selector.position?.getArgs()?.input && <DialogContentText>Input: {selector.position?.getArgs()?.input}</DialogContentText>}\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positionsv1/base/PositionV1\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}