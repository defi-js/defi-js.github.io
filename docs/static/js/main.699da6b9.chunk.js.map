{"version":3,"sources":["assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positionsv1/base/consts.ts","state/AppState.ts","positionsv1/base/PositionFactory.ts","ui/AppHeader.tsx","positionsv1/base/PriceOracle.ts","positionsv1/Pancakeswap.ts","positionsv1/base/PositionV1.ts","positionsv1/Loops.ts","positionsv1/Revault.ts","positionsv1/Unicly.ts","positionsv1/TokenBalances.ts","positionsv1/Uniswap.ts","positionsv1/OffChain.ts","positionsv1/AlphaHomora.ts","positionsv1/Balancer.ts","positionsv1/ElrondMaiar.ts","positionsv1/TraderJoe.ts","positionsv1/Ribbon.ts","positionsv1/LooksRare.ts","positionsv1/SushiSwap.ts","positionsv1/Fodl.ts","positionsv1/QuickSwap.ts","positionsv1/Pangolin.ts","positionsv1/Rook.ts","positionsv1/Aave.ts","positionsv1/SpookySwap.ts","positionsv1/SpiritSwap.ts","positionsv1/Bitcoin.ts","positionsv1/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx"],"names":["erc20s","_","merge","erc20sOrig","networks","networksOrig","off","id","name","shortname","btc","egld","currentNetwork","netId","bn","window","ethereum","chainId","toNumber","console","log","find","n","sendWithTxType","tx","useLegacyTx","account","from","type","send","isNetworkDisabled","network","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","setState","_withLoading","showAlert","alert","clickNetwork","networkId","getState","_ethereum","removeAllListeners","on","_onConnect","request","method","_switchNetwork","t","message","stack","setWeb3Instance","Web3","Error","params","utils","numberToHex","useAppState","createHook","useIsAppConnected","selector","state","isAddress","useIsLoading","useAppActions","AppHeader","style","display","flexDirection","justifyContent","margin","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","map","ToggleButton","textTransform","disabled","coingeckoIds","eth","bsc","poly","arb","avax","oeth","ftm","PriceOracle","warm","prices","USD","ether","token","tokenId","symbol","address","price","this","getId","amount","isZero","fetchPricesElrond","fetchPrices","toString","zero","mul","div","positions","bynetwork","groupBy","getNetwork","coingeckoFetches","keys","filter","getAssets","concat","getRewardAssets","flatten","a","uniq","elrondFetch","Promise","all","addresses","isEmpty","coingeckoId","v","k","url","join","fetch","response","json","result","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","JSON","stringify","data","inputs","results","registry","oracle","isElrondAddress","startsWith","e","types","args","uniqueId","current","trim","length","isOffChainSymbol","isBitcoinAddress","PositionFactory","Severity","register","Farm","BUSD","WBNB","erc20","require","CAKE","BTCB","DOT","ADA","LINK","DOGE","LP","ORBS","asset0","asset1","lpToken","poolId","masterchef","contract","cake","chef","options","lp","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getName","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","encodeABI","deposit","then","total0","total1","val0","val1","add","Pancakeswap","Loops","AaveLoop","CompoundLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","aave","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","sub","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","owner","claimRewardsToOwner","WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","SingleVault","RevaStake","REVA","revault","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","staking","pendingAmount","userPoolInfo","poolInfo","Revault","Unicly","XUnicFarm","Strategies","uPunks","uJenny","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","getxUNICRate","xunicrate","totalLPTokens","TokenBalance","mcap","nativeTokens","WMATIC","WAVAX","NativeTokenBalance","getBalance","forEach","input","TokenBalances","maxUint128","pow","subn","V3LP","WBTC","token1","IL_WARN","nftPositionManager","nftManager","principal0","principal1","valueIfHodl","valueNow","ilValue","il","pending0","pending1","pendingValue0","pendingValue1","totalFeesValue","High","gt","pos","decreaseLiquidity","maxUint256","res","loadFromPositionGraph","loadTVL","fee","collect","position","pool","totalValueLockedUSD","depositedToken0","withdrawnToken0","depositedToken1","withdrawnToken1","principalValue0","principalValue1","collectedFeesToken0","collectedValue0","collectedFeesToken1","collectedValue1","factory","getPool","a0","a1","v0","v1","Uniswap","AssetPosition","zeroAddress","OffChain","LYF","WETHe","WBTCe","alphaHomoraBank","maxHistoryBlocks","supply0","supply1","borrow0","borrow1","ilAmount","debtRatio","getPositionInfo","lpSupplied","collateralSize","farmAbi","internalType","outputs","stateMutability","nft","collToken","getUnderlyingToken","collId","totalLPs","share","getPositionDebts","debts","indexOf","totalValue0","totalValue1","AlphaHomora","DAI","USDT","overridePrice","balToken","balV2","gaugeAddress","gauge","bal","amounts","values","loadFromPool","lp_token","lpTokenAddress","workingBalance","totalWorkingBalance","claimable_tokens","catch","claimable_reward_write","bpt","totalBptsStaked","bptTotalSupply","bptBalance","getPoolTokens","poolTokens","every","eqIgnoreCase","balances","poolAmounts","poolValues","reduce","sum","b","x","Balancer","esdt","USDC_EGLD","assets","farm","L_USDC_EGLD","MEX_EGLD","L_MEX_EGLD","mex","lpBalanceStaked","getESDTs","getTotalSupply","farmEsdts","pairEsdts","totalLPSupply","totalLPStaked","tokenIdentifier","balance","asset0InPair","asset1InPair","asset0TotalValue","asset1TotalValue","esdts","lpNameSuffix","split","lps","MexFarm","MEX","L_MEX","totalAssetStaked","farmNftWrapper","creator","decimals","dec","get","ElrondMaiar","FarmStrategies","MexFarmStrategies","reward","pendingTokens","lpTotalSupply","lpAmount","pendingJoe","lpAddress","TraderJoe","ThetaVault","rewardTokens","vaultAddress","rewardToken","strike","depositReceipts","unredeemedShares","liquidityGauge","pricePerShare","fbalance","fratio","staked","totalBalance","total","currentOption","bn9","Ribbon","Staking","AutoCompund","looks","checkPending","calculateSharesValueInLOOKS","calculatePendingRewards","totalShares","calculateSharePriceInLOOKS","stakedLooks","pendingEth","sharePrice","tvlAmount","LooksRare","getFarmContract","getRewardContract","pendingSushi","SushiSwap","Fodl","XFodlStake","fodl","xfodl","myXfodl","xfodlTotalSupply","fodlStaked","orbs","stakingAddress","earned","stakingToken","stakedBalance","totalStaked","amount0InLp","amount1InLp","totalLpSupply","tvl_amount0","tvl_amount1","tvl_value0","tvl_value1","stake","QuickSwap","pendingReward","Pangolin","XRook","rook","xrook","totalValueLocked","Rook","Collateral","aToken","Aave","SpookySwap","SpiritSwap","BitcoinBalance","bech32","fetchTVL","fetchBalance","fetchPrice","r","convertDecimals","parseFloat","Bitcoin","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","load","api","addPosition","create","update","newArgs","delete","posId","sendTransaction","harvest","warmup","shouldLoad","loaded","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","chain","health","marketValue","num","useAllPositions","useAllPositionsValuePerPosition","Math","round","rows","sorted","labels","useAllPositionsValuePerAssetClass","reduced","ext","includes","assetClass","key","ac","useAllPositionsValuePerChain","grouped","totalPerChain","totalMarketValue","grandtotal","to3","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","fmtData","positionMethods","selectedMethodArgTypes","rewardAssets","rawData","isArray","BN","fmt18","AddPositionDialogState","show","valid","allTypes","sort","setType","isValidArgs","setAddress","setInput","setName","useAddPositionDialog","AddPositionBtn","isConnected","Button","onClick","AddPositionDialog","appActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","ChartJS","ArcElement","Tooltip","Legend","columns","field","headerName","headerAlign","width","align","valueFormatter","commafy","toFixed","sortable","AllPositionsTable","appState","positionDialogActions","totalValuesPerChain","valuesPerPosition","valuesPerAssetClass","useEffect","height","ListItemText","datasets","backgroundColor","colorOf","responsive","plugins","legend","DataGrid","onCellClick","autoHeight","hideFooter","bgColors","PositionDialog","appStateActions","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","accept","hidden","addEventListener","file","files","reader","FileReader","onload","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById"],"mappings":"mrvPAAe,G,cAAA,IAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,wCCA1B,MAA0B,kCCA1B,MAA0B,kC,uICI5BA,G,OAASC,IAAEC,MAAM,GAAIC,SAAY,KAEjCC,EAAWH,IAAEC,MAAM,GAAIG,WAAc,CAChDC,IAAK,CAAEC,IAAK,EAAGC,KAAM,WAAYC,UAAW,OAC5CC,IAAK,CAAEH,IAAK,EAAGC,KAAM,UAAWC,UAAW,OAC3CE,KAAM,CAAEJ,IAAK,IAAKC,KAAM,SAAUC,UAAW,UAGxC,SAAeG,IAAtB,+B,sDAAO,qGACCC,EAAQC,aAAIC,OAAeC,SAASC,QAAS,IAAIC,WACvDC,QAAQC,IAAI,qBAAsBP,GAF7B,kBAGEZ,IAAEoB,KAAKjB,GAAU,SAACkB,GAAD,OAAOA,EAAEf,KAAOM,MAHnC,4C,sBAMA,SAAeU,EAAtB,oC,sDAAO,WAA8BC,EAASC,GAAvC,uFACCD,EADD,SACuBE,oBADvB,+BACwCD,EAAc,MAAQ,MAD9D,MACWE,KADX,KACkCC,KADlC,oBACIC,KADJ,4D,sBCPA,SAASC,EAAkBC,GAChC,OAAQA,GAAWA,EAAQxB,GAAK,EAGlC,IAAMyB,EAAWC,YAAY,CAC3BzB,KAAM,WAEN0B,aAAc,CACZC,YAAa/B,EACbgC,SAAS,EACTC,OAAQ,GACRN,QAAS,KACTO,YAAa,IAGfC,QAAS,CACPC,YACE,SAACC,GAAD,wDACA,sGAASC,EAAT,EAASA,SAAT,SACQC,EAAaD,EAAUD,GAD/B,2CADA,uDAKFG,UACE,SAACC,GAAD,wDACA,0FAASH,EAAT,EAASA,UACE,CAAEJ,YAAaO,IAD1B,2CADA,uDAKFC,aACE,SAACC,GAAD,wDACA,wGAASL,EAAT,EAASA,SAAUM,EAAnB,EAAmBA,SAAnB,SACQL,EAAaD,EAAD,gCAAW,iGACtBO,IADsB,uBAEzBJ,MAAM,oBAFmB,iCAM3BI,IAAYC,qBACZD,IAAYE,GAAG,eAAf,gCAA+B,wGACvBC,EAAWV,GADY,4CAPJ,SAWrBO,IAAYI,QAAQ,CAAEC,OAAQ,wBAXT,uBAarBC,EAAeR,GAbM,UAetBC,IAAWjB,UAAW,UAAAiB,IAAWjB,eAAX,eAAoBxB,MAAOwC,EAf3B,kCAgBnBK,EAAWV,GAhBQ,6CAD/B,2CADA,0DAyBN,SAASO,IACP,OAAQlC,OAAeC,S,SAGV2B,E,0FAAf,WAA4BD,EAAec,GAA3C,2FAEId,EAAS,CAAEN,SAAS,IAFxB,SAGUoB,IAHV,sDAKIX,MAAM,GAAD,OAAI,KAAEY,QAAN,YAAiB,KAAEC,QAL5B,uBAOIhB,EAAS,CAAEN,SAAS,IAPxB,2E,+BAWegB,E,wFAAf,WAA0BV,GAA1B,0FACEA,EAAS,CAAEL,OAAQ,GAAIN,QAAS,OAEhC4B,0BAAgB,IAAIC,IAAKX,MAH3B,SAIuBvB,oBAJvB,cAIQW,EAJR,gBAKwBzB,IALxB,UAKQmB,EALR,OAMEZ,QAAQC,IAAI,qBAAsBW,IAE9BD,EAAkBC,GARxB,uBAQwC,IAAI8B,MAAJ,yBAAqB9B,QAArB,IAAqBA,OAArB,EAAqBA,EAASvB,KAA9B,uBARxC,QAUEkC,EAAS,CAAEL,SAAQN,YAVrB,6C,+BAaewB,E,wFAAf,WAA8BR,GAA9B,oGAEUE,IAAYI,QAAQ,CACxBC,OAAQ,6BACRQ,OAAQ,CAAC,CAAE7C,QAAS2C,IAAKG,MAAMC,YAAYjB,OAJjD,+G,sBAsBO,I,EC1GA,ED0GMkB,EAAcC,YAAWlC,GACzBmC,EAAoBD,YAAWlC,EAAU,CACpDoC,SAAU,SAACC,GAAD,aAAWT,IAAKG,MAAMO,UAAUD,EAAMhC,WAAY,UAACgC,EAAMtC,eAAP,QAAC,EAAexB,OAEjEgE,EAAeL,YAAWlC,EAAU,CAC/CoC,SAAU,SAACC,GAAD,OAAWA,EAAMjC,WAEhBoC,GAAgBN,YAAWlC,EAAU,CAChDoC,SAAU,O,oBEtHCK,GAAY,WAAO,IAAD,EAC7B,EAAyBR,IAAzB,mBAAOI,EAAP,KAAc9B,EAAd,KAEA,OACE,qBAAKmC,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOC,eAAgB,eAAgBC,OAAQ,IAA7F,SACE,cAACC,GAAA,EAAD,CAAmBC,MAAK,UAAEX,EAAMtC,eAAR,aAAE,EAAexB,GAAI0E,WAAS,EAACC,SAAU,SAACC,GAAD,OAAY5C,EAAQO,aAAasC,SAASD,EAAEE,OAAOL,SAApH,SACG/E,IAAEqF,IAAIjB,EAAMlC,aAAa,SAACJ,GAAD,OACxB,cAACwD,GAAA,EAAD,CAAcP,MAAOjD,EAAQxB,GAA4BmE,MAAO,CAAEc,cAAe,QAAUC,SAAU3D,EAAkBC,GAAvH,SACGA,EAAQvB,MAD2BuB,EAAQtB,mB,6CCJlDiF,IAAY,oBACftF,EAASuF,IAAIpF,GAAK,YADH,eAEfH,EAASwF,IAAIrF,GAAK,uBAFH,eAGfH,EAASyF,KAAKtF,GAAK,eAHJ,eAIfH,EAAS0F,IAAIvF,GAAK,gBAJH,eAKfH,EAAS2F,KAAKxF,GAAK,aALJ,eAMfH,EAAS4F,KAAKzF,GAAK,uBANJ,eAOfH,EAAS6F,IAAI1F,GAAK,UAPH,GAUL2F,GAAb,kDACEC,MAAO,EADT,KAEEC,OAA6B,CAC3BC,IAAKC,SAHT,0CAME,SAAMvD,EAAmBwD,GACvB,OAAIxD,IAAc3C,EAASO,KAAKJ,GAAYgG,EAA2BC,QACnEzD,IAAc3C,EAASE,IAAIC,GAAYgG,EAAyBE,OAC7DF,EAAMG,UATjB,2BAYE,SAAc3D,EAAmBwD,EAAcI,GAC7CC,KAAKR,OAAOQ,KAAKC,MAAM9D,EAAWwD,IAAUI,IAbhD,sEAgBE,WAAc5D,EAAmBwD,EAAcO,GAA/C,oFACQvG,EAAKqG,KAAKC,MAAM9D,EAAWwD,GAE5BK,KAAKR,OAAO7F,KAAOqG,KAAKR,OAAO7F,GAAIwG,SAH1C,mBAIQhE,IAAc3C,EAASO,KAAKJ,GAJpC,gCAI8CqG,KAAKI,kBAAkB,CAACzG,IAJtE,6CAKeqG,KAAKK,YAAYlE,EAAW,CAACxC,IAL5C,UAQOqG,KAAKR,OAAO7F,GARnB,wBASIY,QAAQC,IAAR,uBAA4BmF,EAAM/F,KAAlC,YAA0C+F,EAAMG,QAAhD,uBAAsEI,EAAOI,WAA7E,eAA8FnE,IATlG,kBAUWoE,QAVX,iCAaSL,EAAOM,IAAIR,KAAKR,OAAO7F,IAAK8G,IAAIf,UAbzC,iDAhBF,gIAgCE,WAAagB,GAAb,gGACMV,KAAKT,KADX,wDAEES,KAAKT,MAAO,EACNoB,EAAYtH,IAAEuH,QAAQF,GAAW,SAACnC,GAAD,OAAOA,EAAEsC,aAAalH,MAC7DY,QAAQC,IAAI,wBAAyBmG,GAE/BG,EAAmBzH,IAAEsH,GACxBI,OACAC,QAAO,SAACrH,GAAD,OAAQ6E,SAAS7E,GAAM,KAC9B+E,KAAI,SAAC/E,GAAD,OACH,EAAK0G,YACH1G,EACAN,IAAEsH,EAAUhH,IACT+E,KAAI,SAACH,GAAD,OAAOA,EAAE0C,YAAYC,OAAO3C,EAAE4C,sBAClCC,UACA1C,KAAI,SAAC2C,GAAD,OAAOA,EAAEvB,WACbwB,OACAlD,YAGNA,QAEGmD,EAAcvB,KAAKI,kBACvB/G,IAAEsH,EAAUnH,EAASO,KAAKJ,KACvB+E,KAAI,SAACH,GAAD,OAAOA,EAAE0C,YAAYC,OAAO3C,EAAE4C,sBAClCC,UACA1C,KAAI,SAAC2C,GAAD,OAAQA,EAAUzB,WACtB0B,OACAlD,SA5BP,SA+BQoD,QAAQC,IAAR,uBAAgBX,GAAhB,CAAkCS,KA/B1C,gDAhCF,iIAqEE,WAAkBpF,EAA4BuF,GAA9C,6FACMrI,IAAEsI,QAAQD,GADhB,yCACmC,IADnC,cAEEnH,QAAQC,IAAI,cAAekH,GAF7B,SAKUE,EAAcvI,IAAEoB,KAAKqE,IAAc,SAAC+C,EAAGC,GAAJ,OAAUA,IAAM3F,EAAUmE,cAC7DyB,EANV,8DAMuEH,EANvE,+BAMyGF,EAAUM,KAAK,KANxH,+BAO2BC,MAAMF,GAPjC,cAOUG,EAPV,iBAQwBA,EAASC,OARjC,eAQUA,EARV,OAUUC,EAAS/I,IAAE8I,GACdE,SAAQ,SAACR,EAAGC,GAAJ,OAAUQ,iBAAOnF,MAAMoF,kBAAkBT,MACjDU,WAAU,SAACX,GAAD,OAAOY,eAAKZ,EAAEa,QACxBtE,QAbP,kBAeW4B,KAAK2C,cAAcjB,EAAWU,IAfzC,2DAiBW,IAjBX,0DArEF,yIA6FE,WAAwBQ,GAAxB,2FACMvJ,IAAEsI,QAAQiB,GADhB,yCACkC,IADlC,cAEErI,QAAQC,IAAI,oBAAqBoI,GAFnC,SAKUC,EAAO,CACXC,UAAWzJ,IAAEgJ,QAAQO,GAAU,SAACjJ,EAAIoJ,GAAL,qBAAmBA,MAClDC,MAAM,UAAD,OAAY3J,IAAEqF,IAAIkE,GAAU,SAACjJ,EAAIoJ,GAAL,sBAAoBA,EAApB,gBAAkCf,KAAK,MAAnE,8BACG3I,IAAEqF,IAAIkE,GAAU,SAACjJ,EAAIoJ,GAAL,qBAAmBA,EAAnB,6CAAyDA,EAAzD,QAA+Df,KAAK,MADvF,oBAPX,SAY2BC,MAAM,uCAAwC,CACnEgB,QAAS,CACP,eAAgB,oBAElBJ,KAAMK,KAAKC,UAAUN,GACrBnG,OAAQ,SAjBd,cAYUwF,EAZV,iBAmBuBA,EAASC,OAnBhC,eAmBUA,EAnBV,OAqBUC,EAAS/I,IAAE8I,EAAKiB,MACnBf,SAAQ,SAACR,EAAGC,GAAJ,OAAUe,EAAKC,UAAUhB,MACjCU,WAAU,SAACX,GAAD,OAAOY,eAAKZ,MACtBzD,QAxBP,kBA0BW4B,KAAK2C,cAAcC,EAAUR,IA1BxC,2DA4BW,IA5BX,0DA7FF,kFA6HE,SAAciB,EAAaC,GACzB,GAAIjK,IAAEsI,QAAQ2B,GAAU,MAAM,IAAIrG,MAAJ,uBAA0BoG,IACxD,OAAOhK,IAAEC,MAAM0G,KAAKR,OAAQ8D,OA/HhC,KFXMC,GAAW,I,YAGR,IAAMC,EAAM,SAAG,IAAIlE,GA8B1B,SAASmE,EAAgBzI,EAAc8E,GACrC,IACE,OAAO9E,EAAK0I,WAAW,UAAY5D,EAAQ4D,WAAW,QACtD,MAAOC,GACP,OAAO,G,WAhCJ,SAAkBC,GACvBvK,IAAEC,MAAMiK,GAAUK,I,WAGb,WACL,OAAOvK,IAAE0H,KAAKwC,K,SAGT,SAAgBM,GACrB,OAAKN,GAASM,EAAK7I,OAEd6I,EAAKlK,KAAIkK,EAAKlK,GAAKN,IAAEyK,SAASD,EAAK7I,KAAO,IAAM6I,EAAK/D,QAAU,IAAM+D,EAAKjK,KAAO,MAE/E2J,GAASM,EAAK7I,MAAM6I,EAAML,IAJA,M,aAO5B,SAAoBjF,EAAewF,GACxC,OAAOxF,EAAEsC,aAAalH,KAAOoK,EAAQpK,IAAM4E,EAAEsC,aAAalH,GAAK,G,gBAG1D,SAAuBmG,GAAkB,IAAD,IAC7C,OAAW,QAAJ,EAAAwC,wBAAA,mBAAQnF,aAAR,eAAeO,UAAUoC,KAAY2D,EAAgB,QAAS3D,I,cAGhE,SAAqB9E,EAAc8E,GAAkB,IAAD,IACzD,QAAU9E,KAAa,QAAJ,EAAAsH,wBAAA,mBAAQnF,aAAR,eAAeO,UAAUoC,KAAY2D,EAAgBzI,EAAM8E,IAWhF,SAA0B9E,EAAc8E,GACtC,IACE,OAAO9E,EAAK0I,WAAW,qBAAuBrK,IAAE2K,KAAKlE,GAASmE,OAAS,EACvE,MAAON,GACP,OAAO,GAfiFO,CAAiBlJ,EAAM8E,KAmBnH,SAA0B9E,EAAc8E,GACtC,IACE,OAAO9E,EAAK0I,WAAW,cAAgBrK,IAAE2K,KAAKlE,GAASmE,OAAS,GAAKnE,EAAQ4D,WAAW,OACxF,MAAOC,GACP,OAAO,GAvBsHQ,CAAiBnJ,EAAM8E,I,CA5BzIsE,M,SGAV,GCqCKC,GCnCL,G,0CFCE,WAWLD,EAAgBE,SAAS,CACvB,gCAAiC,SAACT,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQpK,SAAO4F,IAAIwF,OAAQpL,SAAO4F,IAAIyF,OAXhFC,gBAAwB,2BAA4B,6CAA8CC,EAAQ,KAWH,IAC/H,gCAAiC,SAACd,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQpK,SAAO4F,IAAI4F,OAAQxL,SAAO4F,IAAIyF,OAVhFC,gBAAwB,2BAA4B,6CAA8CC,EAAQ,KAUH,IAC/H,gCAAiC,SAACd,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQpK,SAAO4F,IAAI6F,OAAQzL,SAAO4F,IAAIyF,OAZhFC,gBAAwB,2BAA4B,6CAA8CC,EAAQ,KAYH,KAC/H,+BAAgC,SAACd,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQpK,SAAO4F,IAAI8F,MAAO1L,SAAO4F,IAAIyF,OAV/EC,gBAAwB,0BAA2B,6CAA8CC,EAAQ,KAUJ,IAC5H,+BAAgC,SAACd,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQpK,SAAO4F,IAAI+F,MAAO3L,SAAO4F,IAAIyF,OAV/EC,gBAAwB,0BAA2B,6CAA8CC,EAAQ,KAUJ,IAC5H,gCAAiC,SAACd,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQpK,SAAO4F,IAAIgG,OAAQ5L,SAAO4F,IAAIyF,OAVhFC,gBAAwB,2BAA4B,6CAA8CC,EAAQ,KAUH,IAC/H,gCAAiC,SAACd,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQpK,SAAO4F,IAAIiG,OAAQ7L,SAAO4F,IAAIyF,OAVhFC,gBAAwB,2BAA4B,6CAA8CC,EAAQ,KAUH,KAE/H,+BAAgC,SAACd,EAAML,GAAP,OAAkB,IAAI0B,EAAGrB,EAAML,EAAQpK,SAAO4F,IAAImG,OAAQ/L,SAAO4F,IAAIwF,OAhB5EE,gBAAwB,4BAA6B,6CAA8CC,EAAQ,OAiBpI,8BAA+B,SAACd,EAAML,GAAP,OAAkB,IAAI0B,EAAGrB,EAAML,EAAQkB,gBAAM,MAAO,8CAA+CtL,SAAO4F,IAAI6F,OAZrHH,gBAAwB,2BAA4B,6CAA8CC,EAAQ,U,IAgBhIJ,E,WAiBJ,WACSV,EACAL,EACA4B,EACAC,EACAC,EACAC,GACN,IAAD,iCANO1B,OAMP,KALOL,SAKP,KAJO4B,SAIP,KAHOC,SAGP,KAFOC,UAEP,KADOC,SACP,KAvBFC,WAAaC,mBAAqCd,EAAQ,KAA2C,8CAuBnG,KAtBFe,KAAOtM,SAAO4F,IAAI4F,OAsBhB,KApBFxB,KAAO,CACLuC,KAAM3F,KAAKwF,WAAWI,QAAQ9F,QAC9ByF,OAAQvF,KAAKuF,OACbM,GAAI7F,KAAKsF,QAAQxF,QACjBgG,QAASvF,OACTwF,QAASxF,OACTyF,OAAQzF,OACR0F,OAAQ1F,OACR2F,aAAc3F,OACd4F,YAAa5F,OACb6F,IAAK7F,QAUL,KAEF8F,QAAU,qBAFR,KAIFC,QAAU,kBAAM,EAAKzC,MAJnB,KAMFhD,WAAa,kBAAMrH,EAASwF,KAN1B,KAQFiC,UAAY,iBAAM,CAAC,EAAKmE,OAAQ,EAAKC,SARnC,KAUFlE,gBAAkB,iBAAM,CAAC,EAAKuE,OAV5B,KAYFa,QAAU,kBAAM,EAAKnD,MAZnB,KAcFoD,UAAY,iBAAM,IAdhB,KAgBFC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKtB,OACZlF,OAAQ,EAAKkD,KAAK0C,QAClB1H,MAAO,EAAKgF,KAAK4C,QAEnB,CACEU,MAAO,EAAKrB,OACZnF,OAAQ,EAAKkD,KAAK2C,QAClB3H,MAAO,EAAKgF,KAAK6C,UAzBnB,KA6BFU,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAKhB,KACZxF,OAAQ,EAAKkD,KAAK8C,aAClB9H,MAAO,EAAKgF,KAAK+C,eAjCnB,KAqCFS,OAAS,kBAAM,EAAKxD,KAAKgD,KArCvB,KAiEFS,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKtB,WAAWuB,U,0FA1BvD,0IAC6EvF,QAAQC,IAAI,CACrFzB,KAAKwF,WAAWuB,QAAQC,SAAShH,KAAKuF,OAAQvF,KAAK6D,KAAK/D,SAASmH,OACjEjH,KAAKsF,QAAQyB,QAAQG,cAAcD,OACnCjH,KAAKsF,QAAQyB,QAAQI,SAASF,OAC9BjH,KAAKsF,QAAQyB,QAAQK,cAAcH,OACnCjH,KAAKwF,WAAWuB,QAAQM,YAAYrH,KAAKuF,OAAQvF,KAAK6D,KAAK/D,SAASmH,OACpEjH,KAAKsF,QAAQyB,QAAQO,UAAUtH,KAAKwF,WAAWI,QAAQ9F,SAASmH,SAPpE,0CACSD,EADT,KACmBO,EADnB,KAC6BJ,EAD7B,KACqCC,EADrC,KACkDI,EADlD,KAC2DC,EAD3D,KASUC,EAAyBH,EAAzBG,UAAWC,EAAcJ,EAAdI,UACbC,EAAKT,EAAOU,gBAAkB7H,KAAKoF,OAAOtF,QAAQ+H,cAAgBH,EAAYC,EAC9EG,EAAKF,IAAOF,EAAYC,EAAYD,EACpCK,EAAW7N,aAAG8M,EAAS9G,QAC7BF,KAAKoD,KAAK8C,aAAehM,aAAGsN,GAb9B,UAe4BxH,KAAKoF,OAAO4C,SAAS9N,aAAG0N,GAAIpH,IAAIuH,GAAUtH,IAAIvG,aAAGkN,KAf7E,eAeEpH,KAAKoD,KAAK0C,QAfZ,iBAgB4B9F,KAAKqF,OAAO2C,SAAS9N,aAAG4N,GAAItH,IAAIuH,GAAUtH,IAAIvG,aAAGkN,KAhB7E,eAgBEpH,KAAKoD,KAAK2C,QAhBZ,iBAkBqFvE,QAAQC,IAAI,CAC7FzB,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQpF,KAAKoD,KAAK0C,SACjE9F,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQrF,KAAKoD,KAAK2C,SACjE/F,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAK0F,KAAM1F,KAAKoD,KAAK8C,cAC/DlG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQnL,aAAG4N,GAAII,KAAK,GAAG1H,IAAItG,aAAGuN,IAAWhH,IAAIvG,aAAGkN,OAtBnG,oCAkBGpH,KAAKoD,KAAK4C,OAlBb,KAkBqBhG,KAAKoD,KAAK6C,OAlB/B,KAkBuCjG,KAAKoD,KAAK+C,YAlBjD,KAkB8DnG,KAAKoD,KAAKgD,IAlBxE,sD,iIA4BA,WAAmB1J,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAKwF,WAAWuB,SAAgBrK,GAAjC,qBAA4CmH,IADzD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,GAAtC,0FACQjJ,GAAM,EAAAoF,KAAKwF,WAAWuB,SAAgBrK,GAAjC,qBAA4CmH,IACvD5H,MAAM,YAAD,OAAa+D,KAAKwF,WAAWI,QAAQ9F,QAArC,oBAAwDlF,EAAGuN,cAFlE,SAGQxN,EAAeC,GAAI,GAH3B,gD,+HAMA,wGACQD,EAAeqF,KAAKwF,WAAWuB,QAAQqB,QAAQpI,KAAKuF,OAAQ,IAAI,GADxE,gD,6DAKIL,E,oDACJ,WAAmBrB,EAA2BL,EAA4B4B,EAAsBC,EAAsBC,GAAoC,IAAD,+BACvJ,cAAMzB,EAAML,EAAQ4B,EAAQC,EAAQC,GAAU,IAD7BzB,OAAsI,EAA3GL,SAA2G,EAA/E4B,SAA+E,EAAzDC,SAAyD,EAAnCC,UAAmC,E,0FAIzJ,gIAC8C9D,QAAQC,IAAI,CACtDzB,KAAKoF,OAAO2B,QAAQO,UAAUtH,KAAKsF,QAAQxF,SAASmH,OAAOoB,KAAKrI,KAAKoF,OAAO4C,UAC5EhI,KAAKqF,OAAO0B,QAAQO,UAAUtH,KAAKsF,QAAQxF,SAASmH,OAAOoB,KAAKrI,KAAKqF,OAAO2C,UAC5EhI,KAAKsF,QAAQyB,QAAQK,cAAcH,OAAOoB,KAAKrI,KAAKsF,QAAQ0C,YAJhE,0CACSM,EADT,KACiBC,EADjB,KACyBnB,EADzB,cAMyBpH,KAAKsF,QAAQyB,QAAQO,UAAUtH,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKrI,KAAKsF,QAAQ0C,UANpG,cAMQD,EANR,OAOE/H,KAAKoD,KAAK0C,QAAUwC,EAAO9H,IAAIuH,GAAUtH,IAAI2G,GAC7CpH,KAAKoD,KAAK2C,QAAUwC,EAAO/H,IAAIuH,GAAUtH,IAAI2G,GAR/C,UAW2D5F,QAAQC,IAAI,CACnEzB,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQpF,KAAKoD,KAAK0C,SACjE9F,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQrF,KAAKoD,KAAK2C,SACjE/F,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQkD,GACvDtI,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQkD,KAf3D,oCAWGvI,KAAKoD,KAAK4C,OAXb,KAWqBhG,KAAKoD,KAAK6C,OAX/B,KAWuCuC,EAXvC,KAW6CC,EAX7C,KAiBEzI,KAAKoD,KAAKgD,IAAMoC,EAAKE,IAAID,GAjB3B,iD,2DALelE,G,CAvIFoE,Q,cCqCLtE,O,uBAAAA,I,eAAAA,I,mBAAAA,I,cAAAA,Q,4BClCH,WACLD,EAAgBE,SAAS,CACvB,qBAAsB,SAACT,EAAML,GAAP,OAAkB,IAAIoF,GAAMC,SAAShF,EAAML,IACjE,yBAA0B,SAACK,EAAML,GAAP,OAAkB,IAAIoF,GAAME,aAAajF,EAAML,O,IAOhEqF,E,WAqBX,WAAmBhF,EAA2BL,GAAsB,IAAD,iCAAhDK,OAAgD,KAArBL,SAAqB,KApBnEuF,mBAAqBtG,eAAK,UAoByC,KAlBnEuG,SAAWvD,mBAAsBd,EAAQ,KAA4B3E,KAAK6D,KAAK/D,SAkBZ,KAjBnE4G,MAAQtN,SAAO2F,IAAIkK,OAiBgD,KAhBnEC,YAAcxE,gBAAoB,UAAW,6CAA8CC,EAAQ,MAgBhC,KAfnEwE,KAAOzE,gBAAM,OAAQ,8CAe8C,KAdnE0E,KAAOhQ,SAAO2F,IAAIsK,OAciD,KAZnEjG,KAAO,CACLqC,SAAUzF,KAAKgJ,SAASpD,QAAQ9F,QAChCwJ,aAAc/I,OACdgJ,mBAAoBhJ,OACpBiJ,qBAAsBjJ,OACtBkJ,aAAclJ,OACdmJ,eAAgBnJ,OAChB2F,aAAc3F,OACd4F,YAAa5F,OACb6F,IAAK7F,QAG4D,KAEnE8F,QAAU,qBAFyD,KAoBnEE,QAAU,kBAAM,EAAKnD,MApB8C,KAkCnEqD,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKA,MACZxG,OAAQ,EAAKkD,KAAKmG,mBAAmBI,IAAI,EAAKvG,KAAKqG,cACnDrL,MAAO,EAAKgF,KAAKoG,qBAAqBG,IAAI,EAAKvG,KAAKsG,mBAtCW,KA0CnE/C,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAKwC,YACZhJ,OAAQ,EAAKkD,KAAK8C,aAClB9H,MAAO,EAAKgF,KAAK+C,eA9C8C,KAkDnES,OAAS,kBAAM,EAAKxD,KAAKgD,KAlD0C,KAmEnES,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKkC,SAASjC,U,4CA/DrD,WACE,OAAO/G,KAAK6D,O,wBAGd,WACE,OAAOrK,EAASuF,M,uBAGlB,WACE,MAAO,CAACiB,KAAK0G,S,6BAGf,WACE,MAAO,CAAC1G,KAAKkJ,e,uBAKf,WACE,OAAKlJ,KAAKoD,KAAKkG,aAAanJ,UAAYH,KAAKoD,KAAKkG,aAAaM,GAAG5J,KAAK+I,oBAC9D,CACL,CACEc,SAAUxF,GAASyF,SACnBjN,QAAS,uBAIR,K,mEAqBT,gHACwBmD,KAAKgJ,SAASjC,QAAQgD,kBAAkB9C,OADhE,cACQ+C,EADR,OAEEhK,KAAKoD,KAAKkG,aAAepP,aAAG8P,EAAQV,cACpCtJ,KAAKoD,KAAKmG,mBAAqBrP,aAAG8P,EAAQT,oBAC1CvJ,KAAKoD,KAAKqG,aAAevP,aAAG8P,EAAQP,cAJtC,SAMyCzJ,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoJ,KAAMpJ,KAAKoD,KAAKmG,oBANxG,cAMEvJ,KAAKoD,KAAKoG,qBANZ,iBAOmCxJ,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoJ,KAAMpJ,KAAKoD,KAAKqG,cAPlG,eAOEzJ,KAAKoD,KAAKsG,eAPZ,YAQ2BxP,KAR3B,UAQoC8F,KAAKgJ,SAASjC,QAAQkD,mBAAmBhD,OAR7E,2BAQEjH,KAAKoD,KAAK8C,cARZ,wBASgClG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKmJ,KAAMnJ,KAAKoD,KAAK8C,cAT/F,eASElG,KAAKoD,KAAK+C,YATZ,OAWQ+D,EAASxF,gBAAM,cAAe,8CAXtC,KAYwB1E,KAAKwD,OAZ7B,KAY4CxD,KAAKa,aAAalH,GAZ9D,KAYkEqG,KAAK0G,MAZvE,KAYoFwD,EAZpF,UAY0GA,EAAOnD,QAAQK,cAAcH,OAZvI,0CAY2Fe,SAZ3F,0DAYoCC,QAZpC,kCAYEjI,KAAKoD,KAAKgD,IAZZ,wD,iIAiBA,WAAmB1J,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAKgJ,SAASjC,SAAgBrK,GAA/B,qBAA0CmH,IADvD,KAEejJ,EAFf,SAEqCoF,KAAKgJ,SAASjC,QAAQoD,QAAQlD,OAFnE,gCAEyBlM,KAFzB,oBAEkBkM,KAFlB,wG,uIAKA,WAAsBvK,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAKgJ,SAASjC,SAAgBrK,GAA/B,qBAA0CmH,IACrD5H,MAAM,YAAD,OAAa+D,KAAKgJ,SAASpD,QAAQ9F,QAAnC,oBAAsDlF,EAAGuN,cAFhE,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,2FACQF,EAAeqF,KAAKgJ,SAASjC,QAAQqD,sBAAuBvP,GADpE,gD,+EAQWiO,E,WAkBX,WAAmBjF,EAA2BL,GAAsB,IAAD,iCAAhDK,OAAgD,KAArBL,SAAqB,KAjBnE6G,oCAAsC,KAiB6B,KAfnErB,SAAWvD,mBAA0Bd,EAAQ,KAAgC3E,KAAK6D,KAAK/D,SAepB,KAdnE4G,MAAQtN,SAAO2F,IAAIkK,OAcgD,KAbnEC,YAAcxE,gBAAM,OAAQ,8CAauC,KAXnEtB,KAAO,CACLqC,SAAUzF,KAAKgJ,SAASpD,QAAQ9F,QAChCwK,cAAe/J,OACfgK,cAAehK,OACf2F,aAAc3F,OACd4F,YAAa5F,OACbiK,iBAAkBjK,OAClBkK,iBAAkBlK,OAClB6F,IAAK7F,QAG4D,KAEnE8F,QAAU,qBAFyD,KAoBnEE,QAAU,kBAAM,EAAKnD,MApB8C,KAsBnEqD,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKA,MACZxG,OAAQ,EAAKkD,KAAKmH,cAAcZ,IAAI,EAAKvG,KAAKkH,eAC9ClM,MAAO,EAAKgF,KAAKmH,cAAcZ,IAAI,EAAKvG,KAAKkH,kBA1BkB,KA8BnE1D,OAAS,kBAAM,EAAKxD,KAAKgD,KA9B0C,KAgCnEO,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAKwC,YACZhJ,OAAQ,EAAKkD,KAAK8C,aAClB9H,MAAO,EAAKgF,KAAK+C,eApC8C,KA0EnEU,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKkC,SAASjC,U,4CAtErD,WACE,OAAO/G,KAAK6D,O,wBAGd,WACE,OAAOrK,EAASuF,M,uBAGlB,WACE,MAAO,CAACiB,KAAK0G,S,6BAGf,WACE,MAAO,CAAC1G,KAAKkJ,e,uBAuBf,WACE,IAAMwB,EAAe1K,KAAKoD,KAAKmH,cAAcrC,KAAKlI,KAAKqK,qCAAqCM,KAAK,KACjG,OAAK3K,KAAKoD,KAAKqH,iBAAiBtK,UAAYjG,aAAG8F,KAAKoD,KAAKoH,kBAAkBZ,GAAGc,GACrE,CACL,CACEb,SAAUxF,GAASyF,SACnBjN,QAAS,mBAIR,K,mEAGT,qHACQ+N,EAASlG,gBAAyB,kBAAmB,6CAA8CC,EAAQ,MADnH,SAEkGnD,QAAQC,IAAI,CAC1GmJ,EAAO7D,QAAQK,cAAcH,OAC7B2D,EAAO7D,QAAQ8D,sBAAsB5D,OACrC2D,EAAO7D,QAAQ+D,oBAAoB9K,KAAK6D,KAAK/D,SAASmH,OACtDjH,KAAKgJ,SAASjC,QAAQgE,uBAAuB9D,OAC7CjH,KAAKgJ,SAASjC,QAAQ,iBAAiBE,OACvCjH,KAAKgJ,SAASjC,QAAQiE,kCAAkC/D,SAR5D,0CAESG,EAFT,KAEsB6D,EAFtB,KAEoCC,EAFpC,KAEuDZ,EAFvD,KAEsE9C,EAFtE,KAE+E2D,EAF/E,eAWkCnL,KAAK0G,MAAMsB,SAASkD,GAXtD,eAWElL,KAAKoD,KAAKmH,cAXZ,iBAYkCvK,KAAK0G,MAAMsB,SAASsC,GAZtD,eAYEtK,KAAKoD,KAAKkH,cAZZ,OAaEtK,KAAKoD,KAAK8C,aAAehM,aAAGsN,GAb9B,UAcgCxH,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKkJ,YAAalJ,KAAKoD,KAAK8C,cAdtG,eAcElG,KAAKoD,KAAK+C,YAdZ,OAeEnG,KAAKoD,KAAKoH,iBAAmBtQ,aAAGiR,EAAUX,kBAC1CxK,KAAKoD,KAAKqH,iBAAmBvQ,aAAGiR,EAAUV,kBAhB5C,UAkByBG,EAAO5C,SAASZ,GAlBzC,QAkBEpH,KAAKoD,KAAKgD,IAlBZ,OAkBuD5F,IAAI4K,eAAKH,EAAc,KAAKxK,IAAIf,SAlBvF,iD,iIAuBA,WAAmBhD,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAKgJ,SAASjC,SAAgBrK,GAA/B,qBAA0CmH,IADvD,KAEejJ,EAFf,SAEqCoF,KAAKgJ,SAASjC,QAAQoD,QAAQlD,OAFnE,gCAEyBlM,KAFzB,oBAEkBkM,KAFlB,wG,uIAKA,WAAsBvK,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAKgJ,SAASjC,SAAgBrK,GAA/B,qBAA0CmH,IACrD5H,MAAM,YAAD,OAAa+D,KAAKgJ,SAASpD,QAAQ9F,QAAnC,oBAAsDlF,EAAGuN,cAFhE,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,2FACQF,EAAeqF,KAAKgJ,SAASjC,QAAQsE,iCAAkCxQ,GAD/E,gD,gFAjOa+N,Q,SCDV,GCDA,GCDA,G,iCFGE,WACLxE,EAAgBE,SAAS,CACvB,+BAAgC,SAACT,EAAML,GAAP,OAAkB,IAAI8H,EAAYzH,EAAML,EAAQpK,EAAO4F,IAAI4F,SAC3F,+BAAgC,SAACf,EAAML,GAAP,OAAkB,IAAI8H,EAAYzH,EAAML,EAAQpK,EAAO4F,IAAIwF,SAC3F,8BAA+B,SAACX,EAAML,GAAP,OAAkB,IAAI8H,EAAYzH,EAAML,EAAQpK,EAAO4F,IAAIyF,WAE5F,IANyB,eAMhB1B,GACPqB,EAAgBE,SAAhB,mDAC+BvB,EAAI,IAAM,SAACc,EAAML,GAAP,OAAkB,IAAI+H,EAAU1H,EAAML,EAAQT,QAFhFA,EAAI,EAAGA,EAAI,EAAGA,IAAM,EAApBA,IAOX,IAAMyI,EAAO,kBAAM9G,gBAAM,OAAQ,+CAK3B4G,E,WAmBJ,WAAmBzH,EAA2BL,EAA4BkD,GAAe,IAAD,iCAArE7C,OAAqE,KAA1CL,SAA0C,KAAdkD,QAAc,KAlBxF+E,QALwBhG,mBAAyBd,EAAQ,KAA+B,8CAuBA,KAjBxFgB,KALwBF,mBAAyBd,EAAQ,KAA+B,8CAsBA,KAhBxF+G,KAAOF,IAgBiF,KAdxFpI,KAAO,CACLqI,QAASzL,KAAKyL,QAAQ7F,QAAQ9F,QAC9B6F,KAAM3F,KAAK2F,KAAKC,QAAQ9F,QACxBI,OAAQK,OACRnC,MAAOmC,OACPiH,QAASjH,OACToL,aAAcpL,OACdqL,YAAarL,OACbsL,iBAAkBtL,OAClB6F,IAAK7F,OACLuL,QAAS,EACTC,oBAAqB,IAGiE,KAExF1F,QAAU,qBAF8E,KAIxFxF,WAAa,kBAAMrH,EAASwF,KAJ4D,KAMxFsH,QAAU,kBAAM,EAAKzC,MANmE,KAQxF0C,QAAU,kBAAM,EAAKnD,MARmE,KAUxFnC,UAAY,iBAAM,CAAC,EAAKyF,QAVgE,KAYxFvF,gBAAkB,iBAAM,CAAC,EAAKuF,MAAO,EAAKgF,OAZ8C,KAcxFlF,UAAY,iBAAM,IAdsE,KAgBxFI,OAAS,kBAAM,EAAKxD,KAAKgD,KAhB+D,KAkBxFK,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAKA,MAAOxG,OAAQ,EAAKkD,KAAKlD,OAAQ9B,MAAO,EAAKgF,KAAKhF,SAlBI,KAoBxFuI,kBAAoB,iBAAM,CACxB,CAAED,MAAO,EAAKA,MAAOxG,OAAQ,EAAKkD,KAAKoE,QAASpJ,MAAO,EAAKgF,KAAKuI,cACjE,CAAEjF,MAAO,EAAKgF,KAAMxL,OAAQ,EAAKkD,KAAKwI,YAAaxN,MAAO,EAAKgF,KAAKyI,oBAtBkB,KA4DxFhF,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAK2E,QAAQ1E,U,0FAnCpD,4HACsB/G,KAAKgM,YAD3B,cACQC,EADR,OAEEjM,KAAKoD,KAAK0I,QAAUG,EAAMtS,GAC1BqG,KAAKoD,KAAKlD,OAAS+L,EAAMC,UACzBlM,KAAKoD,KAAK2I,oBAAsBE,EAAME,QAJxC,SAM4DnM,KAAKyL,QAAQ1E,QACpEqF,aAAapM,KAAKoD,KAAK0I,QAAS9L,KAAKoD,KAAK2I,qBAC1C9E,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAR5B,uBAMUuM,EANV,EAMUA,mBAAoBC,EAN9B,EAM8BA,oBAG5BtM,KAAKoD,KAAKwI,YAAc1R,aAAGmS,GAC3BrM,KAAKoD,KAAKoE,QAAUtN,aAAGoS,GAVzB,UAasF9K,QAAQC,IAAI,CAC9FzB,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAK0G,MAAO1G,KAAKoD,KAAKlD,QAChEF,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAK0L,KAAM1L,KAAKoD,KAAKwI,aAC/D5L,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAK0G,MAAO1G,KAAKoD,KAAKoE,SAChExH,KAAK2F,KAAKoB,QAAQwF,OAAOvM,KAAK0G,MAAM5G,SAASmH,SAjBjD,oCAaGjH,KAAKoD,KAAKhF,MAbb,KAaoB4B,KAAKoD,KAAKyI,iBAb9B,KAagD7L,KAAKoD,KAAKuI,aAb1D,KAawEa,EAbxE,KAmBUC,EAAYD,EAAZC,QACRzM,KAAKoD,KAAKgD,IAAMlM,aAAGuS,GApBrB,iD,8HAuBA,uIAEKrT,EAAO4F,IAAIyF,OAAO3E,QAAU,CAAEnG,GAAI,IAFvC,eAGKP,EAAO4F,IAAIwF,OAAO1E,QAAU,CAAEnG,GAAI,IAHvC,eAIKP,EAAO4F,IAAI4F,OAAO9E,QAAU,CAAEnG,GAAI,IAH/B+S,EADR,EAMQP,EAAU7J,iBAAOvD,IAAI4N,IAAIC,wBAAwB,eACjDd,EAAUY,EAAgB1M,KAAK0G,MAAM5G,SAASnG,GAPtD,SAQmC6H,QAAQC,IAAI,CAACzB,KAAKyL,QAAQ1E,QAAQ8F,OAAOf,GAAS7E,OAAQjH,KAAKyL,QAAQ1E,QAAQ+F,mBAAmBhB,EAAS9L,KAAK6D,KAAK/D,SAASmH,SARjK,0CAQSgF,EART,KAQgBC,EARhB,oDAScD,GATd,IASqBtS,GAAImS,EAASI,UAAWhS,aAAGgS,GAAYC,aAT5D,iD,iIAcA,WAAmBzP,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAKyL,QAAQ1E,SAAgBrK,GAA9B,qBAAyCmH,IADtD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,GAAtC,0FACQjJ,GAAM,EAAAoF,KAAKyL,QAAQ1E,SAAgBrK,GAA9B,qBAAyCmH,IACpD5H,MAAM,YAAD,OAAa+D,KAAKyL,QAAQ7F,QAAQ9F,QAAlC,oBAAqDlF,EAAGuN,cAF/D,SAGQxN,EAAeC,GAAI,GAH3B,gD,+HAMA,wGACQD,EAAeqF,KAAKyL,QAAQ1E,QAAQqF,aAAapM,KAAKoD,KAAK0I,QAAS9L,KAAKoD,KAAK2I,sBAAsB,GAD5G,gD,6DAKIR,E,WAaJ,WAAmB1H,EAA2BL,EAA4B+B,GAAiB,IAAD,iCAAvE1B,OAAuE,KAA5CL,SAA4C,KAAhB+B,SAAgB,KAZ1FwH,QApGwBtH,mBAA4Bd,EAAQ,KAAkC,8CAgHJ,KAX1F+G,KAAOF,IAWmF,KAT1FpI,KAAO,CACL2J,QAAS/M,KAAK+M,QAAQnH,QAAQ9F,QAC9BI,OAAQK,OACRnC,MAAOmC,OACPyM,cAAezM,OACfoL,aAAcpL,OACd6F,IAAK7F,QAGmF,KAE1F8F,QAAU,qBAFgF,KAI1FxF,WAAa,kBAAMrH,EAASwF,KAJ8D,KAM1FsH,QAAU,kBAAM,EAAKzC,MANqE,KAQ1F0C,QAAU,kBAAM,EAAKnD,MARqE,KAU1FnC,UAAY,iBAAM,CAAC,EAAKyK,OAVkE,KAY1FvK,gBAAkB,iBAAM,CAAC,EAAKuK,OAZ4D,KAc1FlF,UAAY,iBAAM,IAdwE,KAgB1FI,OAAS,kBAAM,EAAKxD,KAAKgD,KAhBiE,KAkB1FK,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAKgF,KAAMxL,OAAQ,EAAKkD,KAAKlD,OAAQ9B,MAAO,EAAKgF,KAAKhF,SAlBO,KAoB1FuI,kBAAoB,iBAAM,CAAC,CAAED,MAAO,EAAKgF,KAAMxL,OAAQ,EAAKkD,KAAK4J,cAAe5O,MAAO,EAAKgF,KAAKuI,gBApBP,KAqC1F9E,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKiG,QAAQhG,U,0FAfpD,0HAC8CvF,QAAQC,IAAI,CACtDzB,KAAK+M,QAAQhG,QAAQkG,aAAajN,KAAKuF,OAAQvF,KAAK6D,KAAK/D,SAASmH,OAClEjH,KAAK+M,QAAQhG,QAAQ6E,YAAY5L,KAAKuF,OAAQvF,KAAK6D,KAAK/D,SAASmH,OACjEjH,KAAK+M,QAAQhG,QAAQmG,SAASlN,KAAKuF,QAAQ0B,SAJ/C,0CACSD,EADT,KACmBQ,EADnB,KAC4B0F,EAD5B,KAMElN,KAAKoD,KAAKlD,OAAShG,aAAG8M,EAAS9G,QAC/BF,KAAKoD,KAAK4J,cAAgB9S,aAAGsN,GAP/B,UAQmEhG,QAAQC,IAAI,CAC3EzB,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAK0L,KAAM1L,KAAKoD,KAAKlD,QAC/DF,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAK0L,KAAM1L,KAAKoD,KAAK4J,eAC/DhN,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAK0L,KAAMxR,aAAGgT,EAAS9F,gBAXrE,oCAQGpH,KAAKoD,KAAKhF,MARb,KAQoB4B,KAAKoD,KAAKuI,aAR9B,KAQ4C3L,KAAKoD,KAAKgD,IARtD,sD,iIAiBA,WAAmB1J,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAK+M,QAAQhG,SAAgBrK,GAA9B,qBAAyCmH,IADtD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,GAAtC,0FACQjJ,GAAM,EAAAoF,KAAK+M,QAAQhG,SAAgBrK,GAA9B,qBAAyCmH,IACpD5H,MAAM,YAAD,OAAa+D,KAAK+M,QAAQnH,QAAQ9F,QAAlC,oBAAqDlF,EAAGuN,cAF/D,SAGQxN,EAAeC,GAAI,GAH3B,gD,+HAMA,4H,8DAnLauS,Q,4BCAR,WACL/I,EAAgBE,SAAS,CACvB,8BAA+B,SAACT,EAAML,GAAP,OAAkB,IAAI4J,GAAOC,UAAUxJ,EAAML,EAAQ4J,GAAOE,WAAWC,WACtG,8BAA+B,SAAC1J,EAAML,GAAP,OAAkB,IAAI4J,GAAOC,UAAUxJ,EAAML,EAAQ4J,GAAOE,WAAWE,cAUnF,aAAG,CACxBD,OAAQ,iBAAO,CACb7G,MAAOhC,gBAAM,gBAAiB,8CAC9BmB,GAAInB,gBAAmB,uBAAwB,6CAA8CC,EAAQ,MACrGY,OAAQ,IAEViI,OAAQ,iBAAO,CACb9G,MAAOhC,gBAAM,iBAAkB,8CAC/BmB,GAAInB,gBAAmB,wBAAyB,6CAA8CC,EAAQ,MACtGY,OAAQ,MATL,IAaM8H,E,WAoBX,WAAmBxJ,EAA2BL,EAA4BiK,GAAqB,IAAD,iCAA3E5J,OAA2E,KAAhDL,SAAgD,KAApBiK,WAAoB,KAnB9FC,MAAQjI,mBAAyBd,EAAQ,KAA+B,8CAmBsB,KAlB9FgJ,KAAOjJ,gBAAM,OAAQ,8CAkByE,KAjB9FkJ,MAAQlJ,gBAAM,QAAS,8CAiBuE,KAhB9F3F,IAAM3F,EAAO2F,IAAIsK,OAgB6E,KAd9FjG,KAAO,CACLsK,MAAO1N,KAAK0N,MAAM9H,QAAQ9F,QAC1B6N,KAAM3N,KAAK2N,KAAK/H,QAAQ9F,QACxB8N,MAAO5N,KAAK4N,MAAMhI,QAAQ9F,QAC1BiI,SAAUxH,OACVsN,YAAatN,OACbuN,UAAWvN,OACXwN,WAAYxN,OACZyN,SAAUzN,OACV2F,aAAc3F,OACd4F,YAAa5F,OACb6F,IAAK7F,QAGuF,KAE9F8F,QAAU,qBAFoF,KAI9FC,QAAU,kBAAM,EAAKzC,MAJyE,KAM9FhD,WAAa,kBAAMrH,EAASuF,KANkE,KAQ9FkC,UAAY,iBAAM,CAAC,EAAKwM,SAAS/G,MAAO,EAAK3H,MARiD,KAU9FoC,gBAAkB,iBAAM,CAAC,EAAKyM,QAVgE,KAY9FrH,QAAU,kBAAM,EAAKnD,MAZyE,KAc9FoD,UAAY,iBAAM,IAd4E,KAgB9FC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAK+G,SAAS/G,MACrBxG,OAAQ,EAAKkD,KAAKyK,YAClBzP,MAAO,EAAKgF,KAAK2K,YAEnB,CACErH,MAAO,EAAK3H,IACZmB,OAAQ,EAAKkD,KAAK0K,UAClB1P,MAAO,EAAKgF,KAAK4K,YAzByE,KA6B9FrH,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAKkH,MACZ1N,OAAQ,EAAKkD,KAAK8C,aAClB9H,MAAO,EAAKgF,KAAK+C,eAjCyE,KAqC9FS,OAAS,kBAAM,EAAKxD,KAAKgD,KArCqE,KAkE9FS,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAK4G,MAAM3G,U,0FA3BlD,0IACwFvF,QAAQC,IAAI,CAChGzB,KAAK0N,MAAM3G,QAAQC,SAAShH,KAAKyN,SAASlI,OAAQvF,KAAK6D,KAAK/D,SAASmH,OACrEjH,KAAKyN,SAAS5H,GAAGkB,QAAQG,cAAcD,OACvCjH,KAAKyN,SAAS5H,GAAGkB,QAAQI,SAASF,OAClCjH,KAAKyN,SAAS5H,GAAGkB,QAAQK,cAAcH,OACvCjH,KAAK0N,MAAM3G,QAAQkH,cAAcjO,KAAKyN,SAASlI,OAAQvF,KAAK6D,KAAK/D,SAASmH,OAC1EjH,KAAK0N,MAAM3G,QAAQmG,SAASlN,KAAKyN,SAASlI,QAAQ0B,OAClDjH,KAAK0N,MAAM3G,QAAQmH,eAAejH,SARtC,0CACSD,EADT,KACmBO,EADnB,KAC6BJ,EAD7B,KACqCC,EADrC,KACkDI,EADlD,KAC2D0F,EAD3D,KACqEiB,EADrE,KAUUzG,EAAyBH,EAAzBG,UAAWC,EAAcJ,EAAdI,UACbC,EAAKT,EAAOU,gBAAkB7H,KAAKyN,SAAS/G,MAAM5G,QAAQ+H,cAAgBH,EAAYC,EACtFG,EAAKF,IAAOF,EAAYC,EAAYD,EAC1C1H,KAAKoD,KAAK2E,SAAW7N,aAAG8M,EAAS9G,QAbnC,UAciCF,KAAK4N,MAAM5F,SAASR,GAdrD,eAcExH,KAAKoD,KAAK8C,aAdZ,iBAgBgClG,KAAKyN,SAAS/G,MAAMsB,SAAS9N,aAAG0N,GAAIpH,IAAIR,KAAKoD,KAAK2E,UAAUtH,IAAIvG,aAAGkN,KAhBnG,eAgBEpH,KAAKoD,KAAKyK,YAhBZ,iBAiB8B7N,KAAKjB,IAAIiJ,SAAS9N,aAAG4N,GAAItH,IAAIR,KAAKoD,KAAK2E,UAAUtH,IAAIvG,aAAGkN,KAjBtF,eAiBEpH,KAAKoD,KAAK0K,UAjBZ,iBAmB2FtM,QAAQC,IAAI,CACnGzB,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKyN,SAAS/G,MAAO1G,KAAKoD,KAAKyK,aACzE7N,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKjB,IAAKiB,KAAKoD,KAAK0K,WAC9D9N,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAK2N,KAAM3N,KAAKoD,KAAK8C,aAAa1F,IAAItG,aAAGiU,IAAY1N,IAAIf,UACnGM,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKjB,IAAK7E,aAAG4N,GAAII,KAAK,GAAG1H,IAAItG,aAAGgT,EAASkB,gBAAgB3N,IAAIvG,aAAGkN,OAvB9G,oCAmBGpH,KAAKoD,KAAK2K,WAnBb,KAmByB/N,KAAKoD,KAAK4K,SAnBnC,KAmB6ChO,KAAKoD,KAAK+C,YAnBvD,KAmBoEnG,KAAKoD,KAAKgD,IAnB9E,sD,iIA6BA,WAAmB1J,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAK0N,MAAM3G,SAAgBrK,GAA5B,qBAAuCmH,IADpD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAK0N,MAAM3G,SAAgBrK,GAA5B,qBAAuCmH,IAClD5H,MAAM,YAAD,OAAa+D,KAAK0N,MAAM9H,QAAQ9F,QAAhC,oBAAmDlF,EAAGuN,cAF7D,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,2FACQF,EAAeqF,KAAK0N,MAAM3G,QAAQqB,QAAQpI,KAAKyN,SAASlI,OAAQ,GAAI1K,GAD5E,gD,6EA9HauS,Q,qBCATiB,E,WASJ,WAAmBxK,EAA2BL,EAA4BrI,EAAyBwE,GAAe,IAAD,iCAA9FkE,OAA8F,KAAnEL,SAAmE,KAAvCrI,UAAuC,KAAdwE,QAAc,KARjHyD,KAAO,CACLxJ,KAAM,GACNsG,OAAQK,OACRnC,MAAOmC,OACP6G,YAAa7G,OACb+N,KAAM/N,QAGyG,KAIjH8F,QAAU,kBAAM,EAAKjD,KAAKxJ,MAJuF,KAMjH0M,QAAU,kBAAM,EAAKzC,MAN4F,KAQjHhD,WAAa,kBAAM,EAAK1F,SARyF,KAUjHoL,QAAU,kBAAM,EAAKnD,MAV4F,KAYjHnC,UAAY,iBAAM,CAAC,EAAKtB,QAZyF,KAcjHwB,gBAAkB,iBAAM,IAdyF,KAgBjHwF,kBAAoB,iBAAM,IAhBuF,KAkBjHH,UAAY,iBAAM,IAlB+F,KA8BjHC,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAK/G,MAAOO,OAAQ,EAAKkD,KAAKlD,OAAQ9B,MAAO,EAAKgF,KAAKhF,SA9B6B,KAgCjHwI,OAAS,kBAAM,EAAKxD,KAAKkL,MAhCwF,KAkCjHzH,mBAAqB,iBAAM,IAjCzBlH,EAAM/F,KAAOiK,EAAKjK,MAAQ+F,EAAM/F,K,0FAmBlC,gHACoE4H,QAAQC,IAAI,CAC5EzB,KAAKL,MAAMoH,QAAQnN,OAAOqN,OAC1BjH,KAAKL,MAAMoH,QAAQO,UAAUtH,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKrI,KAAKL,MAAMqI,UACvEhI,KAAKL,MAAMoH,QAAQK,cAAcH,OAAOoB,KAAKrI,KAAKL,MAAMqI,YAJ5D,0CACGhI,KAAKoD,KAAKxJ,KADb,KACmBoG,KAAKoD,KAAKlD,OAD7B,KACqCF,KAAKoD,KAAKgE,YAD/C,cAM0BpH,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAKL,MAAOK,KAAKoD,KAAKlD,QANrF,cAMEF,KAAKoD,KAAKhF,MANZ,iBAOyB4B,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAKL,MAAOK,KAAKoD,KAAKgE,aAPpF,QAOEpH,KAAKoD,KAAKkL,KAPZ,wD,iIAeA,WAAmB5R,EAAgBmH,GAAnC,+G,uIACA,WAAsBnH,EAAgBmH,EAAgBhJ,GAAtD,+G,iIACA,WAAcA,GAAd,+G,8DAGI0T,EAAe,CACnBxP,IAAK,kBAAM1F,IAAEC,MAAMF,EAAO2F,IAAIsK,OAAQ,CAAEzP,KAAM,SAC9CoF,IAAK,kBAAM3F,IAAEC,MAAMF,EAAO4F,IAAIyF,OAAQ,CAAE7K,KAAM,SAC9CqF,KAAM,kBAAM5F,IAAEC,MAAMF,EAAO6F,KAAKuP,SAAU,CAAE5U,KAAM,WAClDuF,KAAM,kBAAM9F,IAAEC,MAAMF,EAAO+F,KAAKsP,QAAS,CAAE7U,KAAM,UACjDsF,IAAK,kBAAM7F,IAAEC,MAAMF,EAAO8F,IAAImK,OAAQ,CAAEzP,KAAM,UAC9CwF,KAAM,kBAAM/F,IAAEC,MAAMF,EAAOgG,KAAKiK,OAAQ,CAAEzP,KAAM,UAG5C8U,E,+MACJrI,QAAU,kBAAM,EAAK1G,MAAM/F,M,4FAE3B,gHACoD4H,QAAQC,IAAI,CAACa,iBAAOvD,IAAI4P,WAAW3O,KAAK6D,KAAK/D,SAASuI,KAAKnO,MAAK8F,KAAKL,MAAMoH,QAAQK,cAAcH,OAAOoB,KAAKnO,QADjK,0CACG8F,KAAKoD,KAAKlD,OADb,KACqBF,KAAKoD,KAAKgE,YAD/B,cAE0BpH,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAKL,MAAOK,KAAKoD,KAAKlD,QAFrF,cAEEF,KAAKoD,KAAKhF,MAFZ,iBAGyB4B,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAKL,MAAOK,KAAKoD,KAAKgE,aAHpF,QAGEpH,KAAKoD,KAAKkL,KAHZ,wD,2DAH+BD,G,WAU1B,WACLhV,IAAEuV,QAAQpV,GAAU,SAACkB,GACnB,KAAIA,EAAEf,GAAK,GAAX,CACAyK,EAAgBE,SAAhB,0BACM5J,EAAEb,UADR,WAC4B,SAACgK,EAAML,GAAP,OAAkB,IAAI6K,EAAaxK,EAAML,EAAQ9I,EAAGgK,gBAAM,GAAI1H,IAAKG,MAAMoF,kBAAkBsB,EAAKgL,aAG5H,IAAMjS,EAAK2R,EAAqB7T,EAAEb,WAC9B+C,GAAGwH,EAAgBE,SAAhB,0BAA+B5J,EAAEb,UAAjC,eAAyD,SAACgK,EAAML,GAAP,OAAkB,IAAIkL,EAAmB7K,EAAML,EAAQ9I,EAAGkC,c,CA7E/GkS,Q,KCCjB,IAEO,GCJA,GCCA,GCEA,GCHA,GCCA,GCCA,GCDA,GCAA,GCDA,GCCA,GCAA,GCAA,GCFA,GCEA,GCDA,GCAA,GhBEDC,GAAa7U,aAAG,GAAG8U,IAAI9U,aAAG,MAAM+U,KAAK,GAAG3O,Y,uBAGrC,WACL8D,EAAgBE,SAAS,CACvB,4BAA6B,SAACT,EAAML,GAAP,OAAkB,IAAI0L,EAAKrL,EAAML,EAAQhK,EAASuF,IAAK3F,EAAO2F,IAAIoQ,OAAQ/V,EAAO2F,IAAIsK,SAClH,4BAA6B,SAACxF,EAAML,GAAP,OAAkB,IAAI0L,EAAKrL,EAAML,EAAQhK,EAASuF,IAAK3F,EAAO2F,IAAIkK,OAAQ7P,EAAO2F,IAAIsK,SAClH,2BAA4B,SAACxF,EAAML,GAAP,OAAkB,IAAI0L,EAAKrL,EAAML,EAAQhK,EAASuF,IAAK2F,gBAAM,MAAO,8CAA+CtL,EAAO2F,IAAIsK,SAE1J,4BAA6B,SAACxF,EAAML,GAAP,OAAkB,IAAI0L,EAAKrL,EAAML,EAAQhK,EAAS0F,IAAKwF,gBAAM,OAAQ,8CAA+CtL,EAAO8F,IAAImK,SAE5J,8BAA+B,SAACxF,EAAML,GAAP,OAAkB,IAAI0L,EAAKrL,EAAML,EAAQhK,EAASyF,KAAM7F,EAAO6F,KAAKuP,SAAUpV,EAAO6F,KAAKoK,SAEzH,6BAA8B,SAACxF,EAAML,GAAP,OAAkB,IAAI0L,EAAKrL,EAAML,EAAQhK,EAAS4F,KAAMhG,EAAOgG,KAAKiK,OAAQjQ,EAAOgG,KAAK+P,Y,IAIpHD,E,WA0BJ,WAAmBrL,EAA2BL,EAA4BrI,EAAyBgM,EAAsBiI,GAAgB,IAAD,OAEtI,GAFsI,0BAArHvL,OAAqH,KAA1FL,SAA0F,KAA9DrI,UAA8D,KAArCgM,SAAqC,KAAfiI,SAAe,KAzBxIC,QAAU5M,eAAK,KAyByH,KAvBxI6M,mBAAqB7J,mBAA+Bd,EAAQ,KAAqC,8CAuBuC,KArBxIvB,KAAO,CACLmM,WAAYvP,KAAKsP,mBAAmB1J,QAAQ9F,QAC5CnG,GAAI,EACJmM,QAASvF,OACTwF,QAASxF,OACTyF,OAAQzF,OACR0F,OAAQ1F,OACR6F,IAAK7F,OACLiP,WAAYjP,OACZkP,WAAYlP,OACZmP,YAAanP,OACboP,SAAUpP,OACVqP,QAASrP,OACTsP,GAAItP,OACJuP,SAAUvP,OACVwP,SAAUxP,OACVyP,cAAezP,OACf0P,cAAe1P,OACf2P,eAAgB3P,QAGsH,KAKxI8F,QAAU,iBAAM,IALwH,KAMxIxF,WAAa,kBAAM,EAAK1F,SANgH,KAOxImL,QAAU,kBAAM,EAAKzC,MAPmH,KAQxI0C,QAAU,kBAAM,EAAKnD,MARmH,KASxIwD,OAAS,kBAAM,EAAKxD,KAAKgD,KAT+G,KAUxInF,UAAY,iBAAM,CAAC,EAAKkG,OAAQ,EAAKiI,SAVmG,KAWxI3I,WAAa,iBAAM,CACjB,CAAEC,MAAO,EAAKS,OAAQjH,OAAQ,EAAKkD,KAAK0C,QAAS1H,MAAO,EAAKgF,KAAK4C,QAClE,CAAEU,MAAO,EAAK0I,OAAQlP,OAAQ,EAAKkD,KAAK2C,QAAS3H,MAAO,EAAKgF,KAAK6C,UAboE,KAexI9E,gBAAkB,iBAAM,CAAC,EAAKgG,OAAQ,EAAKiI,SAf6F,KAgBxIzI,kBAAoB,iBAAM,CACxB,CAAED,MAAO,EAAKS,OAAQjH,OAAQ,EAAKkD,KAAK0M,SAAU1R,MAAO,EAAKgF,KAAK4M,eACnE,CAAEtJ,MAAO,EAAK0I,OAAQlP,OAAQ,EAAKkD,KAAK2M,SAAU3R,MAAO,EAAKgF,KAAK6M,iBAlBmE,KAoBxIzJ,UAAY,WACV,OAAI,EAAKpD,KAAK4C,OAAO7F,UAAY,EAAKiD,KAAK6C,OAAO9F,SACzC,CACL,CACE0J,SAAUxF,GAAS8L,KACnBtT,QAAS,UAGX,EAAKuG,KAAKwM,QAAQQ,GAAG,EAAKhN,KAAK8M,iBAAmB,EAAK9M,KAAKyM,GAAGO,GAAG,EAAKf,SAClE,CACL,CACExF,SAAUxF,GAAS8L,KACnBtT,QAAS,OAGR,IAnC+H,KAwDxIgK,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKwI,mBAAmBvI,UAvD7D/G,KAAKoD,KAAKzJ,GAAK6E,SAASqF,EAAKgL,QAAW,EACpC7O,KAAKoD,KAAKzJ,IAAM,EAAG,MAAM,IAAIsD,MAAM,sB,0FAoCzC,oHACoB+C,KAAKsP,mBAAmBvI,QAAQrG,UAAUV,KAAKoD,KAAKzJ,IAAIsN,OAD5E,UACQoJ,EADR,OAEM/N,iBAAOnF,MAAMoF,kBAAkB8N,EAAIlJ,UAAY7E,iBAAOnF,MAAMoF,kBAAkBvC,KAAKmH,OAAOrH,SAFhG,sBAEgH,IAAI7C,MAAJ,kCAAqCiG,KAAKC,UAAUkN,KAFpK,uBAIoBrQ,KAAKsP,mBAAmBvI,QAAQuJ,kBAAkB,CAACtQ,KAAKoD,KAAKzJ,GAAI0W,EAAIlF,UAAW,EAAG,EAAGoF,eAAatJ,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAJ9I,cAIQ0Q,EAJR,iBAK4BxQ,KAAKmH,OAAOa,SAASwI,EAAI1K,SALrD,eAKE9F,KAAKoD,KAAK0C,QALZ,iBAM4B9F,KAAKoP,OAAOpH,SAASwI,EAAIzK,SANrD,eAME/F,KAAKoD,KAAK2C,QANZ,iBAQ+CvE,QAAQC,IAAI,CACvDzB,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAKmH,OAAQnH,KAAKoD,KAAK0C,SAC5D9F,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAKoP,OAAQpP,KAAKoD,KAAK2C,WAVhE,uCAQG/F,KAAKoD,KAAK4C,OARb,KAQqBhG,KAAKoD,KAAK6C,OAR/B,KAaMjG,KAAKa,aAAalH,KAAOH,EAASuF,IAAIpF,GAb5C,kCAasDqG,KAAKyQ,wBAb3D,YAeMzQ,KAAKoD,KAAKgD,IAAIjG,SAfpB,kCAeoCH,KAAK0Q,QAAQlS,SAAS6R,EAAIM,MAf9D,iD,iIAoBA,WAAmBjU,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAKsP,mBAAmBvI,SAAgBrK,GAAzC,qBAAoDmH,IADjE,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAKsP,mBAAmBvI,SAAgBrK,GAAzC,qBAAoDmH,IAC/D5H,MAAM,YAAD,OAAa+D,KAAKsP,mBAAmB1J,QAAQ9F,QAA7C,oBAAgElF,EAAGuN,cAF1E,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,2FACQF,EAAeqF,KAAKsP,mBAAmBvI,QAAQ6J,QAAQ,CAAC5Q,KAAKoD,KAAKzJ,GAAIqG,KAAK6D,KAAK/D,QAASiP,GAAYA,KAAclU,GAD3H,gD,2IAIA,8HACyBoH,MAAM,6DAA8D,CACzFgB,QAAS,CACP,eAAgB,oBAElBJ,KAAMK,KAAKC,UAAU,CACnBH,MAAM,gBAAD,OAAkBhD,KAAKoD,KAAKzJ,GAA5B,uRAcP+C,OAAQ,SApBZ,cACQwF,EADR,gBAsBqBA,EAASC,OAtB9B,cAsBQA,EAtBR,OAwBEnC,KAAKoD,KAAKgD,IAAM3D,eAAKN,EAAKiB,KAAKyN,SAASC,KAAKC,qBAC7C/Q,KAAKoD,KAAKoM,WAAa/M,eAAKN,EAAKiB,KAAKyN,SAASG,iBAAiBrH,IAAIlH,eAAKN,EAAKiB,KAAKyN,SAASI,kBAC5FjR,KAAKoD,KAAKqM,WAAahN,eAAKN,EAAKiB,KAAKyN,SAASK,iBAAiBvH,IAAIlH,eAAKN,EAAKiB,KAAKyN,SAASM,kBA1B9F,UA4BmD3P,QAAQC,IAAI,CAC3DzB,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAKmH,OAAQnH,KAAKoD,KAAKoM,YAC5DxP,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAKoP,OAAQpP,KAAKoD,KAAKqM,cA9BhE,2CA4BS2B,EA5BT,KA4B0BC,EA5B1B,KAgCErR,KAAKoD,KAAKsM,YAAc0B,EAAgB1I,IAAI2I,GAC5CrR,KAAKoD,KAAKuM,SAAW3P,KAAKoD,KAAK4C,OAAO0C,IAAI1I,KAAKoD,KAAK6C,QACpDjG,KAAKoD,KAAKwM,QAAU5P,KAAKoD,KAAKsM,YAAY/F,IAAI3J,KAAKoD,KAAKuM,UACxD3P,KAAKoD,KAAKyM,GAAKnQ,QAAMiK,IAAI3J,KAAKoD,KAAKuM,SAASnP,IAAId,SAAOe,IAAIT,KAAKoD,KAAKsM,cAnCvE,UAoCwB1P,KAAKsP,mBAAmBvI,QAAQ6J,QAAQ,CAAC5Q,KAAKoD,KAAKzJ,GAAIqG,KAAK6D,KAAK/D,QAASiP,GAAYA,KAAa9H,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UApClJ,eAoCQ0H,EApCR,iBAqC6BxH,KAAKmH,OAAOa,SAASR,EAAQ1B,SArC1D,eAqCE9F,KAAKoD,KAAK0M,SArCZ,iBAsC6B9P,KAAKoP,OAAOpH,SAASR,EAAQzB,SAtC1D,eAsCE/F,KAAKoD,KAAK2M,SAtCZ,iBAuCkC/P,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKmH,OAAQnH,KAAKoD,KAAK0M,UAvCnG,eAuCE9P,KAAKoD,KAAK4M,cAvCZ,iBAwCkChQ,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoP,OAAQpP,KAAKoD,KAAK2M,UAxCnG,eAwCE/P,KAAKoD,KAAK6M,cAxCZ,iBAyCgCjQ,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKmH,OAAQ1E,eAAKN,EAAKiB,KAAKyN,SAASS,sBAzC/G,eAyCQC,EAzCR,iBA0CgCvR,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoP,OAAQ3M,eAAKN,EAAKiB,KAAKyN,SAASW,sBA1C/G,QA0CQC,EA1CR,OA4CEzR,KAAKoD,KAAK8M,eAAiBlQ,KAAKoD,KAAK4M,cAActH,IAAI1I,KAAKoD,KAAK6M,eAAevH,IAAI6I,GAAiB7I,IAAI+I,GA5C3G,iD,4HA+CA,WAAcd,GAAd,+GACkBlL,WADlB,KACgDd,EAAQ,KADxD,SACkG3E,KAAKsP,mBAAmBvI,QAAQ2K,UAAUzK,OAD5I,0BACQyK,GADR,4BAEqBA,EAAQ3K,QAAQ4K,QAAQ3R,KAAKmH,OAAOrH,QAASE,KAAKoP,OAAOtP,QAAS6Q,GAAK1J,OAF5F,cAEQ6J,EAFR,iBAGyBtP,QAAQC,IAAI,CACjCzB,KAAKmH,OAAOJ,QAAQO,UAAUwJ,GAAM7J,OAAOoB,KAAKrI,KAAKmH,OAAOa,UAC5DhI,KAAKoP,OAAOrI,QAAQO,UAAUwJ,GAAM7J,OAAOoB,KAAKrI,KAAKoP,OAAOpH,YALhE,2CAGS4J,EAHT,KAGaC,EAHb,eAOyBrQ,QAAQC,IAAI,CAACzB,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAKmH,OAAQyK,GAAK5R,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAKoP,OAAQyC,KAP/I,oCAOSC,EAPT,KAOaC,EAPb,KAQE/R,KAAKoD,KAAKgD,IAAM0L,EAAGpJ,IAAIqJ,GARzB,iD,+DAjKaC,Q,4BCHR,WACL5N,EAAgBE,SAAS,CACvB,mBAAoB,SAACT,EAAML,GAAP,OAAkB,IAAIyO,EAAcpO,EAAML,O,IAM5DyO,E,WAOJ,WAAmBpO,EAA2BL,GAAsB,IAAD,OACjE,GADiE,0BAAhDK,OAAgD,KAArBL,SAAqB,KANnE7D,WAMmE,OALnEyD,KAAO,CACLlD,OAAQK,OACRnC,MAAOmC,QAG0D,KAOnE8F,QAAU,oCAAkB,EAAK1G,MAAM/F,OAP4B,KASnE0M,QAAU,kBAAM,EAAKzC,MAT8C,KAWnEhD,WAAa,kBAAMrH,EAASE,KAXuC,KAanE6M,QAAU,kBAAM,EAAKnD,MAb8C,KAenEnC,UAAY,iBAAM,CAAC,EAAKtB,QAf2C,KAiBnEwB,gBAAkB,iBAAM,IAjB2C,KAmBnEwF,kBAAoB,iBAAM,IAnByC,KAqBnEH,UAAY,iBAAM,IArBiD,KA2BnEC,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAK/G,MAAOO,OAAQ,EAAKkD,KAAKlD,OAAQ9B,MAAO,EAAKgF,KAAKhF,SA3BjB,KA6BnEwI,OAAS,kBAAMrG,QA7BoD,KA+BnEsG,mBAAqB,iBAAM,KA9BpBhD,EAAKgL,MAAO,MAAM,IAAI5R,MAAM,yBACjC,IAAK4G,EAAK/D,QAAS,MAAM,IAAI7C,MAAM,2BACnC+C,KAAKL,MAAQtG,IAAEC,MAAMoL,gBAAMb,EAAK/D,QAASoS,eAAc,CAAErS,OAAQgE,EAAK/D,UACtEE,KAAKoD,KAAKlD,OAASuC,eAAKoB,EAAKgL,O,0FAmB/B,wGAC0B7O,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKL,MAAOK,KAAKoD,KAAKlD,QAD1F,OACEF,KAAKoD,KAAKhF,MADZ,uD,iIAUA,WAAmB1B,EAAgBmH,GAAnC,+G,uIAEA,WAAsBnH,EAAgBmH,EAAgBhJ,GAAtD,+G,iIAEA,WAAcA,GAAd,+G,+DArDasX,Q,4BCER,WACL/N,EAAgBE,SAAS,CACvB,8BAA+B,SAACT,EAAML,GAAP,OAAkB,IAAI4O,EAAIvO,EAAML,EAAQpK,EAAO+F,KAAKkT,QAASjZ,EAAO+F,KAAKsP,UACxG,8BAA+B,SAAC5K,EAAML,GAAP,OAAkB,IAAI4O,EAAIvO,EAAML,EAAQpK,EAAO+F,KAAKmT,QAASlZ,EAAO+F,KAAKsP,a,IAItG2D,E,WA0BJ,WAAmBvO,EAA2BL,EAA4B2D,EAAsBiI,GAAgB,IAAD,OAE7G,GAF6G,0BAA5FvL,OAA4F,KAAjEL,SAAiE,KAArC2D,SAAqC,KAAfiI,SAAe,KAzB/GmD,gBAAkB9M,mBAA6Bd,EAAQ,KAAmC,8CAyBqB,KAxB/G6N,iBAwB+G,gBAvB5GhZ,EAAS2F,KAAKxF,GAAK,KAuByF,KApB/GyJ,KAAO,CACLqC,SAAUzF,KAAKuS,gBAAgB3M,QAAQ9F,QACvCnG,GAAI,EACJ8Y,QAASlS,OACTmS,QAASnS,OACToS,QAASpS,OACTqS,QAASrS,OACTuF,QAASvF,OACTwF,QAASxF,OACTyF,OAAQzF,OACR0F,OAAQ1F,OACRiH,QAASjH,OACToL,aAAcpL,OACd6F,IAAK7F,OACLmP,YAAanP,OACbsS,SAAUtS,OACVsP,GAAItP,OACJuS,UAAWvS,QAGkG,KAK/G8F,QAAU,iBAAM,IAL+F,KAM/GxF,WAAa,kBAAMrH,EAAS2F,MANmF,KAO/GmH,QAAU,kBAAM,EAAKzC,MAP0F,KAQ/G0C,QAAU,kBAAM,EAAKnD,MAR0F,KAS/GwD,OAAS,kBAAM,EAAKxD,KAAKgD,KATsF,KAU/GnF,UAAY,iBAAM,CAAC,EAAKkG,OAAQ,EAAKiI,SAV0E,KAW/G3I,WAAa,iBAAM,CACjB,CAAEC,MAAO,EAAKS,OAAQjH,OAAQ,EAAKkD,KAAK0C,QAAS1H,MAAO,EAAKgF,KAAK4C,QAClE,CAAEU,MAAO,EAAK0I,OAAQlP,OAAQ,EAAKkD,KAAK2C,QAAS3H,MAAO,EAAKgF,KAAK6C,UAb2C,KAe/G9E,gBAAkB,iBAAM,IAfuF,KAgB/GwF,kBAAoB,iBAAM,IAhBqF,KAiB/GH,UAAY,iBAAM,IAjB6F,KAmJ/GK,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKyL,gBAAgBxL,UAlJ1D/G,KAAKoD,KAAKzJ,GAAK6E,SAASqF,EAAKgL,QACxB7O,KAAKoD,KAAKzJ,GAAI,MAAM,IAAIsD,MAAM,4B,0FAiBrC,oIACoB+C,KAAKuS,gBAAgBxL,QAAQgM,gBAAgB/S,KAAKoD,KAAKzJ,IAAIsN,OAD/E,cACQoJ,EADR,OAEQ2C,EAAa9Y,aAAGmW,EAAI4C,gBACpBC,EAAU,CACd,CACE7P,OAAQ,CAAC,CAAE8P,aAAc,UAAWvZ,KAAM,KAAMoB,KAAM,YACtDpB,KAAM,qBACNwZ,QAAS,CAAC,CAAED,aAAc,UAAWvZ,KAAM,GAAIoB,KAAM,YACrDqY,gBAAiB,OACjBrY,KAAM,aAGJsY,EAAM7N,mBAASyN,EAAS7C,EAAIkD,WAZpC,KAakB7O,QAblB,SAakC4O,EAAIvM,QAAQyM,mBAAmBnD,EAAIoD,QAAQxM,OAb7E,0BAaQ3B,GAbR,QAawB,GAbxB,gBAcyBA,EAAQyB,QAAQK,cAAcH,OAAOoB,KAAKnO,MAdnE,eAcQwZ,EAdR,OAeQC,EAAQX,EAAWxS,IAAId,SAAOe,IAAIiT,GAf1C,UAgBuB1T,KAAKmH,OAAOJ,QAAQO,UAAUhC,EAAQxF,SAASmH,OAAOoB,KAAKrI,KAAKmH,OAAOa,UAhB9F,eAgBQM,EAhBR,iBAiBuBtI,KAAKoP,OAAOrI,QAAQO,UAAUhC,EAAQxF,SAASmH,OAAOoB,KAAKrI,KAAKoP,OAAOpH,UAjB9F,eAiBQO,EAjBR,OAkBEvI,KAAKoD,KAAKqP,QAAUnK,EAAO9H,IAAImT,GAAOlT,IAAIf,SAC1CM,KAAKoD,KAAKsP,QAAUnK,EAAO/H,IAAImT,GAAOlT,IAAIf,SAnB5C,UAqBsBM,KAAKuS,gBAAgBxL,QAAQ6M,iBAAiB5T,KAAKoD,KAAKzJ,IAAIsN,OArBlF,eAqBQ4M,EArBR,iBAsB4B7T,KAAKmH,OAAOa,SAAS6L,EAAMA,MAAMxa,IAAEya,QAAQD,EAAMtH,OAAQvM,KAAKmH,OAAOrH,WAtBjG,eAsBEE,KAAKoD,KAAKuP,QAtBZ,iBAuB4B3S,KAAKoP,OAAOpH,SAAS6L,EAAMA,MAAMxa,IAAEya,QAAQD,EAAMtH,OAAQvM,KAAKoP,OAAOtP,WAvBjG,eAuBEE,KAAKoD,KAAKwP,QAvBZ,OAyBE5S,KAAKoD,KAAK0C,QAAU9F,KAAKoD,KAAKqP,QAAQ9I,IAAI3J,KAAKoD,KAAKuP,SACpD3S,KAAKoD,KAAK2C,QAAU/F,KAAKoD,KAAKsP,QAAQ/I,IAAI3J,KAAKoD,KAAKwP,SA1BtD,UA2B2B5S,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKmH,OAAQnH,KAAKoD,KAAK0C,SA3B5F,eA2BE9F,KAAKoD,KAAK4C,OA3BZ,iBA4B2BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoP,OAAQpP,KAAKoD,KAAK2C,SA5B5F,eA4BE/F,KAAKoD,KAAK6C,OA5BZ,iBA8B4BjG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKmH,OAAQmB,GA9BnF,eA8BQyL,EA9BR,iBA+B4B/T,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoP,OAAQ7G,GA/BnF,QA+BQyL,EA/BR,OAgCEhU,KAAKoD,KAAKgD,IAAM2N,EAAYrL,IAAIsL,GAhClC,iD,iIAiIA,WAAmBtX,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAKuS,gBAAgBxL,SAAgBrK,GAAtC,qBAAiDmH,IAD9D,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAKuS,gBAAgBxL,SAAgBrK,GAAtC,qBAAiDmH,IAC5D5H,MAAM,YAAD,OAAa+D,KAAKuS,gBAAgB3M,QAAQ9F,QAA1C,oBAA6DlF,EAAGuN,cAFvE,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,+G,+DAjMaoZ,Q,kCCGR,WACL7P,EAAgBE,SAAS,CACvB,wBAAyB,SAACT,EAAML,GAAP,OACvB,IAAIe,EACFV,EACAL,EACAhK,EAASuF,IACT,CAAC3F,EAAO2F,IAAIoQ,OAAQ/V,EAAO2F,IAAIsK,QAC/B,qEACA,+CAGJ,kCAAmC,SAACxF,EAAML,GAAP,OACjC,IAAIe,EACFV,EACAL,EACAhK,EAASyF,KACT,CAAC7F,EAAO6F,KAAKgK,OAAQ7P,EAAO6F,KAAKiV,MAAOxP,gBAAM,MAAO,8CAA+CtL,EAAO6F,KAAKkV,QAChH,uEAEJ,6BAA8B,SAACtQ,EAAML,GAAP,OAC5B,IAAIe,EACFV,EACAL,EACAhK,EAASyF,KACT,CAAC7F,EAAO6F,KAAKuP,SAAU9J,gBAAM,SAAU,+CACvC,qEACA,+CAGJ,6BAA8B,SAACb,EAAML,GAEnC,OADAA,EAAO4Q,cAAc5a,EAAS0F,IAAIvF,GAAI+K,gBAAM,MAAO,8CAA+ChF,SAC3F,IAAI6E,EACTV,EACAL,EACAhK,EAAS0F,IACT,CACEwF,gBAAM,MAAO,8CACbA,gBAAM,OAAQ,8CACdA,gBAAM,OAAQ,+CAEhB,0EAMR,IAAM2P,GAAQ,oBACX7a,EAASuF,IAAIpF,IAAK,kBAAM+K,gBAAM,MAAO,iDAD1B,eAEXlL,EAASyF,KAAKtF,IAAK,kBAAM+K,gBAAM,MAAO,iDAF3B,eAGXlL,EAAS0F,IAAIvF,IAAK,kBAAM+K,gBAAM,MAAO,iDAH1B,GAMR4P,EAAQ,kBAAM7O,mBAA6Bd,EAAQ,KAAmC,+CAEtFJ,E,WAeJ,WAAmBV,EAA2BL,EAA4BrI,EAAyBoR,EAAwBhH,GAAmD,IAAD,OAA3BgP,EAA2B,uDAAJ,GAAI,0BAA1J1Q,OAA0J,KAA/HL,SAA+H,KAAnGrI,UAAmG,KAA1EoR,SAA0E,KAAlDhH,SAAkD,KAA3BgP,eAA2B,KAd7KtI,MAAQqI,IAcqK,KAb7KE,MAAQ/O,mBAA2Bd,EAAQ,KAAiC3E,KAAKuU,cAa4F,KAZ7KE,IAAMJ,EAASrU,KAAK7E,QAAQxB,MAYiJ,KAV7KyJ,KAAO,CACL6I,MAAOjM,KAAKiM,MAAMrG,QAAQ9F,QAC1B0U,MAAOxU,KAAKwU,MAAM5O,QAAQ9F,QAC1B4U,QAAS,GACTC,OAAQ,GACRvO,IAAK7F,OACLiH,QAASjH,OACToL,aAAcpL,QAG6J,KAE7K8F,QAAU,iBAAM,IAF6J,KAG7KxF,WAAa,kBAAM,EAAK1F,SAHqJ,KAI7KmL,QAAU,kBAAM,EAAKzC,MAJwJ,KAK7K0C,QAAU,kBAAM,EAAKnD,MALwJ,KAM7KwD,OAAS,kBAAM,EAAKxD,KAAKgD,KANoJ,KAO7KnF,UAAY,kBAAM,EAAKsL,QAPsJ,KAQ7K9F,WAAa,kBAAMpN,IAAEqF,IAAI,EAAK6N,QAAQ,SAAC7F,EAAO3D,GAAR,MAAe,CAAE2D,QAAOxG,OAAQ,EAAKkD,KAAKsR,QAAQ3R,IAAMxC,OAAMnC,MAAO,EAAKgF,KAAKuR,OAAO5R,IAAMxC,YAR2C,KAS7KY,gBAAkB,iBAAM,CAAC,EAAKsT,MAT+I,KAU7K9N,kBAAoB,iBAAM,CAAC,CAAED,MAAO,EAAK+N,IAAKvU,OAAQ,EAAKkD,KAAKoE,QAASpJ,MAAO,EAAKgF,KAAKuI,gBAVmF,KAW7KnF,UAAY,iBAAM,IAX2J,KAgE7KK,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKmF,MAAMlF,U,0FAnDlD,oIACO/G,KAAKuU,aADZ,gCACuCvU,KAAK4U,eAD5C,+DAGsEpT,QAAQC,IAAI,CAC9EzB,KAAKwU,MAAMzN,QAAQ8N,WAAW5N,OAC9BjH,KAAKwU,MAAMzN,QAAQO,UAAUtH,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKnO,MAC5D8F,KAAKwU,MAAMzN,QAAQK,cAAcH,OAAOoB,KAAKnO,QANjD,0CAGS4a,EAHT,KAGyBC,EAHzB,KAGyCC,EAHzC,eAQwBhV,KAAKwU,MAAMzN,QAC9BkO,iBAAiBjV,KAAK6D,KAAK/D,SAC3BmH,OACAiO,OAAM,kBAAM,EAAKV,MAAMzN,QAAQoO,uBAAuB,EAAKtR,KAAK/D,QAAS,EAAK2U,IAAI3U,SAASmH,UAC3FoB,KAAKnO,MAZV,eAQQsN,EARR,OAcQ4N,EAAM1Q,gBAAM,MAAOoQ,GAd3B,UAekDtT,QAAQC,IAAI,CAAC2T,EAAIrO,QAAQO,UAAUtH,KAAKuU,cAActN,OAAOoB,KAAKnO,MAAKkb,EAAIrO,QAAQK,cAAcH,OAAOoB,KAAKnO,QAf/J,2CAeSmb,EAfT,KAe0BC,EAf1B,KAgBQC,EAAaF,EAAgB7U,IAAIuU,GAAgBtU,IAAIuU,GAhB7D,UAkB2BhV,KAAKiM,MAAMlF,QAAQyO,cAAcxV,KAAKuF,QAAQ0B,OAlBzE,WAkBQwO,EAlBR,OAmBOpc,IAAEqc,MAAM1V,KAAKuM,QAAQ,SAAC3P,EAAGmG,GAAJ,OAAU4S,uBAAa/Y,EAAEgJ,QAAQ9F,QAAS2V,EAAWlJ,OAAOxJ,OAnBxF,uBAmBoG,IAAI9F,MAAJ,iCAnBpG,yBAoB4BuE,QAAQC,IAAIpI,IAAEqF,IAAIsB,KAAKuM,QAAQ,SAAC3P,EAAGmG,GAAJ,OAAUnG,EAAEoL,SAAS9N,aAAGub,EAAWG,SAAS7S,IAAIvC,IAAI+U,GAAY9U,IAAI6U,QApB/H,eAoBEtV,KAAKoD,KAAKsR,QApBZ,iBAqB2BlT,QAAQC,IAAIpI,IAAEqF,IAAIsB,KAAKuM,QAAQ,SAAC3P,EAAGmG,GAAJ,OAAU,EAAKS,OAAOyE,QAAQ,EAAK9M,QAAQxB,GAAIiD,EAAG,EAAKwG,KAAKsR,QAAQ3R,QArB9H,eAqBE/C,KAAKoD,KAAKuR,OArBZ,iBAuB4BnT,QAAQC,IAAIpI,IAAEqF,IAAIsB,KAAKuM,QAAQ,SAAC3P,EAAGmG,GAAJ,OAAUnG,EAAEoL,SAAS9N,aAAGub,EAAWG,SAAS7S,IAAIvC,IAAI6U,GAAiB5U,IAAI6U,QAvBpI,eAuBQO,EAvBR,iBAwB2BrU,QAAQC,IAAIpI,IAAEqF,IAAIsB,KAAKuM,QAAQ,SAAC3P,EAAGmG,GAAJ,OAAU,EAAKS,OAAOyE,QAAQ,EAAK9M,QAAQxB,GAAIiD,EAAGiZ,EAAY9S,QAxBxH,eAwBQ+S,EAxBR,OAyBE9V,KAAKoD,KAAKgD,IAAM0P,EAAWC,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAItN,IAAIxO,aAAG+b,MAAK1V,QAE9DP,KAAKoD,KAAKoE,QAAUA,EA3BtB,UA4BiCxH,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAKyU,IAAKzU,KAAKoD,KAAKoE,SA5B1F,QA4BExH,KAAKoD,KAAKuI,aA5BZ,wD,iIA+BA,+HACcjH,QADd,SAGU1E,KAAKiM,MAAMlF,QACd4K,QAAQ3R,KAAKuF,QACb0B,OACAoB,MAAK,SAAC6N,GAAD,OAAOA,EAAE,MANrB,0BACQd,GADR,QAEI,MAFJ,eAQ2BpV,KAAKiM,MAAMlF,QAAQyO,cAAcxV,KAAKuF,QAAQ0B,OARzE,UAQQwO,EARR,OASOpc,IAAEqc,MAAM1V,KAAKuM,QAAQ,SAAC3P,EAAGmG,GAAJ,OAAU4S,uBAAa/Y,EAAEgJ,QAAQ9F,QAAS2V,EAAWlJ,OAAOxJ,OATxF,uBASoG,IAAI9F,MAAJ,iCATpG,yBAU6CuE,QAAQC,IAAI,CAAC2T,EAAIrO,QAAQO,UAAUtH,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKnO,MAAKkb,EAAIrO,QAAQK,cAAcH,OAAOoB,KAAKnO,QAV1J,2CAUSqb,EAVT,KAUqBD,EAVrB,eAY4B9T,QAAQC,IAAIpI,IAAEqF,IAAIsB,KAAKuM,QAAQ,SAAC3P,EAAGmG,GAAJ,OAAUnG,EAAEoL,SAAS9N,aAAGub,EAAWG,SAAS7S,IAAIvC,IAAI+U,GAAY9U,IAAI6U,QAZ/H,eAYEtV,KAAKoD,KAAKsR,QAZZ,iBAa2BlT,QAAQC,IAAIpI,IAAEqF,IAAIsB,KAAKuM,QAAQ,SAAC3P,EAAGmG,GAAJ,OAAU,EAAKS,OAAOyE,QAAQ,EAAK9M,QAAQxB,GAAIiD,EAAG,EAAKwG,KAAKsR,QAAQ3R,QAb9H,eAaE/C,KAAKoD,KAAKuR,OAbZ,iBAe4BnT,QAAQC,IAAIpI,IAAEqF,IAAIsB,KAAKuM,QAAQ,SAAC3P,EAAGmG,GAAJ,OAAUnG,EAAEoL,SAAS9N,aAAGub,EAAWG,SAAS7S,SAfvG,eAeQ8S,EAfR,iBAgB2BrU,QAAQC,IAAIpI,IAAEqF,IAAIsB,KAAKuM,QAAQ,SAAC3P,EAAGmG,GAAJ,OAAU,EAAKS,OAAOyE,QAAQ,EAAK9M,QAAQxB,GAAIiD,EAAGiZ,EAAY9S,QAhBxH,QAgBQ+S,EAhBR,OAiBE9V,KAAKoD,KAAKgD,IAAM0P,EAAWC,QAAO,SAACC,EAAKC,GAAN,OAAYD,EAAItN,IAAIxO,aAAG+b,MAAK1V,QAjBhE,iD,iIAsBA,WAAmB7D,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAKiM,MAAMlF,SAAgBrK,GAA5B,qBAAuCmH,IADpD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAKiM,MAAMlF,SAAgBrK,GAA5B,qBAAuCmH,IAClD5H,MAAM,YAAD,OAAa+D,KAAKiM,MAAMrG,QAAQ9F,QAAhC,oBAAmDlF,EAAGuN,cAF7D,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,2FACQF,EAAeqF,KAAKwU,MAAMzN,QAAQkO,iBAAiBjV,KAAK6D,KAAK/D,SAAUjF,GAD/E,gD,+DApJasb,Q,iBCAf,IAAM5J,EACE,kBAAM6J,EAAK,QAAS,eAAgB,KADtC7J,EAEE,kBAAM6J,EAAK,OAAQ,cAAe,IAFpC7J,EAGC,kBAAM6J,EAAK,MAAO,aAAc,KAHjC7J,EAKG,kBAAM6J,EAAK,QAAS,eAAgB,KALvC7J,EAOM,kBAAM6J,EAAK,cAAe,iBAAkB,KAPlD7J,EAQO,kBAAM6J,EAAK,eAAgB,kBAAmB,KARrD7J,EAUI,kBAAM6J,EAAK,SAAU,gBAAiB,KAgC1C7R,GA3BqB,iBAAG,CAC5B8R,UAAW,iBAAO,CAChBC,OAAQ,CAAC/J,IAAeA,KACxBuE,KAAM,iEACNyF,KAAM,iEACN1Q,GAAI0G,MAENiK,YAAa,iBAAO,CAClBF,OAAQ,CAAC/J,IAAeA,KACxBuE,KAAM,iEACNyF,KAAM,iEACN1Q,GAAI0G,MAENkK,SAAU,iBAAO,CACfH,OAAQ,CAAC/J,IAAcA,KACvBuE,KAAM,iEACNyF,KAAM,iEACN1Q,GAAI0G,MAENmK,WAAY,iBAAO,CACjBJ,OAAQ,CAAC/J,IAAcA,KACvBuE,KAAM,iEACNyF,KAAM,iEACN1Q,GAAI0G,O,WAqBN,WAAmB1I,EAA2BL,EAA4BiK,GAAqB,IAAD,iCAA3E5J,OAA2E,KAAhDL,SAAgD,KAApBiK,WAAoB,KAhB9FkJ,IAAMpK,IAgBwF,KAd9FnJ,KAAO,CACL0N,KAAM9Q,KAAKyN,SAASqD,KACpByF,KAAMvW,KAAKyN,SAAS8I,KACpB1Q,GAAI7F,KAAKyN,SAAS5H,GAAGjG,QACrBgX,gBAAiBrW,OACjBuF,QAASvF,OACTwF,QAASxF,OACTyF,OAAQzF,OACR0F,OAAQ1F,OACR2F,aAAc3F,OACd4F,YAAa5F,OACb6F,IAAK7F,QAGuF,KAE9F8F,QAAU,qBAFoF,KAI9FC,QAAU,kBAAM,EAAKzC,MAJyE,KAM9FhD,WAAa,kBAAMrH,EAASO,MANkE,KAQ9FkH,UAAY,kBAAM,EAAKwM,SAAS6I,QAR8D,KAU9FnV,gBAAkB,iBAAM,CAAC,EAAKwV,MAVgE,KAY9FpQ,QAAU,kBAAM,EAAKnD,MAZyE,KAc9FoD,UAAY,iBAAM,IAd4E,KAgB9FC,WAAa,kBACX,EAAKxF,YAAYgD,OAAS,EACtB,CACE,CACEyC,MAAO,EAAKzF,YAAY,GACxBf,OAAQ,EAAKkD,KAAK0C,QAClB1H,MAAO,EAAKgF,KAAK4C,QAEnB,CACEU,MAAO,EAAKzF,YAAY,GACxBf,OAAQ,EAAKkD,KAAK2C,QAClB3H,MAAO,EAAKgF,KAAK6C,SAGrB,CACE,CACES,MAAO,EAAKzF,YAAY,GACxBf,OAAQ,EAAKkD,KAAK0C,QAClB1H,MAAO,EAAKgF,KAAK4C,UAlCmE,KAsC9FW,kBAAoB,iBAAM,CAAC,CAAED,MAAO,EAAKiQ,IAAKzW,OAAQ,EAAKkD,KAAK8C,aAAc9H,MAAO,EAAKgF,KAAK+C,eAtCD,KAwC9FS,OAAS,kBAAM,EAAKxD,KAAKgD,KAxCqE,KAgE9FS,mBAAqB,iBAAM,I,0FAtB3B,8IAC2B7G,KAAKiB,YADhC,mBACSmE,EADT,KACiBC,EADjB,cAEsD7D,QAAQC,IAAI,CAACoV,EAAS7W,KAAKyN,SAAS8I,MAAOM,EAAS7W,KAAKyN,SAASqD,MAAOgG,EAAe9W,KAAKyN,SAAS5H,MAF5J,0CAESkR,EAFT,KAEoBC,EAFpB,KAE+BC,EAF/B,KAGQC,EAAgBhd,aAAGb,IAAEoB,KAAKsc,GAAW,SAACpT,GAAD,OAAOA,EAAEwT,kBAAoB,EAAK1J,SAAS5H,GAAGjG,WAAUwX,SAC7FC,EAAend,aAAGb,IAAEoB,KAAKuc,GAAW,SAACpa,GAAD,OAAOA,EAAEua,kBAAoB/R,EAAOxF,WAAUwX,SAClFE,EAAepd,aAAGb,IAAEoB,KAAKuc,GAAW,SAACpa,GAAD,OAAOA,EAAEua,kBAAoB9R,EAAOzF,WAAUwX,SAL1F,UAMiCpX,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIyL,EAAQ8R,EAAc1W,IAAI6W,GAAc5W,IAAIwW,IANvH,eAMQM,EANR,iBAOiCvX,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAI0L,EAAQ6R,EAAc1W,IAAI8W,GAAc7W,IAAIwW,IAPvH,eAOQO,EAPR,OAQExX,KAAKoD,KAAKgD,IAAMmR,EAAiB7O,IAAI8O,GARvC,UAUsBX,EAAS7W,KAAK6D,KAAK/D,SAVzC,WAUQ2X,EAVR,OAWQC,EAAe1X,KAAKyN,SAAS5H,GAAGjG,QAAQ+X,MAAM,KAAK,GACnDC,EAAMve,IAAEoB,KAAKgd,GAAO,SAAC7a,GAAD,OAAOA,EAAEua,gBAAgBzT,WAAWgU,MAZhE,0DAeE1X,KAAKoD,KAAKwT,gBAAkB1c,aAAG0d,EAAKR,SACpCpX,KAAKoD,KAAK0C,QAAU9F,KAAKoD,KAAKwT,gBAAgBpW,IAAI6W,GAAc5W,IAAIwW,GACpEjX,KAAKoD,KAAK2C,QAAU/F,KAAKoD,KAAKwT,gBAAgBpW,IAAI8W,GAAc7W,IAAIwW,GAjBtE,UAkB2BjX,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIyL,EAAQpF,KAAKoD,KAAK0C,SAlBvF,eAkBE9F,KAAKoD,KAAK4C,OAlBZ,iBAmB2BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAI0L,EAAQrF,KAAKoD,KAAK2C,SAnBvF,QAmBE/F,KAAKoD,KAAK6C,OAnBZ,wD,iIAwBA,WAAmBvJ,EAAgBmH,GAAnC,+G,uIAEA,WAAsBnH,EAAgBmH,EAAgBhJ,GAAtD,+G,iIAEA,WAAcA,GAAd,+G,+DAkBIgd,GAfwB,oBAAG,CAC/BC,IAAK,iBAAO,CACVxB,OAAQ,CAAC/J,KACTuE,KAAM,iEACNyF,KAAM,iEACN1Q,GAAI0G,MAENwL,MAAO,iBAAO,CACZzB,OAAQ,CAAC/J,KACTuE,KAAM,iEACNyF,KAAM,iEACN1Q,GAAI0G,O,+MAKNpL,gBAAkB,iBAAM,CAAE,EAAKsM,SAAsB5H,K,EAErDc,kBAAoB,iBAAM,CAAC,CAAED,MAAO,EAAKiQ,IAAKzW,OAAQ,EAAKkD,KAAK8C,aAAc9H,MAAO,EAAKgF,KAAK+C,e,4FAE/F,oHACQO,EAAQ1G,KAAKiB,YAAY,GADjC,SAG0B4V,EAAS7W,KAAKyN,SAAS8I,MAHjD,cAGQQ,EAHR,OAIQiB,EAAmB9d,aAAGb,IAAEoB,KAAKsc,GAAW,SAACpT,GAAD,OAAOA,EAAEwT,kBAAoBzQ,EAAM9G,WAAUwX,SAJ7F,SAKwBpX,KAAKwD,OAAOyE,QAAQzO,EAASO,KAAKJ,GAAI+M,EAAOsR,GALrE,cAKEhY,KAAKoD,KAAKgD,IALZ,iBAOsByQ,EAAS7W,KAAK6D,KAAK/D,SAPzC,WAOQ2X,EAPR,OAQQQ,EAAiB5e,IAAEoB,KAAKgd,GAAO,SAAC9T,GAAD,OAAOA,EAAEuU,UAAY,EAAKzK,SAASqD,KAAKxQ,YAAcqD,EAAEwT,gBAAgBzT,WAAW6I,IAAgB3M,YAR1I,0DAWEI,KAAKoD,KAAK0C,QAAU5L,aAAG+d,EAAeb,QAAQ9W,YAXhD,UAY2BN,KAAKwD,OAAOyE,QAAQzO,EAASO,KAAKJ,GAAI+M,EAAO1G,KAAKoD,KAAK0C,SAZlF,QAYE9F,KAAKoD,KAAK4C,OAZZ,wD,2DALoBzB,IAqBtB,SAAS6R,EAAKxc,EAAcgG,EAAiBuY,GAC3C,IAAM/V,EAASsC,gBAAM9K,EAAMsY,eAI3B,OAHA9P,EAAOgU,MAAO,EACdhU,EAAOxC,QAAUA,EACjBwC,EAAOgW,IAAMD,EACN/V,E,SAGMyU,E,wFAAf,WAAwB/W,GAAxB,mGACyBmC,MAAM,sCAAD,OAAuCnC,EAAvC,UAD9B,cACQoC,EADR,gBAEqBA,EAASC,OAF9B,cAEQA,EAFR,yBAGS9I,IAAEgf,IAAIlW,EAAM,CAAC,OAAQ,SAAU,KAHxC,4C,+BAMe2U,E,wFAAf,WAA8BnX,GAA9B,mGACyBsC,MAAM,kDAAD,OAAmDtC,EAAMC,UADvF,cACQsC,EADR,gBAEqBA,EAASC,OAF9B,cAEQA,EAFR,yBAGSjI,aAAGb,IAAEgf,IAAIlW,EAAM,CAAC,OAAQ,UAAW,OAH5C,4C,iCAMO,WACLiC,EAAgBE,SAAS,CACvB,4BAA6B,SAACT,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQ8U,GAAYC,eAAelC,cACjG,6BAA8B,SAACxS,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQ8U,GAAYC,eAAe/B,gBAClG,2BAA4B,SAAC3S,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQ8U,GAAYC,eAAe9B,aAChG,4BAA6B,SAAC5S,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQ8U,GAAYC,eAAe7B,eACjG,yBAA0B,SAAC7S,EAAML,GAAP,OAAkB,IAAIqU,EAAQhU,EAAML,EAAQ8U,GAAYE,kBAAkBV,QACpG,0BAA2B,SAACjU,EAAML,GAAP,OAAkB,IAAIqU,EAAQhU,EAAML,EAAQ8U,GAAYE,kBAAkBT,a,CAtM1FO,Q,4BCIR,WACLlU,EAAgBE,SAAS,CACvB,gCAAiC,SAACT,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQpK,SAAO+F,KAAKkT,QAASjZ,SAAO+F,KAAKsP,QAAS,KAEpH,8BAA+B,SAAC5K,EAAML,GAAP,OAAkB,IAAI0B,EAAGrB,EAAML,EAN/CkB,gBAAM,OAAQ,8CAMiDtL,SAAO+F,KAAKsP,QAAS,kD,IAIjGlK,E,WAgBJ,WAAmBV,EAA2BL,EAA4B4B,EAAsBC,EAAsBE,GAAiB,IAAD,iCAAnH1B,OAAmH,KAAxFL,SAAwF,KAA5D4B,SAA4D,KAAtCC,SAAsC,KAAhBE,SAAgB,KAftIC,WAAaC,mBAA2Bd,EAAQ,KAAiC,8CAeqD,KAdtI8T,OAAS/T,gBAAM,MAAO,8CAcgH,KAZtItB,KAAO,CACLuC,KAAM3F,KAAKwF,WAAWI,QAAQ9F,QAC9ByF,OAAQvF,KAAKuF,OACbO,QAASvF,OACTwF,QAASxF,OACTyF,OAAQzF,OACR0F,OAAQ1F,OACR2F,aAAc3F,OACd4F,YAAa5F,OACb6F,IAAK7F,QAG+H,KAEtI8F,QAAU,qBAF4H,KAItIC,QAAU,kBAAM,EAAKzC,MAJiH,KAMtIhD,WAAa,kBAAMrH,EAAS2F,MAN0G,KAQtI8B,UAAY,iBAAM,CAAC,EAAKmE,OAAQ,EAAKC,SARiG,KAUtIlE,gBAAkB,iBAAM,CAAC,EAAKsX,SAVwG,KAYtIlS,QAAU,kBAAM,EAAKnD,MAZiH,KActIoD,UAAY,iBAAM,IAdoH,KAgBtIC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKtB,OACZlF,OAAQ,EAAKkD,KAAK0C,QAClB1H,MAAO,EAAKgF,KAAK4C,QAEnB,CACEU,MAAO,EAAKrB,OACZnF,OAAQ,EAAKkD,KAAK2C,QAClB3H,MAAO,EAAKgF,KAAK6C,UAzBiH,KA6BtIU,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAK+R,OACZvY,OAAQ,EAAKkD,KAAK8C,aAClB9H,MAAO,EAAKgF,KAAK+C,eAjCiH,KAqCtIS,OAAS,kBAAM,EAAKxD,KAAKgD,KArC6G,KAuEtIS,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKtB,WAAWuB,U,0FAhCvD,6IAC8CvF,QAAQC,IAAI,CACtDzB,KAAKwF,WAAWuB,QAAQmG,SAASlN,KAAKuF,QAAQ0B,OAC9CjH,KAAKwF,WAAWuB,QAAQC,SAAShH,KAAKuF,OAAQvF,KAAK6D,KAAK/D,SAASmH,OACjEjH,KAAKwF,WAAWuB,QAAQ2R,cAAc1Y,KAAKuF,OAAQvF,KAAK6D,KAAK/D,SAASmH,SAJ1E,0CACSiG,EADT,KACmBlG,EADnB,KAC6BQ,EAD7B,KAMQlC,EAAUZ,gBAAM,KAAMwI,EAAS5H,SANvC,UAO8BA,EAAQyB,QAAQK,cAAcH,OAAOoB,KAAKnO,MAPxE,eAOQye,EAPR,OAQQC,EAAW1e,aAAG8M,EAAS9G,QAR/B,UAS2CsB,QAAQC,IAAI,CACnDzB,KAAKoF,OAAO2B,QACTO,UAAUhC,EAAQM,QAAQ9F,SAC1BmH,OACAoB,MAAK,SAAC6N,GAAD,OAAO,EAAK9Q,OAAO4C,SAASkO,MACpClW,KAAKqF,OAAO0B,QACTO,UAAUhC,EAAQM,QAAQ9F,SAC1BmH,OACAoB,MAAK,SAAC6N,GAAD,OAAO,EAAK7Q,OAAO2C,SAASkO,MACpC5Q,EAAQyB,QAAQO,UAAUtH,KAAKwF,WAAWI,QAAQ9F,SAASmH,OAAOoB,KAAKnO,QAlB3E,2CASSoO,EATT,KASiBC,EATjB,KASyBd,EATzB,KAoBEzH,KAAKoD,KAAK0C,QAAUwC,EAAO9H,IAAIoY,GAAUnY,IAAIkY,GAC7C3Y,KAAKoD,KAAK2C,QAAUwC,EAAO/H,IAAIoY,GAAUnY,IAAIkY,GArB/C,UAsB2B3Y,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQpF,KAAKoD,KAAK0C,SAtB5F,eAsBE9F,KAAKoD,KAAK4C,OAtBZ,iBAuB2BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQrF,KAAKoD,KAAK2C,SAvB5F,eAuBE/F,KAAKoD,KAAK6C,OAvBZ,iBAwByBjG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQkD,EAAO9H,IAAIiH,GAAUhH,IAAIkY,IAxBzG,qCAyBU3Y,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQkD,EAAO/H,IAAIiH,GAAUhH,IAAIkY,IAzB1F,2BAwBE3Y,KAAKoD,KAAKgD,IAxBZ,KAwB0HsC,IAxB1H,0BA4BiC1I,KAAKyY,OAAOzQ,SAASR,EAAQqR,YA5B9D,eA4BE7Y,KAAKoD,KAAK8C,aA5BZ,iBA6BgClG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKyY,OAAQzY,KAAKoD,KAAK8C,cA7BjG,QA6BElG,KAAKoD,KAAK+C,YA7BZ,wD,iIAkCA,WAAmBzJ,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAKwF,WAAWuB,SAAgBrK,GAAjC,qBAA4CmH,IADzD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAKwF,WAAWuB,SAAgBrK,GAAjC,qBAA4CmH,IACvD5H,MAAM,YAAD,OAAa+D,KAAKwF,WAAWI,QAAQ9F,QAArC,oBAAwDlF,EAAGuN,cAFlE,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,2FACQF,EAAeqF,KAAKwF,WAAWuB,QAAQqB,QAAQpI,KAAKuF,OAAQ,GAAI1K,GADxE,gD,8DAKIqK,E,WAYJ,WAAmBrB,EAA2BL,EAA4B4B,EAAsBC,EAAsByT,GAAoB,IAAD,iCAAtHjV,OAAsH,KAA3FL,SAA2F,KAA/D4B,SAA+D,KAAzCC,SAAyC,KAAnByT,YAAmB,KAXzIjT,GAAKnB,gBAAM,cAAe1E,KAAK8Y,WAW0G,KATzI1V,KAAO,CACLyC,GAAI7F,KAAK8Y,UACThT,QAASvF,OACTwF,QAASxF,OACTyF,OAAQzF,OACR0F,OAAQ1F,OACR6F,IAAK7F,QAGkI,KAEzI8F,QAAU,qBAF+H,KAIzIC,QAAU,kBAAM,EAAKzC,MAJoH,KAMzIhD,WAAa,kBAAMrH,EAAS2F,MAN6G,KAQzI8B,UAAY,iBAAM,CAAC,EAAKmE,OAAQ,EAAKC,SARoG,KAUzIlE,gBAAkB,iBAAM,IAViH,KAYzIoF,QAAU,kBAAM,EAAKnD,MAZoH,KAczIoD,UAAY,iBAAM,IAduH,KAgBzIC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKtB,OACZlF,OAAQ,EAAKkD,KAAK0C,QAClB1H,MAAO,EAAKgF,KAAK4C,QAEnB,CACEU,MAAO,EAAKrB,OACZnF,OAAQ,EAAKkD,KAAK2C,QAClB3H,MAAO,EAAKgF,KAAK6C,UAzBoH,KA6BzIU,kBAAoB,iBAAM,IA7B+G,KA+BzIC,OAAS,kBAAM,EAAKxD,KAAKgD,KA/BgH,KAsDzIS,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKjB,GAAGkB,U,0FArB/C,4HACwDvF,QAAQC,IAAI,CAChEzB,KAAKoF,OAAO2B,QAAQO,UAAUtH,KAAK8Y,WAAW7R,OAAOoB,KAAKrI,KAAKoF,OAAO4C,UACtEhI,KAAKqF,OAAO0B,QAAQO,UAAUtH,KAAK8Y,WAAW7R,OAAOoB,KAAKrI,KAAKqF,OAAO2C,UACtEhI,KAAK6F,GAAGkB,QAAQO,UAAUtH,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKrI,KAAK6F,GAAGmC,UACjEhI,KAAK6F,GAAGkB,QAAQK,cAAcH,OAAOoB,KAAKrI,KAAK6F,GAAGmC,YALtD,0CACSM,EADT,KACiBC,EADjB,KACyBqQ,EADzB,KACmCxR,EADnC,KAOEpH,KAAKoD,KAAK0C,QAAUwC,EAAO9H,IAAIoY,GAAUnY,IAAI2G,GAC7CpH,KAAKoD,KAAK2C,QAAUwC,EAAO/H,IAAIoY,GAAUnY,IAAI2G,GAR/C,UAS2BpH,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQpF,KAAKoD,KAAK0C,SAT5F,eASE9F,KAAKoD,KAAK4C,OATZ,iBAU2BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQrF,KAAKoD,KAAK2C,SAV5F,eAUE/F,KAAKoD,KAAK6C,OAVZ,OAWMjG,KAAKoD,KAAK4C,OAAO7F,SAAUH,KAAKoD,KAAK4C,OAAShG,KAAKoD,KAAK6C,OACnDjG,KAAKoD,KAAK6C,OAAO9F,WAAUH,KAAKoD,KAAK6C,OAASjG,KAAKoD,KAAK4C,QAZnE,UAc0BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQkD,GAdjF,eAcMyL,EAdN,iBAe0B/T,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQkD,GAfjF,QAeMyL,EAfN,OAgBMD,EAAY5T,SAAU4T,EAAcC,EAC/BA,EAAY7T,WAAU6T,EAAcD,GAC7C/T,KAAKoD,KAAKgD,IAAM2N,EAAYrL,IAAIsL,GAlBlC,iD,iIAuBA,WAAmBtX,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAK6F,GAAGkB,SAAgBrK,GAAzB,qBAAoCmH,IADjD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAK6F,GAAGkB,SAAgBrK,GAAzB,qBAAoCmH,IAC/C5H,MAAM,YAAD,OAAa+D,KAAK6F,GAAGD,QAAQ9F,QAA7B,oBAAgDlF,EAAGuN,cAF1D,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,+G,+DAnMake,Q,kCCER,WACL3U,EAAgBE,SAAS,CACvB,sBAAuB,SAACT,EAAML,GAAP,OAAkB,IAAIwV,EAAWnV,EAAML,EAAQhK,EAASuF,IAAK3F,EAAO2F,IAAIsK,OAAQ,+CACvG,wBAAyB,SAACxF,EAAML,GAAP,OAAkB,IAAIwV,EAAWnV,EAAML,EAAQhK,EAASuF,IAAK3F,EAAO2F,IAAIsK,OAAQ,+CACzG,uBAAwB,SAACxF,EAAML,GAAP,OAAkB,IAAIwV,EAAWnV,EAAML,EAAQhK,EAASuF,IAAK3F,EAAO2F,IAAIoQ,OAAQ,+CACxG,0BAA2B,SAACtL,EAAML,GAAP,OAAkB,IAAIwV,EAAWnV,EAAML,EAAQhK,EAASuF,IAAK3F,EAAO2F,IAAIkK,OAAQ,+CAE3G,wBAAyB,SAACpF,EAAML,GAAP,OAAkB,IAAIwV,EAAWnV,EAAML,EAAQhK,EAAS2F,KAAM/F,EAAO+F,KAAKsP,QAAS,kDAIhH,IAAMwK,GAAY,oBACfzf,EAASuF,IAAIpF,IAAK,kBAAM+K,gBAAM,MAAO,iDADtB,eAEflL,EAAS2F,KAAKxF,IAAK,kBAAMP,EAAO+F,KAAKsP,WAFtB,GAKZuK,E,WAcJ,WAAmBnV,EAA2BL,EAA4BrI,EAAyBuL,EAAqBwS,GAAuB,IAAD,iCAA3HrV,OAA2H,KAAhGL,SAAgG,KAApErI,UAAoE,KAA3CuL,QAA2C,KAAtBwS,eAAsB,KAb9IC,YAAcF,EAAajZ,KAAK7E,QAAQxB,MAasG,KAZ9IsS,MAAQxG,mBAA8Bd,EAAQ,KAAoC3E,KAAKkZ,cAYuD,KAV9I9V,KAAO,CACL6I,MAAOjM,KAAKkZ,aACZhZ,OAAQK,OACRnC,MAAOmC,OACP6F,IAAK7F,OACL6Y,OAAQ7Y,OACRiH,QAASjH,OACToL,aAAcpL,QAG8H,KAE9I8F,QAAU,iBAAM,IAF8H,KAG9IxF,WAAa,kBAAM,EAAK1F,SAHsH,KAI9ImL,QAAU,kBAAM,EAAKzC,MAJyH,KAK9I0C,QAAU,kBAAM,EAAKnD,MALyH,KAM9IwD,OAAS,kBAAM,EAAKxD,KAAKgD,KANqH,KAO9InF,UAAY,iBAAM,CAAC,EAAKyF,QAPsH,KAQ9ID,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAKA,MAAOxG,OAAQ,EAAKkD,KAAKlD,OAAQ9B,MAAO,EAAKgF,KAAKhF,SAR0D,KAS9I+C,gBAAkB,iBAAM,CAAC,EAAKgY,cATgH,KAU9IxS,kBAAoB,iBAAM,CAAC,CAAED,MAAO,EAAKyS,YAAajZ,OAAQ,EAAKkD,KAAKoE,QAASpJ,MAAO,EAAKgF,KAAKuI,gBAV4C,KAW9InF,UAAY,iBAAM,IAX4H,KAqC9IK,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKmF,MAAMlF,U,0FAxBlD,kIAC6C/G,KAAKiM,MAAMlF,QAAQsS,gBAAgBrZ,KAAK6D,KAAK/D,SAASmH,OADnG,uBACU/G,EADV,EACUA,OAAQoZ,EADlB,EACkBA,iBADlB,SAE2BtZ,KAAK0G,MAAMsB,SAAS9N,aAAGgG,GAAQwI,IAAIxO,aAAGof,KAFjE,UAEEtZ,KAAKoD,KAAKlD,OAFZ,OAKMF,KAAK7E,QAAQxB,KAAOH,EAASuF,IAAIpF,GALvC,6BAMiB8L,WANjB,KAM0Cd,EAAQ,KANlD,UAMuF3E,KAAKiM,MAAMlF,QAAQwS,iBAAiBtS,OAN3H,2BAMUsP,GANV,6BAOqC/U,QAAQC,IAAI,CAAC8U,EAAKxP,QAAQO,UAAUtH,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKnO,MAAK8F,KAAKiM,MAAMlF,QAAQyS,gBAAgBvS,OAAOoB,KAAKnO,QAP5J,2CAOWuf,EAPX,KAOqBC,EAPrB,UAQyB1Z,KAAK0G,MAR9B,KAQ6C+S,EAASjZ,IAAIkZ,GAR1D,UAQ4E1Z,KAAK0G,MAAMxG,OAAO,GAR9F,qCAQkEO,IARlE,+BAQoCuH,SARpC,+BAQU2R,EARV,OASI3Z,KAAKoD,KAAKlD,OAASF,KAAKoD,KAAKlD,OAAOwI,IAAIiR,GAT5C,UAW8BpD,EAAKxP,QAAQkO,iBAAiBjV,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKnO,MAX3F,eAWI8F,KAAKoD,KAAKoE,QAXd,iBAYmCxH,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKmZ,YAAanZ,KAAKoD,KAAKoE,SAZzG,QAYIxH,KAAKoD,KAAKuI,aAZd,gCAe0B3L,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAK0G,MAAO1G,KAAKoD,KAAKlD,QAfrF,eAeEF,KAAKoD,KAAKhF,MAfZ,YAiBsB4B,KAAK0G,MAjB3B,UAiBgD1G,KAAKiM,MAAMlF,QAAQ6S,eAAe3S,OAjBlF,0CAiBiCe,SAjBjC,+BAiBQ6R,EAjBR,iBAkBwB7Z,KAAKwD,OAAOyE,QAAQjI,KAAK7E,QAAQxB,GAAIqG,KAAK0G,MAAOmT,GAlBzE,eAkBE7Z,KAAKoD,KAAKgD,IAlBZ,YAoBwBX,WApBxB,MAoBiCd,EAAQ,KApBzC,UAoB+E3E,KAAKiM,MAAMlF,QAAQ+S,gBAAgB7S,OApBlH,4BAoBQ6S,GApBR,2BAqBqBC,MArBrB,UAqB+BD,EAAc/S,QAAQ,mBAAmBE,OArBxE,qBAqBEjH,KAAKoD,KAAKgW,QArBZ,gBAqBgFlR,KAAK,IArBrF,iD,iIA0BA,WAAmBxL,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAKiM,MAAMlF,SAAgBrK,GAA5B,qBAAuCmH,IADpD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAKiM,MAAMlF,SAAgBrK,GAA5B,qBAAuCmH,IAClD5H,MAAM,YAAD,OAAa+D,KAAKiM,MAAMrG,QAAQ9F,QAAhC,oBAAmDlF,EAAGuN,cAF7D,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,+G,+DAjFamf,Q,4BCAR,WACL5V,EAAgBE,SAAS,CACvB,6BAA8B,SAACT,EAAML,GAAP,OAAkB,IAAIyW,EAAQpW,EAAML,IAClE,kCAAmC,SAACK,EAAML,GAAP,OAAkB,IAAI0W,EAAYrW,EAAML,O,IAIzEyW,E,WAeJ,WAAmBpW,EAA2BL,GAAsB,IAAD,iCAAhDK,OAAgD,KAArBL,SAAqB,KAdnEzE,IAAM3F,EAAO2F,IAAIsK,OAckD,KAbnE8Q,MAAQzV,gBAAM,QAAS,8CAa4C,KAZnEuH,MAAQxG,mBAA8Bd,EAAQ,KAAoC,8CAYf,KAXnEyV,cAAe,EAWoD,KATnEhX,KAAO,CACL6I,MAAOjM,KAAKiM,MAAMrG,QAAQ9F,QAC1BI,OAAQK,OACRnC,MAAOmC,OACPyM,cAAezM,OACfoL,aAAcpL,OACd6F,IAAK7F,QAG4D,KAEnE8F,QAAU,iBAAM,IAFmD,KAGnExF,WAAa,kBAAMrH,EAASuF,KAHuC,KAInEuH,QAAU,kBAAM,EAAKzC,MAJ8C,KAKnE0C,QAAU,kBAAM,EAAKnD,MAL8C,KAMnEwD,OAAS,kBAAM,EAAKxD,KAAKgD,KAN0C,KAOnEnF,UAAY,iBAAM,CAAC,EAAKkZ,QAP2C,KAQnE1T,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAKyT,MAAOja,OAAQ,EAAKkD,KAAKlD,OAAQ9B,MAAO,EAAKgF,KAAKhF,SARjB,KASnE+C,gBAAkB,iBAAM,CAAC,EAAKpC,MATqC,KAUnE4H,kBAAoB,iBAAM,CAAC,CAAED,MAAO,EAAK3H,IAAKmB,OAAQ,EAAKkD,KAAK4J,cAAe5O,MAAO,EAAKgF,KAAKuI,gBAV7B,KAWnEnF,UAAY,iBAAM,IAXiD,KA+BnEK,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKmF,MAAMlF,U,0FAlBlD,8HACmEvF,QAAQC,IAAI,CAC3EzB,KAAKiM,MAAMlF,QAAQsT,4BAA4Bra,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKnO,MAC9E8F,KAAKoa,aAAepa,KAAKiM,MAAMlF,QAAQuT,wBAAwBta,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKnO,MAAMqG,OACpGP,KAAKiM,MAAMlF,QAAQwT,cAActT,OAAOoB,KAAKnO,MAC7C8F,KAAKiM,MAAMlF,QAAQyT,6BAA6BvT,OAAOoB,KAAKnO,QALhE,0CACSugB,EADT,KACsBC,EADtB,KACkCH,EADlC,KAC+CI,EAD/C,KAOE3a,KAAKoD,KAAKlD,OAASua,EACnBza,KAAKoD,KAAK4J,cAAgB0N,EACpBE,EAAYL,EAAY/Z,IAAIma,GAAYla,IAAIf,SATpD,UAWmE8B,QAAQC,IAAI,CAC3EzB,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKma,MAAOna,KAAKoD,KAAKlD,QAChEF,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKjB,IAAKiB,KAAKoD,KAAK4J,eAC9DhN,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKma,MAAOS,KAd1D,oCAWG5a,KAAKoD,KAAKhF,MAXb,KAWoB4B,KAAKoD,KAAKuI,aAX9B,KAW4C3L,KAAKoD,KAAKgD,IAXtD,sD,iIAoBA,WAAmB1J,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAKiM,MAAMlF,SAAgBrK,GAA5B,qBAAuCmH,IADpD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAKiM,MAAMlF,SAAgBrK,GAA5B,qBAAuCmH,IAClD5H,MAAM,YAAD,OAAa+D,KAAKiM,MAAMrG,QAAQ9F,QAAhC,oBAAmDlF,EAAGuN,cAF7D,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,+G,8DAGIqf,E,oDACJ,WAAmBrW,EAA2BL,GAAsB,IAAD,+BACjE,cAAMK,EAAML,IADKK,OAAgD,EAArBL,SAE5C,EAAKyI,MAAQxG,mBAA8Bd,EAAQ,KAAoC,8CACvF,EAAKvB,KAAK6I,MAAQ,EAAKA,MAAMrG,QAAQ9F,QACrC,EAAKsa,cAAe,EAJ6C,E,wBAD3CH,G,CAtEXY,Q,4BCCR,WACLzW,EAAgBE,SAAS,CACvB,8BAA+B,SAACT,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQhK,EAASuF,IAAK3F,SAAO2F,IAAIkK,OAAQ7P,SAAO2F,IAAIsK,OAAQ,IAC5H,gCAAiC,SAACxF,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQhK,EAASyF,KAAM7F,SAAO6F,KAAKoK,OAAQjQ,SAAO6F,KAAKuP,SAAU,O,IAIjIjK,E,WAgBJ,WAAmBV,EAA2BL,EAA4BrI,EAAyBiK,EAAsBC,EAAsBE,GAAiB,IAAD,iCAA5I1B,OAA4I,KAAjHL,SAAiH,KAArFrI,UAAqF,KAA5DiK,SAA4D,KAAtCC,SAAsC,KAAhBE,SAAgB,KAf/JC,WAyGF,SAAyBrK,GACvB,GACO,SADCA,EAAQtB,UAEZ,OAAO4L,mBAA+Bd,EAAQ,KAAqC,8CAGnF,OAAOc,mBAASd,EAAQ,KAAuC,8CA/GtDmW,CAAgB9a,KAAK7E,SAe6H,KAd/Jsd,OAkHF,SAA2Btd,GACzB,GACO,SADCA,EAAQtB,UAEZ,OAAO6K,gBAAM,QAAS,8CAGtB,OAAOA,gBAAM,QAAS,8CAxHjBqW,CAAkB/a,KAAK7E,SAc+H,KAZ/JiI,KAAO,CACLuC,KAAM3F,KAAKwF,WAAWI,QAAQ9F,QAC9ByF,OAAQvF,KAAKuF,OACbO,QAASvF,OACTwF,QAASxF,OACTyF,OAAQzF,OACR0F,OAAQ1F,OACR2F,aAAc3F,OACd4F,YAAa5F,OACb6F,IAAK7F,QAGwJ,KAE/J8F,QAAU,qBAFqJ,KAI/JC,QAAU,kBAAM,EAAKzC,MAJ0I,KAM/JhD,WAAa,kBAAM,EAAK1F,SANuI,KAQ/J8F,UAAY,iBAAM,CAAC,EAAKmE,OAAQ,EAAKC,SAR0H,KAU/JlE,gBAAkB,iBAAM,CAAC,EAAKsX,SAViI,KAY/JlS,QAAU,kBAAM,EAAKnD,MAZ0I,KAc/JoD,UAAY,iBAAM,IAd6I,KAgB/JC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKtB,OACZlF,OAAQ,EAAKkD,KAAK0C,QAClB1H,MAAO,EAAKgF,KAAK4C,QAEnB,CACEU,MAAO,EAAKrB,OACZnF,OAAQ,EAAKkD,KAAK2C,QAClB3H,MAAO,EAAKgF,KAAK6C,UAzB0I,KA6B/JU,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAK+R,OACZvY,OAAQ,EAAKkD,KAAK8C,aAClB9H,MAAO,EAAKgF,KAAK+C,eAjC0I,KAqC/JS,OAAS,kBAAM,EAAKxD,KAAKgD,KArCsI,KAuE/JS,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKtB,WAAWuB,U,0FAhCvD,6IAC8CvF,QAAQC,IAAI,CACtDzB,KAAKwF,WAAWuB,QAAQmG,SAASlN,KAAKuF,QAAQ0B,OAC9CjH,KAAKwF,WAAWuB,QAAQC,SAAShH,KAAKuF,OAAQvF,KAAK6D,KAAK/D,SAASmH,OACjEjH,KAAKwF,WAAWuB,QAAQiU,aAAahb,KAAKuF,OAAQvF,KAAK6D,KAAK/D,SAASmH,SAJzE,sCACSiG,EADT,KACmBlG,EADnB,KAC6BQ,EAD7B,UAMkB9C,QANlB,KAM8BwI,EAAS5H,QANvC,uCAMyDtF,KAAKwF,WAAWuB,QAAQzB,QAAQtF,KAAKuF,QAAQ0B,OANtG,6CAMQ3B,GANR,QAMwB,KANxB,gBAO8BA,EAAQyB,QAAQK,cAAcH,OAAOoB,KAAKnO,MAPxE,eAOQye,EAPR,OAQQC,EAAW1e,aAAG8M,EAAS9G,QAR/B,UAS2CsB,QAAQC,IAAI,CACnDzB,KAAKoF,OAAO2B,QACTO,UAAUhC,EAAQM,QAAQ9F,SAC1BmH,OACAoB,MAAK,SAAC6N,GAAD,OAAO,EAAK9Q,OAAO4C,SAASkO,MACpClW,KAAKqF,OAAO0B,QACTO,UAAUhC,EAAQM,QAAQ9F,SAC1BmH,OACAoB,MAAK,SAAC6N,GAAD,OAAO,EAAK7Q,OAAO2C,SAASkO,MACpC5Q,EAAQyB,QAAQO,UAAUtH,KAAKwF,WAAWI,QAAQ9F,SAASmH,OAAOoB,KAAKnO,QAlB3E,2CASSoO,EATT,KASiBC,EATjB,KASyBd,EATzB,KAoBEzH,KAAKoD,KAAK0C,QAAUwC,EAAO9H,IAAIoY,GAAUnY,IAAIkY,GAC7C3Y,KAAKoD,KAAK2C,QAAUwC,EAAO/H,IAAIoY,GAAUnY,IAAIkY,GArB/C,UAsB2B3Y,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQpF,KAAKoD,KAAK0C,SAtB5F,eAsBE9F,KAAKoD,KAAK4C,OAtBZ,iBAuB2BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQrF,KAAKoD,KAAK2C,SAvB5F,eAuBE/F,KAAKoD,KAAK6C,OAvBZ,iBAwByBjG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQkD,EAAO9H,IAAIiH,GAAUhH,IAAIkY,IAxBzG,qCAyBU3Y,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQkD,EAAO/H,IAAIiH,GAAUhH,IAAIkY,IAzB1F,2BAwBE3Y,KAAKoD,KAAKgD,IAxBZ,KAwB0HsC,IAxB1H,0BA4BiC1I,KAAKyY,OAAOzQ,SAASR,GA5BtD,eA4BExH,KAAKoD,KAAK8C,aA5BZ,iBA6BgClG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKyY,OAAQzY,KAAKoD,KAAK8C,cA7BjG,QA6BElG,KAAKoD,KAAK+C,YA7BZ,wD,iIAkCA,WAAmBzJ,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAKwF,WAAWuB,SAAgBrK,GAAjC,qBAA4CmH,IADzD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAKwF,WAAWuB,SAAgBrK,GAAjC,qBAA4CmH,IACvD5H,MAAM,YAAD,OAAa+D,KAAKwF,WAAWI,QAAQ9F,QAArC,oBAAwDlF,EAAGuN,cAFlE,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,wFACQD,EAAKoF,KAAK7E,QAAQxB,KAAOH,EAASyF,KAAKtF,GAAKqG,KAAKwF,WAAWuB,QAAQqB,QAAQpI,KAAKuF,OAAQ,EAAGvF,KAAK6D,KAAK/D,SAAWE,KAAKwF,WAAWuB,QAAQqB,QAAQpI,KAAKuF,OAAQ,GADtK,SAEQ5K,EAAeC,EAAIC,GAF3B,gD,+DA5GaogB,Q,4BCAR,WACL7W,EAAgBE,SAAS,CACvB,sBAAuB,SAACT,EAAML,GAAP,OAAkB,IAAI0X,GAAKC,WAAWtX,EAAML,O,IAI1D2X,E,WAYX,WAAmBtX,EAA2BL,GAAsB,IAAD,iCAAhDK,OAAgD,KAArBL,SAAqB,KAXnE4X,KAAO1W,gBAAM,OAAQ,8CAW8C,KAVnE2W,MAAQ3W,gBAAM,cAAe,8CAUsC,KARnEtB,KAAO,CACLgY,KAAMpb,KAAKob,KAAKtb,QAChBub,MAAOrb,KAAKqb,MAAMvb,QAClBI,OAAQK,OACRnC,MAAOmC,OACP6F,IAAK7F,QAG4D,KAEnE8F,QAAU,qBAFyD,KAInExF,WAAa,kBAAMrH,EAASuF,KAJuC,KAMnEuH,QAAU,kBAAM,EAAKzC,MAN8C,KAQnE0C,QAAU,kBAAM,EAAKnD,MAR8C,KAUnEnC,UAAY,iBAAM,CAAC,EAAKma,OAV2C,KAYnEja,gBAAkB,iBAAM,CAAC,EAAKka,QAZqC,KAcnEzU,OAAS,kBAAM,EAAKxD,KAAKgD,KAd0C,KAgBnEI,UAAY,iBAAM,IAhBiD,KAkBnEC,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAK0U,KAAMlb,OAAQ,EAAKkD,KAAKlD,OAAQ9B,MAAO,EAAKgF,KAAKhF,SAlBhB,KAoBnEuI,kBAAoB,iBAAM,IApByC,KAkCnEE,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKuU,MAAMtU,U,0FAZlD,sHACwDvF,QAAQC,IAAI,CAChEzB,KAAKqb,MAAMtU,QAAQO,UAAUtH,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKnO,MAC5D8F,KAAKqb,MAAMtU,QAAQK,cAAcH,OAAOoB,KAAKnO,MAC7C8F,KAAKob,KAAKrU,QAAQO,UAAUtH,KAAKqb,MAAMvb,SAASmH,OAAOoB,KAAKnO,QAJhE,0CACSohB,EADT,KACkBC,EADlB,KACoCC,EADpC,KAMExb,KAAKoD,KAAKlD,OAASob,EAAQ9a,IAAIgb,GAAY/a,IAAI8a,GANjD,UAO0Bvb,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKob,KAAMpb,KAAKoD,KAAKlD,QAPzF,eAOEF,KAAKoD,KAAKhF,MAPZ,iBASwB4B,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKob,KAAMI,GAT7E,QASExb,KAAKoD,KAAKgD,IATZ,wD,iIAcA,WAAmB1J,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAKqb,MAAMtU,SAAgBrK,GAA5B,qBAAuCmH,IADpD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAKqb,MAAMtU,SAAgBrK,GAA5B,qBAAuCmH,IAClD5H,MAAM,YAAD,OAAa+D,KAAKqb,MAAMzV,QAAQ9F,QAAhC,oBAAmDlF,EAAGuN,cAF7D,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,+G,8EAlEaqgB,Q,iBCEf,IAAMO,EAAO,kBAAM/W,gBAAM,OAAQ,+C,WAG1B,WACLN,EAAgBE,SAAS,CACvB,gCAAiC,SAACT,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EAAQpK,SAAO6F,KAAKgK,OAAQwS,IAAQ,+CAEtG,+BAAgC,SAAC5X,EAAML,GAAP,OAAkB,IAAI0B,EAAGrB,EAAML,EAAQiY,IANvD/W,gBAAM,QAAS,8CAMyD,+CACxF,8BAA+B,SAACb,EAAML,GAAP,OAC7B,IAAI0B,EAAGrB,EAAML,EAAQiY,IAAQ/W,gBAAM,OAAQ,8CAA+C,kD,IAI1FH,E,WAeJ,WAAmBV,EAA2BL,EAA4B4B,EAAsBC,EAAsBqW,GAAyB,IAAD,iCAA3H7X,OAA2H,KAAhGL,SAAgG,KAApE4B,SAAoE,KAA9CC,SAA8C,KAAxBqW,iBAAwB,KAd9I3O,QAAUtH,mBAA8Bd,EAAQ,KAAoC3E,KAAK0b,gBAcqD,KAb9IjD,OAAS/T,gBAAM,SAAU,8CAaqH,KAX9ItB,KAAO,CACLqC,SAAUzF,KAAK0b,eACf5V,QAASvF,OACTwF,QAASxF,OACTyF,OAAQzF,OACR0F,OAAQ1F,OACR2F,aAAc3F,OACd4F,YAAa5F,OACb6F,IAAK7F,QAGuI,KAE9I8F,QAAU,qBAFoI,KAG9IC,QAAU,kBAAM,EAAKzC,MAHyH,KAI9IhD,WAAa,kBAAMrH,EAASyF,MAJkH,KAK9IgC,UAAY,iBAAM,CAAC,EAAKmE,OAAQ,EAAKC,SALyG,KAM9IlE,gBAAkB,iBAAM,CAAC,EAAKsX,SANgH,KAO9IlS,QAAU,kBAAM,EAAKnD,MAPyH,KAQ9IoD,UAAY,iBAAM,IAR4H,KAS9IC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKtB,OACZlF,OAAQ,EAAKkD,KAAK0C,QAClB1H,MAAO,EAAKgF,KAAK4C,QAEnB,CACEU,MAAO,EAAKrB,OACZnF,OAAQ,EAAKkD,KAAK2C,QAClB3H,MAAO,EAAKgF,KAAK6C,UAlByH,KAsB9IU,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAK+R,OACZvY,OAAQ,EAAKkD,KAAK8C,aAClB9H,MAAO,EAAKgF,KAAK+C,eA1ByH,KA8B9IS,OAAS,kBAAM,EAAKxD,KAAKgD,KA9BqH,KA6D9IS,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKiG,QAAQhG,U,0FA7BpD,4IACgEvF,QAAQC,IAAI,CACxEzB,KAAK+M,QAAQhG,QAAQO,UAAUtH,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKnO,MAC9D8F,KAAK+M,QAAQhG,QAAQK,cAAcH,OAAOoB,KAAKnO,MAC/C8F,KAAK+M,QAAQhG,QAAQ4U,OAAO3b,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKnO,MAC3D8F,KAAK+M,QAAQhG,QAAQ6U,eAAe3U,SALxC,0CACS4U,EADT,KACwBC,EADxB,KACqCH,EADrC,KAC6C7C,EAD7C,KAOE9Y,KAAKoD,KAAK8C,aAAeyV,EAP3B,UAQgC3b,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKyY,OAAQzY,KAAKoD,KAAK8C,cARjG,eAQElG,KAAKoD,KAAK+C,YARZ,OAUQN,EAAKnB,gBAAM,KAAMoU,GAVzB,UAY0DtX,QAAQC,IAAI,CAClEzB,KAAKoF,OAAO2B,QAAQO,UAAUwR,GAAW7R,OAAOoB,KAAKrI,KAAKoF,OAAO4C,UACjEhI,KAAKqF,OAAO0B,QAAQO,UAAUwR,GAAW7R,OAAOoB,KAAKrI,KAAKqF,OAAO2C,UACjEnC,EAAGkB,QAAQK,cAAcH,OAAOoB,KAAKxC,EAAGmC,YAf5C,2CAYS+T,EAZT,KAYsBC,EAZtB,KAYmCC,EAZnC,KAiBEjc,KAAKoD,KAAK0C,QAAU+V,EAAcrb,IAAIub,GAAatb,IAAIwb,GACvDjc,KAAKoD,KAAK2C,QAAU8V,EAAcrb,IAAIwb,GAAavb,IAAIwb,GAlBzD,UAmB2Bjc,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQpF,KAAKoD,KAAK0C,SAnB5F,eAmBE9F,KAAKoD,KAAK4C,OAnBZ,iBAoB2BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQrF,KAAKoD,KAAK2C,SApB5F,eAoBE/F,KAAKoD,KAAK6C,OApBZ,OAsBQiW,EAAcJ,EAAYtb,IAAIub,GAAatb,IAAIwb,GAC/CE,EAAcL,EAAYtb,IAAIwb,GAAavb,IAAIwb,GAvBvD,UAwB2Bjc,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQ8W,GAxBlF,eAwBQE,EAxBR,iBAyB2Bpc,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQ8W,GAzBlF,QAyBQE,EAzBR,OA0BErc,KAAKoD,KAAKgD,IAAMgW,EAAW1T,IAAI2T,GA1BjC,iD,iIA+BA,WAAmB3f,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAK+M,QAAQhG,SAAgBrK,GAA9B,qBAAyCmH,IADtD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAK+M,QAAQhG,SAAgBrK,GAA9B,qBAAyCmH,IACpD5H,MAAM,YAAD,OAAa+D,KAAK+M,QAAQnH,QAAQ9F,QAAlC,oBAAqDlF,EAAGuN,cAF/D,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,2FACQF,EAAeqF,KAAK+M,QAAQhG,QAAQuV,MAAM,GAAIzhB,GADtD,gD,8DAKIqK,E,WAYJ,WAAmBrB,EAA2BL,EAA4B4B,EAAsBC,EAAsByT,GAAoB,IAAD,iCAAtHjV,OAAsH,KAA3FL,SAA2F,KAA/D4B,SAA+D,KAAzCC,SAAyC,KAAnByT,YAAmB,KAXzIjT,GAAKnB,gBAAM,cAAe1E,KAAK8Y,WAW0G,KATzI1V,KAAO,CACLqC,SAAUzF,KAAK8Y,UACfhT,QAASvF,OACTwF,QAASxF,OACTyF,OAAQzF,OACR0F,OAAQ1F,OACR6F,IAAK7F,QAGkI,KAEzI8F,QAAU,qBAF+H,KAGzIC,QAAU,kBAAM,EAAKzC,MAHoH,KAIzIhD,WAAa,kBAAMrH,EAASyF,MAJ6G,KAKzIgC,UAAY,iBAAM,CAAC,EAAKmE,OAAQ,EAAKC,SALoG,KAMzIlE,gBAAkB,iBAAM,IANiH,KAOzIoF,QAAU,kBAAM,EAAKnD,MAPoH,KAQzIoD,UAAY,iBAAM,IARuH,KASzIC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKtB,OACZlF,OAAQ,EAAKkD,KAAK0C,QAClB1H,MAAO,EAAKgF,KAAK4C,QAEnB,CACEU,MAAO,EAAKrB,OACZnF,OAAQ,EAAKkD,KAAK2C,QAClB3H,MAAO,EAAKgF,KAAK6C,UAlBoH,KAsBzIU,kBAAoB,iBAAM,IAtB+G,KAwBzIC,OAAS,kBAAM,EAAKxD,KAAKgD,KAxBgH,KA2CzIS,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKjB,GAAGkB,U,0FAjB/C,gIACuCvF,QAAQC,IAAI,CAACzB,KAAK6F,GAAGkB,QAAQO,UAAUtH,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKnO,MAAK8F,KAAK6F,GAAGkB,QAAQK,cAAcH,OAAOoB,KAAKnO,QAD5J,0CACSkd,EADT,KACkBhQ,EADlB,cAG2C5F,QAAQC,IAAI,CACnDzB,KAAKoF,OAAO2B,QAAQO,UAAUtH,KAAK8Y,WAAW7R,OAAOoB,KAAKrI,KAAKoF,OAAO4C,UACtEhI,KAAKqF,OAAO0B,QAAQO,UAAUtH,KAAK8Y,WAAW7R,OAAOoB,KAAKrI,KAAKqF,OAAO2C,YAL1E,0CAGS+T,EAHT,KAGsBC,EAHtB,KAOEhc,KAAKoD,KAAK0C,QAAUiW,EAAYvb,IAAI4W,GAAS3W,IAAI2G,GACjDpH,KAAKoD,KAAK2C,QAAUiW,EAAYxb,IAAI4W,GAAS3W,IAAI2G,GARnD,UAS2BpH,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQpF,KAAKoD,KAAK0C,SAT5F,eASE9F,KAAKoD,KAAK4C,OATZ,iBAU2BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQrF,KAAKoD,KAAK2C,SAV5F,eAUE/F,KAAKoD,KAAK6C,OAVZ,iBAY2BjG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQ2W,GAZlF,eAYQK,EAZR,iBAa2Bpc,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQ2W,GAblF,QAaQK,EAbR,OAcErc,KAAKoD,KAAKgD,IAAMgW,EAAW1T,IAAI2T,GAdjC,iD,iIAmBA,WAAmB3f,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAK6F,GAAGkB,SAAgBrK,GAAzB,qBAAoCmH,IADjD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAK6F,GAAGkB,SAAgBrK,GAAzB,qBAAoCmH,IAC/C5H,MAAM,YAAD,OAAa+D,KAAK6F,GAAGD,QAAQ9F,QAA7B,oBAAgDlF,EAAGuN,cAF1D,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,+G,+DAhLa0hB,Q,4BCIR,WACLnY,EAAgBE,SAAS,CACvB,+BAAgC,SAACT,EAAML,GAAP,OAAkB,IAAIe,EAAKV,EAAML,EALlDkB,gBAAM,OAAQ,8CAKoDtL,SAAO+F,KAAKsP,QAAS,Q,IAIpGlK,E,WAgBJ,WAAmBV,EAA2BL,EAA4B4B,EAAsBC,EAAsBE,GAAiB,IAAD,iCAAnH1B,OAAmH,KAAxFL,SAAwF,KAA5D4B,SAA4D,KAAtCC,SAAsC,KAAhBE,SAAgB,KAftII,KAAOF,mBAA0Bd,EAAQ,KAAgC,8CAe6D,KAdtI8T,OAVgB/T,gBAAM,MAAO,8CAwByG,KAZtItB,KAAO,CACLuC,KAAM3F,KAAK2F,KAAKC,QAAQ9F,QACxByF,OAAQvF,KAAKuF,OACbO,QAASvF,OACTwF,QAASxF,OACTyF,OAAQzF,OACR0F,OAAQ1F,OACR2F,aAAc3F,OACd4F,YAAa5F,OACb6F,IAAK7F,QAG+H,KAEtI8F,QAAU,qBAF4H,KAGtIC,QAAU,kBAAM,EAAKzC,MAHiH,KAItIhD,WAAa,kBAAMrH,EAAS2F,MAJ0G,KAKtI8B,UAAY,iBAAM,CAAC,EAAKmE,OAAQ,EAAKC,SALiG,KAMtIlE,gBAAkB,iBAAM,CAAC,EAAKsX,SANwG,KAOtIlS,QAAU,kBAAM,EAAKnD,MAPiH,KAQtIoD,UAAY,iBAAM,IARoH,KAStIC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKtB,OACZlF,OAAQ,EAAKkD,KAAK0C,QAClB1H,MAAO,EAAKgF,KAAK4C,QAEnB,CACEU,MAAO,EAAKrB,OACZnF,OAAQ,EAAKkD,KAAK2C,QAClB3H,MAAO,EAAKgF,KAAK6C,UAlBiH,KAsBtIU,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAK+R,OACZvY,OAAQ,EAAKkD,KAAK8C,aAClB9H,MAAO,EAAKgF,KAAK+C,eA1BiH,KA8BtIS,OAAS,kBAAM,EAAKxD,KAAKgD,KA9B6G,KAiEtIS,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKnB,KAAKoB,U,0FAjCjD,4IACoDvF,QAAQC,IAAI,CAC5DzB,KAAK2F,KAAKoB,QACPC,SAAShH,KAAKuF,OAAQvF,KAAK6D,KAAK/D,SAChCmH,OACAoB,MAAK,SAAC6N,GAAD,OAAOhc,aAAGgc,EAAEhW,WACpBF,KAAK2F,KAAKoB,QAAQyV,cAAcxc,KAAKuF,OAAQvF,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKnO,MAC5E8F,KAAK2F,KAAKoB,QAAQzB,QAAQtF,KAAKuF,QAAQ0B,SAP3C,0CACS4U,EADT,KACwBrU,EADxB,KACiCsR,EADjC,KASE9Y,KAAKoD,KAAK8C,aAAesB,EAT3B,UAUgCxH,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKyY,OAAQzY,KAAKoD,KAAK8C,cAVjG,eAUElG,KAAKoD,KAAK+C,YAVZ,OAYQN,EAAKnB,gBAAM,KAAMoU,GAZzB,UAcuEtX,QAAQC,IAAI,CAC/EzB,KAAKoF,OAAO2B,QAAQO,UAAUwR,GAAW7R,OAAOoB,KAAKrI,KAAKoF,OAAO4C,UACjEhI,KAAKqF,OAAO0B,QAAQO,UAAUwR,GAAW7R,OAAOoB,KAAKrI,KAAKqF,OAAO2C,UACjEnC,EAAGkB,QAAQK,cAAcH,OAAOoB,KAAKnO,MACrC2L,EAAGkB,QAAQO,UAAUtH,KAAK2F,KAAKC,QAAQ9F,SAASmH,OAAOoB,KAAKnO,QAlBhE,2CAcS6hB,EAdT,KAcsBC,EAdtB,KAcmCC,EAdnC,KAckDH,EAdlD,KAoBE9b,KAAKoD,KAAK0C,QAAU+V,EAAcrb,IAAIub,GAAatb,IAAIwb,GACvDjc,KAAKoD,KAAK2C,QAAU8V,EAAcrb,IAAIwb,GAAavb,IAAIwb,GArBzD,UAsB2Bjc,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQpF,KAAKoD,KAAK0C,SAtB5F,eAsBE9F,KAAKoD,KAAK4C,OAtBZ,iBAuB2BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQrF,KAAKoD,KAAK2C,SAvB5F,eAuBE/F,KAAKoD,KAAK6C,OAvBZ,OAwBMjG,KAAKoD,KAAK4C,OAAO7F,WAAUH,KAAKoD,KAAK4C,OAAShG,KAAKoD,KAAK6C,QAEtDiW,EAAcJ,EAAYtb,IAAIub,GAAatb,IAAIwb,GAC/CE,EAAcL,EAAYtb,IAAIwb,GAAavb,IAAIwb,GA3BvD,UA4B2Bjc,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQ8W,GA5BlF,eA4BQE,EA5BR,iBA6B2Bpc,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQ8W,GA7BlF,QA6BQE,EA7BR,OA8BErc,KAAKoD,KAAKgD,IAAMgW,EAAWjc,SAAWkc,EAAWnU,KAAK,GAAKkU,EAAW1T,IAAI2T,GA9B5E,iD,iIAmCA,WAAmB3f,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAK2F,KAAKoB,SAAgBrK,GAA3B,qBAAsCmH,IADnD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAK2F,KAAKoB,SAAgBrK,GAA3B,qBAAsCmH,IACjD5H,MAAM,YAAD,OAAa+D,KAAK2F,KAAKC,QAAQ9F,QAA/B,oBAAkDlF,EAAGuN,cAF5D,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,2FACQF,EAAeqF,KAAK2F,KAAKoB,QAAQqB,QAAQpI,KAAKuF,OAAQ,EAAGvF,KAAK6D,KAAK/D,SAAUjF,GADrF,gD,+DAxGa4hB,Q,4BCCR,WACLrY,EAAgBE,SAAS,CACvB,iBAAkB,SAACT,EAAML,GAAP,OAAkB,IAAIkZ,EAAM7Y,EAAML,O,IAIlDkZ,E,WAWJ,WAAmB7Y,EAA2BL,GAAsB,IAAD,iCAAhDK,OAAgD,KAArBL,SAAqB,KAVnEsN,KAAOrL,mBAA+Bd,EAAQ,KAAqC,8CAUhB,KATnEgY,KAAOjY,gBAAM,OAAQ,8CAS8C,KARnEkY,MAAQlY,gBAAM,QAAS,8CAQ4C,KANnEtB,KAAO,CACLlD,OAAQK,OACRnC,MAAOmC,OACP6F,IAAK7F,QAG4D,KAEnE8F,QAAU,iBAAM,IAFmD,KAGnEC,QAAU,kBAAM,EAAKzC,MAH8C,KAInEhD,WAAa,kBAAMrH,EAASuF,KAJuC,KAKnEwH,QAAU,kBAAM,EAAKnD,MAL8C,KAMnEnC,UAAY,iBAAM,CAAC,EAAK2b,QAN2C,KAOnEzb,gBAAkB,iBAAM,IAP2C,KAQnEwF,kBAAoB,iBAAM,IARyC,KASnEH,UAAY,iBAAM,IATiD,KAUnEI,OAAS,kBAAM,EAAKxD,KAAKgD,KAV0C,KAWnEK,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAKiW,KAAMzc,OAAQ,EAAKkD,KAAKlD,OAAQ9B,MAAO,EAAKgF,KAAKhF,SAXhB,KAoBnEyI,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAK8V,MAAM7V,U,0FAPlD,8GAC2B/G,KAAK8Q,KAAK/J,QAAQmE,kBAAkBlL,KAAK2c,KAAK7c,QAASE,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKrI,KAAK2c,KAAK3U,UAD3H,cACEhI,KAAKoD,KAAKlD,OADZ,gBAE0BF,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAK2c,KAAM3c,KAAKoD,KAAKlD,QAFzF,cAEEF,KAAKoD,KAAKhF,MAFZ,gBAG0B4B,KAAK8Q,KAAK/J,QAAQ8V,iBAAiB7c,KAAK2c,KAAK7c,SAASmH,OAAOoB,KAAKrI,KAAK2c,KAAK3U,UAHtG,cAGQ4S,EAHR,iBAIwB5a,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAK2c,KAAM/B,GAJ7E,QAIE5a,KAAKoD,KAAKgD,IAJZ,wD,iIASA,WAAmB1J,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAK4c,MAAM7V,SAAgBrK,GAA5B,qBAAuCmH,IADpD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,GAAtC,0FACQjJ,GAAM,EAAAoF,KAAK4c,MAAM7V,SAAgBrK,GAA5B,qBAAuCmH,IAClD5H,MAAM,YAAD,OAAa+D,KAAK4c,MAAMhX,QAAQ9F,QAAhC,oBAAmDlF,EAAGuN,cAF7D,SAGQxN,EAAeC,GAAI,GAH3B,gD,+HAMA,4H,8DAnDakiB,Q,4BCDR,WACL1Y,EAAgBE,SAAS,CACvB,oBAAqB,SAACT,EAAML,GAAP,OAAkB,IAAIuZ,EAAWlZ,EAAML,EAAQhK,EAAS2F,KAAMuF,gBAAM,QAAS,8CAA+CtL,EAAO+F,KAAKsP,a,IAI3JsO,E,WAOJ,WAAmBlZ,EAA2BL,EAA4BrI,EAAyB6hB,EAAsBrd,GAAe,IAAD,iCAApHkE,OAAoH,KAAzFL,SAAyF,KAA7DrI,UAA6D,KAApC6hB,SAAoC,KAAdrd,QAAc,KANvIyD,KAAO,CACLlD,OAAQK,OACRnC,MAAOmC,OACP6F,IAAK7F,QAGgI,KAEvI8F,QAAU,iBAAM,IAFuH,KAIvIC,QAAU,kBAAM,EAAKzC,MAJkH,KAMvIhD,WAAa,kBAAM,EAAK1F,SAN+G,KAQvIoL,QAAU,kBAAM,EAAKnD,MARkH,KAUvInC,UAAY,iBAAM,CAAC,EAAK+b,SAV+G,KAYvI7b,gBAAkB,iBAAM,IAZ+G,KAcvIwF,kBAAoB,iBAAM,IAd6G,KAgBvIH,UAAY,iBAAM,IAhBqH,KA6BvIC,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAK/G,MAAOO,OAAQ,EAAKkD,KAAKlD,OAAQ9B,MAAO,EAAKgF,KAAKhF,SA7BmD,KA+BvIwI,OAAS,kBAAM,EAAKxD,KAAKgD,KA/B8G,KAiCvIS,mBAAqB,iBAAM,I,0FAf3B,oHACsCrF,QAAQC,IAAI,CAC9CzB,KAAKgd,OAAOjW,QAAQO,UAAUtH,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKrI,KAAKgd,OAAOhV,UACzEhI,KAAKgd,OAAOjW,QAAQK,cAAcH,OAAOoB,KAAKrI,KAAKgd,OAAOhV,YAH9D,0CACS9H,EADT,KACiBkH,EADjB,KAMEpH,KAAKoD,KAAKlD,OAASA,EANrB,SAO0BF,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKL,MAAOK,KAAKoD,KAAKlD,QAP1F,cAOEF,KAAKoD,KAAKhF,MAPZ,iBAQwB4B,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKL,MAAOyH,GAR9E,QAQEpH,KAAKoD,KAAKgD,IARZ,wD,iIAiBA,WAAmB1J,EAAgBmH,GAAnC,+G,uIAEA,WAAsBnH,EAAgBmH,EAAgBhJ,GAAtD,+G,iIAEA,WAAcA,GAAd,+G,+DArDaoiB,Q,iBCGf,IACMxB,EAAO,kBAAM/W,gBAAM,OAAQ,+C,WAI1B,WACLN,EAAgBE,SAAS,CAEvB,8BAA+B,SAACT,EAAML,GAAP,OAAkB,IAAI0B,EAAGrB,EAAML,EAAQiY,IANvD/W,gBAAM,OAAQ,8CAMyD,6CAA8C,KACpI,6BAA8B,SAACb,EAAML,GAAP,OAAkB,IAAI0B,EAAGrB,EAAML,EAAQiY,IANvD/W,gBAAM,MAAO,8CAMyD,6CAA8C,O,IAMhIQ,E,WAYJ,WAAmBrB,EAA2BL,EAA4B4B,EAAsBC,EAAsByT,EAA0BvT,GAAgB,IAAD,iCAA5I1B,OAA4I,KAAjHL,SAAiH,KAArF4B,SAAqF,KAA/DC,SAA+D,KAAzCyT,YAAyC,KAAfvT,SAAe,KAX/JM,GAAKnB,gBAAM,eAAgB1E,KAAK8Y,WAW+H,KAT/J1V,KAAO,CACLyC,GAAI7F,KAAK8Y,UACThT,QAASvF,OACTwF,QAASxF,OACTyF,OAAQzF,OACR0F,OAAQ1F,OACR6F,IAAK7F,QAGwJ,KAE/J8F,QAAU,qBAFqJ,KAI/JC,QAAU,kBAAM,EAAKzC,MAJ0I,KAM/JhD,WAAa,kBAAMrH,EAAS6F,KANmI,KAQ/J4B,UAAY,iBAAM,CAAC,EAAKmE,OAAQ,EAAKC,SAR0H,KAU/JlE,gBAAkB,iBAAM,IAVuI,KAY/JoF,QAAU,kBAAM,EAAKnD,MAZ0I,KAc/JoD,UAAY,iBAAM,IAd6I,KAgB/JC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKtB,OACZlF,OAAQ,EAAKkD,KAAK0C,QAClB1H,MAAO,EAAKgF,KAAK4C,QAEnB,CACEU,MAAO,EAAKrB,OACZnF,OAAQ,EAAKkD,KAAK2C,QAClB3H,MAAO,EAAKgF,KAAK6C,UAzB0I,KA6B/JU,kBAAoB,iBAAM,IA7BqI,KA+B/JC,OAAS,kBAAM,EAAKxD,KAAKgD,KA/BsI,KA2D/JS,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKjB,GAAGkB,U,0FA1B/C,4HACsDvF,QAAQC,IAAI,CAC9DzB,KAAKoF,OAAO2B,QAAQO,UAAUtH,KAAK8Y,WAAW7R,OAAOoB,KAAKrI,KAAKoF,OAAO4C,UACtEhI,KAAKqF,OAAO0B,QAAQO,UAAUtH,KAAK8Y,WAAW7R,OAAOoB,KAAKrI,KAAKqF,OAAO2C,UACtEhI,KAAK6F,GAAGkB,QAAQO,UAAUtH,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKrI,KAAK6F,GAAGmC,UACjEhI,KAAK6F,GAAGkB,QAAQK,cAAcH,OAAOoB,KAAKrI,KAAK6F,GAAGmC,YALtD,sCACOM,EADP,KACeC,EADf,KACuBqQ,EADvB,KACiCxR,EADjC,MAOMwR,EAASzY,SAPf,6BAQqBH,KAAK6F,GAR1B,UA5DuBJ,mBAAiCd,EAAQ,KAAuC,8CAoE7CoC,QAAQC,SAAShH,KAAKuF,OAAQvF,KAAK6D,KAAK/D,SAASmH,OAR3G,2BAQmH/G,OARnH,eAQ6B8H,SAR7B,wBAQI4Q,EARJ,sBAUE5Y,KAAKoD,KAAK0C,QAAUwC,EAAO9H,IAAIoY,GAAUnY,IAAI2G,GAC7CpH,KAAKoD,KAAK2C,QAAUwC,EAAO/H,IAAIoY,GAAUnY,IAAI2G,GAX/C,UAY2BpH,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQpF,KAAKoD,KAAK0C,SAZ5F,eAYE9F,KAAKoD,KAAK4C,OAZZ,iBAa2BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQrF,KAAKoD,KAAK2C,SAb5F,eAaE/F,KAAKoD,KAAK6C,OAbZ,OAeMjG,KAAKoD,KAAK4C,OAAO7F,SAAUH,KAAKoD,KAAK4C,OAAShG,KAAKoD,KAAK6C,OACnDjG,KAAKoD,KAAK6C,OAAO9F,WAAUH,KAAKoD,KAAK6C,OAASjG,KAAKoD,KAAK4C,QAhBnE,UAkB0BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQkD,GAlBjF,eAkBMyL,EAlBN,iBAmB0B/T,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQkD,GAnBjF,QAmBMyL,EAnBN,OAqBMD,EAAY5T,SAAU4T,EAAcC,EAC/BA,EAAY7T,WAAU6T,EAAcD,GAC7C/T,KAAKoD,KAAKgD,IAAM2N,EAAYrL,IAAIsL,GAvBlC,iD,iIA4BA,WAAmBtX,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAK6F,GAAGkB,SAAgBrK,GAAzB,qBAAoCmH,IADjD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAK6F,GAAGkB,SAAgBrK,GAAzB,qBAAoCmH,IAC/C5H,MAAM,YAAD,OAAa+D,KAAK6F,GAAGD,QAAQ9F,QAA7B,oBAAgDlF,EAAGuN,cAF1D,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,+G,+DApGaqiB,Q,iBCAf,IAAMzB,EAAO,kBAAM/W,gBAAM,OAAQ,+C,WAI1B,WACLN,EAAgBE,SAAS,CAEvB,8BAA+B,SAACT,EAAML,GAAP,OAAkB,IAAI0B,EAAGrB,EAAML,EAAQiY,IANvD/W,gBAAM,OAAQ,8CAMyD,+CACtF,6BAA8B,SAACb,EAAML,GAAP,OAAkB,IAAI0B,EAAGrB,EAAML,EAAQiY,IANvD/W,gBAAM,MAAO,8CAMyD,kD,IAMlFQ,E,WAYJ,WAAmBrB,EAA2BL,EAA4B4B,EAAsBC,EAAsByT,GAAoB,IAAD,iCAAtHjV,OAAsH,KAA3FL,SAA2F,KAA/D4B,SAA+D,KAAzCC,SAAyC,KAAnByT,YAAmB,KAXzIjT,GAAKnB,gBAAM,eAAgB1E,KAAK8Y,WAWyG,KATzI1V,KAAO,CACLyC,GAAI7F,KAAK8Y,UACThT,QAASvF,OACTwF,QAASxF,OACTyF,OAAQzF,OACR0F,OAAQ1F,OACR6F,IAAK7F,QAGkI,KAEzI8F,QAAU,qBAF+H,KAIzIC,QAAU,kBAAM,EAAKzC,MAJoH,KAMzIhD,WAAa,kBAAMrH,EAAS6F,KAN6G,KAQzI4B,UAAY,iBAAM,CAAC,EAAKmE,OAAQ,EAAKC,SARoG,KAUzIlE,gBAAkB,iBAAM,IAViH,KAYzIoF,QAAU,kBAAM,EAAKnD,MAZoH,KAczIoD,UAAY,iBAAM,IAduH,KAgBzIC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKtB,OACZlF,OAAQ,EAAKkD,KAAK0C,QAClB1H,MAAO,EAAKgF,KAAK4C,QAEnB,CACEU,MAAO,EAAKrB,OACZnF,OAAQ,EAAKkD,KAAK2C,QAClB3H,MAAO,EAAKgF,KAAK6C,UAzBoH,KA6BzIU,kBAAoB,iBAAM,IA7B+G,KA+BzIC,OAAS,kBAAM,EAAKxD,KAAKgD,KA/BgH,KAwDzIS,mBAAqB,kBAAMxN,IAAEyN,UAAU,EAAKjB,GAAGkB,U,0FAvB/C,4HACwDvF,QAAQC,IAAI,CAChEzB,KAAKoF,OAAO2B,QAAQO,UAAUtH,KAAK8Y,WAAW7R,OAAOoB,KAAKrI,KAAKoF,OAAO4C,UACtEhI,KAAKqF,OAAO0B,QAAQO,UAAUtH,KAAK8Y,WAAW7R,OAAOoB,KAAKrI,KAAKqF,OAAO2C,UACtEhI,KAAK6F,GAAGkB,QAAQO,UAAUtH,KAAK6D,KAAK/D,SAASmH,OAAOoB,KAAKrI,KAAK6F,GAAGmC,UACjEhI,KAAK6F,GAAGkB,QAAQK,cAAcH,OAAOoB,KAAKrI,KAAK6F,GAAGmC,YALtD,0CACSM,EADT,KACiBC,EADjB,KACyBqQ,EADzB,KACmCxR,EADnC,KAOEpH,KAAKoD,KAAK0C,QAAUwC,EAAO9H,IAAIoY,GAAUnY,IAAI2G,GAC7CpH,KAAKoD,KAAK2C,QAAUwC,EAAO/H,IAAIoY,GAAUnY,IAAI2G,GAR/C,UAS2BpH,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQpF,KAAKoD,KAAK0C,SAT5F,eASE9F,KAAKoD,KAAK4C,OATZ,iBAU2BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQrF,KAAKoD,KAAK2C,SAV5F,eAUE/F,KAAKoD,KAAK6C,OAVZ,OAYMjG,KAAKoD,KAAK4C,OAAO7F,SAAUH,KAAKoD,KAAK4C,OAAShG,KAAKoD,KAAK6C,OACnDjG,KAAKoD,KAAK6C,OAAO9F,WAAUH,KAAKoD,KAAK6C,OAASjG,KAAKoD,KAAK4C,QAbnE,UAe0BhG,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKoF,OAAQkD,GAfjF,eAeMyL,EAfN,iBAgB0B/T,KAAKwD,OAAOyE,QAAQjI,KAAKa,aAAalH,GAAIqG,KAAKqF,OAAQkD,GAhBjF,QAgBMyL,EAhBN,OAkBMD,EAAY5T,SAAU4T,EAAcC,EAC/BA,EAAY7T,WAAU6T,EAAcD,GAC7C/T,KAAKoD,KAAKgD,IAAM2N,EAAYrL,IAAIsL,GApBlC,iD,iIAyBA,WAAmBtX,EAAgBmH,GAAnC,0FACQjJ,GAAM,EAAAoF,KAAK6F,GAAGkB,SAAgBrK,GAAzB,qBAAoCmH,IADjD,SAEejJ,EAAGqM,KAAK,CAAElM,KAAMiF,KAAK6D,KAAK/D,UAFzC,wF,uIAKA,WAAsBpD,EAAgBmH,EAAgBhJ,GAAtD,0FACQD,GAAM,EAAAoF,KAAK6F,GAAGkB,SAAgBrK,GAAzB,qBAAoCmH,IAC/C5H,MAAM,YAAD,OAAa+D,KAAK6F,GAAGD,QAAQ9F,QAA7B,oBAAgDlF,EAAGuN,cAF1D,SAGQxN,EAAeC,EAAIC,GAH3B,gD,iIAMA,WAAcA,GAAd,+G,+DAhGasiB,Q,4BCCR,WACL/Y,EAAgBE,SAAS,CACvB,YAAa,SAACT,EAAML,GAAP,OAAkB,IAAI4Z,EAAevZ,EAAML,O,IAMtD4Z,E,WAQJ,WAAmBvZ,EAA2BL,GAAsB,IAAD,OACjE,GADiE,0BAAhDK,OAAgD,KAArBL,SAAqB,KAPnE7D,WAOmE,OANnEyD,KAAO,CACLlD,OAAQK,OACRnC,MAAOmC,OACP6F,IAAK7F,QAG4D,KAKnE8F,QAAU,qBALyD,KAMnEC,QAAU,kBAAM,EAAKzC,MAN8C,KAOnEhD,WAAa,kBAAMrH,EAASM,KAPuC,KAQnEyM,QAAU,kBAAM,EAAKnD,MAR8C,KASnEnC,UAAY,iBAAM,CAAC,EAAKtB,QAT2C,KAUnEwB,gBAAkB,iBAAM,IAV2C,KAWnEwF,kBAAoB,iBAAM,IAXyC,KAYnEH,UAAY,iBAAM,IAZiD,KAanEC,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAK/G,MAAOO,OAAQ,EAAKkD,KAAKlD,OAAQ9B,MAAO,EAAKgF,KAAKhF,SAbjB,KAcnEwI,OAAS,kBAAM,EAAKxD,KAAKgD,KAd0C,KAsBnES,mBAAqB,iBAAM,KArBpBhD,EAAK/D,QAAS,MAAM,IAAI7C,MAAM,uCACnC+C,KAAKL,MAAQtG,IAAEC,MAAMoL,gBAAMb,EAAK/D,QAASoS,eAAc,CAAEmL,OAAQxZ,EAAK/D,U,0FAcxE,mHACwBwd,IADxB,cACEtd,KAAKoD,KAAKgD,IADZ,gBAE2BmX,EAAavd,KAAKL,MAAM0d,QAFnD,cAEErd,KAAKoD,KAAKlD,OAFZ,gBAG0Bsd,IAAanV,MAAK,SAAC9J,GAAD,OAAO,EAAK6E,KAAKlD,OAAOgI,KAAK3J,MAHzE,OAGEyB,KAAKoD,KAAKhF,MAHZ,uD,iIAQA,WAAmB1B,EAAgBmH,GAAnC,+G,uIAEA,WAAsBnH,EAAgBmH,EAAgBhJ,GAAtD,+G,iIAEA,WAAcA,GAAd,+G,uEAGayiB,I,qFAAf,gHACkBrb,MAAM,uCADxB,cACQwb,EADR,gBAEqBA,EAAEtb,OAFvB,cAEQA,EAFR,yBAGSM,eAAKN,IAHd,4C,+BAMeob,E,wFAAf,WAA4BF,GAA5B,mGACkBpb,MAAM,4CAAD,OAA6Cob,IADpE,cACQI,EADR,gBAEqBA,EAAEtb,OAFvB,cAEQA,EAFR,yBAGSub,0BAAgBvb,EAAM,EAAG,KAHlC,4C,+BAMeqb,I,qFAAf,gHACkBvb,MAAM,uCADxB,cACQwb,EADR,gBAEqBA,EAAEtb,OAFvB,cAEQA,EAFR,yBAGSwb,WAAWxb,IAHpB,4C,wBA5Deyb,Q,KCiBfzL,GAAS7N,WACTwK,GAAcxK,WACdsZ,GAAQtZ,WAER0N,GAAQ1N,WACR2W,GAAU3W,WACVqE,GAAYrE,WACZ6I,GAAQ7I,WACR2P,GAAY3P,WACZ6R,GAAS7R,WACTgU,GAAYhU,WACZyU,GAAUzU,WACV0V,GAAO1V,WACPuW,GAAUvW,WACV8I,GAAO9I,WACP4W,GAAK5W,WACLsE,GAAMtE,WACNiY,GAAUjY,WACVmY,GAASnY,WACTwY,GAAKxY,WACL2Y,GAAK3Y,WACL4Y,GAAW5Y,WACX6Y,GAAW7Y,WCnCb,IAAMuZ,GAAc,kBACPC,GAA2B,kBAAM5a,KAAK6a,MAAMC,aAAaC,QAAQJ,KAAgB,OACjFK,GAAyB,SAAC9a,GAAD,OAAwC4a,aAAaG,QAAQN,GAAa3a,KAAKC,UAAUC,KAEzHgb,GAAoB/iB,YAAY,CACpCzB,KAAM,oBAEN0B,aAAc,CACZoF,UAAW,IAGb/E,QAAS,CACP0iB,KAAM,mEAAM,WAAOC,GAAP,2FACJD,GAAKC,GADD,2CAAN,uDAINC,YAAa,SAACvjB,EAAc8E,EAAiB+O,EAAejV,GAA/C,wDAAgE,WAAO0kB,GAAP,sFACrEzN,EAAWzM,EAAgBoa,OAAO,CAAExjB,OAAM8E,UAAS+O,QAAOjV,OAAMD,GAAI,KADC,uBAGzEsC,MAAM,gBAAD,OAAiBjB,EAAjB,eAA4B8E,IAHwC,iCAOrEsD,EAAO/J,IAAEmJ,UAAU8b,EAAIliB,WAAWsE,WAAW,SAACnC,GAAD,OAAOA,EAAE+H,cACvDuK,EAASvK,UAAU3M,IAAMkX,EAASvK,UACvC4X,GAAuB9a,GAToD,SAUrEib,GAAKC,GAVgE,2CAAhE,uDAabG,OAAQ,SAAC5N,EAAsB6N,GAAvB,wDAAiD,WAAOJ,GAAP,wFACjDlb,EAAO/J,IAAEmJ,UAAU8b,EAAIliB,WAAWsE,WAAW,SAACnC,GAAD,OAAOA,EAAE+H,cACvDuK,EAASvK,UAAU3M,IAAM+kB,EAC9BR,GAAuB9a,GAHgC,SAIjDib,GAAKC,GAJ4C,2CAAjD,uDAORK,OAAQ,SAACC,GAAD,wDAAmB,WAAON,GAAP,+FACnBlb,EAAO/J,IAAEmJ,UAAU8b,EAAIliB,WAAWsE,WAAW,SAACnC,GAAD,OAAOA,EAAE+H,cAChDsY,GACZV,GAAuB9a,GAHE,SAInBib,GAAKC,GAJc,2CAAnB,uDAORO,gBACE,SAACD,EAAe/jB,EAAsB6B,EAAgBmH,GAAtD,wDACA,sGAASzH,EAAT,EAASA,SAAT,SACQA,IAAWsE,UAAUke,GAAOC,gBAAgBniB,EAAQmH,EAAMhJ,GADlE,2CADA,uDAKFikB,QACE,SAACF,EAAe/jB,GAAhB,wDACA,sGAASuB,EAAT,EAASA,SAAT,SACQA,IAAWsE,UAAUke,GAAOE,QAAQjkB,GAD5C,2CADA,0D,SAOSwjB,G,2FAAf,WAAoBC,GAApB,uFAKE,IAAW3kB,KAJXY,QAAQC,IAAI,qBACNuJ,EAAUua,EAAIliB,WAAWsE,UACzBA,EAAYrH,IAAEmJ,UAAUsb,MAA4B,SAACja,GAAD,OAAUE,EAAQF,EAAKlK,KAAOyK,EAAgBoa,OAAO3a,MAE9EnD,EAAU/G,WAAY+G,EAAU/G,GALnE,gBAOQyK,EAAgBZ,OAAOub,OAAO1lB,IAAEsb,OAAOjU,IAP/C,uBASwB1G,IATxB,cASQmB,EATR,iBAWQqG,QAAQC,IACZpI,IAAEqF,IAAIgC,GAAW,SAACnC,GAChB,GAAKA,GAAMpD,GAAYiJ,EAAgB4a,WAAWzgB,EAAGpD,GACrD,OAAOoD,EACJ8f,OACAhW,MAAK,kBAAQ9J,EAAU0gB,QAAS,KAChC/J,OAAM,SAACvR,GACLpF,EAAU0gB,QAAS,EACpB1kB,QAAQC,IAAI+D,EAAE+H,UAAUtL,KAAM2I,UAnBxC,QAuBE2a,EAAIxiB,SAAS,CAAE4E,cACfnG,QAAQC,IAAR,iCAA+BW,QAA/B,IAA+BA,OAA/B,EAA+BA,EAASvB,OAxB1C,6C,sBA2BO,IAAMslB,GAAyB5hB,YAAW8gB,GAAmB,CAAE5gB,SAAU,OAEnE2hB,GAAqB7hB,YAAW8gB,GAAmB,CAC9D5gB,SAAU4hB,cACR,SAAC3hB,GAAD,OACEpE,IAAEoE,EAAMiD,WACLiU,SACA0K,QAAO,SAAC9gB,GAAD,OAAOA,EAAE+H,UAAUtL,QAC1BoD,WACL,SAACsC,GAAD,OACErH,IAAEqF,IAAIgC,GAAW,SAACnC,GAAD,MAAQ,CACvB5E,GAAI4E,EAAE+H,UAAU3M,GAChBqB,KAAMuD,EAAE+H,UAAUtL,KAClBpB,KAAM2E,EAAE+H,UAAU1M,MAAQ2E,EAAE8H,WAAa9H,EAAE+H,UAAUtL,KACrDskB,MAAO/gB,EAAEsC,aAAajH,KACtB2lB,OAAQhhB,EAAEiI,YACVgZ,YAAaC,GAAID,GAAYjhB,IAC7BiJ,QAASiY,GAAIlhB,EAAEoI,oBAAoBoP,QAAO,SAACC,EAAKnU,GAAN,OAAYmU,EAAItN,IAAI7G,EAAEzD,SAAQmC,SACxE6F,IAAKqZ,GAAIlhB,EAAEqI,UACXiK,SAAUtS,EACVuB,QAASvB,EAAE+H,UAAUxG,QACrBmf,SAAW1gB,EAAU0gB,gBAIhBS,GAAkBpiB,YAAW8gB,GAAmB,CAC3D5gB,SAAU,SAACC,GAAD,OAAWA,EAAMiD,aAGhBif,GAAkCriB,YAAW8gB,GAAmB,CAC3E5gB,SAAU4hB,cACR,SAAC3hB,GAAD,OAAWpE,IAAEqF,IAAIjB,EAAMiD,WAAW,SAACmQ,GAAD,MAAe,CAAEA,WAAU2O,YAAaI,KAAKC,MAAMJ,GAAID,GAAY3O,YACrG,SAACiP,GACC,IAAMC,EAAS1mB,IAAEgmB,OAAOS,GAAM,SAACrC,GAAD,OAAQA,EAAE+B,eACxC,MAAO,CACLQ,OAAQD,EAAOrhB,KAAI,SAACH,GAAD,OAAOA,EAAEsS,SAASvK,UAAU1M,MAAQ2E,EAAEsS,SAASxK,WAAa9H,EAAEsS,SAASvK,UAAUtL,QACpG2Z,OAAQoL,EAAOrhB,KAAI,SAACH,GAAD,OAAOA,EAAEihB,qBAMvBS,GAAoC3iB,YAAW8gB,GAAmB,CAC7E5gB,SAAU4hB,cACR,SAAC3hB,GAAD,OACEpE,IAAEoE,EAAMiD,WACLhC,KAAI,SAACmS,GAAD,OAAcA,EAASpK,gBAC3BrF,UACAhD,WACL,SAACsW,GACC,IAAMwL,EAAU7mB,IAAEqb,GACf9T,SAAQ,SAACS,GAAD,OA4CjB,SAAoBA,GAClB,IAAM8e,EAAO9e,EAAUxB,QAAWwB,EAAUzB,QAC5C,OAAIugB,IACA9e,EAAEzH,KAAKiO,cAAcuY,SAAS,QAAU,CAAC,MAAO,MAAO,OAAOA,SAAS/e,EAAEzH,KAAKiO,eAAuB,MACrGxG,EAAEzH,KAAKiO,cAAcuY,SAAS,OAAe,MAC7C/e,EAAEzH,KAAKiO,cAAcuY,SAAS,OAAe,MAC7C/e,EAAEzH,KAAKiO,cAAcuY,SAAS,OAAe,MAC7C/e,EAAEzH,KAAKiO,cAAcuY,SAAS,QAAgB,OAC9C/e,EAAEzH,KAAKiO,cAAcuY,SAAS,SAAiB,QAC/C/e,EAAEzH,KAAKiO,cAAcuY,SAAS,OAAe,MAC5C/e,EAAUgc,OAAe,MACvBhc,EAAEzH,MAAQyH,EAAEvB,SAvDGugB,CAAWhf,EAAEqF,UAC5BhI,KAAI,SAACiW,EAAQ2L,GAAT,MAAkB,CAAED,WAAYC,EAAKliB,MAAO/E,IAAE0c,OAAOpB,GAAQ,SAACqB,EAAK3U,GAAN,OAAY2U,EAAMyJ,GAAIpe,EAAEjD,SAAQ,OACjGihB,QAAO,SAACxd,GAAD,OAAQA,EAAEzD,SACjBA,QACH,MAAO,CACL4hB,OAAQ3mB,IAAEqF,IAAIwhB,GAAS,SAACK,GAAD,OAAQA,EAAGF,cAClC1L,OAAQtb,IAAEqF,IAAIwhB,GAAS,SAACK,GAAD,OAAQX,KAAKC,MAAMU,EAAGniB,gBAMxCoiB,GAA+BljB,YAAW8gB,GAAmB,CACxE5gB,SAAU4hB,cACR,SAAC3hB,GAAD,OAAWpE,IAAEuH,QAAQnD,EAAMiD,WAAW,SAACnC,GAAD,OAAOA,EAAEsC,aAAajH,WAC5D,SAAC6mB,GACC,IAAMC,EAAgBrnB,IAAEonB,GACrB/hB,KAAI,SAACgC,EAAW4e,GAAZ,MAAuB,CAC1BA,QACAE,YAAaI,KAAKC,MAAMJ,GAAIkB,GAAiBjgB,SAE9C2e,QAAO,SAACziB,GAAD,OAAQA,EAAE4iB,eACjBphB,QACH,MAAO,CACL4hB,OAAQ3mB,IAAEqF,IAAIgiB,GAAe,SAAC9jB,GAAD,OAAOA,EAAE0iB,SACtC3K,OAAQtb,IAAEqF,IAAIgiB,GAAe,SAAC9jB,GAAD,OAAOA,EAAE4iB,eACtCoB,WAAYvnB,IAAE0c,OAAO2K,GAAe,SAAC1K,EAAKpZ,GAAN,OAAYoZ,EAAMpZ,EAAE4iB,cAAa,SAM7E,SAASC,GAAIvlB,GACX,OAAO2mB,cAAI3mB,EAAI,IAAII,WAAa,IAGlC,SAASklB,GAAYjhB,GACnB,OAAOlF,IAAE0c,OAAOxX,EAAEkI,cAAc,SAACuP,EAAKnU,GAAN,OAAYmU,EAAItN,IAAI7G,EAAEzD,SAAQmC,QAGhE,SAASogB,GAAiBjgB,GACxB,OAAOrH,IAAE0c,OAAOrV,GAAW,SAACsV,EAAK3F,GAAN,OAAc2F,EAAItN,IAAI8W,GAAYnP,MAAO9P,Q,kCCrLhEugB,GAAsBzlB,YAAY,CACtCzB,KAAM,sBAEN0B,aAAc,CACZuV,SAAU,KACVkQ,WAAW,EACXC,eAAgB,GAChBC,mBAAoB,IAGtBtlB,QAAS,CACPulB,aACE,SAACrQ,GAAD,wDACA,+FAAS/U,EAAT,EAASA,UAAUM,EAAnB,EAAmBA,YACFyU,WAAaA,GAC1B/U,EAAS,CAAE+U,WAAUmQ,eAAgB,GAAIC,mBAAoB,GAAIF,WAAW,IAFhF,2CADA,uDAOFI,YACE,mEACA,0FAASrlB,EAAT,EAASA,UACE,CAAE+U,SAAU,OADvB,2CADA,uDAKFuQ,aACE,SAAC1kB,GAAD,wDACA,0FAASZ,EAAT,EAASA,UACE,CAAEklB,eAAgBtkB,EAAQukB,mBAAoB,KADzD,2CADA,uDAKFI,aACE,SAACC,EAAeC,GAAhB,wDACA,iGAASzlB,EAAT,EAASA,SAAUM,EAAnB,EAAmBA,SACjBN,EAAS,CAAEmlB,mBAAmB,6BAAM7kB,IAAW6kB,oBAAlB,mBAAuCK,EAAQC,MAD9E,2CADA,uDAKFC,aACE,SAACT,GAAD,wDACA,0FAASjlB,EAAT,EAASA,UACE,CAAEilB,cADb,2CADA,uDAKFjC,QACE,mEACA,sGAAS1iB,EAAT,EAASA,SAAT,SACQA,IAAWyU,SAAUiO,QAAQ1iB,IAAW2kB,WADhD,2CADA,uDAKF9lB,KACE,mEACA,sGAASmB,EAAT,EAASA,SAAT,SACQA,IAAWyU,SAAUgO,gBAAgBziB,IAAW4kB,eAAgB3nB,IAAEsb,OAAOvY,IAAW6kB,oBAAqB7kB,IAAW2kB,WAD5H,2CADA,uDAKF9Z,KACE,SAACjL,GAAD,wDACA,wGAASI,EAAT,EAASA,SAAT,kBAEyBA,IAAWyU,SAAU4Q,aAAarlB,IAAW4kB,eAAgB3nB,IAAEsb,OAAOvY,IAAW6kB,qBAF1G,OAEU7e,EAFV,OAGIpG,EAAU3C,IAAEiH,SAAS8B,IAAW,aAHpC,gDAKIpG,EAAU3C,IAAEiH,SAAF,OALd,yDADA,0DAYOohB,GAA2BpkB,YAAWwjB,GAAqB,CAAEtjB,SAAU,OACvEmkB,GAA4BrkB,YAAWwjB,GAAqB,CACvEtjB,SAAU4hB,cACR,SAAC3hB,GAAD,OAAWA,KACX,SAACA,GAAD,aAAW,UAAAA,EAAMoT,gBAAN,eAAgBhK,qBAAqB7F,QAAO,SAAC4gB,GAAD,OAAQA,EAAEle,WAAW,OAASke,EAAEC,SAAS,UAAS,MACzG,SAACpkB,GAAD,OACEA,EAAMujB,eACHc,UAAUrkB,EAAMujB,eAAelN,QAAQ,KAAO,EAAGrW,EAAMujB,eAAe/c,OAAS,GAC/E0T,MAAM,KACN3W,QAAO,SAACK,GAAD,OAAOA,EAAE4C,OAAS,QAC9B,SAACxG,GAAD,aACEpE,IAAC,UAACoE,EAAMoT,gBAAP,aAAC,EAAgB5P,aACfoB,SAAQ,SAAChB,GAAD,OAAOA,EAAEzH,QACjB4I,WAAU,SAACX,GAAD,OAAOA,EAAE/B,WACnB1B,WACL,SAACX,GAAD,aACEpE,IAAC,UAACoE,EAAMoT,gBAAP,aAAC,EAAgB1P,mBACfkB,SAAQ,SAAChB,GAAD,OAAOA,EAAEzH,QACjB4I,WAAU,SAACX,GAAD,OAAOA,EAAE/B,WACnB1B,WACL,SAACX,GAAD,aAAWpE,IAAEmJ,UAAF,UAAY/E,EAAMoT,gBAAlB,aAAY,EAAgBtK,UAAWwb,OAClD,SAACtkB,EAAOukB,EAAiBC,EAAwB3L,EAAQ4L,EAAc9e,GAAvE,MAAiF,CAC/EyN,SAAUpT,EAAMoT,SAChBmR,kBACAhB,eAAgBvjB,EAAMujB,eACtBiB,yBACAlB,UAAWtjB,EAAMsjB,UACjBoB,QAASjf,KAAKC,UAAU,CAAEmT,SAAQ4L,eAAc9e,QAAQ,KAAM,SAKpE,SAAS2e,GAAQ3e,GACf,OAAI/J,IAAE+oB,QAAQhf,GAAc/J,IAAEqF,IAAI0E,EAAM2e,IACjC3e,aAAgBif,KAAKC,gBAAMlf,GAAQA,E,kHCxGtCmf,GAAyBlnB,YAAY,CACzCzB,KAAM,yBAEN0B,aAAc,CACZknB,MAAM,EACNxnB,KAAM,GACN8E,QAAS,GACT+O,MAAO,GACPjV,KAAM,GACN6oB,OAAO,EACPC,SAAUte,EAAgBse,WAAWC,QAGvChnB,QAAS,CACP6mB,KACE,mEACA,0FAAS1mB,EAAT,EAASA,UACE,CAAE0mB,MAAM,EAAMxnB,KAAM,GAAI8E,QAAS,GAAI+O,MAAO,GAAIjV,KAAM,GAAI6oB,OAAO,IAD5E,2CADA,uDAKFtB,YACE,mEACA,0FAASrlB,EAAT,EAASA,UACE,CAAE0mB,MAAM,IADnB,2CADA,uDAKFI,QACE,SAAC5nB,GAAD,wDACA,mGAASc,EAAT,EAASA,SAAUM,EAAnB,EAAmBA,SACXqmB,EAAQre,EAAgBye,YAAY7nB,EAAMoB,IAAW0D,SAC3DhE,EAAS,CAAEd,OAAMynB,UAFnB,2CADA,uDAMFK,WACE,SAAChjB,GAAD,wDACA,mGAAShE,EAAT,EAASA,SAAUM,EAAnB,EAAmBA,SACjB0D,EAAUzG,IAAE2K,KAAKlE,GACX2iB,EAAQre,EAAgBye,YAAYzmB,IAAWpB,KAAM8E,GAC3DhE,EAAS,CAAEgE,UAAS2iB,UAHtB,2CADA,uDAOFM,SACE,SAAClU,GAAD,wDACA,+FAAS/S,EAAT,EAASA,SACP+S,EAAQxV,IAAE2K,KAAK6K,GACf/S,EAAS,CAAE+S,UAFb,2CADA,uDAMFmU,QACE,SAACppB,GAAD,wDACA,+FAASkC,EAAT,EAASA,SACPlC,EAAOP,IAAE2K,KAAKpK,GACdkC,EAAS,CAAElC,SAFb,2CADA,0DAQOqpB,GAAuB3lB,YAAWilB,ICvDlCW,GAAiB,WAC5B,MAAsB3lB,IAAf4lB,EAAP,oBACA,EAAoBF,KAAXtnB,EAAT,oBACA,OACE,cAACynB,GAAA,EAAD,CAAQvkB,UAAWskB,EAAaE,QAAS,kBAAM1nB,EAAQ6mB,QAAvD,yBAMSc,GAAoB,WAC/B,MAAuB1lB,KAAd2lB,EAAT,oBACA,EAAyBN,KAAzB,mBAAOxlB,EAAP,KAAc9B,EAAd,KACA,EAA+BujB,KAAtBsE,EAAT,oBAEMC,EAAQ,kBAAM9nB,EAAQwlB,eAI5B,OACE,8BACE,eAACuC,GAAA,EAAD,CAAQC,KAAMlmB,EAAM+kB,KAAMoB,QAASH,EAAnC,UACE,cAACI,GAAA,EAAD,CAAa/lB,MAAO,CAAEgmB,SAAU,QAAhC,0BAEA,eAACC,GAAA,EAAD,WACE,uBACA,eAACC,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,GAAA,EAAD,4BACA,eAACC,GAAA,EAAD,CAAQ/lB,MAAOX,EAAMzC,KAAMopB,MAAM,gBAAgB9lB,SAAU,SAACqF,GAAD,OAAOhI,EAAQinB,QAAQjf,EAAElF,OAAOL,QAA3F,UACE,cAACimB,GAAA,EAAD,CAAUjmB,MAAM,KACfX,EAAMilB,SAAShkB,KAAI,SAAC1D,GAAD,OAClB,cAACqpB,GAAA,EAAD,CAAqBjmB,MAAOpD,EAA5B,SACGA,GADYA,YAOrB,uBACA,uBACA,cAACspB,GAAA,EAAD,CAAWL,WAAS,EAACtqB,GAAG,iBAAiB4qB,QAAQ,WAAWH,MAAM,iBAAiB9lB,SAAU,SAACqF,GAAD,OAAOhI,EAAQmnB,WAAWnf,EAAElF,OAAOL,UAEhI,uBACA,uBACC,cAACkmB,GAAA,EAAD,CAAWL,WAAS,EAACtqB,GAAG,iBAAiB4qB,QAAQ,WAAWH,MAAM,QAAQ9lB,SAAU,SAACqF,GAAD,OAAOhI,EAAQqnB,QAAQrf,EAAElF,OAAOL,UAErH,uBACA,uBACC,cAACkmB,GAAA,EAAD,CAAWL,WAAS,EAACtqB,GAAG,iBAAiB4qB,QAAQ,WAAWH,MAAM,SAAS9lB,SAAU,SAACqF,GAAD,OAAOhI,EAAQonB,SAASpf,EAAElF,OAAOL,UAEvH,uBACA,0BAEF,cAAComB,GAAA,EAAD,UACE,cAACpB,GAAA,EAAD,CAAQqB,KAAK,QAAQ5lB,UAAWpB,EAAMglB,MAAOY,QArCzC,kBAAME,EAAW3nB,aAAY,kBAAM4nB,EAAmBjF,YAAY9gB,EAAMzC,KAAMyC,EAAMqC,QAASrC,EAAMoR,MAAOpR,EAAM7D,SAAOyO,KAAKob,IAqChI,yB,mBChDViB,KAAQpgB,SAASqgB,KAAYC,KAASC,MAEtC,IAAMC,GAAwB,CAC5B,CAAEC,MAAO,SAAUC,WAAY,eAAMC,YAAa,SAAUC,MAAO,GAAIC,MAAO,SAAUC,eAAgB,SAACvjB,GAAD,OAAQA,EAAEzD,MAAQ,SAAM,WAChI,CAAE2mB,MAAO,QAASC,WAAY,QAASC,YAAa,SAAUC,MAAO,IAAKC,MAAO,QACjF,CAAEJ,MAAO,OAAQC,WAAY,WAAYC,YAAa,SAAUC,MAAO,IAAKC,MAAO,QACnF,CACEJ,MAAO,SACPC,WAAY,SACZC,YAAa,SACbC,MAAO,IACPC,MAAO,SACPC,eAAgB,SAACvjB,GACf,OAAKA,EAAEzD,OAAWyD,EAAEzD,MAAmB6F,OAC/BpC,EAAEzD,MAAmBM,KAAI,SAAC9B,GAAD,OAAOA,EAAEC,WAASmF,KAAK,gBADF,iBAI1D,CACE+iB,MAAO,cACPC,WAAY,eACZC,YAAa,SACbC,MAAO,IACPC,MAAO,QACPnqB,KAAM,SACNoqB,eAAgB,SAACvjB,GAAD,MAAO,MAAQwjB,kBAASxjB,EAAEzD,MAAiBknB,QAAQ,KACnEC,UAAU,GAEZ,CACER,MAAO,UACPC,WAAY,UACZC,YAAa,SACbC,MAAO,IACPC,MAAO,QACPnqB,KAAM,SACNoqB,eAAgB,SAACvjB,GAAD,MAAO,MAAQwjB,kBAASxjB,EAAEzD,MAAiBknB,QAAQ,KACnEC,UAAU,GAEZ,CACER,MAAO,MACPC,WAAY,MACZC,YAAa,SACbC,MAAO,IACPC,MAAO,QACPnqB,KAAM,SACNoqB,eAAgB,SAACvjB,GAAD,MAAO,MAAQwjB,kBAASxjB,EAAEzD,MAAiBknB,QAAQ,KACnEC,UAAU,GAEZ,CAAER,MAAO,UAAWC,WAAY,UAAWC,YAAa,SAAUC,MAAO,IAAKC,MAAO,SAG1EK,GAAoB,WAC/B,MAA+BnoB,IAA/B,mBAAOooB,EAAP,KAAiBlC,EAAjB,KACA,EAAwBpE,GAAmB,MAA3C,mBAAOW,EAAP,KAAankB,EAAb,KACA,EAAoB+jB,KAAbhf,EAAP,oBACA,EAAkCghB,KAAzBgE,EAAT,oBACA,EAA8BlF,GAA6B,MAApDmF,EAAP,oBACA,EAA4BhG,GAAgC,MAArDiG,EAAP,oBACA,EAA8B3F,GAAkC,MAAzD4F,EAAP,oBAEAC,qBAAU,WAAO,IAAD,EACd,UAAIL,EAAStqB,eAAb,OAAI,EAAkBxB,IAAI4pB,EAAW3nB,YAAYD,EAAQ0iB,MAAMhW,SAC9D,CAACod,EAAStqB,QAASooB,EAAY5nB,IAIlC,OACE,sBAAKmC,MAAO,CAAEioB,OAAQ,OAAQb,MAAO,OAArC,UACE,eAACc,GAAA,EAAD,oCAAqCX,kBAAQM,EAAoB/E,eAEjE,sBAAK9iB,MAAO,CAAEC,QAAS,QAAvB,UACE,gCACE,cAACioB,GAAA,EAAD,+BACA,cAAC,KAAD,CACE5iB,KAAM,CACJ4c,OAAQ2F,EAAoB3F,OAC5BiG,SAAU,CACR,CACE7iB,KAAMuiB,EAAoBhR,OAC1BuR,gBAAiBP,EAAoBhR,OAAOjW,KAAI,SAACmD,EAAGkB,GAAJ,OAAUojB,GAAQpjB,SAIxE6C,QAAS,CAAEwgB,YAAY,EAAOC,QAAS,CAAEC,OAAQ,CAAEvoB,SAAS,KAC5DgoB,OAAO,WAIX,gCACE,cAACC,GAAA,EAAD,kCACA,cAAC,KAAD,CACE5iB,KAAM,CACJ4c,OAAQ4F,EAAkB5F,OAC1BiG,SAAU,CACR,CACE7iB,KAAMwiB,EAAkBjR,OACxBuR,gBAAiBN,EAAkBjR,OAAOjW,KAAI,SAACmD,EAAGkB,GAAJ,OAAUojB,GAAQpjB,SAItE6C,QAAS,CAAEwgB,YAAY,EAAOC,QAAS,CAAEC,OAAQ,CAAEvoB,SAAS,KAC5DgoB,OAAO,WAIX,gCACE,cAACC,GAAA,EAAD,qCACA,cAAC,KAAD,CACE5iB,KAAM,CACJ4c,OAAQ6F,EAAoB7F,OAC5BiG,SAAU,CACR,CACE7iB,KAAMyiB,EAAoBlR,OAC1BuR,gBAAiBL,EAAoBlR,OAAOjW,KAAI,SAACmD,EAAGkB,GAAJ,OAAUojB,GAAQpjB,SAIxE6C,QAAS,CAAEwgB,YAAY,EAAOC,QAAS,CAAEC,OAAQ,CAAEvoB,SAAS,KAC5DgoB,OAAO,cAKb,uBAEA,cAACQ,GAAA,EAAD,CAAUzG,KAAMA,EAAMgF,QAASA,GAAS0B,YA7D9B,SAACjoB,GAAD,OAAYmnB,EAAsBxE,aAAaxgB,EAAUnC,EAAE5E,GAAG2G,cA6DZmmB,YAAU,EAACC,YAAU,IAEjF,uBACA,cAAC,GAAD,QAKN,SAASP,GAAQ1G,GACf,OAAOkH,GAASlH,EAAMkH,GAAS1iB,QAGjC,IAAM0iB,GAAW,CACf,UACA,UACA,UACA,UACA,W,wCCpIWC,GAAiB,WAAO,IAAD,wBAClC,EAA4BvpB,IAAnBwpB,EAAT,oBACA,EAA4BlF,GAA0B,MAAtD,mBAAOnkB,EAAP,KAAiB7B,EAAjB,KACA,EAAgC+jB,KAAvBoH,EAAT,oBAEMrD,EAAQ,kBAAM9nB,EAAQwlB,eAc5B,OACE,8BACE,eAACuC,GAAA,EAAD,CAAQC,OAAQnmB,EAASqT,SAAU+S,QAASH,EAA5C,UACE,eAACI,GAAA,EAAD,yBAAwB,UAAArmB,EAASqT,gBAAT,mBAAmBvK,iBAAnB,eAA8B1M,QAA9B,UAAsC4D,EAASqT,gBAA/C,iBAAsC,EAAmBvK,iBAAzD,aAAsC,EAA8BtL,SAC5F,eAAC+oB,GAAA,EAAD,WACE,eAACgD,GAAA,EAAD,iCAA6BvpB,EAASqT,gBAAtC,iBAA6B,EAAmBhQ,oBAAhD,aAA6B,EAAiCjH,QAC9D,eAACmtB,GAAA,EAAD,iCAA6BvpB,EAASqT,gBAAtC,iBAA6B,EAAmBvK,iBAAhD,aAA6B,EAA8BxG,YAC1D,UAAAtC,EAASqT,gBAAT,mBAAmBvK,iBAAnB,eAA8BuI,QAAS,eAACkY,GAAA,EAAD,+BAA2BvpB,EAASqT,gBAApC,iBAA2B,EAAmBvK,iBAA9C,aAA2B,EAA8BuI,SAEjG,uBACA,eAACmV,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,GAAA,EAAD,qBACA,cAACC,GAAA,EAAD,CAAQ/lB,MAAOZ,EAASwjB,eAAgBoD,MAAM,SAAS9lB,SAAU,SAACqF,GAAD,OAAOhI,EAAQylB,aAAazd,EAAElF,OAAOL,QAAtG,SACGZ,EAASwkB,gBAAgBtjB,KAAI,SAACkjB,GAAD,OAC5B,cAACyC,GAAA,EAAD,CAAkBjmB,MAAOwjB,EAAzB,SACGA,GADYA,WAOrB,uBACCpkB,EAASykB,uBAAuBhe,OAAS,GACxCzG,EAASykB,uBAAuBvjB,KAAI,SAACsoB,EAASjkB,GAAV,OAClC,cAACuhB,GAAA,EAAD,CAEE2C,WAAS,EACT/oB,OAAO,QACPvE,GAAIqtB,EAAUjkB,EACdqhB,MAAO4C,EACPhsB,KAAK,OACLipB,WAAS,EACTM,QAAQ,WACRjmB,SAAU,SAACqF,GAAD,OAAOhI,EAAQ0lB,aAAate,EAAGY,EAAElF,OAAOL,SAR7C4oB,EAAUjkB,MAYrB,uBACA,uBAEA,cAACmkB,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAkBC,QAAS,cAACC,GAAA,EAAD,CAAQC,QAAS9pB,EAASujB,UAAWziB,SAAU,SAACqF,GAAD,OAAYhI,EAAQ6lB,aAAa7d,EAAElF,OAAO6oB,YAAclD,MAAM,qCAI5I,eAACI,GAAA,EAAD,WACE,cAACpB,GAAA,EAAD,CAAQC,QA1DE,kBAAMwD,EAAgBjrB,aAAY,kBAAMkrB,EAAoBnI,OAAOnhB,EAASqT,SAAUvK,UAAU3M,OAAK0O,KAAKob,IA0DpH,6BAEA,cAACL,GAAA,EAAD,CAAQC,QAxDC,kBAAMwD,EAAgB7qB,UAAUwB,EAAS2kB,UAwDlD,uBAEA,cAACiB,GAAA,EAAD,CAAQC,QAxDA,kBAAMwD,EAAgBjrB,aAAY,kBAAMD,EAAQmjB,aAAWzW,KAAKob,IAwDxE,0BAEA,cAACL,GAAA,EAAD,CAAQvkB,UAAWrB,EAASwjB,eAAgBqC,QAtDvC,kBAAMwD,EAAgBjrB,aAAY,kBAAMD,EAAQsL,KAAK4f,EAAgB7qB,eAsD1E,2BAIA,cAAConB,GAAA,EAAD,CAAQvkB,UAAWrB,EAASwjB,eAAgBqC,QA5DvC,kBAAMwD,EAAgBjrB,aAAY,kBAAMD,EAAQV,UAAQoN,KAAKob,IA4DlE,uCC5FN8D,GAAW,GAEFC,GAAc,WACzB,MAAoCnqB,IAApC,mBAAOooB,EAAP,KAAiBoB,EAAjB,KACAU,GAAW9B,EAAS/pB,aAAe6rB,GAEnC,IAAM9D,EAAQ,kBAAMoD,EAAgB7qB,UAAU,KAE9C,OACE,8BACE,eAAC0nB,GAAA,EAAD,CAAQC,OAAQ8B,EAAS/pB,YAAakoB,QAASH,EAA/C,UACE,cAACI,GAAA,EAAD,CAAa/lB,MAAO,CAAEgmB,SAAU,QAAhC,mBAEA,cAACC,GAAA,EAAD,UACE,cAACgD,GAAA,EAAD,CAAmBjpB,MAAO,CAAE2pB,WAAY,OAAxC,SAAkDF,OAGpD,cAAC/C,GAAA,EAAD,UACE,cAACpB,GAAA,EAAD,CAAQqB,KAAK,QAAQpB,QAASI,EAA9B,wB,UCDJiE,GAAsB,SAAC/jB,IAhBR,SAACP,EAAcukB,EAAkBC,GACpD,IAAMC,EAAO,IAAIC,KAAK,CAAC1kB,GAAO,CAAEpI,KAAM4sB,IAEhCvmB,EAAI0mB,SAASC,cAAc,KACjC3mB,EAAE4mB,SAAWN,EACbtmB,EAAE6mB,KAAO/tB,OAAOguB,IAAIC,gBAAgBP,GACpCxmB,EAAEgnB,cACA,IAAIC,WAAW,QAAS,CACtBC,KAAMpuB,OACNquB,SAAS,EACTC,YAAY,KAGhBpnB,EAAEqnB,SAMFC,CAFazlB,KAAKC,UAAU2a,KAA4B,KAAM,GACpD,wBAAmB,IAAI8K,MAAOC,cAAclR,MAAM,KAAK,GAAvD,SACe,cAGrBmR,GAAsB,SAACnlB,GAC3B,IAAMtC,EAAI0mB,SAASC,cAAc,SACjC3mB,EAAErG,KAAO,OACTqG,EAAE0nB,OAAS,mBACX1nB,EAAE2nB,QAAS,EACX3nB,EAAE1H,GAAK,gBACP0H,EAAEgnB,cACA,IAAIC,WAAW,QAAS,CACtBC,KAAMpuB,OACNquB,SAAS,EACTC,YAAY,KAGhBpnB,EAAE4nB,iBAAiB,UAAU,WAC3B,IAAMC,EAAO7nB,EAAE8nB,MAAO,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAC3lB,GAAO,IAAD,IACf4lB,EAAG,UAAG5lB,EAAElF,cAAL,iBAAG,EAAU2D,cAAb,aAAG,EAAkB9B,WACxB8C,EAAOF,KAAK6a,MAAMwL,GAAO,MAC/BhvB,QAAQC,IAAI,SAAU4I,GACtB8a,GAAuB9a,GACvB/B,EAAEqnB,SACFvuB,OAAOqvB,SAASC,UAElBL,EAAOM,WAAWR,EAAM,YAIfS,GAAe,WAC1B,OACE,qBAAK7rB,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOC,eAAgB,gBAArE,SACE,eAAC2rB,GAAA,EAAD,CAAarF,QAAQ,WAAW,aAAW,wBAA3C,UACE,cAACnB,GAAA,EAAD,CAAQC,QAASyF,GAAjB,yBACA,cAAC1F,GAAA,EAAD,CAAQC,QAASqE,GAAjB,+BCjDFmC,GAAYC,YAAY,CAC5BC,QAAS,CACPC,KAAM,UAiCJC,GAAU,WACd,MAAkBtsB,IAAXnC,EAAP,oBACA,OACE,cAAC0uB,EAAA,EAAD,CAAUC,GAAI,CAAEC,MAAO,OAAQC,OAAQ,SAACC,GAAD,OAAWA,EAAMD,OAAOE,MAAQ,IAAK5G,KAAMnoB,EAAlF,SACE,cAACgvB,EAAA,EAAD,CAAkBJ,MAAM,eC3C9BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAaC,UDKhB,WACjB,OACE,cAACC,EAAA,EAAD,CAAeR,MAAOT,GAAtB,SACE,sBAAKkB,UAAU,MAAf,UACE,cAAC,GAAD,IAEA,cAAC,GAAD,IAEA,uBACA,uBAEA,cAAC,GAAD,IAEA,uBAEA,gCACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,OAGF,8BACE,cAAC,GAAD,cC1BA,cAAC,IAAD,CAAOH,KAAK,IAAIC,UCCF,WACtB,OACE,gCACE,qBAAKE,UAAU,sBAAsBjtB,MAAO,CAAEktB,WAAY,OAA1D,SACE,sBAAKD,UAAU,qBAAf,UACE,qBAAKA,UAAU,+BAAf,+BACA,qBAAKA,UAAU,4BAA4BjtB,MAAO,CAAEmtB,UAAW,QAA/D,SACE,mBAAGF,UAAU,WAAW7C,KAAK,uBAA7B,SACE,qBAAK6C,UAAU,WAAWG,IAAKC,EAAUC,IAAK,kBAMtD,sBAAKL,UAAU,sBAAf,UACE,qBAAKA,UAAU,OAAOG,IAAKG,IAC3B,gCACE,sCACM,sBAAMN,UAAU,QAAhB,oBAEN,8IAEF,sDAEF,sBAAKA,UAAU,6BAAf,UACE,mFACA,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKG,IAAKI,IACV,gGAEF,sBAAKP,UAAU,SAAf,UACE,qBAAKG,IAAKK,IACV,yFAEF,sBAAKR,UAAU,SAAf,UACE,qBAAKG,IAAKM,IACV,0EAEF,sBAAKT,UAAU,SAAf,UACE,qBAAKG,IAAKO,IACV,sFAEF,sBAAKV,UAAU,SAAf,UACE,qBAAKG,IAAKQ,IACV,sFAIN,sBAAKX,UAAU,+BAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,eAAf,UACE,yCACA,qBAAKG,IAAKS,SAGd,qBAAKZ,UAAU,cAAf,SACE,qBAAIA,UAAU,aAAd,UACE,uDACA,sDACA,4DACA,uDACA,uDACA,gEACA,qFAKN,sBAAKA,UAAU,aAAf,UACE,sDACA,mBAAG7C,KAAK,sCAAR,2BACA,mBAAGA,KAAK,2CAAR,qBACA,mBAAGA,KAAK,mCAAR,oBACA,mBAAGA,KAAK,uBAAR,sBACA,mBAAGA,KAAK,wBAAR,+BAGF,sBAAKvuB,GAAG,qBAAqBqvB,QAAQ,EAArC,UACE,qBAAKlrB,MAAO,CAAEonB,MAAO,MAAO0G,SAAU,QAAS/a,SAAU,WAAYgb,KAAM,MAAOC,IAAK,SAAvF,SACE,qBAAKZ,IAAKa,EAAO7G,MAAM,WAEzB,qBAAKpnB,MAAO,CAAEonB,MAAO,MAAO0G,SAAU,QAAS/a,SAAU,WAAYgb,KAAM,MAAOC,IAAK,QAAvF,SACE,qBAAKZ,IAAKc,EAAO9G,MAAM,6BD/E/B6C,SAASkE,eAAe,U","file":"static/js/main.699da6b9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {});\n\nexport const networks = _.merge({}, networksOrig, {\n  off: { id: -1, name: \"OffChain\", shortname: \"off\" },\n  btc: { id: -2, name: \"Bitcoin\", shortname: \"btc\" },\n  egld: { id: -508, name: \"Elrond\", shortname: \"egld\" },\n});\n\nexport async function currentNetwork() {\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positionsv1/base/consts\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./PositionV1\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => PositionV1;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): PositionV1 | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = _.uniqueId(args.type + \":\" + args.address + \"-\" + args.name + \"-\");\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: PositionV1, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return web3()?.utils?.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return (!!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address) || isOffChainSymbol(type, address))) || isBitcoinAddress(type, address);\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isOffChainSymbol(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:OffChain:Asset\") && _.trim(address).length > 0;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isBitcoinAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:Bitcoin\") && _.trim(address).length > 0 && address.startsWith(\"bc1\");\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1 } from \"./PositionV1\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\nimport { OffChain } from \"../OffChain\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n  [networks.oeth.id]: \"optimistic-ethereum\",\n  [networks.ftm.id]: \"fantom\",\n};\n\nexport class PriceOracle {\n  warm = false;\n  prices: Record<string, BN> = {\n    USD: ether,\n  };\n\n  getId(networkId: number, token: Token) {\n    if (networkId === networks.egld.id) return (token as ElrondMaiar.ESDT).tokenId;\n    if (networkId === networks.off.id) return (token as OffChain.Asset).symbol;\n    return token.address;\n  }\n\n  overridePrice(networkId: number, token: Token, price: BN) {\n    this.prices[this.getId(networkId, token)] = price;\n  }\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const id = this.getId(networkId, token);\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (networkId === networks.egld.id) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: PositionV1[]) {\n    if (this.warm) return;\n    this.warm = true;\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[networks.egld.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n\n    try {\n      const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n      const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(addresses, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PancakeswapMasterchefV2Abi } from \"../../typechain-abi/PancakeswapMasterchefV2Abi\";\nimport { PancakeswapLpAbi } from \"../../typechain-abi/PancakeswapLpAbi\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // https://docs.pancakeswap.finance/code/migration/masterchef-v2/list-of-farms\n\n  export function register() {\n    const lp_BUSD_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BUSD/BNB\", \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_BTCB_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BTCB/BNB\", \"0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_CAKE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP CAKE/BNB\", \"0x0eD7e52944161450477ee417DE9Cd3a859b14fD0\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ORBS_BUSD = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ORBS/BUSD\", \"0xB87b857670A44356f2b70337E0F218713D2378e8\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOT_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOT/BNB\", \"0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ADA_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ADA/BNB\", \"0x28415ff2C35b65B9E5c7de82126b4015ab9d031F\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_LINK_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP LINK/BNB\", \"0x824eb9faDFb377394430d2744fa7C42916DE3eCe\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOGE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOGE/BNB\", \"0xac109C8025F272414fd9e2faA805a583708A017f\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_TON_BTCB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP TON/BTCB\", \"0x1893da6b92660b85538f58217808685b80fb083e\", require(\"../abi/PancakeswapLpAbi.json\"));\n\n    PositionFactory.register({\n      \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), lp_BUSD_BNB(), 3),\n      \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), lp_CAKE_BNB(), 2),\n      \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), lp_BTCB_BNB(), 11),\n      \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), lp_DOT_BNB(), 5),\n      \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), lp_ADA_BNB(), 4),\n      \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), lp_LINK_BNB(), 6),\n      \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), lp_DOGE_BNB(), 37),\n\n      \"bsc:Pancakeswap:LP:ORBS/BUSD\": (args, oracle) => new LP(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), lp_ORBS_BUSD()),\n      \"bsc:Pancakeswap:LP:TON/BTCB\": (args, oracle) => new LP(args, oracle, erc20(\"TON\", \"0x76A797A59Ba2C17726896976B7B3747BfD1d220f\"), erc20s.bsc.BTCB(), lp_TON_BTCB()),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<PancakeswapMasterchefV2Abi>(require(\"../abi/PancakeswapMasterchefV2Abi.json\"), \"0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652\");\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      lp: this.lpToken.address,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLpAbi,\n      public poolId: number\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n\n  class LP extends Farm {\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpToken: Token & PancakeswapLpAbi) {\n      super(args, oracle, asset0, asset1, lpToken, -1);\n    }\n\n    async load() {\n      const [total0, total1, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpToken.address).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpToken.address).call().then(this.asset1.mantissa),\n        this.lpToken.methods.totalSupply().call().then(this.lpToken.mantissa),\n      ]);\n      const amountLP = await this.lpToken.methods.balanceOf(this.args.address).call().then(this.lpToken.mantissa);\n      this.data.amount0 = total0.mul(amountLP).div(totalSupply);\n      this.data.amount1 = total1.mul(amountLP).div(totalSupply);\n\n      let val0, val1;\n      [this.data.value0, this.data.value1, val0, val1] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, total0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, total1),\n      ]);\n      this.data.tvl = val0.add(val1);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  address: string;\n  id: string;\n  input?: string;\n  name?: string;\n};\n\nexport interface PositionV1 {\n  getName(): string;\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number | BN[] };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { PositionV1, PositionArgs, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport type { AaveSAAVEAbi } from \"../../typechain-abi/AaveSAAVEAbi\";\nimport type { CompoundCTokenAbi } from \"../../typechain-abi/CompoundCTokenAbi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Loops {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n      \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n    });\n  }\n\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements PositionV1 {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20<AaveSAAVEAbi>(\"stkAAVE\", \"0x4da27a545c0c5B758a6BA100e3a049001de870f5\", require(\"../abi/AaveSAAVEAbi.json\"));\n    aave = erc20(\"AAVE\", \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\");\n    weth = erc20s.eth.WETH();\n\n    data = {\n      contract: this.instance.options.address,\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH.sub(this.data.totalDebtETH),\n        value: this.data.totalCollateralValue.sub(this.data.totalDebtValue),\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20(\"Aave: aUSDC\", \"0xBcca60bB61934080951369a648Fb03DF4F96263C\");\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements PositionV1 {\n    WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL = 0.005; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20(\"COMP\", \"0xc00e94Cb662C3520282E6f5717214004A7f26888\");\n\n    data = {\n      contract: this.instance.options.address,\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance.sub(this.data.borrowBalance),\n        value: this.data.supplyBalance.sub(this.data.borrowBalance),\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20<CompoundCTokenAbi>(\"Compound: cUSDC\", \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\", require(\"../abi/CompoundCTokenAbi.json\"));\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\nimport type { RevaultStakingAbi } from \"../../typechain-abi/RevaultStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Revault {\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.CAKE()),\n      \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.BUSD()),\n      \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    });\n    for (let i = 0; i < 4; i++) {\n      PositionFactory.register({\n        [`bsc:Revault:RevaStaking:x${i + 1}`]: (args, oracle) => new RevaStake(args, oracle, i),\n      });\n    }\n  }\n\n  const REVA = () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\");\n  const revaultFarm = () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\");\n  const revaultChef = () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\");\n  const revaStaking = () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\");\n\n  class SingleVault implements PositionV1 {\n    revault = revaultFarm();\n    chef = revaultChef();\n    reva = REVA();\n\n    data = {\n      revault: this.revault.options.address,\n      chef: this.chef.options.address,\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  class RevaStake implements PositionV1 {\n    staking = revaStaking();\n    reva = REVA();\n\n    data = {\n      staking: this.staking.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Unicly {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n      \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n    });\n  }\n\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements PositionV1 {\n    xfarm = contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\");\n    unic = erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\");\n    xunic = erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\");\n    eth = erc20s.eth.WETH();\n\n    data = {\n      xfarm: this.xfarm.options.address,\n      unic: this.unic.options.address,\n      xunic: this.xunic.options.address,\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport Web3 from \"web3\";\n\nexport namespace TokenBalances {\n  class TokenBalance implements PositionV1 {\n    data = {\n      name: \"\",\n      amount: zero,\n      value: zero,\n      totalSupply: zero,\n      mcap: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token: Token) {\n      token.name = args.name || token.name;\n    }\n\n    getName = () => this.data.name;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      [this.data.name, this.data.amount, this.data.totalSupply] = await Promise.all([\n        this.token.methods.name().call(),\n        this.token.methods.balanceOf(this.args.address).call().then(this.token.mantissa),\n        this.token.methods.totalSupply().call().then(this.token.mantissa),\n      ]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.mcap;\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  const nativeTokens = {\n    eth: () => _.merge(erc20s.eth.WETH(), { name: \"ETH\" }),\n    bsc: () => _.merge(erc20s.bsc.WBNB(), { name: \"BNB\" }),\n    poly: () => _.merge(erc20s.poly.WMATIC(), { name: \"MATIC\" }),\n    avax: () => _.merge(erc20s.avax.WAVAX(), { name: \"AVAX\" }),\n    arb: () => _.merge(erc20s.arb.WETH(), { name: \"AETH\" }),\n    oeth: () => _.merge(erc20s.oeth.WETH(), { name: \"ETH\" }),\n  };\n\n  class NativeTokenBalance extends TokenBalance {\n    getName = () => this.token.name;\n\n    async load() {\n      [this.data.amount, this.data.totalSupply] = await Promise.all([web3().eth.getBalance(this.args.address).then(bn), this.token.methods.totalSupply().call().then(bn)]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n  }\n\n  export function register() {\n    _.forEach(networks, (n) => {\n      if (n.id < 0) return;\n      PositionFactory.register({\n        [`${n.shortname}:Token`]: (args, oracle) => new TokenBalance(args, oracle, n, erc20(\"\", Web3.utils.toChecksumAddress(args.input!))),\n      });\n\n      const t = (nativeTokens as any)[n.shortname];\n      if (t) PositionFactory.register({ [`${n.shortname}:TokenBase`]: (args, oracle) => new NativeTokenBalance(args, oracle, n, t()) });\n    });\n  }\n}\n","import { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20, ether, maxUint256, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { UniswapNftManagerAbi } from \"../../typechain-abi/UniswapNftManagerAbi\";\nimport _ from \"lodash\";\nimport { UniswapV3FactoryAbi } from \"../../typechain-abi/UniswapV3FactoryAbi\";\n\nconst maxUint128 = bn(2).pow(bn(128)).subn(1).toString();\n\nexport namespace Uniswap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.WBTC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:USDC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:TON/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20(\"TON\", \"0x582d872A1B094FC48F5DE31D3B73F2D9bE47def1\"), erc20s.eth.WETH()),\n\n      \"arb:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.arb, erc20(\"WBTC\", \"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f\"), erc20s.arb.WETH()),\n\n      \"poly:Uniswap:V3LP:MATIC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.poly, erc20s.poly.WMATIC(), erc20s.poly.WETH()),\n\n      \"oeth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.oeth, erc20s.oeth.WETH(), erc20s.oeth.WBTC()),\n    });\n  }\n\n  class V3LP implements PositionV1 {\n    IL_WARN = bn18(1 / 100);\n\n    nftPositionManager = contract<UniswapNftManagerAbi>(require(\"../abi/UniswapNftManagerAbi.json\"), \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\");\n\n    data = {\n      nftManager: this.nftPositionManager.options.address,\n      id: 0,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      principal0: zero,\n      principal1: zero,\n      valueIfHodl: zero,\n      valueNow: zero,\n      ilValue: zero,\n      il: zero,\n      pending0: zero,\n      pending1: zero,\n      pendingValue0: zero,\n      pendingValue1: zero,\n      totalFeesValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!) || 0;\n      if (this.data.id <= 0) throw new Error(\"unknown positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [this.token0, this.token1];\n    getPendingRewards = () => [\n      { asset: this.token0, amount: this.data.pending0, value: this.data.pendingValue0 },\n      { asset: this.token1, amount: this.data.pending1, value: this.data.pendingValue1 },\n    ];\n    getHealth = () => {\n      if (this.data.value0.isZero() || this.data.value1.isZero())\n        return [\n          {\n            severity: Severity.High,\n            message: \"Range\",\n          },\n        ];\n      if (this.data.ilValue.gt(this.data.totalFeesValue) || this.data.il.gt(this.IL_WARN))\n        return [\n          {\n            severity: Severity.High,\n            message: \"IL\",\n          },\n        ];\n      return [];\n    };\n\n    async load() {\n      const pos = await this.nftPositionManager.methods.positions(this.data.id).call();\n      if (web3().utils.toChecksumAddress(pos.token0) !== web3().utils.toChecksumAddress(this.token0.address)) throw new Error(`invalid tokens for pos, ${JSON.stringify(pos)}`);\n\n      const res = await this.nftPositionManager.methods.decreaseLiquidity([this.data.id, pos.liquidity, 0, 0, maxUint256]).call({ from: this.args.address });\n      this.data.amount0 = await this.token0.mantissa(res.amount0);\n      this.data.amount1 = await this.token1.mantissa(res.amount1);\n\n      [this.data.value0, this.data.value1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.amount0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.amount1),\n      ]);\n\n      if (this.getNetwork().id === networks.eth.id) await this.loadFromPositionGraph();\n\n      if (this.data.tvl.isZero()) await this.loadTVL(parseInt(pos.fee));\n    }\n\n    getContractMethods = () => _.functions(this.nftPositionManager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      alert(`target:\\n${this.nftPositionManager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]), useLegacyTx);\n    }\n\n    async loadFromPositionGraph() {\n      const response = await fetch(\"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: `{position(id:${this.data.id}) {\n          depositedToken0\n          depositedToken1\n          withdrawnToken0\n          withdrawnToken1\n          collectedFeesToken0\n          collectedFeesToken1\n          pool {\n            id\n            totalValueLockedUSD\n          }\n        }\n      }`,\n        }),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      this.data.tvl = bn18(json.data.position.pool.totalValueLockedUSD);\n      this.data.principal0 = bn18(json.data.position.depositedToken0).sub(bn18(json.data.position.withdrawnToken0));\n      this.data.principal1 = bn18(json.data.position.depositedToken1).sub(bn18(json.data.position.withdrawnToken1));\n\n      const [principalValue0, principalValue1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.principal0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.principal1),\n      ]);\n      this.data.valueIfHodl = principalValue0.add(principalValue1);\n      this.data.valueNow = this.data.value0.add(this.data.value1);\n      this.data.ilValue = this.data.valueIfHodl.sub(this.data.valueNow);\n      this.data.il = ether.sub(this.data.valueNow.mul(ether).div(this.data.valueIfHodl));\n      const pending = await this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]).call({ from: this.args.address });\n      this.data.pending0 = await this.token0.mantissa(pending.amount0);\n      this.data.pending1 = await this.token1.mantissa(pending.amount1);\n      this.data.pendingValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.pending0);\n      this.data.pendingValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.pending1);\n      const collectedValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, bn18(json.data.position.collectedFeesToken0));\n      const collectedValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, bn18(json.data.position.collectedFeesToken1));\n\n      this.data.totalFeesValue = this.data.pendingValue0.add(this.data.pendingValue1).add(collectedValue0).add(collectedValue1);\n    }\n\n    async loadTVL(fee: number) {\n      const factory = contract<UniswapV3FactoryAbi>(require(\"../abi/UniswapV3FactoryAbi.json\"), await this.nftPositionManager.methods.factory().call());\n      const pool = await factory.methods.getPool(this.token0.address, this.token1.address, fee).call();\n      const [a0, a1] = await Promise.all([\n        this.token0.methods.balanceOf(pool).call().then(this.token0.mantissa),\n        this.token1.methods.balanceOf(pool).call().then(this.token1.mantissa),\n      ]);\n      const [v0, v1] = await Promise.all([this.oracle.valueOf(this.network.id, this.token0, a0), this.oracle.valueOf(this.network.id, this.token1, a1)]);\n      this.data.tvl = v0.add(v1);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn18, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace OffChain {\n  export function register() {\n    PositionFactory.register({\n      \"x:OffChain:Asset\": (args, oracle) => new AssetPosition(args, oracle),\n    });\n  }\n\n  export type Asset = Token & { symbol: string };\n\n  class AssetPosition implements PositionV1 {\n    token: Asset;\n    data = {\n      amount: zero,\n      value: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.input) throw new Error(\"input amount required\");\n      if (!args.address) throw new Error(\"address symbol required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { symbol: args.address });\n      this.data.amount = bn18(args.input);\n    }\n\n    getName = () => `OffChain:${this.token.name}`;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.off;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => zero;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { Abi, bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport type { AlphaHomoraBankAbi } from \"../../typechain-abi/AlphaHomoraBankAbi\";\nimport _ from \"lodash\";\n\nexport namespace AlphaHomora {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AlphaHomora:WETHe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX()),\n      \"avax:AlphaHomora:WBTCe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WBTCe(), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class LYF implements PositionV1 {\n    alphaHomoraBank = contract<AlphaHomoraBankAbi>(require(\"../abi/AlphaHomoraBankAbi.json\"), \"0x376d16C7dE138B01455a51dA79AD65806E9cd694\");\n    maxHistoryBlocks = {\n      [networks.avax.id]: 10_000_000,\n    };\n\n    data = {\n      contract: this.alphaHomoraBank.options.address,\n      id: 0,\n      supply0: zero,\n      supply1: zero,\n      borrow0: zero,\n      borrow1: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      pending: zero,\n      pendingValue: zero,\n      tvl: zero,\n      valueIfHodl: zero,\n      ilAmount: zero,\n      il: zero,\n      debtRatio: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!);\n      if (!this.data.id) throw new Error(\"invalid input positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => networks.avax;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n\n    async load() {\n      const pos = await this.alphaHomoraBank.methods.getPositionInfo(this.data.id).call();\n      const lpSupplied = bn(pos.collateralSize);\n      const farmAbi = [\n        {\n          inputs: [{ internalType: \"uint256\", name: \"id\", type: \"uint256\" }],\n          name: \"getUnderlyingToken\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ] as Abi;\n      const nft = contract(farmAbi, pos.collToken);\n      const lpToken = erc20(\"\", await nft.methods.getUnderlyingToken(pos.collId).call());\n      const totalLPs = await lpToken.methods.totalSupply().call().then(bn);\n      const share = lpSupplied.mul(ether).div(totalLPs);\n      const total0 = await this.token0.methods.balanceOf(lpToken.address).call().then(this.token0.mantissa);\n      const total1 = await this.token1.methods.balanceOf(lpToken.address).call().then(this.token1.mantissa);\n      this.data.supply0 = total0.mul(share).div(ether);\n      this.data.supply1 = total1.mul(share).div(ether);\n\n      const debts = await this.alphaHomoraBank.methods.getPositionDebts(this.data.id).call();\n      this.data.borrow0 = await this.token0.mantissa(debts.debts[_.indexOf(debts.tokens, this.token0.address)]);\n      this.data.borrow1 = await this.token1.mantissa(debts.debts[_.indexOf(debts.tokens, this.token1.address)]);\n\n      this.data.amount0 = this.data.supply0.sub(this.data.borrow0);\n      this.data.amount1 = this.data.supply1.sub(this.data.borrow1);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.amount1);\n\n      const totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, total0);\n      const totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, total1);\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    //     private async loadDeposits() {\n    //       const depositAbi = _(this.alphaHomoraBank.options.jsonInterface).find((x) => x.type === \"function\" && x.name === \"execute\")!;\n    //       const depositSig = web3().eth.abi.encodeFunctionSignature(depositAbi);\n    //\n    //       const currentBlock = await web3().eth.getBlockNumber();\n    //       const earliestBlock = currentBlock - this.maxHistoryBlocks[this.getNetwork().id];\n    //\n    //       const apiKey = \"\";\n    //       const alltxsResponse = await fetch(`https://api.snowtrace.io/api?module=account&action=txlist\n    // &fromBlock=${earliestBlock}\n    // &toBlock=${currentBlock}\n    // &address=${this.args.address}\n    // &sort=asc&apikey=${apiKey}`);\n    //       const alltxs = await alltxsResponse.json();\n    //       const relevantTxs = _.filter(alltxs.result, (tx) => eqIgnoreCase(tx.to, this.alphaHomoraBank.options.address) && tx.input.startsWith(depositSig));\n    //       if (relevantTxs.length !== 1) {\n    //         console.error(\"no / too many deposits\");\n    //         return;\n    //       }\n    //       const deposit = relevantTxs[0];\n    //       const receipt = await web3().eth.getTransactionReceipt(deposit.hash);\n    //       const events = parseEvents(receipt, this.token0);\n    //\n    //       const depositEvent = events.find((e) => e.event === \"Transfer\" && eqIgnoreCase(e.address, this.token0.address) && eqIgnoreCase(e.returnValues.from, this.args.address))!;\n    //       const deposit0 = bn(depositEvent.returnValues.value);\n    //       const deposit1 = _.reduce(relevantTxs, (sum, tx) => sum.add(bn(tx.value)), zero);\n    //       const valueNow0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, deposit0);\n    //       const valueNow1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, deposit1);\n    //\n    //       this.data.valueIfHodl = valueNow0.add(valueNow1);\n    //       const valueNow = this.data.value0.add(this.data.value1);\n    //       this.data.ilAmount = this.data.valueIfHodl.sub(valueNow);\n    //       this.data.il = ether.sub(valueNow.mul(ether).div(this.data.valueIfHodl));\n    //     }\n\n    //   private async loadDebtRatio() {\n    //     /*\n    //       struct TokenFactors {\n    //     uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //     uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //     uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    //     mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // }\n    //        */\n    //\n    //     /*\n    //       struct TokenFactors {\n    //   uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //   uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //   uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    // }\n    //\n    // IBaseOracle public immutable source; // Main oracle source\n    // mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // mapping(address => bool) public whitelistERC1155; // Mapping from token address to whitelist status\n    //      */\n    //     const proxyOracleAbi: Abi = [\n    //       {\n    //         name: \"tokenFactors\",\n    //         type: \"function\",\n    //         stateMutability: \"view\",\n    //         inputs: [\n    //           {\n    //             internalType: \"address\",\n    //             name: \"token\",\n    //             type: \"address\",\n    //           },\n    //         ],\n    //         outputs: [\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"borrowFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"collateralFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"liqIncentive\",\n    //             type: \"uint256\",\n    //           },\n    //         ],\n    //       },\n    //     ];\n    //     const o = contract(proxyOracleAbi, await this.alphaHomoraBank.methods.oracle().call());\n    //     const f0 = bn((await o.methods.tokenFactors(this.token0.address).call()).borrowFactor).toNumber() / 1e4;\n    //     const f1 = bn((await o.methods.tokenFactors(this.token1.address).call()).borrowFactor).toNumber() / 1e4;\n    //     console.log(f0, f1);\n    //   }\n\n    getContractMethods = () => _.functions(this.alphaHomoraBank.methods);\n    async callContract(method: string, args: string[]) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      alert(`target:\\n${this.alphaHomoraBank.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, eqIgnoreCase, erc20, ether, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { BalancerV2VaultAbi } from \"../../typechain-abi/BalancerV2VaultAbi\";\nimport { BalancerGaugeAbi } from \"../../typechain-abi/BalancerGaugeAbi\";\n\nexport namespace Balancer {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Balancer:WBTC/ETH\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.eth,\n          [erc20s.eth.WBTC(), erc20s.eth.WETH()],\n          \"0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e\",\n          \"0x4E3c048BE671852277Ad6ce29Fd5207aA12fabff\"\n        ),\n\n      \"poly:Balancer:USDC/DAI/MAI/USDT\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.USDC(), erc20s.poly.DAI(), erc20(\"MAI\", \"0xa3Fa99A148fA48D14Ed51d610c367C61876997F1\"), erc20s.poly.USDT()],\n          \"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012\"\n        ),\n      \"poly:Balancer:MATIC/sMATIC\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.WMATIC(), erc20(\"sMATIC\", \"0x3A58a54C066FdC0f2D55FC9C89F0415C92eBf3C4\")],\n          \"0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366\",\n          \"0x9928340f9E1aaAd7dF1D95E27bd9A5c715202a56\"\n        ),\n\n      \"arb:Balancer:MAI/USDT/USDC\": (args, oracle) => {\n        oracle.overridePrice(networks.arb.id, erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"), ether);\n        return new Farm(\n          args,\n          oracle,\n          networks.arb,\n          [\n            erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"),\n            erc20(\"USDT\", \"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9\"),\n            erc20(\"USDC\", \"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8\"),\n          ],\n          \"0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d\"\n        );\n      },\n    });\n  }\n\n  const balToken = {\n    [networks.eth.id]: () => erc20(\"BAL\", \"0xba100000625a3754423978a60c9317c58a424e3D\"),\n    [networks.poly.id]: () => erc20(\"BAL\", \"0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3\"),\n    [networks.arb.id]: () => erc20(\"BAL\", \"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8\"),\n  };\n\n  const balV2 = () => contract<BalancerV2VaultAbi>(require(\"../abi/BalancerV2VaultAbi.json\"), \"0xBA12222222228d8Ba445958a75a0704d566BF2C8\");\n\n  class Farm implements PositionV1 {\n    vault = balV2();\n    gauge = contract<BalancerGaugeAbi>(require(\"../abi/BalancerGaugeAbi.json\"), this.gaugeAddress);\n    bal = balToken[this.network.id]();\n\n    data = {\n      vault: this.vault.options.address,\n      gauge: this.gauge.options.address,\n      amounts: [] as BN[],\n      values: [] as BN[],\n      tvl: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public tokens: Token[], public poolId: string, public gaugeAddress: string = \"\") {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => this.tokens;\n    getAmounts = () => _.map(this.tokens, (asset, i) => ({ asset, amount: this.data.amounts[i] || zero, value: this.data.values[i] || zero }));\n    getRewardAssets = () => [this.bal];\n    getPendingRewards = () => [{ asset: this.bal, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      if (!this.gaugeAddress) return await this.loadFromPool();\n\n      const [lpTokenAddress, workingBalance, totalWorkingBalance] = await Promise.all([\n        this.gauge.methods.lp_token().call(),\n        this.gauge.methods.balanceOf(this.args.address).call().then(bn),\n        this.gauge.methods.totalSupply().call().then(bn),\n      ]);\n      const pending = await this.gauge.methods\n        .claimable_tokens(this.args.address)\n        .call()\n        .catch(() => this.gauge.methods.claimable_reward_write(this.args.address, this.bal.address).call())\n        .then(bn);\n\n      const bpt = erc20(\"BPT\", lpTokenAddress);\n      const [totalBptsStaked, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.gaugeAddress).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n      const bptBalance = totalBptsStaked.mul(workingBalance).div(totalWorkingBalance);\n\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(totalBptsStaked).div(bptTotalSupply))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.add(bn(b)), zero);\n\n      this.data.pending = pending;\n      this.data.pendingValue = await this.oracle.valueOf(this.network.id, this.bal, this.data.pending);\n    }\n\n    private async loadFromPool() {\n      const bpt = erc20(\n        \"BPT\",\n        await this.vault.methods\n          .getPool(this.poolId)\n          .call()\n          .then((x) => x[\"0\"])\n      );\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      const [bptBalance, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.args.address).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.add(bn(b)), zero);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.gauge.methods.claimable_tokens(this.args.address), useLegacyTx);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { networks } from \"./base/consts\";\n\nexport namespace ElrondMaiar {\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    MEX_EGLD: () => esdt(\"MEX/EGLD LP\", \"EGLDMEX-0be9e5\", 18),\n    USDC_EGLD: () => esdt(\"USDC/EGLD LP\", \"EGLDUSDC-594e5e\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string; lp: ESDT };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    L_USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\",\n      lp: tokens.MEX_EGLD(),\n    }),\n    L_MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\",\n      lp: tokens.MEX_EGLD(),\n    }),\n  };\n\n  class Farm implements PositionV1 {\n    mex = tokens.MEX();\n\n    data = {\n      pool: this.strategy.pool,\n      farm: this.strategy.farm,\n      lp: this.strategy.lp.tokenId,\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.egld;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () =>\n      this.getAssets().length > 1\n        ? [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n            {\n              asset: this.getAssets()[1],\n              amount: this.data.amount1,\n              value: this.data.value1,\n            },\n          ]\n        : [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n          ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [asset0, asset1] = this.getAssets();\n      const [farmEsdts, pairEsdts, totalLPSupply] = await Promise.all([getESDTs(this.strategy.farm), getESDTs(this.strategy.pool), getTotalSupply(this.strategy.lp)]);\n      const totalLPStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === this.strategy.lp.tokenId)!.balance);\n      const asset0InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset0.tokenId)!.balance);\n      const asset1InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset1.tokenId)!.balance);\n      const asset0TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset0, totalLPStaked.mul(asset0InPair).div(totalLPSupply));\n      const asset1TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset1, totalLPStaked.mul(asset1InPair).div(totalLPSupply));\n      this.data.tvl = asset0TotalValue.add(asset1TotalValue);\n\n      const esdts = await getESDTs(this.args.address);\n      const lpNameSuffix = this.strategy.lp.tokenId.split(\"-\")[0];\n      const lps = _.find(esdts, (t) => t.tokenIdentifier.startsWith(lpNameSuffix));\n      if (!lps) return;\n\n      this.data.lpBalanceStaked = bn(lps!.balance);\n      this.data.amount0 = this.data.lpBalanceStaked.mul(asset0InPair).div(totalLPSupply);\n      this.data.amount1 = this.data.lpBalanceStaked.mul(asset1InPair).div(totalLPSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, asset1, this.data.amount1);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\",\n      lp: tokens.MEX(),\n    }),\n    L_MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\",\n      lp: tokens.LKMEX(),\n    }),\n  };\n\n  class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as Strategy).lp];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const asset = this.getAssets()[0];\n\n      const farmEsdts = await getESDTs(this.strategy.farm);\n      const totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      this.data.tvl = await this.oracle.valueOf(networks.egld.id, asset, totalAssetStaked);\n\n      const esdts = await getESDTs(this.args.address);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === this.strategy.pool.toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n\n      this.data.amount0 = bn(farmNftWrapper.balance.toString());\n      this.data.value0 = await this.oracle.valueOf(networks.egld.id, asset, this.data.amount0);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  async function getESDTs(address: string) {\n    const response = await fetch(`https://gateway.elrond.com/address/${address}/esdt`);\n    const json = await response.json();\n    return _.get(json, [\"data\", \"esdts\"], []);\n  }\n\n  async function getTotalSupply(token: ESDT) {\n    const response = await fetch(`https://gateway.elrond.com/network/esdt/supply/${token.tokenId}`);\n    const json = await response.json();\n    return bn(_.get(json, [\"data\", \"supply\"], \"0\"));\n  }\n\n  export function register() {\n    PositionFactory.register({\n      \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n      \"egld:Maiar:LFarm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_USDC_EGLD()),\n      \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n      \"egld:Maiar:LFarm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_MEX_EGLD()),\n      \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n      \"egld:Maiar:MEXLFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.L_MEX()),\n    });\n  }\n\n  // export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n  //   const assets = _.map(tokens, (t) => t());\n\n  // https://gateway.elrond.com/address/:bech32Address/balance\n\n  // const [esdts, balanceEGLD] = await Promise.all([getESDTs(address), provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString()))]);\n\n  // const balances = await Promise.all(\n  //   _(esdts)\n  //     .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n  //     .filter((t) => !!t.asset)\n  //     .map(async (t) => {\n  //       const amount = to18(t.esdt.balance, t.asset!.dec);\n  //       return {\n  //         asset: t.asset!,\n  //         amount,\n  //         value: await oracle.valueOf(networks.egld.id, t.asset!, amount),\n  //       };\n  //     })\n  //     .value()\n  // );\n\n  // balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(networks.egld.id, tokens.EGLD(), balanceEGLD) });\n\n  // return balances;\n  // }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n\n// farms v2:\n// EGLD/MEX => MEX : erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\n// EGLD/MEX => LKMEX: erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\n// EGLD/USDC => MEX: erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\n// EGLD/USDC => LKMEX: erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\n// MEX => MEX: erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\n// MEX => LKMEX: erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\n","import _ from \"lodash\";\nimport type { TraderJoeFarmAbi } from \"../../typechain-abi/TraderJoeFarmAbi\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace TraderJoe {\n  const orbs = () => erc20(\"ORBS\", \"0x340fE1D898ECCAad394e2ba0fC1F93d27c7b717A\");\n\n  export function register() {\n    PositionFactory.register({\n      \"avax:TraderJoe:Farm:WETH/AVAX\": (args, oracle) => new Farm(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX(), 26),\n\n      \"avax:TraderJoe:LP:ORBS/AVAX\": (args, oracle) => new LP(args, oracle, orbs(), erc20s.avax.WAVAX(), \"0x0315522354037e48C75756aD68358CE185dad911\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<TraderJoeFarmAbi>(require(\"../abi/TraderJoeFarmAbi.json\"), \"0xd6a4F121CA35509aF06A0Be99093d08462f53052\");\n    reward = erc20(\"JOE\", \"0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd\");\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingTokens(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken);\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.mul(lpStaked).div(lpTotalSupply))).add(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.mul(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending.pendingJoe);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"TraderJoeLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn9, contract, erc20, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { RibbonThetaVaultAbi } from \"../../typechain-abi/RibbonThetaVaultAbi\";\nimport type { RibbonGaugeAbi } from \"../../typechain-abi/RibbonGaugeAbi\";\n\nexport namespace Ribbon {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Ribbon:T-CC:ETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x25751853Eab4D0eB3652B5eB6ecB102A2789644B\"),\n      \"eth:Ribbon:T-CC:stETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x53773E034d9784153471813dacAFF53dBBB78E8c\"),\n      \"eth:Ribbon:T-CC:WBTC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WBTC(), \"0x65a833afDc250D9d38f8CD9bC2B1E3132dB13B2F\"),\n      \"eth:Ribbon:T-CSP:yvUSDC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.USDC(), \"0xCc323557c71C0D1D20a1861Dc69c06C5f3cC9624\"),\n\n      \"avax:Ribbon:T-CC:AVAX\": (args, oracle) => new ThetaVault(args, oracle, networks.avax, erc20s.avax.WAVAX(), \"0x98d03125c62DaE2328D9d3cb32b7B969e6a87787\"),\n    });\n  }\n\n  const rewardTokens = {\n    [networks.eth.id]: () => erc20(\"RBN\", \"0x6123B0049F904d730dB3C36a31167D9d4121fA6B\"),\n    [networks.avax.id]: () => erc20s.avax.WAVAX(),\n  };\n\n  class ThetaVault implements PositionV1 {\n    rewardToken = rewardTokens[this.network.id]();\n    vault = contract<RibbonThetaVaultAbi>(require(\"../abi/RibbonThetaVaultAbi.json\"), this.vaultAddress);\n\n    data = {\n      vault: this.vaultAddress,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      strike: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset: Token, public vaultAddress: string) {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.asset];\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.rewardToken];\n    getPendingRewards = () => [{ asset: this.rewardToken, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const { amount, unredeemedShares } = await this.vault.methods.depositReceipts(this.args.address).call();\n      this.data.amount = await this.asset.mantissa(bn(amount).add(bn(unredeemedShares)));\n\n      // farms only on ETH\n      if (this.network.id === networks.eth.id) {\n        const farm = contract<RibbonGaugeAbi>(require(\"../abi/RibbonGaugeAbi.json\"), await this.vault.methods.liquidityGauge().call());\n        const [fbalance, fratio] = await Promise.all([farm.methods.balanceOf(this.args.address).call().then(bn), this.vault.methods.pricePerShare().call().then(bn)]);\n        const staked = await this.asset.mantissa(fbalance.mul(fratio).div(await this.asset.amount(1)));\n        this.data.amount = this.data.amount.add(staked);\n\n        this.data.pending = await farm.methods.claimable_tokens(this.args.address).call().then(bn);\n        this.data.pendingValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardToken, this.data.pending);\n      }\n\n      this.data.value = await this.oracle.valueOf(this.network.id, this.asset, this.data.amount);\n\n      const total = await this.asset.mantissa(await this.vault.methods.totalBalance().call());\n      this.data.tvl = await this.oracle.valueOf(this.network.id, this.asset, total);\n\n      const currentOption = contract(require(\"../abi/RibbonOptionAbi.json\"), await this.vault.methods.currentOption().call());\n      this.data.strike = bn9(await currentOption.methods[\"strikePrice()\"]().call()).muln(10);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, ether, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { LooksrareStakingAbi } from \"../../typechain-abi/LooksrareStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace LooksRare {\n  export function register() {\n    PositionFactory.register({\n      \"eth:LooksRare:LooksStaking\": (args, oracle) => new Staking(args, oracle),\n      \"eth:LooksRare:LooksAutoCompound\": (args, oracle) => new AutoCompund(args, oracle),\n    });\n  }\n\n  class Staking implements PositionV1 {\n    eth = erc20s.eth.WETH();\n    looks = erc20(\"LOOKS\", \"0xf4d2888d29D722226FafA5d9B24F9164c092421E\");\n    vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0xBcD7254A1D759EFA08eC7c3291B2E85c5dCC12ce\");\n    checkPending = true;\n\n    data = {\n      vault: this.vault.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getNetwork = () => networks.eth;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.looks];\n    getAmounts = () => [{ asset: this.looks, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.eth];\n    getPendingRewards = () => [{ asset: this.eth, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const [stakedLooks, pendingEth, totalShares, sharePrice] = await Promise.all([\n        this.vault.methods.calculateSharesValueInLOOKS(this.args.address).call().then(bn),\n        this.checkPending ? this.vault.methods.calculatePendingRewards(this.args.address).call().then(bn) : zero,\n        this.vault.methods.totalShares().call().then(bn),\n        this.vault.methods.calculateSharePriceInLOOKS().call().then(bn),\n      ]);\n      this.data.amount = stakedLooks;\n      this.data.pendingAmount = pendingEth;\n      const tvlAmount = totalShares.mul(sharePrice).div(ether);\n\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.looks, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.looks, tvlAmount),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class AutoCompund extends Staking {\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      super(args, oracle);\n      this.vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0x3ab16Af1315dc6C95F83Cbf522fecF98D00fd9ba\");\n      this.data.vault = this.vault.options.address;\n      this.checkPending = false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, Contract, contract, erc20, erc20s, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { SushiswapMinichefAbi } from \"../../typechain-abi/SushiswapMinichefAbi\";\n\nexport namespace SushiSwap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:SushiSwap:Farm:USDC/ETH\": (args, oracle) => new Farm(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH(), 1),\n      \"poly:SushiSwap:Farm:ETH/MATIC\": (args, oracle) => new Farm(args, oracle, networks.poly, erc20s.poly.WETH(), erc20s.poly.WMATIC(), 0),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = getFarmContract(this.network);\n    reward = getRewardContract(this.network);\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingSushi(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken || (await this.masterchef.methods.lpToken(this.poolId).call()));\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.mul(lpStaked).div(lpTotalSupply))).add(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.mul(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      const tx = this.network.id === networks.poly.id ? this.masterchef.methods.deposit(this.poolId, 0, this.args.address) : this.masterchef.methods.deposit(this.poolId, 0);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n  }\n\n  function getFarmContract(network: Network): Contract {\n    switch (network.shortname) {\n      case \"poly\":\n        return contract<SushiswapMinichefAbi>(require(\"../abi/SushiswapMinichefAbi.json\"), \"0x0769fd68dFb93167989C6f7254cd0D766Fb2841F\");\n      case \"eth\":\n      default:\n        return contract(require(\"../abi/SushiswapMasterchefAbi.json\"), \"0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd\");\n    }\n  }\n\n  function getRewardContract(network: Network) {\n    switch (network.shortname) {\n      case \"poly\":\n        return erc20(\"SUSHI\", \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\");\n      case \"eth\":\n      default:\n        return erc20(\"SUSHI\", \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\");\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, zero } from \"@defi.org/web3-candies\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Fodl {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n    });\n  }\n\n  export class XFodlStake implements PositionV1 {\n    fodl = erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\");\n    xfodl = erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\");\n\n    data = {\n      fodl: this.fodl.address,\n      xfodl: this.xfodl.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(bn),\n        this.xfodl.methods.totalSupply().call().then(bn),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(bn),\n      ]);\n      this.data.amount = myXfodl.mul(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { QuickswapStakingAbi } from \"../../typechain-abi/QuickswapStakingAbi\";\nimport _ from \"lodash\";\n\nexport namespace QuickSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x614389EaAE0A6821DC49062D56BDA3d9d45Fa2ff\");\n  const quick = () => erc20(\"QUICK\", \"0x831753DD7087CaC61aB5644b308642cc1c33Dc13\");\n\n  export function register() {\n    PositionFactory.register({\n      \"poly:QuickSwap:Farm:ORBS/USDC\": (args, oracle) => new Farm(args, oracle, erc20s.poly.USDC(), orbs(), \"0x9CA237962823A0a74bbC8354764e1DAC9e4057F0\"),\n\n      \"poly:QuickSwap:LP:ORBS/QUICK\": (args, oracle) => new LP(args, oracle, orbs(), quick(), \"0x882624931b4A799d50242e5b25E2Fa2719E4d072\"),\n      \"poly:QuickSwap:LP:ORBS/JPYC\": (args, oracle) =>\n        new LP(args, oracle, orbs(), erc20(\"JPYC\", \"0x431D5dfF03120AFA4bDf332c61A6e1766eF37BDB\"), \"0xD01C074C78E9647a5ddAE2648f1A089b98D5380a\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    staking = contract<QuickswapStakingAbi>(require(\"../abi/QuickswapStakingAbi.json\"), this.stakingAddress);\n    reward = erc20(\"dQUICK\", \"0xf28164A485B0B2C90639E47b0f377b4a438a16B1\");\n\n    data = {\n      contract: this.stakingAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public stakingAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, totalStaked, earned, lpAddress] = await Promise.all([\n        this.staking.methods.balanceOf(this.args.address).call().then(bn),\n        this.staking.methods.totalSupply().call().then(bn),\n        this.staking.methods.earned(this.args.address).call().then(bn),\n        this.staking.methods.stakingToken().call(),\n      ]);\n      this.data.rewardAmount = earned;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(lp.mantissa),\n      ]);\n      this.data.amount0 = stakedBalance.mul(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.mul(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_amount0 = totalStaked.mul(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.mul(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.add(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.staking.methods.stake(0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"QuickswapLP\", this.lpAddress);\n\n    data = {\n      contract: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [balance, totalSupply] = await Promise.all([this.lp.methods.balanceOf(this.args.address).call().then(bn), this.lp.methods.totalSupply().call().then(bn)]);\n\n      const [amount0InLp, amount1InLp] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n      ]);\n      this.data.amount0 = amount0InLp.mul(balance).div(totalSupply);\n      this.data.amount1 = amount1InLp.mul(balance).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, amount0InLp);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, amount1InLp);\n      this.data.tvl = tvl_value0.add(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PangolinChefAbi } from \"../../typechain-abi/PangolinChefAbi\";\nimport _ from \"lodash\";\n\nexport namespace Pangolin {\n  const orbs = () => erc20(\"ORBS\", \"0x340fE1D898ECCAad394e2ba0fC1F93d27c7b717A\");\n  const png = () => erc20(\"PNG\", \"0x60781C2586D68229fde47564546784ab3fACA982\");\n\n  export function register() {\n    PositionFactory.register({\n      \"avax:Pangolin:Farm:ORBS/AVAX\": (args, oracle) => new Farm(args, oracle, orbs(), erc20s.avax.WAVAX(), 36),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    chef = contract<PangolinChefAbi>(require(\"../abi/PangolinChefAbi.json\"), \"0x1f806f7C8dED893fd3caE279191ad7Aa3798E928\");\n    reward = png();\n\n    data = {\n      chef: this.chef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.avax;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, pending, lpAddress] = await Promise.all([\n        this.chef.methods\n          .userInfo(this.poolId, this.args.address)\n          .call()\n          .then((x) => bn(x.amount)),\n        this.chef.methods.pendingReward(this.poolId, this.args.address).call().then(bn),\n        this.chef.methods.lpToken(this.poolId).call(),\n      ]);\n      this.data.rewardAmount = pending;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply, totalStaked] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(bn),\n        lp.methods.balanceOf(this.chef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = stakedBalance.mul(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.mul(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n\n      const tvl_amount0 = totalStaked.mul(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.mul(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.isZero() ? tvl_value1.muln(2) : tvl_value0.add(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.chef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.chef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.chef.methods as any)[method](...args);\n      alert(`target:\\n${this.chef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.chef.methods.deposit(this.poolId, 0, this.args.address), useLegacyTx);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { contract, erc20, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { RookLiquidityPoolAbi } from \"../../typechain-abi/RookLiquidityPoolAbi\";\nimport _ from \"lodash\";\n\nexport namespace Rook {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Rook:xRook\": (args, oracle) => new XRook(args, oracle),\n    });\n  }\n\n  class XRook implements PositionV1 {\n    pool = contract<RookLiquidityPoolAbi>(require(\"../abi/RookLiquidityPoolAbi.json\"), \"0x4F868C1aa37fCf307ab38D215382e88FCA6275E2\");\n    rook = erc20(\"ROOK\", \"0xfA5047c9c78B8877af97BDcb85Db743fD7313d4a\");\n    xrook = erc20(\"xROOK\", \"0x8aC32F0a635a0896a8428A9c31fBf1AB06ecf489\");\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [this.xrook];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getTVL = () => this.data.tvl;\n    getAmounts = () => [{ asset: this.rook, amount: this.data.amount, value: this.data.value }];\n\n    async load() {\n      this.data.amount = await this.pool.methods.underlyingBalance(this.rook.address, this.args.address).call().then(this.rook.mantissa);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.rook, this.data.amount);\n      const tvlAmount = await this.pool.methods.totalValueLocked(this.rook.address).call().then(this.rook.mantissa);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.rook, tvlAmount);\n    }\n\n    getContractMethods = () => _.functions(this.xrook.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xrook.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.xrook.methods as any)[method](...args);\n      alert(`target:\\n${this.xrook.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks } from \"./base/consts\";\nimport { erc20, Network, Token, zero } from \"@defi.org/web3-candies\";\n\nexport namespace Aave {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AaveV3:aAVAX\": (args, oracle) => new Collateral(args, oracle, networks.avax, erc20(\"aAVAX\", \"0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97\"), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class Collateral implements PositionV1 {\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public aToken: Token, public token: Token) {}\n\n    getName = () => \"\";\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.aToken];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      const [amount, totalSupply] = await Promise.all([\n        this.aToken.methods.balanceOf(this.args.address).call().then(this.aToken.mantissa),\n        this.aToken.methods.totalSupply().call().then(this.aToken.mantissa),\n      ]);\n\n      this.data.amount = amount;\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.token, totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.tvl;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport {contract, erc20, Token, zero} from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport type {SushiswapMasterchefAbi} from \"../../typechain-abi/SushiswapMasterchefAbi\";\n\nexport namespace SpookySwap {\n  const masterchef = () => contract<SushiswapMasterchefAbi>(require(\"../abi/SushiswapMasterchefAbi.json\"), \"0x18b4f774fdC7BF685daeeF66c2990b1dDd9ea6aD\")\n  const orbs = () => erc20(\"ORBS\", \"0x3E01B7E242D5AF8064cB9A8F9468aC0f8683617c\");\n  const usdc = () => erc20(\"USDC\", \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\");\n  const ftm = () => erc20(\"FTM\", \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\");\n\n  export function register() {\n    PositionFactory.register({\n\n      \"ftm:SpookySwap:LP:ORBS/USDC\": (args, oracle) => new LP(args, oracle, orbs(), usdc(), \"0x4FaA520fe975228F54b30c6996129950E975BD8f\", 43),\n      \"ftm:SpookySwap:LP:ORBS/FTM\": (args, oracle) => new LP(args, oracle, orbs(), ftm(), \"0x3Ae87E47c69144d1794a78c0709485978C1002A5\", 0),\n\n    });\n  }\n\n\n  class LP implements PositionV1 {\n    lp = erc20(\"SpookySwapLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string, public poolId:number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.ftm;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      let [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      if (lpAmount.isZero()) {\n        lpAmount = await this.lp.mantissa((await masterchef().methods.userInfo(this.poolId, this.args.address).call()).amount)\n      }\n      this.data.amount0 = total0.mul(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport {  erc20, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace SpiritSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x3E01B7E242D5AF8064cB9A8F9468aC0f8683617c\");\n  const usdc = () => erc20(\"USDC\", \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\");\n  const ftm = () => erc20(\"FTM\", \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\");\n\n  export function register() {\n    PositionFactory.register({\n\n      \"ftm:SpiritSwap:LP:ORBS/USDC\": (args, oracle) => new LP(args, oracle, orbs(), usdc(), \"0x4B668A229740b4F6d04cE2D1b05648Ef1d508EC1\"),\n      \"ftm:SpiritSwap:LP:ORBS/FTM\": (args, oracle) => new LP(args, oracle, orbs(), ftm(), \"0x1F0700387Dfe4Aec7b8C99fbf54cdCDbBB5603B5\"),\n\n    });\n  }\n\n\n  class LP implements PositionV1 {\n    lp = erc20(\"SpiritSwapLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.ftm;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      \n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n      \n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn18, convertDecimals, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace Bitcoin {\n  export function register() {\n    PositionFactory.register({\n      \"x:Bitcoin\": (args, oracle) => new BitcoinBalance(args, oracle),\n    });\n  }\n\n  export type BTC = Token & { bech32: string };\n\n  class BitcoinBalance implements PositionV1 {\n    token: BTC;\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.address) throw new Error(\"bitcoin bech32 bc1 address required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { bech32: args.address });\n    }\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.btc;\n    getData = () => this.data;\n    getAssets = () => [this.token];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      this.data.tvl = await fetchTVL();\n      this.data.amount = await fetchBalance(this.token.bech32);\n      this.data.value = await fetchPrice().then((p) => this.data.amount.muln(p));\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  async function fetchTVL() {\n    const r = await fetch(\"https://blockchain.info/q/marketcap\");\n    const json = await r.json();\n    return bn18(json);\n  }\n\n  async function fetchBalance(bech32: string) {\n    const r = await fetch(`https://blockchain.info/q/addressbalance/${bech32}`);\n    const json = await r.json();\n    return convertDecimals(json, 8, 18);\n  }\n\n  async function fetchPrice() {\n    const r = await fetch(\"https://blockchain.info/q/24hrprice\");\n    const json = await r.json();\n    return parseFloat(json);\n  }\n}\n","import { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { TokenBalances } from \"./TokenBalances\";\nimport { Uniswap } from \"./Uniswap\";\nimport { OffChain } from \"./OffChain\";\nimport { AlphaHomora } from \"./AlphaHomora\";\nimport { Balancer } from \"./Balancer\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { TraderJoe } from \"./TraderJoe\";\nimport { Ribbon } from \"./Ribbon\";\nimport { LooksRare } from \"./LooksRare\";\nimport { SushiSwap } from \"./SushiSwap\";\nimport { Fodl } from \"./Fodl\";\nimport { QuickSwap } from \"./QuickSwap\";\nimport { Pangolin } from \"./Pangolin\";\nimport { Rook } from \"./Rook\";\nimport { Aave } from \"./Aave\";\nimport { SpookySwap } from \"./SpookySwap\";\nimport { SpiritSwap } from \"./SpiritSwap\";\nimport { Bitcoin } from \"./Bitcoin\";\n\nexport function registerAllPositions() {\n  OffChain.register();\n  TokenBalances.register();\n  Bitcoin.register();\n\n  Uniswap.register();\n  SushiSwap.register();\n  Pancakeswap.register();\n  Revault.register();\n  AlphaHomora.register();\n  Balancer.register();\n  ElrondMaiar.register();\n  TraderJoe.register();\n  Ribbon.register();\n  LooksRare.register();\n  Unicly.register();\n  Fodl.register();\n  Loops.register();\n  QuickSwap.register();\n  Pangolin.register();\n  Rook.register();\n  Aave.register();\n  SpookySwap.register();\n  SpiritSwap.register();\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { PositionV1, PositionArgs } from \"../positionsv1/base/PositionV1\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport { registerAllPositions } from \"../positionsv1\";\nimport { to3, Token, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positionsv1/base/consts\";\nimport BN from \"bn.js\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, PositionV1>,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string, input: string, name: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, input, name, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    update: (position: PositionV1, newArgs: PositionArgs) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = newArgs;\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions...\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p\n        .load()\n        .then(() => ((p as any).loaded = true))\n        .catch((e) => {\n          (p as any).loaded = false;\n          console.log(p.getArgs().type, e);\n        });\n    })\n  );\n  api.setState({ positions });\n  console.log(`...done loading ${network?.name}`);\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\n\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        name: p.getArgs().name || p.getName() || p.getArgs().type,\n        chain: p.getNetwork().name,\n        health: p.getHealth(),\n        marketValue: num(marketValue(p)),\n        pending: num(p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero)),\n        tvl: num(p.getTVL()),\n        position: p,\n        address: p.getArgs().address,\n        loaded: !!(p as any).loaded,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nexport const useAllPositionsValuePerPosition = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.map(state.positions, (position) => ({ position, marketValue: Math.round(num(marketValue(position))) })),\n    (rows) => {\n      const sorted = _.sortBy(rows, (r) => -r.marketValue);\n      return {\n        labels: sorted.map((p) => p.position.getArgs().name || p.position.getName() || p.position.getArgs().type),\n        values: sorted.map((p) => p.marketValue),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerAssetClass = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .map((position) => position.getAmounts())\n        .flatten()\n        .value(),\n    (amounts) => {\n      const reduced = _(amounts)\n        .groupBy((a) => assetClass(a.asset))\n        .map((values, key) => ({ assetClass: key, value: _.reduce(values, (sum, a) => sum + num(a.value), 0) }))\n        .sortBy((v) => -v.value)\n        .value();\n      return {\n        labels: _.map(reduced, (ac) => ac.assetClass),\n        values: _.map(reduced, (ac) => Math.round(ac.value)),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerChain = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.groupBy(state.positions, (p) => p.getNetwork().name),\n    (grouped) => {\n      const totalPerChain = _(grouped)\n        .map((positions, chain) => ({\n          chain,\n          marketValue: Math.round(num(totalMarketValue(positions))),\n        }))\n        .sortBy((t) => -t.marketValue)\n        .value();\n      return {\n        labels: _.map(totalPerChain, (t) => t.chain),\n        values: _.map(totalPerChain, (t) => t.marketValue),\n        grandtotal: _.reduce(totalPerChain, (sum, t) => sum + t.marketValue, 0),\n      };\n    }\n  ),\n});\n\nfunction num(bn: BN) {\n  return to3(bn, 18).toNumber() / 1000;\n}\n\nfunction marketValue(p: PositionV1) {\n  return _.reduce(p.getAmounts(), (sum, v) => sum.add(v.value), zero);\n}\n\nfunction totalMarketValue(positions: PositionV1[]) {\n  return _.reduce(positions, (sum, pos) => sum.add(marketValue(pos)), zero);\n}\n\nfunction assetClass(a: Token): string {\n  const ext = (a as any).symbol || (a as any).tokenId;\n  if (ext) return ext;\n  if (a.name.toLowerCase().includes(\"usd\") || [\"dai\", \"mai\", \"mim\"].includes(a.name.toLowerCase())) return \"USD\";\n  if (a.name.toLowerCase().includes(\"btc\")) return \"BTC\";\n  if (a.name.toLowerCase().includes(\"eth\")) return \"ETH\";\n  if (a.name.toLowerCase().includes(\"bnb\")) return \"BNB\";\n  if (a.name.toLowerCase().includes(\"avax\")) return \"AVAX\";\n  if (a.name.toLowerCase().includes(\"matic\")) return \"MATIC\";\n  if (a.name.toLowerCase().includes(\"ftm\")) return \"FTM\";\n  if ((a as any).bech32) return \"BTC\";\n  return a.name || a.address;\n}\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as PositionV1 | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: PositionV1) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        try {\n          const result = await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs));\n          showAlert(_.toString(result) || \"undefined\");\n        } catch (e: any) {\n          showAlert(_.toString(e));\n        }\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), fmtData),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      rawData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n\nfunction fmtData(data: any): any {\n  if (_.isArray(data)) return _.map(data, fmtData);\n  return data instanceof BN ? fmt18(data) : data;\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport _ from \"lodash\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    input: \"\",\n    name: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", input: \"\", name: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        address = _.trim(address);\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n\n    setInput:\n      (input: string) =>\n      async ({ setState }) => {\n        input = _.trim(input);\n        setState({ input });\n      },\n\n    setName:\n      (name: string) =>\n      async ({ setState }) => {\n        name = _.trim(name);\n        setState({ name });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address, state.input, state.name)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Name?\" onChange={(e) => actions.setName(e.target.value)} />}\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Input?\" onChange={(e) => actions.setInput(e.target.value)} />}\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions, useAllPositionsValuePerAssetClass, useAllPositionsValuePerChain, useAllPositionsValuePerPosition } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positionsv1/base/PositionV1\";\nimport { ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { ArcElement, Chart as ChartJS, Legend, Tooltip } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst columns: GridColDef[] = [\n  { field: \"loaded\", headerName: \"🌐\", headerAlign: \"center\", width: 20, align: \"center\", valueFormatter: (v) => (v.value ? \"✅\" : \"❔\") },\n  { field: \"chain\", headerName: \"Chain\", headerAlign: \"center\", width: 120, align: \"left\" },\n  { field: \"name\", headerName: \"Position\", headerAlign: \"center\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"center\",\n    valueFormatter: (v) => {\n      if (!v.value || !(v.value as Threat[]).length) return \"🟢\";\n      return (v.value as Threat[]).map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"marketValue\",\n    headerName: \"Market Value\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    headerAlign: \"center\",\n    width: 130,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", headerAlign: \"center\", width: 450, align: \"left\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n  const [totalValuesPerChain] = useAllPositionsValuePerChain(null);\n  const [valuesPerPosition] = useAllPositionsValuePerPosition(null);\n  const [valuesPerAssetClass] = useAllPositionsValuePerAssetClass(null);\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <ListItemText>Total Market Value: $ {commafy(totalValuesPerChain.grandtotal)}</ListItemText>\n\n      <div style={{ display: \"flex\" }}>\n        <div>\n          <ListItemText>Value Per Chain:</ListItemText>\n          <Pie\n            data={{\n              labels: totalValuesPerChain.labels,\n              datasets: [\n                {\n                  data: totalValuesPerChain.values,\n                  backgroundColor: totalValuesPerChain.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Position:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerPosition.labels,\n              datasets: [\n                {\n                  data: valuesPerPosition.values,\n                  backgroundColor: valuesPerPosition.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Asset Class:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerAssetClass.labels,\n              datasets: [\n                {\n                  data: valuesPerAssetClass.values,\n                  backgroundColor: valuesPerAssetClass.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n      </div>\n\n      <br />\n\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <br />\n      <AddPositionBtn />\n    </div>\n  );\n};\n\nfunction colorOf(num: number) {\n  return bgColors[num % bgColors.length];\n}\n\nconst bgColors = [\n  \"#413d5e\",\n  \"#495371\",\n  \"#638c93\",\n  \"#98B4AA\",\n  \"#F1E0AC\", //\n];\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  // const updatePos = () => appStateActions.withLoading(() => allPositionsActions.update(selector.position!, selector.position!.getArgs())).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.rawData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.name || selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n          {selector.position?.getArgs()?.input && <DialogContentText>Input: {selector.position?.getArgs()?.input}</DialogContentText>}\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positionsv1/base/PositionV1\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}