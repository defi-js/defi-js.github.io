{"version":3,"sources":["../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positions/consts.ts","state/AppState.ts","positions/base/PositionFactory.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","ui/AppHeader.tsx","positions/base/PriceOracle.ts","positions/Revault.ts","positions/Unicly.ts","positions/Fodl.ts","positions/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","positions/base/Balances.ts","state/WalletsState.ts","state/AddWalletDialogState.ts","ui/AddWalletDialog.tsx","ui/AllBalancesTable.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","erc20s","_","merge","erc20sOrig","eth","UNIC","erc20","XUNIC","Unicly_UPUNK","Unicly_UJENNY","Unicly_LP_UPUNK_ETH","require","Unicly_LP_UJENNY_ETH","FODL","FODL_XFODL","bsc","REVA","contracts","contractsOrig","Unicly_XUnicVault","contract","Revault_Farm","Revault_Chef","Revault_RevaStaking","networks","networksOrig","currentNetwork","a","web3","net","getId","netId","find","n","sendWithTxType","tx","useLegacyTx","account","from","type","send","SUPPORTED_NETWORKS","values","concat","ElrondMaiar","network","isNetworkDisabled","avax","AppState","createStore","name","initialState","loading","wallet","alertDialog","actions","withLoading","thunk","setState","_withLoading","showAlert","alert","clickNetwork","networkId","getState","_ethereum","removeAllListeners","on","_onConnect","request","method","_switchNetwork","window","ethereum","t","message","stack","setWeb3Instance","Web3","console","log","params","chainId","utils","numberToHex","Severity","useAppState","createHook","useIsAppConnected","selector","state","isAddress","useIsLoading","useAppActions","AppHeader","style","display","flexDirection","justifyContent","margin","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","ToggleButton","textTransform","disabled","shortname","coingeckoIds","poly","arb","PriceOracle","prices","token","amount","isElrond","tokenId","address","this","isZero","fetchPricesElrond","fetchPrices","toString","zero","mul","div","ether","positions","bynetwork","groupBy","getNetwork","coingeckoFetches","filter","getAssets","getRewardAssets","flatten","uniq","Promise","all","addresses","isEmpty","coingeckoId","v","k","url","join","fetch","response","json","result","mapKeys","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","accept","pragma","JSON","stringify","data","inputs","results","registry","oracle","isElrondAddress","startsWith","Address","fromString","types","args","current","PositionFactory","Farm","asset0","asset1","lpToken","poolId","masterchef","Pancakeswap_Masterchef","cake","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","bn","mantissa","valueOf","muln","encodeABI","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","owner","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","SingleVault","revault","chef","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","WBNB","BUSD","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","RevaStake","staking","pendingAmount","userPoolInfo","poolInfo","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","getxUNICRate","xunicrate","totalLPTokens","Unicly","XFodlStake","fodl","xfodl","then","myXfodl","xfodlTotalSupply","fodlStaked","Fodl","register","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","Strategies","FarmStrategies","USDC_EGLD","MEX_EGLD","MexFarm","MexFarmStrategies","MEX","RIDE","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","ready","load","api","addPosition","position","create","delete","posId","sendTransaction","harvest","warmup","shouldLoad","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","health","to3","reduce","sum","add","toNumber","useAllPositions","useAllPositionsReady","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","length","split","BN","fmt18","positionMethods","selectedMethodArgTypes","assets","rewardAssets","positionData","AddPositionDialogState","show","valid","allTypes","sort","setType","isValidArgs","setAddress","useAddPositionDialog","AddPositionBtn","isConnected","Button","onClick","AddPositionDialog","appActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","columns","field","headerName","width","align","headerAlign","valueFormatter","commafy","toFixed","sortable","AllPositionsTable","appState","rows","positionDialogActions","useEffect","total","useMemo","row","height","onCellClick","autoHeight","hideFooter","ListItem","ListItemText","PositionDialog","appStateActions","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","nativeAssets","WMATIC","WAVAX","fetchBalances","balances","Elrond","fetchBalancesETH","getBalance","balance","push","getAllETHTokenInfos","fetchMulticallBalances","withbalance","forEach","throttle","it","decimals","uniqBy","reject","includes","blacklist","remaining","chunk","retries","performMulticallBalanceOf","flattened","shuffle","sleep","multicall","Multicall","web3Instance","tryAggregate","calls","reference","contractAddress","erc20abi","methodName","methodParameters","callsReturnContext","returnValues","hex","loadFromStorage","saveToStorage","WalletsState","wallets","fetched","useWalletsRows","useWalletsBalancesRows","allbalances","flatMap","amounts","r","reverse","AddWalletDialogState","isValidWallet","useAddWalletDialog","AddWalletBtn","AddWalletDialog","walletsActions","List","w","disablePadding","ListItemButton","primary","AllBalancesTable","connected","positionsReady","hidden","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","addEventListener","file","files","reader","FileReader","onload","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById","provider","ProxyProvider","timeout","EGLD","esdt","LKMEX","LKFARM","EGLD_MEX_FARM","MEX_POOL_NFT","RIDE_POOL_NFT","getAddressEsdtList","getAccount","esdts","balanceEGLD","tokenIdentifier","dec","pool","farm","mex","lpBalanceStaked","pair","SmartContract","base64","farmingTokenReserve","token0Id","token0r","token1r","lpTotalSupply","farmNfts","creator","nft","parseLPFromFarmTokenAttr","attributes","b","callAndParseGetPendingRewards","percentOfPool","token1","reward","proxy","farmNft","totalAssetStaked","getAddress","farmEsdts","farmNftWrapper","parsePrincipalAmountFromWrappedFarmTokenAttr","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","balanceFarmNFT","BigUIntValue","BigNumberExt","max","BytesValue","codec","decodeNested","typeFarmTokenAttributes","initial_farming_amount","typeWrappedFarmTokenAttributes","farm_token_id","farm_token_amount","BinaryCodec","StructType","StructFieldDefinition","TokenIdentifierType","U64Type","BigUIntType","U8Type","BooleanType"],"mappings":"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","file":"static/js/main.291d6a85.chunk.js","sourcesContent":["var map = {\n\t\"./bls.js\": 538,\n\t\"./bls_c.js\": 539\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1038;","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, contract, contracts as contractsOrig, erc20, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\nimport type { RevaultStakingAbi } from \"../../typechain-abi/RevaultStakingAbi\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {\n  eth: {\n    UNIC: () => erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\"),\n    XUNIC: () => erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\"),\n\n    Unicly_UPUNK: () => erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n    Unicly_UJENNY: () => erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n    Unicly_LP_UPUNK_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n    Unicly_LP_UJENNY_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n\n    FODL: () => erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\"),\n    FODL_XFODL: () => erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\"),\n  },\n  bsc: {\n    REVA: () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\"),\n  },\n});\n\nexport const contracts = _.merge({}, contractsOrig, {\n  eth: {\n    Unicly_XUnicVault: () => contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\"),\n  },\n  bsc: {\n    Revault_Farm: () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\"),\n    Revault_Chef: () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\"),\n    Revault_RevaStaking: () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\"),\n  },\n});\n\nexport const networks = _.merge({}, networksOrig, {\n  //\n});\n\nexport async function currentNetwork() {\n  const netId = await web3().eth.net.getId();\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positions/consts\";\nimport _ from \"lodash\";\nimport { ElrondMaiar } from \"../positions/ElrondMaiar\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport const SUPPORTED_NETWORKS = _.values(networks).concat(ElrondMaiar.network);\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network === networks.avax || network === ElrondMaiar.network;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = args.type + \":\" + args.address;\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return web3()?.utils?.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { bn, contracts, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./consts\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./consts\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, SUPPORTED_NETWORKS, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(SUPPORTED_NETWORKS, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"../consts\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const isElrond = networkId === ElrondMaiar.network.id || !!(token as any).tokenId;\n    const id = isElrond ? (token as ElrondMaiar.ESDT).tokenId : token.address;\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (isElrond) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n    await Promise.all([\n      this.fetchPricesElrond(\n        _(bynetwork[ElrondMaiar.network.id])\n          .map((p) => p.getAssets().concat(p.getRewardAssets()))\n          .flatten()\n          .map((a) => (a as any).tokenId)\n          .uniq()\n          .value()\n      ),\n      ...coingeckoFetches,\n    ]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n    const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n    const response = await fetch(url);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          accept: \"*/*\",\n          \"cache-control\": \"no-cache\",\n          \"content-type\": \"application/json\",\n          pragma: \"no-cache\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s, networks, sendWithTxType } from \"./consts\";\nimport _ from \"lodash\";\n\nexport namespace Revault {\n  export class SingleVault implements Position {\n    revault = contracts.bsc.Revault_Farm();\n    chef = contracts.bsc.Revault_Chef();\n    reva = erc20s.bsc.REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  export class RevaStake implements Position {\n    staking = contracts.bsc.Revault_RevaStaking();\n    reva = erc20s.bsc.REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { bn, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s, networks, sendWithTxType } from \"./consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20s.eth.Unicly_UPUNK(),\n      lp: erc20s.eth.Unicly_LP_UPUNK_ETH(),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20s.eth.Unicly_UJENNY(),\n      lp: erc20s.eth.Unicly_LP_UJENNY_ETH(),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements Position {\n    xfarm = contracts.eth.Unicly_XUnicVault();\n    unic = erc20s.eth.UNIC();\n    xunic = erc20s.eth.XUNIC();\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./consts\";\nimport _ from \"lodash\";\n\nexport namespace Fodl {\n  export class XFodlStake implements Position {\n    fodl = erc20s.eth.FODL();\n    xfodl = erc20s.eth.FODL_XFODL();\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(bn),\n        this.xfodl.methods.totalSupply().call().then(bn),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(bn),\n      ]);\n      this.data.amount = myXfodl.mul(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"./consts\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { Fodl } from \"./Fodl\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n    \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n    \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n    \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n    \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n    \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n\n    \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.CAKE()),\n    \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.BUSD()),\n    \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    \"bsc:Revault:RevaStaking:x1\": (args, oracle) => new Revault.RevaStake(args, oracle, 0),\n    \"bsc:Revault:RevaStaking:x2\": (args, oracle) => new Revault.RevaStake(args, oracle, 1),\n    \"bsc:Revault:RevaStaking:x3\": (args, oracle) => new Revault.RevaStake(args, oracle, 2),\n    \"bsc:Revault:RevaStaking:x4\": (args, oracle) => new Revault.RevaStake(args, oracle, 3),\n\n    \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n    \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new ElrondMaiar.MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n    \"egld:Maiar:MEXFarm:RIDE\": (args, oracle) => new ElrondMaiar.MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.RIDE()),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { to3, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positions/consts\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n    ready: false,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  if (!api.getState().ready) await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p.load().catch((e) => console.log(p.getArgs().type, e));\n    })\n  );\n  api.setState({ positions, ready: true });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        health: p.getHealth(),\n        value:\n          to3(\n            p.getAmounts().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        pending:\n          to3(\n            p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        tvl: to3(p.getTVL(), 18).toNumber() / 1000,\n        position: p,\n        address: p.getArgs().address,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\nexport const useAllPositionsReady = createHook(AllPositionsState, {\n  selector: (state) => state.ready,\n});\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      positionData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport { ListItem, ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Position\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    width: 100,\n    align: \"center\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => {\n      const value = v.value as Threat[];\n      if (!value.length) return \"🟢\";\n      return value.map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"value\",\n    headerName: \"Market Value\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    width: 120,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", width: 450, align: \"left\", headerAlign: \"center\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  const total = useMemo(() => commafy(_.reduce(rows, (sum, row) => sum + row.value, 0).toFixed(0)), [rows]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <ListItem>\n        <ListItemText>Total Positions Market Value: $ {total}</ListItemText>\n      </ListItem>\n\n      <AddPositionBtn />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.positionData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import { ElrondMaiar } from \"../ElrondMaiar\";\nimport { TokenAmount } from \"./Position\";\nimport { bn, erc20, erc20abi, Network, sleep, throttle, web3, zero } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport { erc20s, networks } from \"../consts\";\n\nconst nativeAssets = {\n  eth: () => erc20(\"ETH\", erc20s.eth.WETH().address),\n  bsc: () => erc20(\"BNB\", erc20s.bsc.WBNB().address),\n  poly: () => erc20(\"MATIC\", erc20s.poly.WMATIC().address),\n  arb: () => erc20(\"AETH\", erc20s.arb.WETH().address),\n  avax: () => erc20(\"AVAX\", erc20s.avax.WAVAX().address),\n};\n\nexport async function fetchBalances(oracle: PriceOracle, network: Network, wallet: string): Promise<Record<string, TokenAmount[]>> {\n  if (network.id === ElrondMaiar.network.id || wallet.startsWith(\"erd1\")) {\n    return { Elrond: await ElrondMaiar.balances(oracle, wallet) };\n  }\n\n  let result: TokenAmount[] = [];\n\n  if (network.id === networks.eth.id) {\n    result = await fetchBalancesETH(oracle, wallet);\n  }\n\n  const balance = await web3().eth.getBalance(wallet);\n  const asset = (nativeAssets as any)[network.shortname]();\n  const amount = bn(balance);\n  const value = await oracle.valueOf(network.id, asset, amount);\n  result.push({ asset, amount, value });\n\n  return { [network.name]: result };\n}\n\nasync function fetchBalancesETH(oracle: PriceOracle, wallet: string) {\n  const tokens = await getAllETHTokenInfos();\n  await fetchMulticallBalances(wallet, tokens);\n  const withbalance = _.filter(tokens, (t) => !!t.balance && !bn(t.balance).isZero());\n  _.forEach(withbalance, (t) => (t.address = Web3.utils.toChecksumAddress(t.address)));\n\n  await oracle.fetchPrices(\n    networks.eth.id,\n    _.map(withbalance, (t) => t.address)\n  );\n\n  return await Promise.all(\n    _.map(withbalance, (t) => {\n      const asset = erc20(t.name, t.address);\n      return asset.mantissa(t.balance || zero).then((amount) =>\n        oracle.valueOf(networks.eth.id, asset, amount).then((value) => ({\n          asset,\n          amount,\n          value,\n        }))\n      );\n    })\n  );\n}\n\ntype TokenInfo = { chainId: number; address: string; decimals: number; logoURI: string; name: string; symbol: string; balance?: BN };\n\nconst getAllETHTokenInfos = throttle(this, 60 * 60 * 24, async () => {\n  const json = await fetch(`https://tokens.coingecko.com/uniswap/all.json`).then((it) => it.json());\n  const result = _(json.tokens as TokenInfo[])\n    .filter((t) => t.decimals >= 0 && t.decimals <= 18)\n    .uniqBy((t) => t.address)\n    .reject((t) => _.includes(blacklist, t.address))\n    .value();\n\n  delete json.tokens;\n  console.log(\"fetched info for\", result.length, \"tokens on ETH\");\n  return result;\n});\n\nasync function fetchMulticallBalances(wallet: string, tokens: TokenInfo[]) {\n  if (!tokens.length) return;\n\n  console.log(\"fetching balance for\", tokens.length);\n\n  let remaining = _.chunk(tokens, 400);\n  for (let retries = 0; remaining.length && retries < 10; retries++) {\n    remaining = await Promise.all(_.map(remaining, (tokens) => performMulticallBalanceOf(wallet, tokens)));\n    const flattened = _.flatten(remaining);\n    if (flattened.length && flattened.length < 10) console.log(\"warning:\", flattened);\n    remaining = _(flattened)\n      .shuffle()\n      .chunk(flattened.length / 10)\n      .value();\n    await sleep(0.5);\n  }\n  console.log(\"finally remaining\", _(remaining).flatten().size());\n}\n\nasync function performMulticallBalanceOf(wallet: string, tokens: TokenInfo[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t.address,\n          contractAddress: t.address,\n          abi: erc20abi,\n          calls: [{ reference: t.address, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n    _.forEach(result.results, (v) => {\n      const t = _.find(tokens, (t) => t.address === v.callsReturnContext[0].reference)!;\n      t.balance = bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16);\n    });\n    result.results = {};\n    return [];\n  } catch (e) {\n    return tokens;\n  }\n}\n\nconst blacklist = [\n  \"0x2859021eE7F2Cb10162E67F33Af2D22764B31aFf\",\n  \"0x5e3845A1d78DB544613EdbE43Dc1Ea497266d3b8\",\n  \"0x47140a767a861f7a1f3b0dd22a2f463421c28814\",\n  \"0x1c5b760f133220855340003b43cc9113ec494823\",\n  \"0x2859021ee7f2cb10162e67f33af2d22764b31aff\",\n  \"0x5e3845a1d78db544613edbe43dc1ea497266d3b8\",\n  \"0xec71d11ad500aadbe5af0297882b741b11d647bb\",\n];\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { fetchBalances } from \"../positions/base/Balances\";\nimport { TokenAmount } from \"../positions/base/Position\";\nimport { to3 } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { currentNetwork } from \"../positions/consts\";\n\nconst STORAGE_KEY = \"Wallets:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"[]\") as string[];\nconst saveToStorage = (data: string[]) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\ntype WalletBalances = Record<string, TokenAmount[]>;\n\nconst WalletsState = createStore({\n  name: \"WalletsState\",\n\n  initialState: {\n    wallets: [] as string[],\n    balances: {} as Record<string, WalletBalances>,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    add: (address: string) => async (api) => {\n      const current = api.getState().wallets;\n      saveToStorage(_.uniq(_.concat(current, address)));\n      await load(api);\n    },\n\n    delete: (address: string) => async (api) => {\n      const current = api.getState().wallets;\n      const wallets = _.filter(current, (a) => a !== address);\n      saveToStorage(wallets);\n      api.setState({ wallets });\n      await load(api);\n    },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof WalletsState.initialState>) {\n  console.log(\"LOAD wallets\");\n  const wallets = _.merge(loadFromStorage(), api.getState().wallets);\n  api.setState({ wallets });\n\n  const network = await currentNetwork();\n  if (!network) return;\n\n  for (const wallet of wallets) {\n    const fetched = await fetchBalances(PositionFactory.oracle, network, wallet);\n    const balances = _.merge({}, api.getState().balances, { [wallet]: fetched } as Record<string, WalletBalances>);\n    api.setState({ balances });\n  }\n}\n\nexport const useWalletsRows = createHook(WalletsState, { selector: (state) => state.wallets });\n\nexport const useWalletsBalancesRows = createHook(WalletsState, {\n  selector: createSelector(\n    (state) => state.balances,\n    (allbalances) =>\n      _(allbalances)\n        .flatMap((balances, wallet) =>\n          _.flatMap(balances, (amounts, network) =>\n            _.map(amounts, (t) => ({\n              id: `${wallet}:${network}:${t.asset.name}`,\n              wallet,\n              network,\n              asset: t.asset.name,\n              amount: to3(t.amount, 18).toNumber() / 1000,\n              value: to3(t.value, 18).toNumber() / 1000,\n            }))\n          )\n        )\n        .filter((r) => r.value >= 1)\n        .sortBy((r) => r.value)\n        .reverse()\n        .value()\n  ),\n});\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddWalletDialogState = createStore({\n  name: \"AddWalletDialogState\",\n\n  initialState: {\n    show: false,\n    address: \"\",\n    valid: false,\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState }) => {\n        const valid = PositionFactory.isValidWallet(address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddWalletDialog = createHook(AddWalletDialogState);\n","import React from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemButton, ListItemText, TextField } from \"@mui/material\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { useAddWalletDialog } from \"../state/AddWalletDialogState\";\nimport _ from \"lodash\";\nimport { useWalletsRows } from \"../state/WalletsState\";\n\nexport const AddWalletBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddWalletDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Wallet\n    </Button>\n  );\n};\n\nexport const AddWalletDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddWalletDialog();\n  const [wallets, walletsActions] = useWalletsRows();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => walletsActions.add(state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Wallet</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Wallet Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n\n          <div>Tracking:</div>\n          <List>\n            {_.map(wallets, (w) => (\n              <ListItem key={w} disablePadding>\n                <ListItemButton>\n                  <ListItemText primary={w} onClick={() => appActions.withLoading(() => walletsActions.delete(w))} />\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { useWalletsBalancesRows } from \"../state/WalletsState\";\nimport { useAllPositionsReady } from \"../state/AllPositionsState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\nimport { ListItem, ListItemText } from \"@mui/material\";\nimport { AddWalletBtn } from \"./AddWalletDialog\";\n\nconst columns: GridColDef[] = [\n  { field: \"wallet\", headerName: \"Wallet\", width: 450, align: \"left\" },\n  { field: \"network\", headerName: \"Network\", width: 80, align: \"left\", headerAlign: \"center\" },\n  { field: \"asset\", headerName: \"Asset\", width: 150, align: \"left\", headerAlign: \"center\" },\n  {\n    field: \"value\",\n    headerName: \"Market Value\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n    headerAlign: \"center\",\n  },\n  {\n    field: \"amount\",\n    headerName: \"Amount\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => commafy(_.toString(v.value)),\n    sortable: true,\n    headerAlign: \"center\",\n  },\n];\n\nexport const AllBalancesTable = () => {\n  const [connected] = useIsAppConnected();\n  const [, appActions] = useAppActions();\n  const [positionsReady] = useAllPositionsReady();\n  const [rows, actions] = useWalletsBalancesRows(null);\n\n  useEffect(() => {\n    if (connected && positionsReady) appActions.withLoading(actions.load).then();\n  }, [connected, appActions, actions, positionsReady]);\n\n  const click = (p: any) => {};\n\n  const total = useMemo(() => commafy(_.reduce(rows, (sum, row) => sum + row.value, 0).toFixed(0)), [rows]);\n\n  return (\n    <div hidden={!positionsReady} style={{ height: \"100%\", width: \"90%\" }}>\n      <div hidden={!rows.length}>\n        <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n        <ListItem>\n          <ListItemText>Total Wallets Market Value: $ {total}</ListItemText>\n        </ListItem>\n      </div>\n\n      <AddWalletBtn />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positions/base/Position\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { AllBalancesTable } from \"./ui/AllBalancesTable\";\nimport { AddWalletDialog } from \"./ui/AddWalletDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n        <AllBalancesTable />\n\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <AddWalletDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { Position, PositionArgs, TokenAmount } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport {\n  Address,\n  BigUIntType,\n  BigUIntValue,\n  BinaryCodec,\n  BytesValue,\n  ContractFunction,\n  ProxyProvider,\n  SmartContract,\n  StructFieldDefinition,\n  StructType,\n  TokenIdentifierType,\n  U64Type,\n} from \"@elrondnetwork/erdjs\";\nimport BigNumberExt from \"bignumber.js\";\nimport { BooleanType, U8Type } from \"@elrondnetwork/erdjs/out\";\n\nexport namespace ElrondMaiar {\n  export const network = { id: -508, name: \"Elrond\", shortname: \"egld\" };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n    EGLD_MEX_FARM: () => esdt(\"EGLDMEXF\", \"EGLDMEXF-5bcc57\", 18),\n    MEX_POOL_NFT: () => esdt(\"MEX Pool NFT\", \"MEXFARM-e7af52\", 18),\n    RIDE_POOL_NFT: () => esdt(\"RIDE Pool NFT\", \"MEXRIDEF-bf0320\", 18),\n  };\n\n  export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n    const assets = _.map(tokens, (t) => t());\n\n    const [esdts, balanceEGLD] = await Promise.all([\n      provider.getAddressEsdtList(new Address(address)),\n      provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString())),\n    ]);\n\n    const balances = await Promise.all(\n      _(esdts)\n        .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n        .filter((t) => !!t.asset)\n        .map(async (t) => {\n          const amount = to18(t.esdt.balance, t.asset!.dec);\n          return {\n            asset: t.asset!,\n            amount,\n            value: await oracle.valueOf(network.id, t.asset!, amount),\n          };\n        })\n        .value()\n    );\n\n    balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(network.id, tokens.EGLD(), balanceEGLD) });\n\n    return balances;\n  }\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n  };\n\n  export class Farm implements Position {\n    mex = tokens.MEX();\n\n    data = {\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => network;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [esdts, farmingTokenReserve, token0Id, reserves] = await Promise.all([\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      const [token0r, token1r, lpTotalSupply] = reserves;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      if (!farmNfts.length) return;\n\n      this.data.lpBalanceStaked = farmNfts.map((nft) => parseLPFromFarmTokenAttr(nft.attributes)).reduce((sum, b) => sum.add(b), zero);\n\n      this.data.rewardAmount = await Promise.all(farmNfts.map((nft) => callAndParseGetPendingRewards(farm, nft.balance, nft.attributes))).then((r) =>\n        r.reduce((sum, r) => sum.add(r), zero)\n      );\n\n      const percentOfPool = this.data.lpBalanceStaked.mul(ether).div(lpTotalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl, this.data.rewardValue] = await Promise.all([\n        this.oracle.valueOf(network.id, this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], token1.muln(2).mul(farmingTokenReserve).div(lpTotalSupply)),\n        this.oracle.valueOf(network.id, this.mex, this.data.rewardAmount),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export type MexPoolStrategy = Strategy & { nft: ESDT; reward: ESDT };\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\",\n      nft: tokens.MEX_POOL_NFT(),\n      reward: tokens.MEX(),\n    }),\n    RIDE: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq5e2m9df5yxxkmr86rusejc979arzayjk2jpsz2q43s\",\n      nft: tokens.RIDE_POOL_NFT(),\n      reward: tokens.RIDE(),\n    }),\n  };\n\n  export class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as MexPoolStrategy).reward];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const account = new Address(this.args.address);\n      const proxy = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n      const farmNft = (this.strategy as MexPoolStrategy).nft;\n      const asset = this.getAssets()[0];\n\n      let totalAssetStaked = await call(farm, \"getFarmingTokenReserve\")\n        .then((r) => base64(r[0]))\n        .catch(() => zero);\n      if (totalAssetStaked.isZero()) {\n        const farmEsdts = await provider.getAddressEsdtList(farm.getAddress());\n        totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      }\n      this.data.tvl = await this.oracle.valueOf(network.id, asset, totalAssetStaked);\n\n      const esdts = await provider.getAddressEsdtList(account);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === proxy.getAddress().toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n      this.data.amount0 = parsePrincipalAmountFromWrappedFarmTokenAttr(farmNftWrapper.attributes, farmNft);\n      this.data.value0 = await this.oracle.valueOf(network.id, asset, this.data.amount0);\n\n      this.data.rewardAmount = await callAndParseGetPendingRewards(farm, farmNftWrapper.balance, farmNftWrapper.attributes);\n      this.data.rewardValue = await this.oracle.valueOf(network.id, this.getRewardAssets()[0], this.data.rewardAmount);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n\n  async function callAndParseGetPendingRewards(farm: SmartContract, balanceFarmNFT: BN, attributes: string) {\n    const result = await farm.runQuery(provider, {\n      func: new ContractFunction(\"calculateRewardsForGivenPosition\"),\n      args: [new BigUIntValue(BigNumberExt.max(balanceFarmNFT.toString())), new BytesValue(Buffer.from(attributes, \"base64\"))],\n    });\n    if (result.returnData.length) return base64(result.returnData[0]);\n\n    return zero;\n  }\n\n  function parseLPFromFarmTokenAttr(attributes: string) {\n    const [struct] = codec.decodeNested(Buffer.from(attributes, \"base64\"), typeFarmTokenAttributes);\n    const data = struct.valueOf();\n    return bn((data.initial_farming_amount as BigNumberExt).toString(16), 16);\n  }\n\n  function parsePrincipalAmountFromWrappedFarmTokenAttr(attributes: string, asset: ESDT) {\n    const [struct] = codec.decodeNested(Buffer.from(attributes, \"base64\"), typeWrappedFarmTokenAttributes);\n    const data = struct.valueOf();\n    if ((data.farm_token_id as Buffer).toString() !== asset.tokenId) return zero;\n\n    return bn((data.farm_token_amount as BigNumberExt).toString(16), 16);\n  }\n\n  const codec = new BinaryCodec();\n  const typeWrappedFarmTokenAttributes = new StructType(\"WrappedFarmTokenAttributes\", [\n    new StructFieldDefinition(\"farm_token_id\", \"\", new TokenIdentifierType()),\n    new StructFieldDefinition(\"farm_token_nonce\", \"\", new U64Type()),\n    new StructFieldDefinition(\"farm_token_amount\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"farming_token_id\", \"\", new TokenIdentifierType()),\n    new StructFieldDefinition(\"farming_token_nonce\", \"\", new U64Type()),\n    new StructFieldDefinition(\"farming_token_amount\", \"\", new BigUIntType()),\n  ]);\n  const typeFarmTokenAttributes = new StructType(\"FarmTokenAttributes\", [\n    new StructFieldDefinition(\"reward_per_share\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"original_entering_epoch\", \"\", new U64Type()),\n    new StructFieldDefinition(\"entering_epoch\", \"\", new U64Type()),\n    new StructFieldDefinition(\"apr_multiplier\", \"\", new U8Type()),\n    new StructFieldDefinition(\"with_locked_rewards\", \"\", new BooleanType()),\n    new StructFieldDefinition(\"initial_farming_amount\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"compounded_reward\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"current_farm_amount\", \"\", new BigUIntType()),\n  ]);\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n"],"sourceRoot":""}