{"version":3,"sources":["../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positions/base/consts.ts","state/AppState.ts","positions/base/PositionFactory.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","ui/AppHeader.tsx","positions/base/PriceOracle.ts","positions/Revault.ts","positions/Unicly.ts","positions/Fodl.ts","positions/TokenBalances.ts","positions/Uniswap.ts","positions/OffChain.ts","positions/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","erc20s","_","merge","erc20sOrig","networks","contractsOrig","networksOrig","egld","ElrondMaiar","network","off","name","shortname","currentNetwork","a","netId","bn","window","ethereum","chainId","toNumber","console","log","find","n","sendWithTxType","tx","useLegacyTx","account","from","type","send","isNetworkDisabled","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","setState","_withLoading","showAlert","alert","clickNetwork","networkId","getState","_ethereum","removeAllListeners","on","_onConnect","request","method","_switchNetwork","t","message","stack","setWeb3Instance","Web3","params","utils","numberToHex","Severity","useAppState","createHook","useIsAppConnected","selector","state","isAddress","useIsLoading","useAppActions","AppHeader","style","display","flexDirection","justifyContent","margin","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","ToggleButton","textTransform","disabled","coingeckoIds","eth","bsc","poly","arb","avax","PriceOracle","prices","USD","ether","token","tokenId","symbol","address","price","this","getId","amount","isZero","fetchPricesElrond","fetchPrices","toString","zero","mul","div","positions","bynetwork","groupBy","getNetwork","coingeckoFetches","filter","getAssets","concat","getRewardAssets","flatten","uniq","elrondFetch","Promise","all","addresses","isEmpty","coingeckoId","v","k","url","join","fetch","response","json","result","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","JSON","stringify","data","inputs","results","registry","oracle","isElrondAddress","startsWith","Address","fromString","types","args","uniqueId","current","trim","length","isOffChainSymbol","PositionFactory","register","Farm","BUSD","WBNB","Pancakeswap_LP_BUSD_BNB","CAKE","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","asset0","asset1","lpToken","poolId","masterchef","contracts","Pancakeswap_Masterchef","cake","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getName","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","encodeABI","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","contract","require","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","sub","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","owner","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","SingleVault","RevaStake","REVA","erc20","revault","chef","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","staking","pendingAmount","userPoolInfo","poolInfo","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","getxUNICRate","xunicrate","totalLPTokens","Unicly","XFodlStake","fodl","xfodl","then","myXfodl","xfodlTotalSupply","fodlStaked","Fodl","positionGraph","posId","position","pool","totalValueLockedUSD","principal0","depositedToken0","withdrawnToken0","principal1","depositedToken1","withdrawnToken1","collectedFees0","collectedFeesToken0","collectedFees1","collectedFeesToken1","TokenBalance","mcap","nativeTokens","WMATIC","WAVAX","NativeTokenBalance","getBalance","forEach","input","TokenBalances","V3LP","WBTC","token1","nftPositionManager","valueIfHodl","valueNow","ilValue","il","pos","decreaseLiquidity","maxUint256","res","graph","principalValue0","principalValue1","add","Uniswap","AssetPosition","zeroAddress","OffChain","Strategies","FarmStrategies","USDC_EGLD","MEX_EGLD","MexFarm","MexFarmStrategies","MEX","RIDE","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","ready","load","api","addPosition","create","update","newArgs","delete","sendTransaction","harvest","warmup","values","shouldLoad","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","chain","health","to3","reduce","sum","useAllPositions","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","split","BN","fmt18","positionMethods","selectedMethodArgTypes","assets","rewardAssets","rawData","AddPositionDialogState","show","valid","allTypes","sort","setType","isValidArgs","setAddress","setInput","setName","useAddPositionDialog","AddPositionBtn","isConnected","Button","onClick","AddPositionDialog","appActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","columns","field","headerName","width","align","headerAlign","valueFormatter","commafy","toFixed","sortable","AllPositionsTable","appState","rows","positionDialogActions","useEffect","total","useMemo","row","height","onCellClick","autoHeight","hideFooter","ListItem","ListItemText","PositionDialog","appStateActions","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","accept","hidden","addEventListener","file","files","reader","FileReader","onload","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById","provider","ProxyProvider","timeout","EGLD","esdt","LKMEX","LKFARM","EGLD_MEX_FARM","MEX_POOL_NFT","RIDE_POOL_NFT","getAddressEsdtList","getAccount","r","balance","esdts","balanceEGLD","tokenIdentifier","dec","balances","push","farm","mex","lpBalanceStaked","pair","SmartContract","base64","farmingTokenReserve","token0Id","token0r","token1r","lpTotalSupply","farmNfts","creator","nft","parseLPFromFarmTokenAttr","attributes","b","callAndParseGetPendingRewards","percentOfPool","reward","proxy","farmNft","totalAssetStaked","getAddress","farmEsdts","farmNftWrapper","parsePrincipalAmountFromWrappedFarmTokenAttr","decimals","s","Buffer","fn","runQuery","func","ContractFunction","returnData","balanceFarmNFT","BigUIntValue","BigNumberExt","max","BytesValue","codec","decodeNested","typeFarmTokenAttributes","initial_farming_amount","typeWrappedFarmTokenAttributes","farm_token_id","farming_token_amount","BinaryCodec","StructType","StructFieldDefinition","TokenIdentifierType","U64Type","BigUIntType","U8Type","BooleanType"],"mappings":"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","file":"static/js/main.a6d780c4.chunk.js","sourcesContent":["var map = {\n\t\"./bls.js\": 539,\n\t\"./bls_c.js\": 540\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1049;","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, contracts as contractsOrig, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {});\nexport const contracts = _.merge({}, contractsOrig, {});\n\nexport const networks = _.merge({}, networksOrig, {\n  egld: ElrondMaiar.network,\n  off: { id: -1, name: \"OffChain\", shortname: \"off\" },\n});\n\nexport async function currentNetwork() {\n  // const netId = await web3().eth.net.getId();\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positions/base/consts\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = _.uniqueId(args.type + \":\" + args.address + \"-\" + args.name + \"-\");\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return web3()?.utils?.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address) || isOffChainSymbol(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isOffChainSymbol(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:OffChain:Asset\") && _.trim(address).length > 0;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { bn, contracts, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n      \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n      \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n      \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n      \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n      \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n      \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n      \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n    });\n  }\n\n  class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  address: string;\n  id: string;\n  input?: string;\n  name?: string;\n};\n\nexport interface Position {\n  getName(): string;\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH.sub(this.data.totalDebtETH),\n        value: this.data.totalCollateralValue.sub(this.data.totalDebtValue),\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL = 0.005; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance.sub(this.data.borrowBalance),\n        value: this.data.supplyBalance.sub(this.data.borrowBalance),\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\nimport { OffChain } from \"../OffChain\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {\n    USD: ether,\n  };\n\n  getId(networkId: number, token: Token) {\n    if (networkId === networks.egld.id) return (token as ElrondMaiar.ESDT).tokenId;\n    if (networkId === networks.off.id) return (token as OffChain.Asset).symbol;\n    return token.address;\n  }\n\n  overridePrice(networkId: number, token: Token, price: BN) {\n    this.prices[this.getId(networkId, token)] = price;\n  }\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const id = this.getId(networkId, token);\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (networkId === ElrondMaiar.network.id) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[ElrondMaiar.network.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n\n    try {\n      const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n      const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(addresses, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\nimport type { RevaultStakingAbi } from \"../../typechain-abi/RevaultStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Revault {\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.CAKE()),\n      \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.BUSD()),\n      \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    });\n    for (let i = 0; i < 4; i++) {\n      PositionFactory.register({\n        [`bsc:Revault:RevaStaking:x${i + 1}`]: (args, oracle) => new RevaStake(args, oracle, i),\n      });\n    }\n  }\n\n  const REVA = () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\");\n  const revaultFarm = () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\");\n  const revaultChef = () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\");\n  const revaStaking = () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\");\n\n  class SingleVault implements Position {\n    revault = revaultFarm();\n    chef = revaultChef();\n    reva = REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  class RevaStake implements Position {\n    staking = revaStaking();\n    reva = REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements Position {\n    xfarm = contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\");\n    unic = erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\");\n    xunic = erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\");\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, zero } from \"@defi.org/web3-candies\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\n\nexport namespace Fodl {\n  export class XFodlStake implements Position {\n    fodl = erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\");\n    xfodl = erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\");\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(bn),\n        this.xfodl.methods.totalSupply().call().then(bn),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(bn),\n      ]);\n      this.data.amount = myXfodl.mul(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport Web3 from \"web3\";\n\nexport namespace TokenBalances {\n  class TokenBalance implements Position {\n    data = {\n      name: \"\",\n      amount: zero,\n      value: zero,\n      totalSupply: zero,\n      mcap: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token: Token) {}\n\n    getName = () => this.data.name;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      [this.data.name, this.data.amount, this.data.totalSupply] = await Promise.all([\n        this.token.methods.name().call(),\n        this.token.methods.balanceOf(this.args.address).call().then(this.token.mantissa),\n        this.token.methods.totalSupply().call().then(this.token.mantissa),\n      ]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.mcap;\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  const nativeTokens = {\n    eth: () => _.merge(erc20s.eth.WETH(), { name: \"ETH\" }),\n    bsc: () => _.merge(erc20s.bsc.WBNB(), { name: \"BNB\" }),\n    poly: () => _.merge(erc20s.poly.WMATIC(), { name: \"MATIC\" }),\n    avax: () => _.merge(erc20s.avax.WAVAX(), { name: \"AVAX\" }),\n    arb: () => _.merge(erc20s.arb.WETH(), { name: \"AETH\" }),\n  };\n\n  class NativeTokenBalance extends TokenBalance {\n    getName = () => this.token.name;\n\n    async load() {\n      [this.data.amount, this.data.totalSupply] = await Promise.all([web3().eth.getBalance(this.args.address).then(bn), this.token.methods.totalSupply().call().then(bn)]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n  }\n\n  export function register() {\n    _.forEach(networks, (n) => {\n      if (n.id < 0) return;\n      PositionFactory.register({\n        [`${n.shortname}:Token`]: (args, oracle) => new TokenBalance(args, oracle, n, erc20(\"\", Web3.utils.toChecksumAddress(args.input!))),\n      });\n\n      const t = (nativeTokens as any)[n.shortname];\n      if (t) PositionFactory.register({ [`${n.shortname}:TokenBase`]: (args, oracle) => new NativeTokenBalance(args, oracle, n, t()) });\n    });\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn18, contract, ether, maxUint256, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks } from \"./base/consts\";\nimport type { UniswapNftManagerAbi } from \"../../typechain-abi/UniswapNftManagerAbi\";\n\nexport namespace Uniswap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.WBTC(), erc20s.eth.WETH()),\n    });\n  }\n\n  class V3LP implements Position {\n    nftPositionManager = contract<UniswapNftManagerAbi>(require(\"../abi/UniswapNftManagerAbi.json\"), \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\");\n\n    data = {\n      id: 0,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      principal0: zero,\n      principal1: zero,\n      valueIfHodl: zero,\n      valueNow: zero,\n      ilValue: zero,\n      il: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!);\n      if (this.data.id <= 0) throw new Error(\"unknown positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [];\n    getPendingRewards = () => []; // TODO pending fees\n    getHealth = () => [];\n\n    async load() {\n      const pos = await this.nftPositionManager.methods.positions(this.data.id).call();\n      if (web3().utils.toChecksumAddress(pos.token0) !== web3().utils.toChecksumAddress(this.token0.address)) throw new Error(`invalid tokens for pos, ${pos}`);\n\n      const res = await this.nftPositionManager.methods.decreaseLiquidity([this.data.id, pos.liquidity, 0, 0, maxUint256]).call();\n      this.data.amount0 = await this.token0.mantissa(res.amount0);\n      this.data.amount1 = await this.token1.mantissa(res.amount1);\n\n      [this.data.value0, this.data.value1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.amount0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.amount1),\n      ]);\n\n      const graph = await positionGraph(this.data.id);\n      this.data.tvl = graph.tvl;\n      this.data.principal0 = graph.principal0;\n      this.data.principal1 = graph.principal1;\n\n      const [principalValue0, principalValue1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.principal0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.principal1),\n      ]);\n      this.data.valueIfHodl = principalValue0.add(principalValue1);\n      this.data.valueNow = this.data.value0.add(this.data.value1);\n      this.data.ilValue = this.data.valueIfHodl.sub(this.data.valueNow);\n      this.data.il = this.data.valueIfHodl.mul(ether).div(this.data.valueNow).sub(ether);\n    }\n\n    getContractMethods = () => []; // TODO\n    async callContract(method: string, args: string[]) {}\n    async harvest(useLegacyTx: boolean) {} // TODO claim fees\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n  }\n}\n\nasync function positionGraph(posId: number) {\n  const response = await fetch(\"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\", {\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `{position(id:${posId}) {\n          depositedToken0\n          depositedToken1\n          withdrawnToken0\n          withdrawnToken1\n          collectedFeesToken0\n          collectedFeesToken1\n          pool {\n            totalValueLockedUSD\n          }\n        }\n      }`,\n    }),\n    method: \"POST\",\n  });\n  const json = await response.json();\n  return {\n    tvl: bn18(json.data.position.pool.totalValueLockedUSD),\n    principal0: bn18(json.data.position.depositedToken0).sub(bn18(json.data.position.withdrawnToken0)),\n    principal1: bn18(json.data.position.depositedToken1).sub(bn18(json.data.position.withdrawnToken1)),\n    collectedFees0: bn18(json.data.position.collectedFeesToken0),\n    collectedFees1: bn18(json.data.position.collectedFeesToken1),\n  };\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn18, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace OffChain {\n  export function register() {\n    PositionFactory.register({\n      \"x:OffChain:Asset\": (args, oracle) => new AssetPosition(args, oracle),\n    });\n  }\n\n  export type Asset = Token & { symbol: string };\n\n  class AssetPosition implements Position {\n    token: Asset;\n    data = {\n      amount: zero,\n      value: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.input) throw new Error(\"input amount required\");\n      if (!args.address) throw new Error(\"address symbol required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { symbol: args.address });\n      this.data.amount = bn18(args.input);\n    }\n\n    getName = () => `OffChain:${this.token.name}`;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.off;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => zero;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { Fodl } from \"./Fodl\";\nimport { TokenBalances } from \"./TokenBalances\";\nimport { Uniswap } from \"./Uniswap\";\nimport { OffChain } from \"./OffChain\";\n\nexport function registerAllPositions() {\n  OffChain.register();\n  TokenBalances.register();\n\n  Uniswap.register();\n  Pancakeswap.register();\n  Revault.register();\n\n  PositionFactory.register({\n    \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n    \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new ElrondMaiar.MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n    \"egld:Maiar:MEXFarm:RIDE\": (args, oracle) => new ElrondMaiar.MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.RIDE()),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { to3, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positions/base/consts\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n    ready: false,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string, input: string, name: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, input, name, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    update: (position: Position, newArgs: PositionArgs) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = newArgs;\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  if (!api.getState().ready) await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p.load().catch((e) => console.log(p.getArgs().type, e));\n    })\n  );\n  api.setState({ positions, ready: true });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        name: p.getArgs().name || p.getName() || p.getArgs().type,\n        chain: p.getNetwork().name,\n        health: p.getHealth(),\n        value:\n          to3(\n            p.getAmounts().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        pending:\n          to3(\n            p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        tvl: to3(p.getTVL(), 18).toNumber() / 1000,\n        position: p,\n        address: p.getArgs().address,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\nexport const useAllPositionsReady = createHook(AllPositionsState, {\n  selector: (state) => state.ready,\n});\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      rawData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport _ from \"lodash\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    input: \"\",\n    name: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", input: \"\", name: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        address = _.trim(address);\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n\n    setInput:\n      (input: string) =>\n      async ({ setState }) => {\n        input = _.trim(input);\n        setState({ input });\n      },\n\n    setName:\n      (name: string) =>\n      async ({ setState }) => {\n        name = _.trim(name);\n        setState({ name });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address, state.input, state.name)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Name?\" onChange={(e) => actions.setName(e.target.value)} />}\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Input?\" onChange={(e) => actions.setInput(e.target.value)} />}\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport { ListItem, ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\n\nconst columns: GridColDef[] = [\n  { field: \"chain\", headerName: \"Chain\", width: 120, align: \"left\" },\n  { field: \"name\", headerName: \"Position\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    width: 100,\n    align: \"center\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => {\n      const value = v.value as Threat[];\n      if (!value.length) return \"🟢\";\n      return value.map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"value\",\n    headerName: \"Market Value\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    width: 120,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", width: 450, align: \"left\", headerAlign: \"center\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  const total = useMemo(() => commafy(_.reduce(rows, (sum, row) => sum + row.value, 0).toFixed(0)), [rows]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <ListItem>\n        <ListItemText>Total Market Value: $ {total}</ListItemText>\n      </ListItem>\n\n      <AddPositionBtn />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  // const updatePos = () => appStateActions.withLoading(() => allPositionsActions.update(selector.position!, selector.position!.getArgs())).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.rawData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.name || selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n          {selector.position?.getArgs()?.input && <DialogContentText>Input: {selector.position?.getArgs()?.input}</DialogContentText>}\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positions/base/Position\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { Position, PositionArgs, TokenAmount } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport {\n  Address,\n  BigUIntType,\n  BigUIntValue,\n  BinaryCodec,\n  BytesValue,\n  ContractFunction,\n  ProxyProvider,\n  SmartContract,\n  StructType,\n  TokenIdentifierType,\n  U64Type,\n} from \"@elrondnetwork/erdjs\";\nimport BigNumberExt from \"bignumber.js\";\nimport { BooleanType, StructFieldDefinition, U8Type } from \"@elrondnetwork/erdjs/out\";\n\nexport namespace ElrondMaiar {\n  export const network = { id: -508, name: \"Elrond\", shortname: \"egld\" };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n    EGLD_MEX_FARM: () => esdt(\"EGLDMEXF\", \"EGLDMEXF-5bcc57\", 18),\n    MEX_POOL_NFT: () => esdt(\"MEX Pool NFT\", \"MEXFARM-e7af52\", 18),\n    RIDE_POOL_NFT: () => esdt(\"RIDE Pool NFT\", \"MEXRIDEF-bf0320\", 18),\n  };\n\n  export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n    const assets = _.map(tokens, (t) => t());\n\n    const [esdts, balanceEGLD] = await Promise.all([\n      provider.getAddressEsdtList(new Address(address)),\n      provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString())),\n    ]);\n\n    const balances = await Promise.all(\n      _(esdts)\n        .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n        .filter((t) => !!t.asset)\n        .map(async (t) => {\n          const amount = to18(t.esdt.balance, t.asset!.dec);\n          return {\n            asset: t.asset!,\n            amount,\n            value: await oracle.valueOf(network.id, t.asset!, amount),\n          };\n        })\n        .value()\n    );\n\n    balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(network.id, tokens.EGLD(), balanceEGLD) });\n\n    return balances;\n  }\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n  };\n\n  export class Farm implements Position {\n    mex = tokens.MEX();\n\n    data = {\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => network;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [esdts, farmingTokenReserve, token0Id, reserves] = await Promise.all([\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      const [token0r, token1r, lpTotalSupply] = reserves;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      if (!farmNfts.length) return;\n\n      this.data.lpBalanceStaked = farmNfts.map((nft) => parseLPFromFarmTokenAttr(nft.attributes)).reduce((sum, b) => sum.add(b), zero);\n\n      this.data.rewardAmount = await Promise.all(farmNfts.map((nft) => callAndParseGetPendingRewards(farm, nft.balance, nft.attributes))).then((r) =>\n        r.reduce((sum, r) => sum.add(r), zero)\n      );\n\n      const percentOfPool = this.data.lpBalanceStaked.mul(ether).div(lpTotalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl, this.data.rewardValue] = await Promise.all([\n        this.oracle.valueOf(network.id, this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], token1.muln(2).mul(farmingTokenReserve).div(lpTotalSupply)),\n        this.oracle.valueOf(network.id, this.mex, this.data.rewardAmount),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export type MexPoolStrategy = Strategy & { nft: ESDT; reward: ESDT };\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\",\n      nft: tokens.MEX_POOL_NFT(),\n      reward: tokens.MEX(),\n    }),\n    RIDE: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq5e2m9df5yxxkmr86rusejc979arzayjk2jpsz2q43s\",\n      nft: tokens.RIDE_POOL_NFT(),\n      reward: tokens.RIDE(),\n    }),\n  };\n\n  export class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as MexPoolStrategy).reward];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const account = new Address(this.args.address);\n      const proxy = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n      const farmNft = (this.strategy as MexPoolStrategy).nft;\n      const asset = this.getAssets()[0];\n\n      let totalAssetStaked = await call(farm, \"getFarmingTokenReserve\")\n        .then((r) => base64(r[0]))\n        .catch(() => zero);\n      if (totalAssetStaked.isZero()) {\n        const farmEsdts = await provider.getAddressEsdtList(farm.getAddress());\n        totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      }\n      this.data.tvl = await this.oracle.valueOf(network.id, asset, totalAssetStaked);\n\n      const esdts = await provider.getAddressEsdtList(account);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === proxy.getAddress().toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n      this.data.amount0 = parsePrincipalAmountFromWrappedFarmTokenAttr(farmNftWrapper.attributes, farmNft);\n      this.data.value0 = await this.oracle.valueOf(network.id, asset, this.data.amount0);\n\n      this.data.rewardAmount = await callAndParseGetPendingRewards(farm, farmNftWrapper.balance, farmNftWrapper.attributes);\n      this.data.rewardValue = await this.oracle.valueOf(network.id, this.getRewardAssets()[0], this.data.rewardAmount);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n\n  async function callAndParseGetPendingRewards(farm: SmartContract, balanceFarmNFT: BN, attributes: string) {\n    const result = await farm.runQuery(provider, {\n      func: new ContractFunction(\"calculateRewardsForGivenPosition\"),\n      args: [new BigUIntValue(BigNumberExt.max(balanceFarmNFT.toString())), new BytesValue(Buffer.from(attributes, \"base64\"))],\n    });\n    if (result.returnData.length) return base64(result.returnData[0]);\n\n    return zero;\n  }\n\n  function parseLPFromFarmTokenAttr(attributes: string) {\n    const [struct] = codec.decodeNested(Buffer.from(attributes, \"base64\"), typeFarmTokenAttributes);\n    const data = struct.valueOf();\n    return bn((data.initial_farming_amount as BigNumberExt).toString(16), 16);\n  }\n\n  function parsePrincipalAmountFromWrappedFarmTokenAttr(attributes: string, asset: ESDT) {\n    const [struct] = codec.decodeNested(Buffer.from(attributes, \"base64\"), typeWrappedFarmTokenAttributes);\n    const data = struct.valueOf();\n    if ((data.farm_token_id as Buffer).toString() !== asset.tokenId) return zero;\n\n    return bn((data.farming_token_amount as BigNumberExt).toString(16), 16);\n  }\n\n  const codec = new BinaryCodec();\n  const typeWrappedFarmTokenAttributes = new StructType(\"WrappedFarmTokenAttributes\", [\n    new StructFieldDefinition(\"farm_token_id\", \"\", new TokenIdentifierType()),\n    new StructFieldDefinition(\"farm_token_nonce\", \"\", new U64Type()),\n    new StructFieldDefinition(\"farm_token_amount\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"farming_token_id\", \"\", new TokenIdentifierType()),\n    new StructFieldDefinition(\"farming_token_nonce\", \"\", new U64Type()),\n    new StructFieldDefinition(\"farming_token_amount\", \"\", new BigUIntType()),\n  ]);\n  const typeFarmTokenAttributes = new StructType(\"FarmTokenAttributes\", [\n    new StructFieldDefinition(\"reward_per_share\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"original_entering_epoch\", \"\", new U64Type()),\n    new StructFieldDefinition(\"entering_epoch\", \"\", new U64Type()),\n    new StructFieldDefinition(\"apr_multiplier\", \"\", new U8Type()),\n    new StructFieldDefinition(\"with_locked_rewards\", \"\", new BooleanType()),\n    new StructFieldDefinition(\"initial_farming_amount\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"compounded_reward\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"current_farm_amount\", \"\", new BigUIntType()),\n  ]);\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n"],"sourceRoot":""}