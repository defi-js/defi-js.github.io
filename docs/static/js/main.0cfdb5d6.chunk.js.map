{"version":3,"sources":["reportWebVitals.ts","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","state/AppState.ts","positions/base/PositionFactory.ts","positions/base/PriceOracle.ts","positions/consts.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","positions/Revault.ts","positions/Unicly.ts","positions/index.ts","state/AllPositionsState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","state/AddWalletDialogState.ts","positions/base/Balances.ts","state/WalletsState.ts","ui/AddWalletDialog.tsx","ui/AppHeader.tsx","state/PositionDialogState.ts","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/AllBalancesTable.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts","../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppState","createStore","name","initialState","loading","wallet","balance","zero","network","alertDialog","actions","connect","a","setState","_withLoading","ethereum","window","alert","_onConnect","on","withLoading","thunk","showAlert","t","message","setWeb3Instance","Web3","account","getNetwork","bn","web3","eth","getBalance","useAppState","createHook","useIsAppConnected","selector","state","utils","isAddress","coingeckoIds","networks","id","bsc","poly","PriceOracle","prices","token","amount","tokenId","address","this","isZero","esdt","fetchPricesElrond","fetchPrices","mul","div","ether","positions","bynetwork","_","groupBy","p","Promise","all","ElrondMaiar","map","getAssets","concat","getRewardAssets","flatten","value","keys","filter","parseInt","networkId","addresses","isEmpty","coingeckoId","find","v","k","toString","fetch","join","mode","response","json","result","mapKeys","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","accept","pragma","JSON","stringify","method","data","inputs","results","Error","merge","registry","oracle","isElrondAddress","type","startsWith","Address","fromString","e","types","args","current","PositionFactory","Severity","erc20s","erc20sOrig","UNIC","erc20","XUNIC","Unicly_UPUNK","Unicly_UJENNY","Unicly_LP_UPUNK_ETH","require","Unicly_LP_UJENNY_ETH","REVA","contracts","contractsOrig","Unicly_XUnicVault","contract","Revault_Farm","Revault_Chef","Farm","asset0","asset1","lpToken","poolId","masterchef","Pancakeswap_Masterchef","cake","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getData","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","tx","useLegacyTx","encodeABI","from","send","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","SingleVault","revault","chef","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","getArgs","getHealth","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","WBNB","BUSD","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","poolInfo","getxUNICRate","xunicrate","totalLPTokens","Unicly","register","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","Strategies","USDC_EGLD","MEX_EGLD","STORAGE_KEY","loadFromStorage","parse","localStorage","getItem","saveToStorage","setItem","AllPositionsState","load","dispatch","addPosition","getState","position","create","delete","posId","sendTransaction","harvest","console","log","warmup","values","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","health","fmtHealth","fmt18","reduce","sum","add","split","useAllPositions","length","AddPositionDialogState","show","valid","allTypes","sort","closeDialog","setType","isValidArgs","setAddress","useAddPositionDialog","AddPositionBtn","isConnected","Button","variant","size","disabled","onClick","AddPositionDialog","appStateActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","style","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","onChange","target","MenuItem","TextField","DialogActions","AddWalletDialogState","isValidWallet","useAddWalletDialog","fetchBalances","WalletsState","wallets","egld","uniq","w","useWalletsRows","AddWalletBtn","AddWalletDialog","walletsActions","List","ListItem","disablePadding","ListItemButton","ListItemText","primary","AppHeader","fontSize","display","flexDirection","justifyContent","ConnectBtn","WalletInfo","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","BN","positionMethods","selectedMethodArgTypes","assets","rewardAssets","positionData","columns","field","headerName","width","align","AllPositionsTable","appState","appActions","rows","positionDialogActions","useEffect","hidden","height","minHeight","onCellClick","PositionDialog","allPositionsActions","DialogContentText","argType","autoFocus","margin","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","AllBalancesTable","darkTheme","createTheme","palette","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","href","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","document","getElementById","shortname","provider","ProxyProvider","timeout","pool","farm","mex","lkmex","lpBalanceStaked","pair","SmartContract","getAddressEsdtList","r","base64","esdts","farmingTokenReserve","token0Id","token0r","token1r","lpTotalSupply","farmNfts","creator","nft","parseAmountLpFromAttributes","attributes","b","callAndParseGetPendingRewards","percentOfPool","dec","token1","decimals","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","hex","bytes","push","lp_z_index","lp_z","lp_index","slice","balanceFarmNFT","BigUIntValue","BigNumberExt","max","BytesValue","assertSuccess","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.0cfdb5d6.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, bn, getNetwork, Network, setWeb3Instance, web3, zero } from \"@defi.org/web3-candies\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    loading: false,\n    wallet: \"\",\n    balance: zero,\n    network: {} as Network,\n\n    alertDialog: \"\",\n  },\n\n  actions: {\n    connect:\n      () =>\n      async ({ setState }) => {\n        await _withLoading(setState, async () => {\n          setState({ wallet: \"\", balance: zero, network: {} as Network });\n\n          const ethereum = (window as any).ethereum;\n          if (!ethereum) {\n            alert(\"install metamask\");\n            return;\n          }\n          await _onConnect(setState, ethereum);\n\n          ethereum.on(\"accountsChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n          ethereum.on(\"chainChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n        });\n      },\n\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n  },\n});\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any, ethereum: any) {\n  setWeb3Instance(new Web3(ethereum));\n  const wallet = await account();\n  setState({\n    wallet,\n    network: await getNetwork(),\n    balance: bn(await web3().eth.getBalance(wallet)),\n  });\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet),\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network } from \"@defi.org/web3-candies\";\nimport Web3 from \"web3\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = args.type + \":\" + args.address;\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return Web3.utils.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (Web3.utils.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport { bn18, ether, getNetwork, networks, Token } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(token: Token, amount: BN): Promise<BN> {\n    const id = (token as any).tokenId || token.address;\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if ((token as any).esdt) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices((await getNetwork()).id, [id]);\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n\n    await Promise.all([\n      this.fetchPricesElrond(\n        _(bynetwork[ElrondMaiar.network.id])\n          .map((p) => p.getAssets().concat(p.getRewardAssets()))\n          .flatten()\n          .map((a) => a.address)\n          .value()\n      ),\n      ..._(bynetwork)\n        .keys()\n        .filter((id) => parseInt(id) > 0)\n        .map((id) =>\n          this.fetchPrices(\n            id,\n            _(bynetwork[id])\n              .map((p) => p.getAssets().concat(p.getRewardAssets()))\n              .flatten()\n              .map((a) => a.address)\n              .value()\n          )\n        )\n        .value(),\n    ]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n    const response = await fetch(`https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`, {\n      mode: \"cors\",\n    });\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => Web3.utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    const body = {\n      variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n      query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n    };\n    const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n      headers: {\n        accept: \"*/*\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"application/json\",\n        pragma: \"no-cache\",\n      },\n      body: JSON.stringify(body),\n      method: \"POST\",\n    });\n    const json = await response.json();\n\n    const result = _(json.data)\n      .mapKeys((v, k) => body.variables[k])\n      .mapValues((v) => bn18(v))\n      .value();\n\n    return this.updateResults(tokenIds, result);\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import _ from \"lodash\";\nimport { erc20s as erc20sOrig, contracts as contractsOrig, erc20, contract } from \"@defi.org/web3-candies\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {\n  eth: {\n    UNIC: () => erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\"),\n    XUNIC: () => erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\"),\n\n    Unicly_UPUNK: () => erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n    Unicly_UJENNY: () => erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n    Unicly_LP_UPUNK_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n    Unicly_LP_UJENNY_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n  },\n  bsc: {\n    REVA: () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\"),\n  },\n});\n\nexport const contracts = _.merge({}, contractsOrig, {\n  eth: {\n    Unicly_XUnicVault: () => contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\"),\n  },\n  bsc: {\n    Revault_Farm: () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\"),\n    Revault_Chef: () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\"),\n  },\n});\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, contracts, erc20s, getNetwork, networks, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.bsc;\n    }\n\n    getAssets() {\n      return [this.asset0, this.asset1];\n    }\n\n    getRewardAssets() {\n      return [this.cake];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.masterchef.methods.deposit(this.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, bn18, contract, erc20s, ether, getNetwork, networks, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimRewardsToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimAndTransferAllCompToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, getNetwork, networks, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s } from \"./consts\";\nimport _ from \"lodash\";\n\nexport namespace Revault {\n  export class SingleVault implements Position {\n    revault = contracts.bsc.Revault_Farm();\n    chef = contracts.bsc.Revault_Chef();\n    reva = erc20s.bsc.REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.asset, this.data.amount),\n        this.oracle.valueOf(this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload).send({\n        from: await account(),\n        type: useLegacyTx ? \"0x0\" : \"0x2\",\n      } as any);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, ether, getNetwork, networks, Token, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s } from \"./consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20s.eth.Unicly_UPUNK(),\n      lp: erc20s.eth.Unicly_LP_UPUNK_ETH(),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20s.eth.Unicly_UJENNY(),\n      lp: erc20s.eth.Unicly_LP_UJENNY_ETH(),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements Position {\n    xfarm = contracts.eth.Unicly_XUnicVault();\n    unic = erc20s.eth.UNIC();\n    xunic = erc20s.eth.XUNIC();\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.xfarm.methods.deposit(this.strategy.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"./consts\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n    \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n    \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n    \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n    \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n    \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n\n    \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.CAKE()),\n    \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.BUSD()),\n    \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.WBNB()),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.MEX_EGLD()),\n    // \"egld:Maiar:Farm:MEX\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, [ElrondMaiar.tokens.MEX()]),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs, Threat } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { fmt18, zero } from \"@defi.org/web3-candies\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nconst saveToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n  },\n\n  actions: {\n    load:\n      () =>\n      async ({ dispatch }) => {\n        await dispatch(load);\n      },\n\n    addPosition:\n      (type: string, address: string) =>\n      async ({ getState, dispatch }) => {\n        const position = PositionFactory.create({ type, address, id: \"\" });\n        if (!position) {\n          alert(`unknown type ${type} at ${address}`);\n          return;\n        }\n\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        data[position.getArgs().id] = position.getArgs();\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    delete:\n      (posId: string) =>\n      async ({ getState, dispatch }) => {\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        delete data[posId];\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load({ getState, setState }: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD\");\n  const current = getState().positions;\n  const positions = _.mapValues(loadFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n  for (const id in positions) if (!positions[id]) delete positions[id];\n  await PositionFactory.oracle.warmup(_.values(positions));\n  await Promise.all(_.map(positions, (p) => p?.load().catch((e) => console.log(p.getArgs().type, e))));\n  setState({ positions });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        health: fmtHealth(p.getHealth()),\n        value: \"$\" + fmt18(p.getAmounts().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        pending: \"$\" + fmt18(p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        tvl: \"$\" + fmt18(p.getTVL()).split(\".\")[0],\n        position: p,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nfunction fmtHealth(health: Threat[]) {\n  if (!health.length) return \"🟢\";\n  return health.map((t) => t.message).join(\"⚠️\");\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => allPositionActions.addPosition(state.type, state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddWalletDialogState = createStore({\n  name: \"AddWalletDialogState\",\n\n  initialState: {\n    show: false,\n    address: \"\",\n    valid: false,\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState }) => {\n        const valid = PositionFactory.isValidWallet(address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddWalletDialog = createHook(AddWalletDialogState);\n","import { fmt18, getNetwork, Network, networks, Token } from \"@defi.org/web3-candies\";\nimport { erc20s } from \"../consts\";\nimport _ from \"lodash\";\n\n// const moralisChainId = {\n//   [networks.eth.id]: \"eth\",\n//   [networks.bsc.id]: \"bsc\",\n//   [networks.poly.id]: \"polygon\",\n//   // [networks.poly.id]: \"avalanche\",\n// };\n\nexport async function fetchBalances(wallet: string, network: Network) {\n  if (network.id <= 0) return;\n  if ((await getNetwork()).id != network.id) return;\n\n  // const balances = await fetch(`https://deep-index.moralis.io/api/v2/${wallet}/erc20?chain=${moralisChainId[network.id]}`);\n  // console.log(balances);\n\n  // const networkTokens = _.get(erc20s, [network.shortname]);\n  // const tokens = _(networkTokens)\n  //   .keys()\n  //   .map((k) => networkTokens[k]() as Token)\n  //   .value();\n  //\n  // const balances = await Promise.all(\n  //   _.map(tokens, (t) =>\n  //     t.methods\n  //       .balanceOf(wallet)\n  //       .call()\n  //       .then((b) => t.mantissa(b).then((amount) => ({ asset: t, amount })))\n  //   )\n  // );\n  // console.log(balances.map((b) => b.asset.name + \":\" + fmt18(b.amount)));\n\n  return {};\n}\n","import _ from \"lodash\";\nimport { createHook, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { fetchBalances } from \"../positions/base/Balances\";\nimport { networks } from \"@defi.org/web3-candies\";\nimport { ElrondMaiar } from \"../positions/ElrondMaiar\";\n\nconst STORAGE_KEY = \"Wallets:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"[]\") as string[];\nconst saveToStorage = (data: string[]) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst WalletsState = createStore({\n  name: \"WalletsState\",\n\n  initialState: {\n    wallets: [] as string[],\n    eth: [],\n    bsc: [],\n    poly: [],\n    egld: [],\n  },\n\n  actions: {\n    load:\n      () =>\n      async ({ dispatch }) => {\n        await dispatch(load);\n      },\n\n    add:\n      (address: string) =>\n      async ({ getState, dispatch }) => {\n        const current = getState().wallets;\n        saveToStorage(_.uniq(_.concat(current, address)));\n        await dispatch(load);\n      },\n\n    delete:\n      (address: string) =>\n      async ({ getState, setState, dispatch }) => {\n        const current = getState().wallets;\n        const wallets = _.filter(current, (a) => a !== address);\n        saveToStorage(wallets);\n        setState({ wallets });\n        await dispatch(load);\n      },\n  },\n});\n\nasync function load({ getState, setState }: StoreActionApi<typeof WalletsState.initialState>) {\n  console.log(\"LOAD wallets\");\n  const wallets = _.merge(loadFromStorage(), getState().wallets);\n  setState({ wallets });\n  const [a] = await Promise.all([\n    wallets.map((w) => fetchBalances(w, networks.eth)),\n    wallets.map((w) => fetchBalances(w, networks.bsc)),\n    wallets.map((w) => fetchBalances(w, networks.poly)),\n    wallets.map((w) => fetchBalances(w, ElrondMaiar.network)),\n  ]);\n}\n\nexport const useWalletsRows = createHook(WalletsState, {\n  selector: (state) => state.wallets,\n});\n","import React from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemButton, ListItemText, TextField } from \"@mui/material\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { useAddWalletDialog } from \"../state/AddWalletDialogState\";\nimport _ from \"lodash\";\nimport { useWalletsRows } from \"../state/WalletsState\";\n\nexport const AddWalletBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddWalletDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Wallet\n    </Button>\n  );\n};\n\nexport const AddWalletDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddWalletDialog();\n  const [wallets, walletsActions] = useWalletsRows();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => walletsActions.add(state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Wallet</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Wallet Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n\n          <div>Tracking:</div>\n          <List>\n            {_.map(wallets, (w) => (\n              <ListItem key={w} disablePadding>\n                <ListItemButton>\n                  <ListItemText primary={w} onClick={() => appStateActions.withLoading(() => walletsActions.delete(w))} />\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button } from \"@mui/material\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\nimport { AddWalletBtn } from \"./AddWalletDialog\";\n\nexport const AppHeader = () => (\n  <div style={{ fontSize: \"large\", minWidth: \"42em\" }}>\n    <br />\n    <br />\n\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ConnectBtn />\n      <AddWalletBtn />\n      <AddPositionBtn />\n    </div>\n\n    <div />\n    <WalletInfo />\n    <div />\n\n    <br />\n  </div>\n);\n\nconst ConnectBtn = () => {\n  const [isConnected, actions] = useIsAppConnected();\n\n  return (\n    <Button variant={\"contained\"} size={\"large\"} onClick={actions.connect}>\n      {isConnected ? \"Refresh\" : \"Connect\"}\n    </Button>\n  );\n};\n\nconst WalletInfo = () => {\n  const [state] = useAppState();\n  return (\n    <div>\n      <p>Network 🌐 {state.network?.name}</p>\n      <p>Wallet 🔑 {state.wallet}</p>\n      <p>Balance 💰 {fmt18(state.balance)}</p>\n    </div>\n  );\n};\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      positionData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Type\", width: 300, align: \"left\" },\n  { field: \"health\", headerName: \"Health\", width: 60, align: \"center\" },\n  { field: \"value\", headerName: \"Market Value\", width: 100, align: \"right\" },\n  { field: \"pending\", headerName: \"Pending\", width: 100, align: \"right\" },\n  { field: \"tvl\", headerName: \"TVL\", width: 150, align: \"right\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div hidden={!rows.length} style={{ height: \"100%\", minHeight: 500, width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.positionData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { useWalletsRows } from \"../state/WalletsState\";\n\nconst columns: GridColDef[] = [\n  { field: \"address\", headerName: \"Address\", width: 300, align: \"left\" },\n  { field: \"token\", headerName: \"Token\", width: 60, align: \"left\" },\n  { field: \"amount\", headerName: \"Amount\", width: 100, align: \"right\" },\n  { field: \"value\", headerName: \"Market Value\", width: 100, align: \"right\" },\n];\n\nexport const AllBalancesTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useWalletsRows();\n  // const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => {}; //positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div hidden={!rows.length} style={{ height: \"100%\", minHeight: 500, width: \"90%\" }}>\n      {/*<DataGrid rows={rows} columns={columns} onCellClick={click} />*/}\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useAppState } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { AllBalancesTable } from \"./ui/AllBalancesTable\";\nimport { AddWalletDialog } from \"./ui/AddWalletDialog\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <AllBalancesTable />\n\n        <div>\n          <AddPositionDialog />\n          <AddWalletDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [state] = useAppState();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={state.loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { Address, BigUIntValue, BytesValue, ContractFunction, ProxyProvider, SmartContract } from \"@elrondnetwork/erdjs/out\";\nimport _ from \"lodash\";\nimport BigNumberExt from \"bignumber.js\";\nimport BN from \"bn.js\";\n\nexport namespace ElrondMaiar {\n  export const network = { id: -508, name: \"Elrond\", shortname: \"egld\" };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"EGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n  export const Strategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n  };\n\n  export class Farm implements Position {\n    mex = tokens.MEX();\n    lkmex = tokens.LKMEX();\n\n    data = {\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => network;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.lkmex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [esdts, farmingTokenReserve, token0Id, reserves] = await Promise.all([\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      const [token0r, token1r, lpTotalSupply] = reserves;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      if (!farmNfts.length) return;\n\n      this.data.lpBalanceStaked = farmNfts.map((nft) => parseAmountLpFromAttributes(nft.attributes)).reduce((sum, b) => sum.add(b), zero);\n\n      this.data.rewardAmount = await Promise.all(farmNfts.map((nft) => callAndParseGetPendingRewards(farm, nft.balance, nft.attributes))).then((r) =>\n        r.reduce((sum, r) => sum.add(r), zero)\n      );\n\n      const percentOfPool = this.data.lpBalanceStaked.mul(ether).div(lpTotalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl, this.data.rewardValue] = await Promise.all([\n        this.oracle.valueOf(this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(this.strategy.assets[1], token1.muln(2).mul(farmingTokenReserve).div(lpTotalSupply)),\n        this.oracle.valueOf(this.mex, this.data.rewardAmount),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n\n  //#[derive(TopEncode, TopDecode, NestedEncode, NestedDecode, TypeAbi, Clone)]\n  // pub struct FarmTokenAttributes<M: ManagedTypeApi> {\n  //     pub reward_per_share: BigUint<M>,\n  //     pub original_entering_epoch: u64,\n  //     pub entering_epoch: u64,\n  //     pub apr_multiplier: u8,\n  //     pub with_locked_rewards: bool,\n  //     pub initial_farming_amount: BigUint<M>,\n  //     pub compounded_reward: Bigu32,\n  //     pub current_farm_amount: BigUint<M>,\n  // }\n  //000000000000000008 08b17d48809d7fc0 00000000000001e9 00000000000001e9 0f 01 00000008 77a3ec302d1cd52c 00000000 00000009 07029ad6d2a4b07d94\n  function parseAmountLpFromAttributes(attributes: string) {\n    let hex = base64(attributes).toString(\"hex\");\n    if (hex.length % 2 != 0) {\n      hex = \"0\" + hex;\n    }\n\n    let bytes = [];\n    for (let i = 0; i < hex.length - 1; i += 2) bytes.push(hex[i] + hex[i + 1]);\n\n    const perShare_z = parseInt(bytes[0], 16);\n    const origEpoch_z = 8;\n    const enterEpoch_z = 8;\n    const apr_z = 1;\n    const locked_z = 1;\n    const lp_z_z = 4;\n    const lp_z_index = perShare_z + origEpoch_z + enterEpoch_z + apr_z + locked_z + lp_z_z;\n    const lp_z = parseInt(bytes[lp_z_index], 16);\n    const lp_index = lp_z_index + 1;\n    return bn(_.slice(bytes, lp_index, lp_index + lp_z).join(\"\"), 16);\n  }\n\n  async function callAndParseGetPendingRewards(farm: SmartContract, balanceFarmNFT: BN, attributes: string) {\n    const result = await farm.runQuery(provider, {\n      func: new ContractFunction(\"calculateRewardsForGivenPosition\"),\n      args: [new BigUIntValue(BigNumberExt.max(balanceFarmNFT.toString())), new BytesValue(Buffer.from(attributes, \"base64\"))],\n    });\n    result.assertSuccess();\n    return base64(result.returnData[0]);\n  }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n","var map = {\n\t\"./bls.js\": 484,\n\t\"./bls_c.js\": 485\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 979;"],"sourceRoot":""}