{"version":3,"sources":["../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positions/consts.ts","state/AppState.ts","positions/base/PositionFactory.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","positions/base/PriceOracle.ts","positions/Revault.ts","positions/Unicly.ts","positions/index.ts","state/AllPositionsState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","state/AddWalletDialogState.ts","positions/base/Balances.ts","state/WalletsState.ts","ui/AddWalletDialog.tsx","ui/AppHeader.tsx","state/PositionDialogState.ts","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/AllBalancesTable.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","erc20s","_","merge","erc20sOrig","eth","UNIC","erc20","XUNIC","Unicly_UPUNK","Unicly_UJENNY","Unicly_LP_UPUNK_ETH","require","Unicly_LP_UJENNY_ETH","bsc","REVA","contracts","contractsOrig","Unicly_XUnicVault","contract","Revault_Farm","Revault_Chef","networks","networksOrig","currentNetwork","a","web3","net","getId","netId","find","n","AppState","createStore","name","initialState","loading","wallet","balance","zero","network","alertDialog","actions","connect","setState","_withLoading","ethereum","window","alert","request","method","_onConnect","on","withLoading","thunk","showAlert","t","message","stack","setWeb3Instance","Web3","account","console","log","bn","getBalance","Severity","useAppState","createHook","useIsAppConnected","selector","state","utils","isAddress","coingeckoIds","poly","arb","avax","PriceOracle","prices","networkId","token","amount","isElrond","ElrondMaiar","tokenId","address","this","isZero","fetchPricesElrond","fetchPrices","toString","mul","div","ether","positions","bynetwork","groupBy","p","getNetwork","coingeckoFetches","filter","parseInt","getAssets","concat","getRewardAssets","flatten","uniq","value","Promise","all","addresses","isEmpty","coingeckoId","v","k","url","join","fetch","response","json","result","mapKeys","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","accept","pragma","JSON","stringify","data","inputs","results","registry","oracle","isElrondAddress","type","startsWith","Address","fromString","types","args","current","PositionFactory","Farm","asset0","asset1","lpToken","poolId","masterchef","Pancakeswap_Masterchef","cake","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","tx","useLegacyTx","encodeABI","from","send","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","SingleVault","revault","chef","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","WBNB","BUSD","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","poolInfo","getxUNICRate","xunicrate","totalLPTokens","Unicly","register","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","Strategies","FarmStrategies","USDC_EGLD","MEX_EGLD","MexFarm","MexFarmStrategies","MEX","RIDE","STORAGE_KEY","loadFromStorage","parse","localStorage","getItem","saveToStorage","setItem","AllPositionsState","ready","load","api","addPosition","position","create","getState","delete","posId","sendTransaction","harvest","warmup","values","shouldLoad","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","health","to3","reduce","sum","add","toNumber","useAllPositions","useAllPositionsReady","AddPositionDialogState","show","valid","allTypes","sort","closeDialog","setType","isValidArgs","setAddress","useAddPositionDialog","AddPositionBtn","isConnected","Button","variant","size","disabled","onClick","AddPositionDialog","appStateActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","style","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","onChange","target","MenuItem","TextField","DialogActions","then","AddWalletDialogState","isValidWallet","useAddWalletDialog","nativeAssets","WMATIC","WAVAX","fetchBalances","balances","Elrond","fetchBalancesETH","shortname","push","getAllETHTokenInfos","fetchMulticallBalances","withbalance","throttle","it","decimals","uniqBy","reject","includes","blacklist","length","remaining","chunk","retries","performMulticallBalanceOf","flattened","shuffle","sleep","multicall","Multicall","web3Instance","tryAggregate","calls","reference","contractAddress","erc20abi","methodName","methodParameters","forEach","callsReturnContext","returnValues","hex","WalletsState","wallets","fetched","useWalletsRows","useWalletsBalancesRows","allbalances","flatMap","amounts","r","reverse","AddWalletBtn","AddWalletDialog","walletsActions","List","w","ListItem","disablePadding","ListItemButton","ListItemText","primary","AppHeader","fontSize","display","flexDirection","justifyContent","ConnectBtn","WalletInfo","fmt18","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","split","BN","positionMethods","selectedMethodArgTypes","assets","rewardAssets","positionData","columns","field","headerName","width","align","headerAlign","valueFormatter","commafy","toFixed","sortable","AllPositionsTable","appState","appActions","rows","positionDialogActions","useEffect","total","useMemo","row","hidden","height","onCellClick","autoHeight","hideFooter","PositionDialog","allPositionsActions","DialogContentText","argType","autoFocus","margin","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","AllBalancesTable","isready","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","href","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","document","getElementById","provider","ProxyProvider","timeout","EGLD","esdt","LKMEX","LKFARM","EGLD_MEX_FARM","MEX_POOL_NFT","RIDE_POOL_NFT","getAddressEsdtList","getAccount","esdts","balanceEGLD","tokenIdentifier","dec","pool","farm","mex","lpBalanceStaked","pair","SmartContract","base64","farmingTokenReserve","token0Id","token0r","token1r","lpTotalSupply","farmNfts","creator","nft","parseLPFromFarmTokenAttr","attributes","b","callAndParseGetPendingRewards","percentOfPool","token1","reward","proxy","farmNft","totalAssetStaked","getAddress","farmEsdts","farmNftWrapper","parsePrincipalAmountFromWrappedFarmTokenAttr","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","balanceFarmNFT","BigUIntValue","BigNumberExt","max","BytesValue","assertSuccess","codec","decodeNested","typeFarmTokenAttributes","initial_farming_amount","typeWrappedFarmTokenAttributes","farm_token_id","farm_token_amount","BinaryCodec","StructType","StructFieldDefinition","TokenIdentifierType","U64Type","BigUIntType","U8Type","BooleanType"],"mappings":"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","file":"static/js/main.61c56c0f.chunk.js","sourcesContent":["var map = {\n\t\"./bls.js\": 536,\n\t\"./bls_c.js\": 537\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1036;","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { erc20s as erc20sOrig, contracts as contractsOrig, networks as networksOrig, erc20, contract, Network, web3 } from \"@defi.org/web3-candies\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {\n  eth: {\n    UNIC: () => erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\"),\n    XUNIC: () => erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\"),\n\n    Unicly_UPUNK: () => erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n    Unicly_UJENNY: () => erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n    Unicly_LP_UPUNK_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n    Unicly_LP_UJENNY_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n  },\n  bsc: {\n    REVA: () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\"),\n  },\n});\n\nexport const contracts = _.merge({}, contractsOrig, {\n  eth: {\n    Unicly_XUnicVault: () => contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\"),\n  },\n  bsc: {\n    Revault_Farm: () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\"),\n    Revault_Chef: () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\"),\n  },\n});\n\nexport const networks = _.merge({}, networksOrig, {\n  //\n});\n\nexport async function currentNetwork() {\n  const netId = await web3().eth.net.getId();\n  return _.find(networks, (n) => n.id === netId);\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, bn, Network, setWeb3Instance, web3, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positions/consts\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    loading: false,\n    wallet: \"\",\n    balance: zero,\n    network: {} as Network,\n\n    alertDialog: \"\",\n  },\n\n  actions: {\n    connect:\n      () =>\n      async ({ setState }) => {\n        await _withLoading(setState, async () => {\n          setState({ wallet: \"\", balance: zero, network: {} as Network });\n\n          const ethereum = (window as any).ethereum;\n          if (!ethereum) {\n            alert(\"install metamask\");\n            return;\n          }\n          await ethereum.request({ method: \"eth_requestAccounts\" });\n          await _onConnect(setState, ethereum);\n\n          ethereum.on(\"accountsChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n          ethereum.on(\"chainChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n        });\n      },\n\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n  },\n});\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any, ethereum: any) {\n  setWeb3Instance(new Web3(ethereum));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"network\", network);\n  if (!network) throw new Error(`network not supported yet`);\n  setState({\n    wallet,\n    network,\n    balance: bn(await web3().eth.getBalance(wallet)),\n  });\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet),\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = args.type + \":\" + args.address;\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return web3()?.utils?.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, contracts, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\nimport { networks } from \"./consts\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.masterchef.methods.deposit(this.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, bn18, contract, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\nimport { networks } from \"./consts\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await account() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimRewardsToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await account() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimAndTransferAllCompToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3 } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"../consts\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const isElrond = networkId === ElrondMaiar.network.id || !!(token as any).tokenId;\n    const id = isElrond ? (token as ElrondMaiar.ESDT).tokenId : token.address;\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (isElrond) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      throw new Error(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n    await Promise.all([\n      this.fetchPricesElrond(\n        _(bynetwork[ElrondMaiar.network.id])\n          .map((p) => p.getAssets().concat(p.getRewardAssets()))\n          .flatten()\n          .map((a) => (a as any).tokenId)\n          .uniq()\n          .value()\n      ),\n      ...coingeckoFetches,\n    ]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n    const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n    const response = await fetch(url);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n    const body = {\n      variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n      query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n    };\n    const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n      headers: {\n        accept: \"*/*\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"application/json\",\n        pragma: \"no-cache\",\n      },\n      body: JSON.stringify(body),\n      method: \"POST\",\n    });\n    const json = await response.json();\n\n    const result = _(json.data)\n      .mapKeys((v, k) => body.variables[k])\n      .mapValues((v) => bn18(v))\n      .value();\n\n    return this.updateResults(tokenIds, result);\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s, networks } from \"./consts\";\nimport _ from \"lodash\";\n\nexport namespace Revault {\n  export class SingleVault implements Position {\n    revault = contracts.bsc.Revault_Farm();\n    chef = contracts.bsc.Revault_Chef();\n    reva = erc20s.bsc.REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload).send({\n        from: await account(),\n        type: useLegacyTx ? \"0x0\" : \"0x2\",\n      } as any);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s, networks } from \"./consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20s.eth.Unicly_UPUNK(),\n      lp: erc20s.eth.Unicly_LP_UPUNK_ETH(),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20s.eth.Unicly_UJENNY(),\n      lp: erc20s.eth.Unicly_LP_UJENNY_ETH(),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements Position {\n    xfarm = contracts.eth.Unicly_XUnicVault();\n    unic = erc20s.eth.UNIC();\n    xunic = erc20s.eth.XUNIC();\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.xfarm.methods.deposit(this.strategy.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"./consts\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n    \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n    \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n    \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n    \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n    \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n\n    \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.CAKE()),\n    \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.BUSD()),\n    \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.WBNB()),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n    \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new ElrondMaiar.MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n    \"egld:Maiar:MEXFarm:RIDE\": (args, oracle) => new ElrondMaiar.MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.RIDE()),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { to3, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positions/consts\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nconst saveToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n    ready: false,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      saveToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      saveToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  if (!api.getState().ready) await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p.load().catch((e) => console.log(p.getArgs().type, e));\n    })\n  );\n  api.setState({ positions, ready: true });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        health: p.getHealth(),\n        value:\n          to3(\n            p.getAmounts().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        pending:\n          to3(\n            p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        tvl: to3(p.getTVL(), 18).toNumber() / 1000,\n        position: p,\n        address: p.getArgs().address,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\nexport const useAllPositionsReady = createHook(AllPositionsState, {\n  selector: (state) => state.ready,\n});\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => allPositionActions.addPosition(state.type, state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddWalletDialogState = createStore({\n  name: \"AddWalletDialogState\",\n\n  initialState: {\n    show: false,\n    address: \"\",\n    valid: false,\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState }) => {\n        const valid = PositionFactory.isValidWallet(address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddWalletDialog = createHook(AddWalletDialogState);\n","import { ElrondMaiar } from \"../ElrondMaiar\";\nimport { TokenAmount } from \"./Position\";\nimport { bn, erc20, erc20abi, Network, sleep, throttle, web3, zero } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport { erc20s, networks } from \"../consts\";\n\nconst nativeAssets = {\n  eth: () => erc20(\"ETH\", erc20s.eth.WETH().address),\n  bsc: () => erc20(\"BNB\", erc20s.bsc.WBNB().address),\n  poly: () => erc20(\"MATIC\", erc20s.poly.WMATIC().address),\n  arb: () => erc20(\"AETH\", erc20s.arb.WETH().address),\n  avax: () => erc20(\"AVAX\", erc20s.avax.WAVAX().address),\n};\n\nexport async function fetchBalances(oracle: PriceOracle, network: Network, wallet: string): Promise<Record<string, TokenAmount[]>> {\n  if (network.id === ElrondMaiar.network.id || wallet.startsWith(\"erd1\")) {\n    return { Elrond: await ElrondMaiar.balances(oracle, wallet) };\n  }\n\n  let result: TokenAmount[] = [];\n\n  if (network.id === networks.eth.id) {\n    result = await fetchBalancesETH(oracle, wallet);\n  }\n\n  const balance = await web3().eth.getBalance(wallet);\n  const asset = (nativeAssets as any)[network.shortname]();\n  const amount = bn(balance);\n  const value = await oracle.valueOf(network.id, asset, amount);\n  result.push({ asset, amount, value });\n\n  return { [network.name]: result };\n}\n\nasync function fetchBalancesETH(oracle: PriceOracle, wallet: string) {\n  const tokens = await getAllETHTokenInfos();\n  await fetchMulticallBalances(wallet, tokens);\n  const withbalance = _.filter(tokens, (t) => !!t.balance && !bn(t.balance).isZero());\n\n  await oracle.fetchPrices(\n    networks.eth.id,\n    _.map(withbalance, (t) => t.address)\n  );\n\n  return await Promise.all(\n    _.map(withbalance, (t) => {\n      const asset = erc20(t.name, Web3.utils.toChecksumAddress(t.address));\n      return asset.mantissa(t.balance || zero).then((amount) =>\n        oracle.valueOf(networks.eth.id, asset, amount).then((value) => ({\n          asset,\n          amount,\n          value,\n        }))\n      );\n    })\n  );\n}\n\ntype TokenInfo = { chainId: number; address: string; decimals: number; logoURI: string; name: string; symbol: string; balance?: BN };\n\nconst getAllETHTokenInfos = throttle(this, 60 * 60 * 24, async () => {\n  const json = await fetch(`https://tokens.coingecko.com/uniswap/all.json`).then((it) => it.json());\n  const result = _(json.tokens as TokenInfo[])\n    .filter((t) => t.decimals >= 0 && t.decimals <= 18)\n    .uniqBy((t) => t.address)\n    .reject((t) => _.includes(blacklist, t.address))\n    .value();\n\n  delete json.tokens;\n  console.log(\"fetched info for\", result.length, \"tokens on ETH\");\n  return result;\n});\n\nasync function fetchMulticallBalances(wallet: string, tokens: TokenInfo[]) {\n  if (!tokens.length) return;\n\n  console.log(\"fetching balance for\", tokens.length);\n\n  let remaining = _.chunk(tokens, 400);\n  for (let retries = 0; remaining.length && retries < 10; retries++) {\n    remaining = await Promise.all(_.map(remaining, (tokens) => performMulticallBalanceOf(wallet, tokens)));\n    const flattened = _.flatten(remaining);\n    if (flattened.length && flattened.length < 10) console.log(\"warning:\", flattened);\n    remaining = _(flattened)\n      .shuffle()\n      .chunk(flattened.length / 10)\n      .value();\n    await sleep(0.5);\n  }\n  console.log(\"finally remaining\", _(remaining).flatten().size());\n}\n\nasync function performMulticallBalanceOf(wallet: string, tokens: TokenInfo[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t.address,\n          contractAddress: t.address,\n          abi: erc20abi,\n          calls: [{ reference: t.address, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n    _.forEach(result.results, (v) => {\n      const t = _.find(tokens, (t) => t.address === v.callsReturnContext[0].reference)!;\n      t.balance = bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16);\n    });\n    result.results = {};\n    return [];\n  } catch (e) {\n    return tokens;\n  }\n}\n\nconst blacklist = [\n  \"0x2859021eE7F2Cb10162E67F33Af2D22764B31aFf\",\n  \"0x5e3845A1d78DB544613EdbE43Dc1Ea497266d3b8\",\n  \"0x47140a767a861f7a1f3b0dd22a2f463421c28814\",\n  \"0x1c5b760f133220855340003b43cc9113ec494823\",\n  \"0x2859021ee7f2cb10162e67f33af2d22764b31aff\",\n  \"0x5e3845a1d78db544613edbe43dc1ea497266d3b8\",\n];\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { fetchBalances } from \"../positions/base/Balances\";\nimport { TokenAmount } from \"../positions/base/Position\";\nimport { to3 } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { currentNetwork } from \"../positions/consts\";\n\nconst STORAGE_KEY = \"Wallets:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"[]\") as string[];\nconst saveToStorage = (data: string[]) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\ntype WalletBalances = Record<string, TokenAmount[]>;\n\nconst WalletsState = createStore({\n  name: \"WalletsState\",\n\n  initialState: {\n    wallets: [] as string[],\n    balances: {} as Record<string, WalletBalances>,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    add: (address: string) => async (api) => {\n      const current = api.getState().wallets;\n      saveToStorage(_.uniq(_.concat(current, address)));\n      await load(api);\n    },\n\n    delete: (address: string) => async (api) => {\n      const current = api.getState().wallets;\n      const wallets = _.filter(current, (a) => a !== address);\n      saveToStorage(wallets);\n      api.setState({ wallets });\n      await load(api);\n    },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof WalletsState.initialState>) {\n  console.log(\"LOAD wallets\");\n  const wallets = _.merge(loadFromStorage(), api.getState().wallets);\n  api.setState({ wallets });\n\n  const network = await currentNetwork();\n  if (!network) return;\n\n  for (const wallet of wallets) {\n    const fetched = await fetchBalances(PositionFactory.oracle, network, wallet);\n    const balances = _.merge({}, api.getState().balances, { [wallet]: fetched } as Record<string, WalletBalances>);\n    api.setState({ balances });\n  }\n}\n\nexport const useWalletsRows = createHook(WalletsState, { selector: (state) => state.wallets });\n\nexport const useWalletsBalancesRows = createHook(WalletsState, {\n  selector: createSelector(\n    (state) => state.balances,\n    (allbalances) =>\n      _(allbalances)\n        .flatMap((balances, wallet) =>\n          _.flatMap(balances, (amounts, network) =>\n            _.map(amounts, (t) => ({\n              id: `${wallet}:${network}:${t.asset.name}`,\n              wallet,\n              network,\n              asset: t.asset.name,\n              amount: to3(t.amount, 18).toNumber() / 1000,\n              value: to3(t.value, 18).toNumber() / 1000,\n            }))\n          )\n        )\n        .filter((r) => r.value >= 1)\n        .sortBy((r) => r.value)\n        .reverse()\n        .value()\n  ),\n});\n","import React from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemButton, ListItemText, TextField } from \"@mui/material\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { useAddWalletDialog } from \"../state/AddWalletDialogState\";\nimport _ from \"lodash\";\nimport { useWalletsRows } from \"../state/WalletsState\";\n\nexport const AddWalletBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddWalletDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Wallet\n    </Button>\n  );\n};\n\nexport const AddWalletDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddWalletDialog();\n  const [wallets, walletsActions] = useWalletsRows();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => walletsActions.add(state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Wallet</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Wallet Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n\n          <div>Tracking:</div>\n          <List>\n            {_.map(wallets, (w) => (\n              <ListItem key={w} disablePadding>\n                <ListItemButton>\n                  <ListItemText primary={w} onClick={() => appStateActions.withLoading(() => walletsActions.delete(w))} />\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button } from \"@mui/material\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\nimport { AddWalletBtn } from \"./AddWalletDialog\";\n\nexport const AppHeader = () => (\n  <div style={{ fontSize: \"medium\", minWidth: \"42em\" }}>\n    <br />\n    <br />\n\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ConnectBtn />\n      <AddWalletBtn />\n      <AddPositionBtn />\n    </div>\n\n    <div />\n    <WalletInfo />\n    <div />\n\n    <br />\n  </div>\n);\n\nconst ConnectBtn = () => {\n  const [isConnected, actions] = useIsAppConnected();\n\n  return (\n    <Button variant={\"contained\"} size={\"large\"} onClick={actions.connect}>\n      {isConnected ? \"Refresh\" : \"Connect\"}\n    </Button>\n  );\n};\n\nconst WalletInfo = () => {\n  const [state] = useAppState();\n  return (\n    <div>\n      <br />\n      <div>Network 🌐 {state.network?.name}</div>\n      <div>Wallet 🔑 {state.wallet}</div>\n      <div>Balance 💰 {fmt18(state.balance)}</div>\n    </div>\n  );\n};\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      positionData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n","import React, { useEffect, useMemo } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport { ListItem, ListItemText } from \"@mui/material\";\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Position\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    width: 100,\n    align: \"center\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => {\n      const value = v.value as Threat[];\n      if (!value.length) return \"🟢\";\n      return value.map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"value\",\n    headerName: \"Market Value\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    width: 120,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", width: 450, align: \"left\", headerAlign: \"center\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  const total = useMemo(() => commafy(_.reduce(rows, (sum, row) => sum + row.value, 0).toFixed(0)), [rows]);\n\n  return (\n    <div hidden={!rows.length} style={{ height: \"100%\", width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <ListItem>\n        <ListItemText>Total Positions Market Value: $ {total}</ListItemText>\n      </ListItem>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.positionData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { useWalletsBalancesRows } from \"../state/WalletsState\";\nimport { useAllPositionsReady } from \"../state/AllPositionsState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\nimport { ListItem, ListItemText } from \"@mui/material\";\n\nconst columns: GridColDef[] = [\n  { field: \"wallet\", headerName: \"Wallet\", width: 450, align: \"left\" },\n  { field: \"network\", headerName: \"Network\", width: 80, align: \"left\", headerAlign: \"center\" },\n  { field: \"asset\", headerName: \"Asset\", width: 150, align: \"left\", headerAlign: \"center\" },\n  {\n    field: \"value\",\n    headerName: \"Market Value\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n    headerAlign: \"center\",\n  },\n  {\n    field: \"amount\",\n    headerName: \"Amount\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => commafy(_.toString(v.value)),\n    sortable: true,\n    headerAlign: \"center\",\n  },\n];\n\nexport const AllBalancesTable = () => {\n  const [appState, appActions] = useAppState();\n  const [isready] = useAllPositionsReady();\n  const [rows, actions] = useWalletsBalancesRows(null);\n\n  useEffect(() => {\n    if (appState.network.id && isready) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions, isready]);\n\n  const click = (p: any) => {};\n\n  const total = useMemo(() => commafy(_.reduce(rows, (sum, row) => sum + row.value, 0).toFixed(0)), [rows]);\n\n  return (\n    <div hidden={!rows.length || !isready} style={{ height: \"100%\", width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <ListItem>\n        <ListItemText>Total Wallets Market Value: $ {total}</ListItemText>\n      </ListItem>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useAppState } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { AllBalancesTable } from \"./ui/AllBalancesTable\";\nimport { AddWalletDialog } from \"./ui/AddWalletDialog\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n        <AllBalancesTable />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <AddWalletDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [state] = useAppState();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={state.loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { Position, PositionArgs, TokenAmount } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, fmt18, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport {\n  Address,\n  BigUIntType,\n  BigUIntValue,\n  BinaryCodec,\n  BytesValue,\n  ContractFunction,\n  ProxyProvider,\n  SmartContract,\n  StructFieldDefinition,\n  StructType,\n  TokenIdentifierType,\n  U64Type,\n} from \"@elrondnetwork/erdjs\";\nimport BigNumberExt from \"bignumber.js\";\nimport { BooleanType, U8Type } from \"@elrondnetwork/erdjs/out\";\n\nexport namespace ElrondMaiar {\n  export const network = { id: -508, name: \"Elrond\", shortname: \"egld\" };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n    EGLD_MEX_FARM: () => esdt(\"EGLDMEXF\", \"EGLDMEXF-5bcc57\", 18),\n    MEX_POOL_NFT: () => esdt(\"MEX Pool NFT\", \"MEXFARM-e7af52\", 18),\n    RIDE_POOL_NFT: () => esdt(\"RIDE Pool NFT\", \"MEXRIDEF-bf0320\", 18),\n  };\n\n  export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n    const assets = _.map(tokens, (t) => t());\n\n    const [esdts, balanceEGLD] = await Promise.all([\n      provider.getAddressEsdtList(new Address(address)),\n      provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString())),\n    ]);\n\n    const balances = await Promise.all(\n      _(esdts)\n        .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n        .filter((t) => !!t.asset)\n        .map(async (t) => {\n          const amount = to18(t.esdt.balance, t.asset!.dec);\n          return {\n            asset: t.asset!,\n            amount,\n            value: await oracle.valueOf(network.id, t.asset!, amount),\n          };\n        })\n        .value()\n    );\n\n    balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(network.id, tokens.EGLD(), balanceEGLD) });\n\n    return balances;\n  }\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n  };\n\n  export class Farm implements Position {\n    mex = tokens.MEX();\n\n    data = {\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => network;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [esdts, farmingTokenReserve, token0Id, reserves] = await Promise.all([\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      const [token0r, token1r, lpTotalSupply] = reserves;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      if (!farmNfts.length) return;\n\n      this.data.lpBalanceStaked = farmNfts.map((nft) => parseLPFromFarmTokenAttr(nft.attributes)).reduce((sum, b) => sum.add(b), zero);\n\n      this.data.rewardAmount = await Promise.all(farmNfts.map((nft) => callAndParseGetPendingRewards(farm, nft.balance, nft.attributes))).then((r) =>\n        r.reduce((sum, r) => sum.add(r), zero)\n      );\n\n      const percentOfPool = this.data.lpBalanceStaked.mul(ether).div(lpTotalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl, this.data.rewardValue] = await Promise.all([\n        this.oracle.valueOf(network.id, this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], token1.muln(2).mul(farmingTokenReserve).div(lpTotalSupply)),\n        this.oracle.valueOf(network.id, this.mex, this.data.rewardAmount),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export type MexPoolStrategy = Strategy & { nft: ESDT; reward: ESDT };\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\",\n      nft: tokens.MEX_POOL_NFT(),\n      reward: tokens.MEX(),\n    }),\n    RIDE: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq5e2m9df5yxxkmr86rusejc979arzayjk2jpsz2q43s\",\n      nft: tokens.RIDE_POOL_NFT(),\n      reward: tokens.RIDE(),\n    }),\n  };\n\n  export class MexFarm extends Farm {\n    constructor(args: PositionArgs, oracle: PriceOracle, strategy: MexPoolStrategy) {\n      super(args, oracle, strategy);\n    }\n\n    getRewardAssets = () => [(this.strategy as MexPoolStrategy).reward];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const account = new Address(this.args.address);\n      const proxy = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n      const farmNft = (this.strategy as MexPoolStrategy).nft;\n      const asset = this.getAssets()[0];\n\n      let totalAssetStaked = await call(farm, \"getFarmingTokenReserve\")\n        .then((r) => base64(r[0]))\n        .catch(() => zero);\n      if (totalAssetStaked.isZero()) {\n        const farmEsdts = await provider.getAddressEsdtList(farm.getAddress());\n        totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      }\n      this.data.tvl = await this.oracle.valueOf(network.id, asset, totalAssetStaked);\n\n      const esdts = await provider.getAddressEsdtList(account);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === proxy.getAddress().toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n      this.data.amount0 = parsePrincipalAmountFromWrappedFarmTokenAttr(farmNftWrapper.attributes, farmNft);\n      this.data.value0 = await this.oracle.valueOf(network.id, asset, this.data.amount0);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n\n  async function callAndParseGetPendingRewards(farm: SmartContract, balanceFarmNFT: BN, attributes: string) {\n    const result = await farm.runQuery(provider, {\n      func: new ContractFunction(\"calculateRewardsForGivenPosition\"),\n      args: [new BigUIntValue(BigNumberExt.max(balanceFarmNFT.toString())), new BytesValue(Buffer.from(attributes, \"base64\"))],\n    });\n    result.assertSuccess();\n    return base64(result.returnData[0]);\n  }\n\n  function parseLPFromFarmTokenAttr(attributes: string) {\n    const [struct] = codec.decodeNested(Buffer.from(attributes, \"base64\"), typeFarmTokenAttributes);\n    const data = struct.valueOf();\n    return bn((data.initial_farming_amount as BigNumberExt).toString(16), 16);\n  }\n\n  function parsePrincipalAmountFromWrappedFarmTokenAttr(attributes: string, asset: ESDT) {\n    const [struct] = codec.decodeNested(Buffer.from(attributes, \"base64\"), typeWrappedFarmTokenAttributes);\n    const data = struct.valueOf();\n    if ((data.farm_token_id as Buffer).toString() !== asset.tokenId) return zero;\n\n    return bn((data.farm_token_amount as BigNumberExt).toString(16), 16);\n  }\n\n  const codec = new BinaryCodec();\n  const typeWrappedFarmTokenAttributes = new StructType(\"WrappedFarmTokenAttributes\", [\n    new StructFieldDefinition(\"farm_token_id\", \"\", new TokenIdentifierType()),\n    new StructFieldDefinition(\"farm_token_nonce\", \"\", new U64Type()),\n    new StructFieldDefinition(\"farm_token_amount\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"farming_token_id\", \"\", new TokenIdentifierType()),\n    new StructFieldDefinition(\"farming_token_nonce\", \"\", new U64Type()),\n    new StructFieldDefinition(\"farming_token_amount\", \"\", new BigUIntType()),\n  ]);\n  const typeFarmTokenAttributes = new StructType(\"FarmTokenAttributes\", [\n    new StructFieldDefinition(\"reward_per_share\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"original_entering_epoch\", \"\", new U64Type()),\n    new StructFieldDefinition(\"entering_epoch\", \"\", new U64Type()),\n    new StructFieldDefinition(\"apr_multiplier\", \"\", new U8Type()),\n    new StructFieldDefinition(\"with_locked_rewards\", \"\", new BooleanType()),\n    new StructFieldDefinition(\"initial_farming_amount\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"compounded_reward\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"current_farm_amount\", \"\", new BigUIntType()),\n  ]);\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n"],"sourceRoot":""}