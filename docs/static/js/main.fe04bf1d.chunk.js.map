{"version":3,"sources":["../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positions/base/consts.ts","state/AppState.ts","positions/base/PositionFactory.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","ui/AppHeader.tsx","positions/base/PriceOracle.ts","positions/Revault.ts","positions/Unicly.ts","positions/Fodl.ts","positions/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","erc20s","_","merge","erc20sOrig","eth","UNIC","erc20","XUNIC","Unicly_UPUNK","Unicly_UJENNY","Unicly_LP_UPUNK_ETH","require","Unicly_LP_UJENNY_ETH","FODL","FODL_XFODL","bsc","REVA","contracts","contractsOrig","Unicly_XUnicVault","contract","Revault_Farm","Revault_Chef","Revault_RevaStaking","networks","networksOrig","egld","ElrondMaiar","network","off","name","shortname","currentNetwork","a","netId","bn","window","ethereum","chainId","toNumber","console","log","find","n","sendWithTxType","tx","useLegacyTx","account","from","type","send","isNetworkDisabled","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","setState","_withLoading","showAlert","alert","clickNetwork","networkId","getState","_ethereum","removeAllListeners","on","_onConnect","request","method","_switchNetwork","t","message","stack","setWeb3Instance","Web3","params","utils","numberToHex","Severity","useAppState","createHook","useIsAppConnected","selector","state","isAddress","useIsLoading","useAppActions","AppHeader","style","display","flexDirection","justifyContent","margin","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","ToggleButton","textTransform","disabled","coingeckoIds","poly","arb","avax","PriceOracle","prices","token","amount","isElrond","tokenId","address","this","isZero","fetchPricesElrond","fetchPrices","toString","zero","mul","div","ether","positions","bynetwork","groupBy","getNetwork","coingeckoFetches","filter","getAssets","concat","getRewardAssets","flatten","uniq","elrondFetch","Promise","all","addresses","isEmpty","coingeckoId","v","k","url","join","fetch","response","json","result","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","accept","pragma","JSON","stringify","data","inputs","results","registry","oracle","isElrondAddress","startsWith","Address","fromString","types","args","current","PositionFactory","Farm","asset0","asset1","lpToken","poolId","masterchef","Pancakeswap_Masterchef","cake","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","encodeABI","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","owner","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","SingleVault","revault","chef","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","WBNB","BUSD","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","RevaStake","staking","pendingAmount","userPoolInfo","poolInfo","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","getxUNICRate","xunicrate","totalLPTokens","Unicly","XFodlStake","fodl","xfodl","then","myXfodl","xfodlTotalSupply","fodlStaked","Fodl","register","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","Strategies","FarmStrategies","USDC_EGLD","MEX_EGLD","MexFarm","MexFarmStrategies","MEX","RIDE","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","ready","load","api","addPosition","position","create","delete","posId","sendTransaction","harvest","warmup","values","shouldLoad","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","health","to3","reduce","sum","add","useAllPositions","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","length","split","BN","fmt18","positionMethods","selectedMethodArgTypes","assets","rewardAssets","positionData","AddPositionDialogState","show","valid","allTypes","sort","setType","isValidArgs","setAddress","useAddPositionDialog","AddPositionBtn","isConnected","Button","onClick","AddPositionDialog","appActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","columns","field","headerName","width","align","headerAlign","valueFormatter","commafy","toFixed","sortable","AllPositionsTable","appState","rows","positionDialogActions","useEffect","total","useMemo","row","height","onCellClick","autoHeight","hideFooter","ListItem","ListItemText","PositionDialog","appStateActions","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","hidden","addEventListener","file","files","reader","FileReader","onload","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById","provider","ProxyProvider","timeout","EGLD","esdt","LKMEX","LKFARM","EGLD_MEX_FARM","MEX_POOL_NFT","RIDE_POOL_NFT","getAddressEsdtList","getAccount","r","balance","esdts","balanceEGLD","tokenIdentifier","dec","balances","push","pool","farm","mex","lpBalanceStaked","pair","SmartContract","base64","farmingTokenReserve","token0Id","token0r","token1r","lpTotalSupply","farmNfts","creator","nft","parseLPFromFarmTokenAttr","attributes","b","callAndParseGetPendingRewards","percentOfPool","token1","reward","proxy","farmNft","totalAssetStaked","getAddress","farmEsdts","farmNftWrapper","parsePrincipalAmountFromWrappedFarmTokenAttr","decimals","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","balanceFarmNFT","BigUIntValue","BigNumberExt","max","BytesValue","codec","decodeNested","typeFarmTokenAttributes","initial_farming_amount","typeWrappedFarmTokenAttributes","farm_token_id","farm_token_amount","BinaryCodec","StructType","StructFieldDefinition","TokenIdentifierType","U64Type","BigUIntType","U8Type","BooleanType"],"mappings":"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","file":"static/js/main.fe04bf1d.chunk.js","sourcesContent":["var map = {\n\t\"./bls.js\": 541,\n\t\"./bls_c.js\": 542\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1047;","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, contract, contracts as contractsOrig, erc20, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport type { RevaultFarmAbi } from \"../../../typechain-abi/RevaultFarmAbi\";\nimport type { UniclyXUnicAbi } from \"../../../typechain-abi/UniclyXUnicAbi\";\nimport type { UniclyLpAbi } from \"../../../typechain-abi/UniclyLpAbi\";\nimport type { RevaultChefAbi } from \"../../../typechain-abi/RevaultChefAbi\";\nimport type { RevaultStakingAbi } from \"../../../typechain-abi/RevaultStakingAbi\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {\n  eth: {\n    UNIC: () => erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\"),\n    XUNIC: () => erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\"),\n\n    Unicly_UPUNK: () => erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n    Unicly_UJENNY: () => erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n    Unicly_LP_UPUNK_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../../abi/UniclyLpAbi.json\")),\n    Unicly_LP_UJENNY_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../../abi/UniclyLpAbi.json\")),\n\n    FODL: () => erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\"),\n    FODL_XFODL: () => erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\"),\n  },\n  bsc: {\n    REVA: () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\"),\n  },\n});\n\nexport const contracts = _.merge({}, contractsOrig, {\n  eth: {\n    Unicly_XUnicVault: () => contract<UniclyXUnicAbi>(require(\"../../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\"),\n  },\n  bsc: {\n    Revault_Farm: () => contract<RevaultFarmAbi>(require(\"../../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\"),\n    Revault_Chef: () => contract<RevaultChefAbi>(require(\"../../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\"),\n    Revault_RevaStaking: () => contract<RevaultStakingAbi>(require(\"../../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\"),\n  },\n});\n\nexport const networks = _.merge({}, networksOrig, {\n  egld: ElrondMaiar.network,\n  off: { id: -1, name: \"OffChain\", shortname: \"off\" },\n});\n\nexport async function currentNetwork() {\n  // const netId = await web3().eth.net.getId();\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positions/base/consts\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = args.type + \":\" + args.address;\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return web3()?.utils?.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { bn, contracts, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const isElrond = networkId === ElrondMaiar.network.id || !!(token as any).tokenId;\n    const id = isElrond ? (token as ElrondMaiar.ESDT).tokenId : token.address;\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (isElrond) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[ElrondMaiar.network.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n    const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n    const response = await fetch(url);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          accept: \"*/*\",\n          \"cache-control\": \"no-cache\",\n          \"content-type\": \"application/json\",\n          pragma: \"no-cache\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\n\nexport namespace Revault {\n  export class SingleVault implements Position {\n    revault = contracts.bsc.Revault_Farm();\n    chef = contracts.bsc.Revault_Chef();\n    reva = erc20s.bsc.REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  export class RevaStake implements Position {\n    staking = contracts.bsc.Revault_RevaStaking();\n    reva = erc20s.bsc.REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { bn, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20s.eth.Unicly_UPUNK(),\n      lp: erc20s.eth.Unicly_LP_UPUNK_ETH(),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20s.eth.Unicly_UJENNY(),\n      lp: erc20s.eth.Unicly_LP_UJENNY_ETH(),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements Position {\n    xfarm = contracts.eth.Unicly_XUnicVault();\n    unic = erc20s.eth.UNIC();\n    xunic = erc20s.eth.XUNIC();\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\n\nexport namespace Fodl {\n  export class XFodlStake implements Position {\n    fodl = erc20s.eth.FODL();\n    xfodl = erc20s.eth.FODL_XFODL();\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(bn),\n        this.xfodl.methods.totalSupply().call().then(bn),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(bn),\n      ]);\n      this.data.amount = myXfodl.mul(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"./base/consts\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { Fodl } from \"./Fodl\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n    \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n    \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n    \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n    \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n    \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n\n    \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.CAKE()),\n    \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.BUSD()),\n    \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    \"bsc:Revault:RevaStaking:x1\": (args, oracle) => new Revault.RevaStake(args, oracle, 0),\n    \"bsc:Revault:RevaStaking:x2\": (args, oracle) => new Revault.RevaStake(args, oracle, 1),\n    \"bsc:Revault:RevaStaking:x3\": (args, oracle) => new Revault.RevaStake(args, oracle, 2),\n    \"bsc:Revault:RevaStaking:x4\": (args, oracle) => new Revault.RevaStake(args, oracle, 3),\n\n    \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n    \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new ElrondMaiar.MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n    \"egld:Maiar:MEXFarm:RIDE\": (args, oracle) => new ElrondMaiar.MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.RIDE()),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { to3, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positions/base/consts\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n    ready: false,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  if (!api.getState().ready) await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p.load().catch((e) => console.log(p.getArgs().type, e));\n    })\n  );\n  api.setState({ positions, ready: true });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        health: p.getHealth(),\n        value:\n          to3(\n            p.getAmounts().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        pending:\n          to3(\n            p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        tvl: to3(p.getTVL(), 18).toNumber() / 1000,\n        position: p,\n        address: p.getArgs().address,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\nexport const useAllPositionsReady = createHook(AllPositionsState, {\n  selector: (state) => state.ready,\n});\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      positionData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport { ListItem, ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Position\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    width: 100,\n    align: \"center\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => {\n      const value = v.value as Threat[];\n      if (!value.length) return \"🟢\";\n      return value.map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"value\",\n    headerName: \"Market Value\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    width: 120,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", width: 450, align: \"left\", headerAlign: \"center\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  const total = useMemo(() => commafy(_.reduce(rows, (sum, row) => sum + row.value, 0).toFixed(0)), [rows]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <ListItem>\n        <ListItemText>Total Market Value: $ {total}</ListItemText>\n      </ListItem>\n\n      <AddPositionBtn />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.positionData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positions/base/Position\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { Position, PositionArgs, TokenAmount } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport {\n  Address,\n  BigUIntType,\n  BigUIntValue,\n  BinaryCodec,\n  BytesValue,\n  ContractFunction,\n  ProxyProvider,\n  SmartContract,\n  StructType,\n  TokenIdentifierType,\n  U64Type,\n} from \"@elrondnetwork/erdjs\";\nimport BigNumberExt from \"bignumber.js\";\nimport { BooleanType, StructFieldDefinition, U8Type } from \"@elrondnetwork/erdjs/out\";\n\nexport namespace ElrondMaiar {\n  export const network = { id: -508, name: \"Elrond\", shortname: \"egld\" };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n    EGLD_MEX_FARM: () => esdt(\"EGLDMEXF\", \"EGLDMEXF-5bcc57\", 18),\n    MEX_POOL_NFT: () => esdt(\"MEX Pool NFT\", \"MEXFARM-e7af52\", 18),\n    RIDE_POOL_NFT: () => esdt(\"RIDE Pool NFT\", \"MEXRIDEF-bf0320\", 18),\n  };\n\n  export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n    const assets = _.map(tokens, (t) => t());\n\n    const [esdts, balanceEGLD] = await Promise.all([\n      provider.getAddressEsdtList(new Address(address)),\n      provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString())),\n    ]);\n\n    const balances = await Promise.all(\n      _(esdts)\n        .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n        .filter((t) => !!t.asset)\n        .map(async (t) => {\n          const amount = to18(t.esdt.balance, t.asset!.dec);\n          return {\n            asset: t.asset!,\n            amount,\n            value: await oracle.valueOf(network.id, t.asset!, amount),\n          };\n        })\n        .value()\n    );\n\n    balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(network.id, tokens.EGLD(), balanceEGLD) });\n\n    return balances;\n  }\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n  };\n\n  export class Farm implements Position {\n    mex = tokens.MEX();\n\n    data = {\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => network;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [esdts, farmingTokenReserve, token0Id, reserves] = await Promise.all([\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      const [token0r, token1r, lpTotalSupply] = reserves;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      if (!farmNfts.length) return;\n\n      this.data.lpBalanceStaked = farmNfts.map((nft) => parseLPFromFarmTokenAttr(nft.attributes)).reduce((sum, b) => sum.add(b), zero);\n\n      this.data.rewardAmount = await Promise.all(farmNfts.map((nft) => callAndParseGetPendingRewards(farm, nft.balance, nft.attributes))).then((r) =>\n        r.reduce((sum, r) => sum.add(r), zero)\n      );\n\n      const percentOfPool = this.data.lpBalanceStaked.mul(ether).div(lpTotalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl, this.data.rewardValue] = await Promise.all([\n        this.oracle.valueOf(network.id, this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], token1.muln(2).mul(farmingTokenReserve).div(lpTotalSupply)),\n        this.oracle.valueOf(network.id, this.mex, this.data.rewardAmount),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export type MexPoolStrategy = Strategy & { nft: ESDT; reward: ESDT };\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\",\n      nft: tokens.MEX_POOL_NFT(),\n      reward: tokens.MEX(),\n    }),\n    RIDE: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq5e2m9df5yxxkmr86rusejc979arzayjk2jpsz2q43s\",\n      nft: tokens.RIDE_POOL_NFT(),\n      reward: tokens.RIDE(),\n    }),\n  };\n\n  export class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as MexPoolStrategy).reward];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const account = new Address(this.args.address);\n      const proxy = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n      const farmNft = (this.strategy as MexPoolStrategy).nft;\n      const asset = this.getAssets()[0];\n\n      let totalAssetStaked = await call(farm, \"getFarmingTokenReserve\")\n        .then((r) => base64(r[0]))\n        .catch(() => zero);\n      if (totalAssetStaked.isZero()) {\n        const farmEsdts = await provider.getAddressEsdtList(farm.getAddress());\n        totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      }\n      this.data.tvl = await this.oracle.valueOf(network.id, asset, totalAssetStaked);\n\n      const esdts = await provider.getAddressEsdtList(account);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === proxy.getAddress().toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n      this.data.amount0 = parsePrincipalAmountFromWrappedFarmTokenAttr(farmNftWrapper.attributes, farmNft);\n      this.data.value0 = await this.oracle.valueOf(network.id, asset, this.data.amount0);\n\n      this.data.rewardAmount = await callAndParseGetPendingRewards(farm, farmNftWrapper.balance, farmNftWrapper.attributes);\n      this.data.rewardValue = await this.oracle.valueOf(network.id, this.getRewardAssets()[0], this.data.rewardAmount);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n\n  async function callAndParseGetPendingRewards(farm: SmartContract, balanceFarmNFT: BN, attributes: string) {\n    const result = await farm.runQuery(provider, {\n      func: new ContractFunction(\"calculateRewardsForGivenPosition\"),\n      args: [new BigUIntValue(BigNumberExt.max(balanceFarmNFT.toString())), new BytesValue(Buffer.from(attributes, \"base64\"))],\n    });\n    if (result.returnData.length) return base64(result.returnData[0]);\n\n    return zero;\n  }\n\n  function parseLPFromFarmTokenAttr(attributes: string) {\n    const [struct] = codec.decodeNested(Buffer.from(attributes, \"base64\"), typeFarmTokenAttributes);\n    const data = struct.valueOf();\n    return bn((data.initial_farming_amount as BigNumberExt).toString(16), 16);\n  }\n\n  function parsePrincipalAmountFromWrappedFarmTokenAttr(attributes: string, asset: ESDT) {\n    const [struct] = codec.decodeNested(Buffer.from(attributes, \"base64\"), typeWrappedFarmTokenAttributes);\n    const data = struct.valueOf();\n    if ((data.farm_token_id as Buffer).toString() !== asset.tokenId) return zero;\n\n    return bn((data.farm_token_amount as BigNumberExt).toString(16), 16);\n  }\n\n  const codec = new BinaryCodec();\n  const typeWrappedFarmTokenAttributes = new StructType(\"WrappedFarmTokenAttributes\", [\n    new StructFieldDefinition(\"farm_token_id\", \"\", new TokenIdentifierType()),\n    new StructFieldDefinition(\"farm_token_nonce\", \"\", new U64Type()),\n    new StructFieldDefinition(\"farm_token_amount\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"farming_token_id\", \"\", new TokenIdentifierType()),\n    new StructFieldDefinition(\"farming_token_nonce\", \"\", new U64Type()),\n    new StructFieldDefinition(\"farming_token_amount\", \"\", new BigUIntType()),\n  ]);\n  const typeFarmTokenAttributes = new StructType(\"FarmTokenAttributes\", [\n    new StructFieldDefinition(\"reward_per_share\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"original_entering_epoch\", \"\", new U64Type()),\n    new StructFieldDefinition(\"entering_epoch\", \"\", new U64Type()),\n    new StructFieldDefinition(\"apr_multiplier\", \"\", new U8Type()),\n    new StructFieldDefinition(\"with_locked_rewards\", \"\", new BooleanType()),\n    new StructFieldDefinition(\"initial_farming_amount\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"compounded_reward\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"current_farm_amount\", \"\", new BigUIntType()),\n  ]);\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n"],"sourceRoot":""}