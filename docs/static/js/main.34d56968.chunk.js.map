{"version":3,"sources":["assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positionsv1/base/consts.ts","state/AppState.ts","positionsv1/base/PositionFactory.ts","ui/AppHeader.tsx","positionsv1/base/PriceOracle.ts","positionsv1/Pancakeswap.ts","positionsv1/base/PositionV1.ts","positionsv1/Loops.ts","positionsv1/Revault.ts","positionsv1/Unicly.ts","positionsv1/TokenBalances.ts","positionsv1/Uniswap.ts","positionsv1/OffChain.ts","positionsv1/AlphaHomora.ts","positionsv1/Balancer.ts","positionsv1/ElrondMaiar.ts","positionsv1/TraderJoe.ts","positionsv1/Ribbon.ts","positionsv1/LooksRare.ts","positionsv1/SushiSwap.ts","positionsv1/Fodl.ts","positionsv1/QuickSwap.ts","positionsv1/Pangolin.ts","positionsv1/Rook.ts","positionsv1/Aave.ts","positionsv1/SpookySwap.ts","positionsv1/SpiritSwap.ts","positionsv1/Bitcoin.ts","positionsv1/Liquity.ts","positionsv1/Raydium.ts","positionsv1/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx"],"names":["erc20s","_","merge","erc20sOrig","networks","networksOrig","off","id","name","shortname","btc","egld","sol","currentNetwork","netId","bn","window","ethereum","chainId","toNumber","console","log","find","n","sendWithTxType","tx","useLegacyTx","account","from","type","send","isNetworkDisabled","network","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","setState","_withLoading","showAlert","alert","clickNetwork","networkId","getState","_ethereum","removeAllListeners","on","_onConnect","request","method","_switchNetwork","t","message","stack","setWeb3Instance","Web3","Error","params","utils","numberToHex","useAppState","createHook","useIsAppConnected","selector","state","isAddress","useIsLoading","useAppActions","AppHeader","style","display","flexDirection","justifyContent","margin","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","map","ToggleButton","textTransform","disabled","coingeckoIds","eth","bsc","poly","arb","avax","oeth","ftm","PriceOracle","warm","prices","USD","ether","token","tokenId","symbol","coingeckoId","address","price","this","getId","amount","isZero","fetchPricesElrond","fetchCoingeckoPrices","fetchPrices","toString","zero","mul","div","positions","bynetwork","groupBy","getNetwork","coingeckoFetches","keys","filter","getAssets","concat","getRewardAssets","flatten","a","uniq","elrondFetch","Promise","all","addresses","isEmpty","v","k","url","join","fetch","response","json","result","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","JSON","stringify","data","inputs","results","registry","oracle","types","args","uniqueId","current","startsWith","e","isElrondAddress","trim","length","isOffChainSymbol","isBitcoinAddress","isSolanaAddress","PositionFactory","Severity","register","Farm","BUSD","WBNB","erc20","require","CAKE","BTCB","DOT","ADA","LINK","DOGE","LP","ORBS","asset0","asset1","lpToken","poolId","masterchef","contract","cake","chef","options","lp","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getName","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","encodeABI","deposit","then","total0","total1","val0","val1","add","Pancakeswap","Loops","AaveLoop","CompoundLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","aave","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","sub","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","owner","claimRewardsToOwner","WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","SingleVault","RevaStake","REVA","revault","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","staking","pendingAmount","userPoolInfo","poolInfo","Revault","Unicly","XUnicFarm","Strategies","uPunks","uJenny","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","getxUNICRate","xunicrate","totalLPTokens","TokenBalance","mcap","nativeTokens","WMATIC","WAVAX","NativeTokenBalance","getBalance","forEach","input","TokenBalances","maxUint128","pow","subn","V2LP","V3LP","WBTC","token1","nftPositionManager","nftManager","principal0","principal1","valueIfHodl","valueNow","ilValue","il","pending0","pending1","pendingValue0","pendingValue1","totalFeesValue","High","gt","pos","decreaseLiquidity","maxUint256","res","loadFromPositionGraph","loadTVL","fee","collect","position","pool","totalValueLockedUSD","depositedToken0","withdrawnToken0","depositedToken1","withdrawnToken1","principalValue0","principalValue1","collectedFeesToken0","collectedValue0","collectedFeesToken1","collectedValue1","factory","getPool","a0","a1","v0","v1","router","pair","factoryAddress","getPair","lpAmount","lpTotalSupply","Uniswap","AssetPosition","zeroAddress","OffChain","LYF","WETHe","WBTCe","alphaHomoraBank","maxHistoryBlocks","supply0","supply1","borrow0","borrow1","ilAmount","debtRatio","getPositionInfo","lpSupplied","collateralSize","farmAbi","internalType","outputs","stateMutability","nft","collToken","getUnderlyingToken","collId","totalLPs","share","getPositionDebts","debts","indexOf","totalValue0","totalValue1","AlphaHomora","DAI","USDT","overridePrice","balToken","balV2","gaugeAddress","gauge","bal","amounts","values","loadFromPool","lp_token","lpTokenAddress","workingBalance","totalWorkingBalance","claimable_tokens","catch","claimable_reward_write","bpt","totalBptsStaked","bptTotalSupply","bptBalance","getPoolTokens","poolTokens","every","eqIgnoreCase","balances","poolAmounts","poolValues","reduce","sum","b","x","Balancer","esdt","USDC_EGLD","assets","farm","L_USDC_EGLD","MEX_EGLD","L_MEX_EGLD","mex","lpBalanceStaked","getESDTs","getTotalSupply","farmEsdts","pairEsdts","totalLPSupply","totalLPStaked","tokenIdentifier","balance","asset0InPair","asset1InPair","asset0TotalValue","asset1TotalValue","esdts","lpNameSuffix","split","lps","MexFarm","MEX","L_MEX","totalAssetStaked","farmNftWrapper","creator","decimals","dec","get","ElrondMaiar","FarmStrategies","MexFarmStrategies","masterchefAddress","reward","pendingTokens","pendingJoe","lpAddress","TraderJoe","ThetaVault","rewardTokens","vaultAddress","rewardToken","strike","depositReceipts","unredeemedShares","liquidityGauge","pricePerShare","fbalance","fratio","staked","totalBalance","total","currentOption","bn9","Ribbon","Staking","AutoCompund","looks","checkPending","calculateSharesValueInLOOKS","calculatePendingRewards","totalShares","calculateSharePriceInLOOKS","stakedLooks","pendingEth","sharePrice","tvlAmount","LooksRare","getFarmContract","getRewardContract","pendingSushi","SushiSwap","Fodl","XFodlStake","fodl","xfodl","myXfodl","xfodlTotalSupply","fodlStaked","orbs","stakingAddress","earned","stakingToken","stakedBalance","totalStaked","amount0InLp","amount1InLp","totalLpSupply","tvl_amount0","tvl_amount1","tvl_value0","tvl_value1","stake","QuickSwap","pendingReward","Pangolin","XRook","rook","xrook","totalValueLocked","Rook","Collateral","aToken","Aave","boo","pendingBOO","SpookySwap","SpiritSwap","BitcoinBalance","bech32","fetchTVL","fetchBalance","fetchPrice","r","convertDecimals","parseFloat","Bitcoin","Pool","CDP","lusd","lqty","manager","CR_LIQUIDATION","CR_RECOVERY","debt","cr","ltv","liquidationPrice","entireSystemDebt","entireSystemCR","recoveryMode","lte","to3","getEntireDebtAndColl","getEntireSystemColl","getEntireSystemDebt","checkRecoveryMode","systemColl","systemDebt","coll","crWithGasFeeRebate","pendingRewardValue","pendingETH","pendingETHValue","getTotalLUSDDeposits","getCompoundedLUSDDeposit","getDepositorLQTYGain","getDepositorETHGain","totalDeposits","rewards","withdrawFromSP","Liquity","tokenName","lpMintAddress","amountToken","amountSol","valueToken","valueSol","fetchLpAmount","fetchLpInfo","lpInfo","totalLps","tokenAmountLp","totalTokens","tokenAmountCoin","totalSol","tokenAmountPc","totalTokensValue","totalSolValue","pairs","lpMint","jsonrpc","mint","encoding","it","parsed","tokenAmount","Raydium","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","load","api","addPosition","create","update","newArgs","delete","posId","sendTransaction","harvest","warmup","shouldLoad","loaded","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","chain","health","marketValue","num","useAllPositions","useAllPositionsValuePerPosition","Math","round","rows","sorted","labels","useAllPositionsValuePerAssetClass","reduced","ext","includes","assetClass","key","ac","useAllPositionsValuePerChain","grouped","totalPerChain","totalMarketValue","grandtotal","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","fmtData","positionMethods","selectedMethodArgTypes","rewardAssets","rawData","isArray","BN","fmt18","AddPositionDialogState","show","valid","allTypes","sort","setType","isValidArgs","setAddress","setInput","setName","useAddPositionDialog","AddPositionBtn","isConnected","Button","onClick","AddPositionDialog","appActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","ChartJS","ArcElement","Tooltip","Legend","columns","field","headerName","headerAlign","width","align","valueFormatter","commafy","toFixed","sortable","AllPositionsTable","appState","undefined","positionDialogActions","totalValuesPerChain","valuesPerPosition","valuesPerAssetClass","useEffect","height","ListItemText","datasets","backgroundColor","colorOf","responsive","plugins","legend","DataGrid","onCellClick","autoHeight","hideFooter","bgColors","PositionDialog","appStateActions","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","accept","hidden","addEventListener","file","files","reader","FileReader","onload","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById"],"mappings":"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","file":"static/js/main.34d56968.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {});\n\nexport const networks = _.merge({}, networksOrig, {\n  off: { id: -1, name: \"OffChain\", shortname: \"off\" },\n  btc: { id: -2, name: \"Bitcoin\", shortname: \"btc\" },\n  egld: { id: -508, name: \"Elrond\", shortname: \"egld\" },\n  sol: { id: -600, name: \"Solana\", shortname: \"sol\" },\n});\n\nexport async function currentNetwork() {\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positionsv1/base/consts\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./PositionV1\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => PositionV1;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): PositionV1 | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = _.uniqueId(args.type + \":\" + args.address + \"-\" + args.name + \"-\");\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: PositionV1, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return (\n      (!!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address) || isOffChainSymbol(type, address))) ||\n      isBitcoinAddress(type, address) ||\n      isSolanaAddress(type, address)\n    );\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isOffChainSymbol(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:OffChain:Asset\") && _.trim(address).length > 0;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isBitcoinAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:Bitcoin\") && _.trim(address).length > 0 && address.startsWith(\"bc1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isSolanaAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"sol:\") && _.trim(address).length === 44;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1 } from \"./PositionV1\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\nimport { OffChain } from \"../OffChain\";\nimport { Raydium } from \"../Raydium\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n  [networks.oeth.id]: \"optimistic-ethereum\",\n  [networks.ftm.id]: \"fantom\",\n};\n\nexport class PriceOracle {\n  warm = false;\n  prices: Record<string, BN> = {\n    USD: ether,\n  };\n\n  getId(networkId: number, token: Token) {\n    if (networkId === networks.egld.id) return (token as ElrondMaiar.ESDT).tokenId;\n    if (networkId === networks.off.id) return (token as OffChain.Asset).symbol;\n    if (networkId === networks.sol.id) return (token as Raydium.SolToken).coingeckoId;\n    return token.address;\n  }\n\n  overridePrice(networkId: number, token: Token, price: BN) {\n    this.prices[this.getId(networkId, token)] = price;\n  }\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const id = this.getId(networkId, token);\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (networkId === networks.egld.id) await this.fetchPricesElrond([id]);\n      else if (networkId === networks.sol.id) await this.fetchCoingeckoPrices([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: PositionV1[]) {\n    if (this.warm) return;\n    this.warm = true;\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[networks.egld.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n\n    try {\n      const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n      const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(addresses, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchCoingeckoPrices(coingeckoIds: string[]): Promise<{ [ids: string]: BN }> {\n    if (_.isEmpty(coingeckoIds)) return {};\n    console.log(\"fetchCoingeckoPrices\", coingeckoIds);\n\n    try {\n      const url = `https://api.coingecko.com/api/v3/simple/price?ids=${coingeckoIds.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(coingeckoIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PancakeswapMasterchefV2Abi } from \"../../typechain-abi/PancakeswapMasterchefV2Abi\";\nimport { PancakeswapLpAbi } from \"../../typechain-abi/PancakeswapLpAbi\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // https://docs.pancakeswap.finance/code/migration/masterchef-v2/list-of-farms\n\n  export function register() {\n    const lp_BUSD_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BUSD/BNB\", \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_BTCB_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BTCB/BNB\", \"0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_CAKE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP CAKE/BNB\", \"0x0eD7e52944161450477ee417DE9Cd3a859b14fD0\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ORBS_BUSD = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ORBS/BUSD\", \"0xB87b857670A44356f2b70337E0F218713D2378e8\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOT_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOT/BNB\", \"0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ADA_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ADA/BNB\", \"0x28415ff2C35b65B9E5c7de82126b4015ab9d031F\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_LINK_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP LINK/BNB\", \"0x824eb9faDFb377394430d2744fa7C42916DE3eCe\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOGE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOGE/BNB\", \"0xac109C8025F272414fd9e2faA805a583708A017f\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_TON_BTCB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP TON/BTCB\", \"0x1893da6b92660b85538f58217808685b80fb083e\", require(\"../abi/PancakeswapLpAbi.json\"));\n\n    PositionFactory.register({\n      \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), lp_BUSD_BNB(), 3),\n      \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), lp_CAKE_BNB(), 2),\n      \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), lp_BTCB_BNB(), 11),\n      \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), lp_DOT_BNB(), 5),\n      \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), lp_ADA_BNB(), 4),\n      \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), lp_LINK_BNB(), 6),\n      \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), lp_DOGE_BNB(), 37),\n\n      \"bsc:Pancakeswap:LP:ORBS/BUSD\": (args, oracle) => new LP(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), lp_ORBS_BUSD()),\n      \"bsc:Pancakeswap:LP:TON/BTCB\": (args, oracle) => new LP(args, oracle, erc20(\"TON\", \"0x76A797A59Ba2C17726896976B7B3747BfD1d220f\"), erc20s.bsc.BTCB(), lp_TON_BTCB()),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<PancakeswapMasterchefV2Abi>(require(\"../abi/PancakeswapMasterchefV2Abi.json\"), \"0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652\");\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      lp: this.lpToken.address,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLpAbi,\n      public poolId: number\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n\n  class LP extends Farm {\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpToken: Token & PancakeswapLpAbi) {\n      super(args, oracle, asset0, asset1, lpToken, -1);\n    }\n\n    async load() {\n      const [total0, total1, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpToken.address).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpToken.address).call().then(this.asset1.mantissa),\n        this.lpToken.methods.totalSupply().call().then(this.lpToken.mantissa),\n      ]);\n      const amountLP = await this.lpToken.methods.balanceOf(this.args.address).call().then(this.lpToken.mantissa);\n      this.data.amount0 = total0.mul(amountLP).div(totalSupply);\n      this.data.amount1 = total1.mul(amountLP).div(totalSupply);\n\n      let val0, val1;\n      [this.data.value0, this.data.value1, val0, val1] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, total0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, total1),\n      ]);\n      this.data.tvl = val0.add(val1);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  address: string;\n  id: string;\n  input?: string;\n  name?: string;\n};\n\nexport interface PositionV1 {\n  getName(): string;\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number | BN[] };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { PositionV1, PositionArgs, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport type { AaveSAAVEAbi } from \"../../typechain-abi/AaveSAAVEAbi\";\nimport type { CompoundCTokenAbi } from \"../../typechain-abi/CompoundCTokenAbi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Loops {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n      \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n    });\n  }\n\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements PositionV1 {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20<AaveSAAVEAbi>(\"stkAAVE\", \"0x4da27a545c0c5B758a6BA100e3a049001de870f5\", require(\"../abi/AaveSAAVEAbi.json\"));\n    aave = erc20(\"AAVE\", \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\");\n    weth = erc20s.eth.WETH();\n\n    data = {\n      contract: this.instance.options.address,\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH.sub(this.data.totalDebtETH),\n        value: this.data.totalCollateralValue.sub(this.data.totalDebtValue),\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20(\"Aave: aUSDC\", \"0xBcca60bB61934080951369a648Fb03DF4F96263C\");\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements PositionV1 {\n    WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL = 0.005; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20(\"COMP\", \"0xc00e94Cb662C3520282E6f5717214004A7f26888\");\n\n    data = {\n      contract: this.instance.options.address,\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance.sub(this.data.borrowBalance),\n        value: this.data.supplyBalance.sub(this.data.borrowBalance),\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20<CompoundCTokenAbi>(\"Compound: cUSDC\", \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\", require(\"../abi/CompoundCTokenAbi.json\"));\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\nimport type { RevaultStakingAbi } from \"../../typechain-abi/RevaultStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Revault {\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.CAKE()),\n      \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.BUSD()),\n      \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    });\n    for (let i = 0; i < 4; i++) {\n      PositionFactory.register({\n        [`bsc:Revault:RevaStaking:x${i + 1}`]: (args, oracle) => new RevaStake(args, oracle, i),\n      });\n    }\n  }\n\n  const REVA = () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\");\n  const revaultFarm = () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\");\n  const revaultChef = () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\");\n  const revaStaking = () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\");\n\n  class SingleVault implements PositionV1 {\n    revault = revaultFarm();\n    chef = revaultChef();\n    reva = REVA();\n\n    data = {\n      revault: this.revault.options.address,\n      chef: this.chef.options.address,\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  class RevaStake implements PositionV1 {\n    staking = revaStaking();\n    reva = REVA();\n\n    data = {\n      staking: this.staking.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Unicly {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n      \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n    });\n  }\n\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements PositionV1 {\n    xfarm = contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\");\n    unic = erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\");\n    xunic = erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\");\n    eth = erc20s.eth.WETH();\n\n    data = {\n      xfarm: this.xfarm.options.address,\n      unic: this.unic.options.address,\n      xunic: this.xunic.options.address,\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport Web3 from \"web3\";\n\nexport namespace TokenBalances {\n  class TokenBalance implements PositionV1 {\n    data = {\n      name: \"\",\n      amount: zero,\n      value: zero,\n      totalSupply: zero,\n      mcap: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token: Token) {\n      token.name = args.name || token.name;\n    }\n\n    getName = () => this.data.name;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      [this.data.name, this.data.amount, this.data.totalSupply] = await Promise.all([\n        this.token.methods.name().call(),\n        this.token.methods.balanceOf(this.args.address).call().then(this.token.mantissa),\n        this.token.methods.totalSupply().call().then(this.token.mantissa),\n      ]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.mcap;\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  const nativeTokens = {\n    eth: () => _.merge(erc20s.eth.WETH(), { name: \"ETH\" }),\n    bsc: () => _.merge(erc20s.bsc.WBNB(), { name: \"BNB\" }),\n    poly: () => _.merge(erc20s.poly.WMATIC(), { name: \"MATIC\" }),\n    avax: () => _.merge(erc20s.avax.WAVAX(), { name: \"AVAX\" }),\n    arb: () => _.merge(erc20s.arb.WETH(), { name: \"AETH\" }),\n    oeth: () => _.merge(erc20s.oeth.WETH(), { name: \"ETH\" }),\n  };\n\n  class NativeTokenBalance extends TokenBalance {\n    getName = () => this.token.name;\n\n    async load() {\n      [this.data.amount, this.data.totalSupply] = await Promise.all([web3().eth.getBalance(this.args.address).then(bn), this.token.methods.totalSupply().call().then(bn)]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n  }\n\n  export function register() {\n    _.forEach(networks, (n) => {\n      if (n.id < 0) return;\n      PositionFactory.register({\n        [`${n.shortname}:Token`]: (args, oracle) => new TokenBalance(args, oracle, n, erc20(\"\", Web3.utils.toChecksumAddress(args.input!))),\n      });\n\n      const t = (nativeTokens as any)[n.shortname];\n      if (t) PositionFactory.register({ [`${n.shortname}:TokenBase`]: (args, oracle) => new NativeTokenBalance(args, oracle, n, t()) });\n    });\n  }\n}\n","import { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20, ether, maxUint256, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { UniswapNftManagerAbi } from \"../../typechain-abi\";\nimport type { UniswapV3FactoryAbi } from \"../../typechain-abi\";\nimport type { UniswapV2Abi, UniswapV2FactoryAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nconst maxUint128 = bn(2).pow(bn(128)).subn(1).toString();\n\nexport namespace Uniswap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Uniswap:V2LP:USDC/ETH\": (args, oracle) => new V2LP(args, oracle, erc20s.eth.USDC(), erc20s.eth.WETH()),\n\n      \"eth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.WBTC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:USDC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:TON/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20(\"TON\", \"0x582d872A1B094FC48F5DE31D3B73F2D9bE47def1\"), erc20s.eth.WETH()),\n\n      \"arb:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.arb, erc20(\"WBTC\", \"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f\"), erc20s.arb.WETH()),\n\n      \"poly:Uniswap:V3LP:MATIC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.poly, erc20s.poly.WMATIC(), erc20s.poly.WETH()),\n\n      \"oeth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.oeth, erc20s.oeth.WETH(), erc20s.oeth.WBTC()),\n    });\n  }\n\n  class V3LP implements PositionV1 {\n    nftPositionManager = contract<UniswapNftManagerAbi>(require(\"../abi/UniswapNftManagerAbi.json\"), \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\");\n\n    data = {\n      nftManager: this.nftPositionManager.options.address,\n      id: 0,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      principal0: zero,\n      principal1: zero,\n      valueIfHodl: zero,\n      valueNow: zero,\n      ilValue: zero,\n      il: zero,\n      pending0: zero,\n      pending1: zero,\n      pendingValue0: zero,\n      pendingValue1: zero,\n      totalFeesValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!) || 0;\n      if (this.data.id <= 0) throw new Error(\"unknown positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [this.token0, this.token1];\n    getPendingRewards = () => [\n      { asset: this.token0, amount: this.data.pending0, value: this.data.pendingValue0 },\n      { asset: this.token1, amount: this.data.pending1, value: this.data.pendingValue1 },\n    ];\n    getHealth = () => {\n      if (this.data.value0.isZero() || this.data.value1.isZero())\n        return [\n          {\n            severity: Severity.High,\n            message: \"Range\",\n          },\n        ];\n      if (!this.data.totalFeesValue.isZero() && this.data.ilValue.gt(this.data.totalFeesValue))\n        return [\n          {\n            severity: Severity.High,\n            message: \"IL\",\n          },\n        ];\n      return [];\n    };\n\n    async load() {\n      const pos = await this.nftPositionManager.methods.positions(this.data.id).call();\n      if (web3().utils.toChecksumAddress(pos.token0) !== web3().utils.toChecksumAddress(this.token0.address)) throw new Error(`invalid tokens for pos, ${JSON.stringify(pos)}`);\n\n      const res = await this.nftPositionManager.methods.decreaseLiquidity([this.data.id, pos.liquidity, 0, 0, maxUint256]).call({ from: this.args.address });\n      this.data.amount0 = await this.token0.mantissa(res.amount0);\n      this.data.amount1 = await this.token1.mantissa(res.amount1);\n\n      [this.data.value0, this.data.value1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.amount0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.amount1),\n      ]);\n\n      if (this.getNetwork().id === networks.eth.id) await this.loadFromPositionGraph();\n\n      if (this.data.tvl.isZero()) await this.loadTVL(parseInt(pos.fee));\n    }\n\n    getContractMethods = () => _.functions(this.nftPositionManager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      alert(`target:\\n${this.nftPositionManager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]), useLegacyTx);\n    }\n\n    async loadFromPositionGraph() {\n      const response = await fetch(\"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: `{position(id:${this.data.id}) {\n          depositedToken0\n          depositedToken1\n          withdrawnToken0\n          withdrawnToken1\n          collectedFeesToken0\n          collectedFeesToken1\n          pool {\n            id\n            totalValueLockedUSD\n          }\n        }\n      }`,\n        }),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      this.data.tvl = bn18(json.data.position.pool.totalValueLockedUSD);\n      this.data.principal0 = bn18(json.data.position.depositedToken0).sub(bn18(json.data.position.withdrawnToken0));\n      this.data.principal1 = bn18(json.data.position.depositedToken1).sub(bn18(json.data.position.withdrawnToken1));\n\n      const [principalValue0, principalValue1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.principal0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.principal1),\n      ]);\n      this.data.valueIfHodl = principalValue0.add(principalValue1);\n      this.data.valueNow = this.data.value0.add(this.data.value1);\n      this.data.ilValue = this.data.valueIfHodl.sub(this.data.valueNow);\n      this.data.il = ether.sub(this.data.valueNow.mul(ether).div(this.data.valueIfHodl));\n      const pending = await this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]).call({ from: this.args.address });\n      this.data.pending0 = await this.token0.mantissa(pending.amount0);\n      this.data.pending1 = await this.token1.mantissa(pending.amount1);\n      this.data.pendingValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.pending0);\n      this.data.pendingValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.pending1);\n      const collectedValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, bn18(json.data.position.collectedFeesToken0));\n      const collectedValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, bn18(json.data.position.collectedFeesToken1));\n\n      this.data.totalFeesValue = this.data.pendingValue0.add(this.data.pendingValue1).add(collectedValue0).add(collectedValue1);\n    }\n\n    async loadTVL(fee: number) {\n      const factory = contract<UniswapV3FactoryAbi>(require(\"../abi/UniswapV3FactoryAbi.json\"), await this.nftPositionManager.methods.factory().call());\n      const pool = await factory.methods.getPool(this.token0.address, this.token1.address, fee).call();\n      const [a0, a1] = await Promise.all([\n        this.token0.methods.balanceOf(pool).call().then(this.token0.mantissa),\n        this.token1.methods.balanceOf(pool).call().then(this.token1.mantissa),\n      ]);\n      const [v0, v1] = await Promise.all([this.oracle.valueOf(this.network.id, this.token0, a0), this.oracle.valueOf(this.network.id, this.token1, a1)]);\n      this.data.tvl = v0.add(v1);\n    }\n  }\n\n  class V2LP implements PositionV1 {\n    router = contract<UniswapV2Abi>(require(\"../abi/UniswapV2Abi.json\"), \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\n    data = {\n      router: this.router.options.address,\n      pair: \"\",\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [];\n    getData = () => this.data;\n    getHealth = () => [];\n    getPendingRewards = () => [];\n    getTVL = () => this.data.tvl;\n    getAmounts = () => [\n      { asset: this.asset0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.asset1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n\n    async load() {\n      const factoryAddress = await this.router.methods.factory().call();\n      const factory = contract<UniswapV2FactoryAbi>(require(\"../abi/UniswapV2FactoryAbi.json\"), factoryAddress);\n      this.data.pair = await factory.methods.getPair(this.asset0.address, this.asset1.address).call();\n      const lpToken = erc20(\"LP\", this.data.pair);\n\n      const [lpAmount, lpTotalSupply, total0, total1] = await Promise.all([\n        lpToken.methods.balanceOf(this.args.address).call().then(bn),\n        lpToken.methods.totalSupply().call().then(bn),\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((t) => this.asset0.mantissa(t)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((t) => this.asset1.mantissa(t)),\n      ]);\n\n      this.data.amount0 = total0.mul(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0)).add(await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1));\n    }\n\n    getContractMethods = () => _.functions(this.router.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.router.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.router.methods as any)[method](...args);\n      alert(`target:\\n${this.router.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn18, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace OffChain {\n  export function register() {\n    PositionFactory.register({\n      \"x:OffChain:Asset\": (args, oracle) => new AssetPosition(args, oracle),\n    });\n  }\n\n  export type Asset = Token & { symbol: string };\n\n  class AssetPosition implements PositionV1 {\n    token: Asset;\n    data = {\n      amount: zero,\n      value: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.input) throw new Error(\"input amount required\");\n      if (!args.address) throw new Error(\"address symbol required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { symbol: args.address });\n      this.data.amount = bn18(args.input);\n    }\n\n    getName = () => `OffChain:${this.token.name}`;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.off;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => zero;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { Abi, bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport type { AlphaHomoraBankAbi } from \"../../typechain-abi/AlphaHomoraBankAbi\";\nimport _ from \"lodash\";\n\nexport namespace AlphaHomora {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AlphaHomora:WETHe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX()),\n      \"avax:AlphaHomora:WBTCe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WBTCe(), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class LYF implements PositionV1 {\n    alphaHomoraBank = contract<AlphaHomoraBankAbi>(require(\"../abi/AlphaHomoraBankAbi.json\"), \"0x376d16C7dE138B01455a51dA79AD65806E9cd694\");\n    maxHistoryBlocks = {\n      [networks.avax.id]: 10_000_000,\n    };\n\n    data = {\n      contract: this.alphaHomoraBank.options.address,\n      id: 0,\n      supply0: zero,\n      supply1: zero,\n      borrow0: zero,\n      borrow1: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      pending: zero,\n      pendingValue: zero,\n      tvl: zero,\n      valueIfHodl: zero,\n      ilAmount: zero,\n      il: zero,\n      debtRatio: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!);\n      if (!this.data.id) throw new Error(\"invalid input positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => networks.avax;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n\n    async load() {\n      const pos = await this.alphaHomoraBank.methods.getPositionInfo(this.data.id).call();\n      const lpSupplied = bn(pos.collateralSize);\n      const farmAbi = [\n        {\n          inputs: [{ internalType: \"uint256\", name: \"id\", type: \"uint256\" }],\n          name: \"getUnderlyingToken\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ] as Abi;\n      const nft = contract(farmAbi, pos.collToken);\n      const lpToken = erc20(\"\", await nft.methods.getUnderlyingToken(pos.collId).call());\n      const totalLPs = await lpToken.methods.totalSupply().call().then(bn);\n      const share = lpSupplied.mul(ether).div(totalLPs);\n      const total0 = await this.token0.methods.balanceOf(lpToken.address).call().then(this.token0.mantissa);\n      const total1 = await this.token1.methods.balanceOf(lpToken.address).call().then(this.token1.mantissa);\n      this.data.supply0 = total0.mul(share).div(ether);\n      this.data.supply1 = total1.mul(share).div(ether);\n\n      const debts = await this.alphaHomoraBank.methods.getPositionDebts(this.data.id).call();\n      this.data.borrow0 = await this.token0.mantissa(debts.debts[_.indexOf(debts.tokens, this.token0.address)]);\n      this.data.borrow1 = await this.token1.mantissa(debts.debts[_.indexOf(debts.tokens, this.token1.address)]);\n\n      this.data.amount0 = this.data.supply0.sub(this.data.borrow0);\n      this.data.amount1 = this.data.supply1.sub(this.data.borrow1);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.amount1);\n\n      const totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, total0);\n      const totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, total1);\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    //     private async loadDeposits() {\n    //       const depositAbi = _(this.alphaHomoraBank.options.jsonInterface).find((x) => x.type === \"function\" && x.name === \"execute\")!;\n    //       const depositSig = web3().eth.abi.encodeFunctionSignature(depositAbi);\n    //\n    //       const currentBlock = await web3().eth.getBlockNumber();\n    //       const earliestBlock = currentBlock - this.maxHistoryBlocks[this.getNetwork().id];\n    //\n    //       const apiKey = \"\";\n    //       const alltxsResponse = await fetch(`https://api.snowtrace.io/api?module=account&action=txlist\n    // &fromBlock=${earliestBlock}\n    // &toBlock=${currentBlock}\n    // &address=${this.args.address}\n    // &sort=asc&apikey=${apiKey}`);\n    //       const alltxs = await alltxsResponse.json();\n    //       const relevantTxs = _.filter(alltxs.result, (tx) => eqIgnoreCase(tx.to, this.alphaHomoraBank.options.address) && tx.input.startsWith(depositSig));\n    //       if (relevantTxs.length !== 1) {\n    //         console.error(\"no / too many deposits\");\n    //         return;\n    //       }\n    //       const deposit = relevantTxs[0];\n    //       const receipt = await web3().eth.getTransactionReceipt(deposit.hash);\n    //       const events = parseEvents(receipt, this.token0);\n    //\n    //       const depositEvent = events.find((e) => e.event === \"Transfer\" && eqIgnoreCase(e.address, this.token0.address) && eqIgnoreCase(e.returnValues.from, this.args.address))!;\n    //       const deposit0 = bn(depositEvent.returnValues.value);\n    //       const deposit1 = _.reduce(relevantTxs, (sum, tx) => sum.add(bn(tx.value)), zero);\n    //       const valueNow0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, deposit0);\n    //       const valueNow1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, deposit1);\n    //\n    //       this.data.valueIfHodl = valueNow0.add(valueNow1);\n    //       const valueNow = this.data.value0.add(this.data.value1);\n    //       this.data.ilAmount = this.data.valueIfHodl.sub(valueNow);\n    //       this.data.il = ether.sub(valueNow.mul(ether).div(this.data.valueIfHodl));\n    //     }\n\n    //   private async loadDebtRatio() {\n    //     /*\n    //       struct TokenFactors {\n    //     uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //     uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //     uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    //     mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // }\n    //        */\n    //\n    //     /*\n    //       struct TokenFactors {\n    //   uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //   uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //   uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    // }\n    //\n    // IBaseOracle public immutable source; // Main oracle source\n    // mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // mapping(address => bool) public whitelistERC1155; // Mapping from token address to whitelist status\n    //      */\n    //     const proxyOracleAbi: Abi = [\n    //       {\n    //         name: \"tokenFactors\",\n    //         type: \"function\",\n    //         stateMutability: \"view\",\n    //         inputs: [\n    //           {\n    //             internalType: \"address\",\n    //             name: \"token\",\n    //             type: \"address\",\n    //           },\n    //         ],\n    //         outputs: [\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"borrowFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"collateralFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"liqIncentive\",\n    //             type: \"uint256\",\n    //           },\n    //         ],\n    //       },\n    //     ];\n    //     const o = contract(proxyOracleAbi, await this.alphaHomoraBank.methods.oracle().call());\n    //     const f0 = bn((await o.methods.tokenFactors(this.token0.address).call()).borrowFactor).toNumber() / 1e4;\n    //     const f1 = bn((await o.methods.tokenFactors(this.token1.address).call()).borrowFactor).toNumber() / 1e4;\n    //     console.log(f0, f1);\n    //   }\n\n    getContractMethods = () => _.functions(this.alphaHomoraBank.methods);\n    async callContract(method: string, args: string[]) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      alert(`target:\\n${this.alphaHomoraBank.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, eqIgnoreCase, erc20, ether, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { BalancerV2VaultAbi } from \"../../typechain-abi/BalancerV2VaultAbi\";\nimport { BalancerGaugeAbi } from \"../../typechain-abi/BalancerGaugeAbi\";\n\nexport namespace Balancer {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Balancer:WBTC/ETH\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.eth,\n          [erc20s.eth.WBTC(), erc20s.eth.WETH()],\n          \"0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e\",\n          \"0x4E3c048BE671852277Ad6ce29Fd5207aA12fabff\"\n        ),\n\n      \"poly:Balancer:USDC/DAI/MAI/USDT\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.USDC(), erc20s.poly.DAI(), erc20(\"MAI\", \"0xa3Fa99A148fA48D14Ed51d610c367C61876997F1\"), erc20s.poly.USDT()],\n          \"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012\"\n        ),\n      \"poly:Balancer:MATIC/sMATIC\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.WMATIC(), erc20(\"sMATIC\", \"0x3A58a54C066FdC0f2D55FC9C89F0415C92eBf3C4\")],\n          \"0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366\",\n          \"0x9928340f9E1aaAd7dF1D95E27bd9A5c715202a56\"\n        ),\n\n      \"arb:Balancer:MAI/USDT/USDC\": (args, oracle) => {\n        oracle.overridePrice(networks.arb.id, erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"), ether);\n        return new Farm(\n          args,\n          oracle,\n          networks.arb,\n          [\n            erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"),\n            erc20(\"USDT\", \"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9\"),\n            erc20(\"USDC\", \"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8\"),\n          ],\n          \"0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d\"\n        );\n      },\n    });\n  }\n\n  const balToken = {\n    [networks.eth.id]: () => erc20(\"BAL\", \"0xba100000625a3754423978a60c9317c58a424e3D\"),\n    [networks.poly.id]: () => erc20(\"BAL\", \"0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3\"),\n    [networks.arb.id]: () => erc20(\"BAL\", \"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8\"),\n  };\n\n  const balV2 = () => contract<BalancerV2VaultAbi>(require(\"../abi/BalancerV2VaultAbi.json\"), \"0xBA12222222228d8Ba445958a75a0704d566BF2C8\");\n\n  class Farm implements PositionV1 {\n    vault = balV2();\n    gauge = contract<BalancerGaugeAbi>(require(\"../abi/BalancerGaugeAbi.json\"), this.gaugeAddress);\n    bal = balToken[this.network.id]();\n\n    data = {\n      vault: this.vault.options.address,\n      gauge: this.gauge.options.address,\n      amounts: [] as BN[],\n      values: [] as BN[],\n      tvl: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public tokens: Token[], public poolId: string, public gaugeAddress: string = \"\") {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => this.tokens;\n    getAmounts = () => _.map(this.tokens, (asset, i) => ({ asset, amount: this.data.amounts[i] || zero, value: this.data.values[i] || zero }));\n    getRewardAssets = () => [this.bal];\n    getPendingRewards = () => [{ asset: this.bal, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      if (!this.gaugeAddress) return await this.loadFromPool();\n\n      const [lpTokenAddress, workingBalance, totalWorkingBalance] = await Promise.all([\n        this.gauge.methods.lp_token().call(),\n        this.gauge.methods.balanceOf(this.args.address).call().then(bn),\n        this.gauge.methods.totalSupply().call().then(bn),\n      ]);\n      const pending = await this.gauge.methods\n        .claimable_tokens(this.args.address)\n        .call()\n        .catch(() => this.gauge.methods.claimable_reward_write(this.args.address, this.bal.address).call())\n        .then(bn);\n\n      const bpt = erc20(\"BPT\", lpTokenAddress);\n      const [totalBptsStaked, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.gaugeAddress).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n      const bptBalance = totalBptsStaked.mul(workingBalance).div(totalWorkingBalance);\n\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(totalBptsStaked).div(bptTotalSupply))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.add(bn(b)), zero);\n\n      this.data.pending = pending;\n      this.data.pendingValue = await this.oracle.valueOf(this.network.id, this.bal, this.data.pending);\n    }\n\n    private async loadFromPool() {\n      const bpt = erc20(\n        \"BPT\",\n        await this.vault.methods\n          .getPool(this.poolId)\n          .call()\n          .then((x) => x[\"0\"])\n      );\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      const [bptBalance, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.args.address).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.add(bn(b)), zero);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.gauge.methods.claimable_tokens(this.args.address), useLegacyTx);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { networks } from \"./base/consts\";\n\nexport namespace ElrondMaiar {\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    MEX_EGLD: () => esdt(\"MEX/EGLD LP\", \"EGLDMEX-0be9e5\", 18),\n    USDC_EGLD: () => esdt(\"USDC/EGLD LP\", \"EGLDUSDC-594e5e\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string; lp: ESDT };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    L_USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\",\n      lp: tokens.MEX_EGLD(),\n    }),\n    L_MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\",\n      lp: tokens.MEX_EGLD(),\n    }),\n  };\n\n  class Farm implements PositionV1 {\n    mex = tokens.MEX();\n\n    data = {\n      pool: this.strategy.pool,\n      farm: this.strategy.farm,\n      lp: this.strategy.lp.tokenId,\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.egld;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () =>\n      this.getAssets().length > 1\n        ? [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n            {\n              asset: this.getAssets()[1],\n              amount: this.data.amount1,\n              value: this.data.value1,\n            },\n          ]\n        : [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n          ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [asset0, asset1] = this.getAssets();\n      const [farmEsdts, pairEsdts, totalLPSupply] = await Promise.all([getESDTs(this.strategy.farm), getESDTs(this.strategy.pool), getTotalSupply(this.strategy.lp)]);\n      const totalLPStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === this.strategy.lp.tokenId)!.balance);\n      const asset0InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset0.tokenId)!.balance);\n      const asset1InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset1.tokenId)!.balance);\n      const asset0TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset0, totalLPStaked.mul(asset0InPair).div(totalLPSupply));\n      const asset1TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset1, totalLPStaked.mul(asset1InPair).div(totalLPSupply));\n      this.data.tvl = asset0TotalValue.add(asset1TotalValue);\n\n      const esdts = await getESDTs(this.args.address);\n      const lpNameSuffix = this.strategy.lp.tokenId.split(\"-\")[0];\n      const lps = _.find(esdts, (t) => t.tokenIdentifier.startsWith(lpNameSuffix));\n      if (!lps) return;\n\n      this.data.lpBalanceStaked = bn(lps!.balance);\n      this.data.amount0 = this.data.lpBalanceStaked.mul(asset0InPair).div(totalLPSupply);\n      this.data.amount1 = this.data.lpBalanceStaked.mul(asset1InPair).div(totalLPSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, asset1, this.data.amount1);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\",\n      lp: tokens.MEX(),\n    }),\n    L_MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\",\n      lp: tokens.LKMEX(),\n    }),\n  };\n\n  class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as Strategy).lp];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const asset = this.getAssets()[0];\n\n      const farmEsdts = await getESDTs(this.strategy.farm);\n      const totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      this.data.tvl = await this.oracle.valueOf(networks.egld.id, asset, totalAssetStaked);\n\n      const esdts = await getESDTs(this.args.address);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === this.strategy.pool.toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n\n      this.data.amount0 = bn(farmNftWrapper.balance.toString());\n      this.data.value0 = await this.oracle.valueOf(networks.egld.id, asset, this.data.amount0);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  async function getESDTs(address: string) {\n    const response = await fetch(`https://gateway.elrond.com/address/${address}/esdt`);\n    const json = await response.json();\n    return _.get(json, [\"data\", \"esdts\"], []);\n  }\n\n  async function getTotalSupply(token: ESDT) {\n    const response = await fetch(`https://gateway.elrond.com/network/esdt/supply/${token.tokenId}`);\n    const json = await response.json();\n    return bn(_.get(json, [\"data\", \"supply\"], \"0\"));\n  }\n\n  export function register() {\n    PositionFactory.register({\n      \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n      \"egld:Maiar:LFarm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_USDC_EGLD()),\n      \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n      \"egld:Maiar:LFarm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_MEX_EGLD()),\n      \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n      \"egld:Maiar:MEXLFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.L_MEX()),\n    });\n  }\n\n  // export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n  //   const assets = _.map(tokens, (t) => t());\n\n  // https://gateway.elrond.com/address/:bech32Address/balance\n\n  // const [esdts, balanceEGLD] = await Promise.all([getESDTs(address), provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString()))]);\n\n  // const balances = await Promise.all(\n  //   _(esdts)\n  //     .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n  //     .filter((t) => !!t.asset)\n  //     .map(async (t) => {\n  //       const amount = to18(t.esdt.balance, t.asset!.dec);\n  //       return {\n  //         asset: t.asset!,\n  //         amount,\n  //         value: await oracle.valueOf(networks.egld.id, t.asset!, amount),\n  //       };\n  //     })\n  //     .value()\n  // );\n\n  // balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(networks.egld.id, tokens.EGLD(), balanceEGLD) });\n\n  // return balances;\n  // }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n\n// farms v2:\n// EGLD/MEX => MEX : erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\n// EGLD/MEX => LKMEX: erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\n// EGLD/USDC => MEX: erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\n// EGLD/USDC => LKMEX: erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\n// MEX => MEX: erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\n// MEX => LKMEX: erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\n","import _ from \"lodash\";\nimport type { TraderJoeFarmAbi } from \"../../typechain-abi/TraderJoeFarmAbi\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace TraderJoe {\n  const orbs = () => erc20(\"ORBS\", \"0x340fE1D898ECCAad394e2ba0fC1F93d27c7b717A\");\n\n  export function register() {\n    PositionFactory.register({\n      \"avax:TraderJoe:Farm:WETH/AVAX\": (args, oracle) => new Farm(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX(), 26),\n      \"avax:TraderJoe:Farm:sAVAX/AVAX\": (args, oracle) =>\n        new Farm(args, oracle, erc20(\"sAVAX\", \"0x2b2C81e08f1Af8835a78Bb2A90AE924ACE0eA4bE\"), erc20s.avax.WAVAX(), 51, \"0x188bed1968b795d5c9022f6a0bb5931ac4c18f00\"),\n\n      \"avax:TraderJoe:LP:ORBS/AVAX\": (args, oracle) => new LP(args, oracle, orbs(), erc20s.avax.WAVAX(), \"0x0315522354037e48C75756aD68358CE185dad911\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<TraderJoeFarmAbi>(require(\"../abi/TraderJoeFarmAbi.json\"), this.masterchefAddress);\n    reward = erc20(\"JOE\", \"0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd\");\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public poolId: number,\n      public masterchefAddress: string = \"0xd6a4F121CA35509aF06A0Be99093d08462f53052\"\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingTokens(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken);\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.mul(lpStaked).div(lpTotalSupply))).add(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.mul(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending.pendingJoe);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"TraderJoeLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn9, contract, erc20, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { RibbonThetaVaultAbi } from \"../../typechain-abi/RibbonThetaVaultAbi\";\nimport type { RibbonGaugeAbi } from \"../../typechain-abi/RibbonGaugeAbi\";\n\nexport namespace Ribbon {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Ribbon:T-CC:ETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x25751853Eab4D0eB3652B5eB6ecB102A2789644B\"),\n      \"eth:Ribbon:T-CC:stETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x53773E034d9784153471813dacAFF53dBBB78E8c\"),\n      \"eth:Ribbon:T-CC:WBTC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WBTC(), \"0x65a833afDc250D9d38f8CD9bC2B1E3132dB13B2F\"),\n      \"eth:Ribbon:T-CSP:yvUSDC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.USDC(), \"0xCc323557c71C0D1D20a1861Dc69c06C5f3cC9624\"),\n\n      \"avax:Ribbon:T-CC:AVAX\": (args, oracle) => new ThetaVault(args, oracle, networks.avax, erc20s.avax.WAVAX(), \"0x98d03125c62DaE2328D9d3cb32b7B969e6a87787\"),\n    });\n  }\n\n  const rewardTokens = {\n    [networks.eth.id]: () => erc20(\"RBN\", \"0x6123B0049F904d730dB3C36a31167D9d4121fA6B\"),\n    [networks.avax.id]: () => erc20s.avax.WAVAX(),\n  };\n\n  class ThetaVault implements PositionV1 {\n    rewardToken = rewardTokens[this.network.id]();\n    vault = contract<RibbonThetaVaultAbi>(require(\"../abi/RibbonThetaVaultAbi.json\"), this.vaultAddress);\n\n    data = {\n      vault: this.vaultAddress,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      strike: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset: Token, public vaultAddress: string) {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.asset];\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.rewardToken];\n    getPendingRewards = () => [{ asset: this.rewardToken, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const { amount, unredeemedShares } = await this.vault.methods.depositReceipts(this.args.address).call();\n      this.data.amount = await this.asset.mantissa(bn(amount).add(bn(unredeemedShares)));\n\n      // farms only on ETH\n      if (this.network.id === networks.eth.id) {\n        const farm = contract<RibbonGaugeAbi>(require(\"../abi/RibbonGaugeAbi.json\"), await this.vault.methods.liquidityGauge().call());\n        const [fbalance, fratio] = await Promise.all([farm.methods.balanceOf(this.args.address).call().then(bn), this.vault.methods.pricePerShare().call().then(bn)]);\n        const staked = await this.asset.mantissa(fbalance.mul(fratio).div(await this.asset.amount(1)));\n        this.data.amount = this.data.amount.add(staked);\n\n        this.data.pending = await farm.methods.claimable_tokens(this.args.address).call().then(bn);\n        this.data.pendingValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardToken, this.data.pending);\n      }\n\n      this.data.value = await this.oracle.valueOf(this.network.id, this.asset, this.data.amount);\n\n      const total = await this.asset.mantissa(await this.vault.methods.totalBalance().call());\n      this.data.tvl = await this.oracle.valueOf(this.network.id, this.asset, total);\n\n      const currentOption = contract(require(\"../abi/RibbonOptionAbi.json\"), await this.vault.methods.currentOption().call());\n      this.data.strike = bn9(await currentOption.methods[\"strikePrice()\"]().call()).muln(10);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, ether, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { LooksrareStakingAbi } from \"../../typechain-abi/LooksrareStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace LooksRare {\n  export function register() {\n    PositionFactory.register({\n      \"eth:LooksRare:LooksStaking\": (args, oracle) => new Staking(args, oracle),\n      \"eth:LooksRare:LooksAutoCompound\": (args, oracle) => new AutoCompund(args, oracle),\n    });\n  }\n\n  class Staking implements PositionV1 {\n    eth = erc20s.eth.WETH();\n    looks = erc20(\"LOOKS\", \"0xf4d2888d29D722226FafA5d9B24F9164c092421E\");\n    vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0xBcD7254A1D759EFA08eC7c3291B2E85c5dCC12ce\");\n    checkPending = true;\n\n    data = {\n      vault: this.vault.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getNetwork = () => networks.eth;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.looks];\n    getAmounts = () => [{ asset: this.looks, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.eth];\n    getPendingRewards = () => [{ asset: this.eth, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const [stakedLooks, pendingEth, totalShares, sharePrice] = await Promise.all([\n        this.vault.methods.calculateSharesValueInLOOKS(this.args.address).call().then(bn),\n        this.checkPending ? this.vault.methods.calculatePendingRewards(this.args.address).call().then(bn) : zero,\n        this.vault.methods.totalShares().call().then(bn),\n        this.vault.methods.calculateSharePriceInLOOKS().call().then(bn),\n      ]);\n      this.data.amount = stakedLooks;\n      this.data.pendingAmount = pendingEth;\n      const tvlAmount = totalShares.mul(sharePrice).div(ether);\n\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.looks, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.looks, tvlAmount),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class AutoCompund extends Staking {\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      super(args, oracle);\n      this.vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0x3ab16Af1315dc6C95F83Cbf522fecF98D00fd9ba\");\n      this.data.vault = this.vault.options.address;\n      this.checkPending = false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, Contract, contract, erc20, erc20s, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { SushiswapMinichefAbi } from \"../../typechain-abi/SushiswapMinichefAbi\";\n\nexport namespace SushiSwap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:SushiSwap:Farm:USDC/ETH\": (args, oracle) => new Farm(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH(), 1),\n      \"poly:SushiSwap:Farm:ETH/MATIC\": (args, oracle) => new Farm(args, oracle, networks.poly, erc20s.poly.WETH(), erc20s.poly.WMATIC(), 0),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = getFarmContract(this.network);\n    reward = getRewardContract(this.network);\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingSushi(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken || (await this.masterchef.methods.lpToken(this.poolId).call()));\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.mul(lpStaked).div(lpTotalSupply))).add(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.mul(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      const tx = this.network.id === networks.poly.id ? this.masterchef.methods.deposit(this.poolId, 0, this.args.address) : this.masterchef.methods.deposit(this.poolId, 0);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n  }\n\n  function getFarmContract(network: Network): Contract {\n    switch (network.shortname) {\n      case \"poly\":\n        return contract<SushiswapMinichefAbi>(require(\"../abi/SushiswapMinichefAbi.json\"), \"0x0769fd68dFb93167989C6f7254cd0D766Fb2841F\");\n      case \"eth\":\n      default:\n        return contract(require(\"../abi/SushiswapMasterchefAbi.json\"), \"0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd\");\n    }\n  }\n\n  function getRewardContract(network: Network) {\n    switch (network.shortname) {\n      case \"poly\":\n        return erc20(\"SUSHI\", \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\");\n      case \"eth\":\n      default:\n        return erc20(\"SUSHI\", \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\");\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, zero } from \"@defi.org/web3-candies\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Fodl {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n    });\n  }\n\n  export class XFodlStake implements PositionV1 {\n    fodl = erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\");\n    xfodl = erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\");\n\n    data = {\n      fodl: this.fodl.address,\n      xfodl: this.xfodl.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(bn),\n        this.xfodl.methods.totalSupply().call().then(bn),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(bn),\n      ]);\n      this.data.amount = myXfodl.mul(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { QuickswapStakingAbi } from \"../../typechain-abi/QuickswapStakingAbi\";\nimport _ from \"lodash\";\n\nexport namespace QuickSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x614389EaAE0A6821DC49062D56BDA3d9d45Fa2ff\");\n  const quick = () => erc20(\"QUICK\", \"0x831753DD7087CaC61aB5644b308642cc1c33Dc13\");\n\n  export function register() {\n    PositionFactory.register({\n      \"poly:QuickSwap:Farm:ORBS/USDC\": (args, oracle) => new Farm(args, oracle, erc20s.poly.USDC(), orbs(), \"0x9CA237962823A0a74bbC8354764e1DAC9e4057F0\"),\n\n      \"poly:QuickSwap:LP:ORBS/QUICK\": (args, oracle) => new LP(args, oracle, orbs(), quick(), \"0x882624931b4A799d50242e5b25E2Fa2719E4d072\"),\n      \"poly:QuickSwap:LP:ORBS/JPYC\": (args, oracle) =>\n        new LP(args, oracle, orbs(), erc20(\"JPYC\", \"0x431D5dfF03120AFA4bDf332c61A6e1766eF37BDB\"), \"0xD01C074C78E9647a5ddAE2648f1A089b98D5380a\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    staking = contract<QuickswapStakingAbi>(require(\"../abi/QuickswapStakingAbi.json\"), this.stakingAddress);\n    reward = erc20(\"dQUICK\", \"0xf28164A485B0B2C90639E47b0f377b4a438a16B1\");\n\n    data = {\n      contract: this.stakingAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public stakingAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, totalStaked, earned, lpAddress] = await Promise.all([\n        this.staking.methods.balanceOf(this.args.address).call().then(bn),\n        this.staking.methods.totalSupply().call().then(bn),\n        this.staking.methods.earned(this.args.address).call().then(bn),\n        this.staking.methods.stakingToken().call(),\n      ]);\n      this.data.rewardAmount = earned;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(lp.mantissa),\n      ]);\n      this.data.amount0 = stakedBalance.mul(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.mul(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_amount0 = totalStaked.mul(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.mul(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.add(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.staking.methods.stake(0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"QuickswapLP\", this.lpAddress);\n\n    data = {\n      contract: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [balance, totalSupply] = await Promise.all([this.lp.methods.balanceOf(this.args.address).call().then(bn), this.lp.methods.totalSupply().call().then(bn)]);\n\n      const [amount0InLp, amount1InLp] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n      ]);\n      this.data.amount0 = amount0InLp.mul(balance).div(totalSupply);\n      this.data.amount1 = amount1InLp.mul(balance).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, amount0InLp);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, amount1InLp);\n      this.data.tvl = tvl_value0.add(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PangolinChefAbi } from \"../../typechain-abi/PangolinChefAbi\";\nimport _ from \"lodash\";\n\nexport namespace Pangolin {\n  const orbs = () => erc20(\"ORBS\", \"0x340fE1D898ECCAad394e2ba0fC1F93d27c7b717A\");\n  const png = () => erc20(\"PNG\", \"0x60781C2586D68229fde47564546784ab3fACA982\");\n\n  export function register() {\n    PositionFactory.register({\n      \"avax:Pangolin:Farm:ORBS/AVAX\": (args, oracle) => new Farm(args, oracle, orbs(), erc20s.avax.WAVAX(), 36),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    chef = contract<PangolinChefAbi>(require(\"../abi/PangolinChefAbi.json\"), \"0x1f806f7C8dED893fd3caE279191ad7Aa3798E928\");\n    reward = png();\n\n    data = {\n      chef: this.chef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.avax;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, pending, lpAddress] = await Promise.all([\n        this.chef.methods\n          .userInfo(this.poolId, this.args.address)\n          .call()\n          .then((x) => bn(x.amount)),\n        this.chef.methods.pendingReward(this.poolId, this.args.address).call().then(bn),\n        this.chef.methods.lpToken(this.poolId).call(),\n      ]);\n      this.data.rewardAmount = pending;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply, totalStaked] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(bn),\n        lp.methods.balanceOf(this.chef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = stakedBalance.mul(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.mul(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n\n      const tvl_amount0 = totalStaked.mul(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.mul(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.isZero() ? tvl_value1.muln(2) : tvl_value0.add(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.chef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.chef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.chef.methods as any)[method](...args);\n      alert(`target:\\n${this.chef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.chef.methods.deposit(this.poolId, 0, this.args.address), useLegacyTx);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { contract, erc20, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { RookLiquidityPoolAbi } from \"../../typechain-abi/RookLiquidityPoolAbi\";\nimport _ from \"lodash\";\n\nexport namespace Rook {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Rook:xRook\": (args, oracle) => new XRook(args, oracle),\n    });\n  }\n\n  class XRook implements PositionV1 {\n    pool = contract<RookLiquidityPoolAbi>(require(\"../abi/RookLiquidityPoolAbi.json\"), \"0x4F868C1aa37fCf307ab38D215382e88FCA6275E2\");\n    rook = erc20(\"ROOK\", \"0xfA5047c9c78B8877af97BDcb85Db743fD7313d4a\");\n    xrook = erc20(\"xROOK\", \"0x8aC32F0a635a0896a8428A9c31fBf1AB06ecf489\");\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [this.xrook];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getTVL = () => this.data.tvl;\n    getAmounts = () => [{ asset: this.rook, amount: this.data.amount, value: this.data.value }];\n\n    async load() {\n      this.data.amount = await this.pool.methods.underlyingBalance(this.rook.address, this.args.address).call().then(this.rook.mantissa);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.rook, this.data.amount);\n      const tvlAmount = await this.pool.methods.totalValueLocked(this.rook.address).call().then(this.rook.mantissa);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.rook, tvlAmount);\n    }\n\n    getContractMethods = () => _.functions(this.xrook.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xrook.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.xrook.methods as any)[method](...args);\n      alert(`target:\\n${this.xrook.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks } from \"./base/consts\";\nimport { erc20, Network, Token, zero } from \"@defi.org/web3-candies\";\n\nexport namespace Aave {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AaveV3:aAVAX\": (args, oracle) => new Collateral(args, oracle, networks.avax, erc20(\"aAVAX\", \"0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97\"), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class Collateral implements PositionV1 {\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public aToken: Token, public token: Token) {}\n\n    getName = () => \"\";\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.aToken];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      const [amount, totalSupply] = await Promise.all([\n        this.aToken.methods.balanceOf(this.args.address).call().then(this.aToken.mantissa),\n        this.aToken.methods.totalSupply().call().then(this.aToken.mantissa),\n      ]);\n\n      this.data.amount = amount;\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.token, totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.tvl;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { contract, erc20, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport type { SpookyChefAbi } from \"../../typechain-abi\";\n\nexport namespace SpookySwap {\n  const orbs = () => erc20(\"ORBS\", \"0x3E01B7E242D5AF8064cB9A8F9468aC0f8683617c\");\n  const usdc = () => erc20(\"USDC\", \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\");\n  const ftm = () => erc20(\"FTM\", \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\");\n\n  export function register() {\n    PositionFactory.register({\n      \"ftm:SpookySwap:LP:ORBS/USDC\": (args, oracle) => new LP(args, oracle, orbs(), usdc(), \"0x4FaA520fe975228F54b30c6996129950E975BD8f\", 43),\n      \"ftm:SpookySwap:LP:ORBS/FTM\": (args, oracle) => new LP(args, oracle, orbs(), ftm(), \"0x3Ae87E47c69144d1794a78c0709485978C1002A5\", -1),\n    });\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"SpookySwapLP\", this.lpAddress);\n    boo = erc20(\"BOO\", \"0x841FAD6EAe12c286d1Fd18d1d525DFfA75C7EFFE\");\n    masterchef = contract<SpookyChefAbi>(require(\"../abi/SpookyChefAbi.json\"), \"0x18b4f774fdC7BF685daeeF66c2990b1dDd9ea6aD\");\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.ftm;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.boo];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.boo,\n        amount: this.data.pending,\n        value: this.data.pendingValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      let [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      if (this.poolId > 0) {\n        lpAmount = lpAmount.add(await this.lp.mantissa((await this.masterchef.methods.userInfo(this.poolId, this.args.address).call()).amount));\n        this.data.pending = await this.masterchef.methods.pendingBOO(this.poolId, this.args.address).call().then(this.boo.mantissa);\n        this.data.pendingValue = await this.oracle.valueOf(this.getNetwork().id, this.boo, this.data.pending);\n      }\n      this.data.amount0 = total0.mul(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport {  erc20, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace SpiritSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x3E01B7E242D5AF8064cB9A8F9468aC0f8683617c\");\n  const usdc = () => erc20(\"USDC\", \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\");\n  const ftm = () => erc20(\"FTM\", \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\");\n\n  export function register() {\n    PositionFactory.register({\n\n      \"ftm:SpiritSwap:LP:ORBS/USDC\": (args, oracle) => new LP(args, oracle, orbs(), usdc(), \"0x4B668A229740b4F6d04cE2D1b05648Ef1d508EC1\"),\n      \"ftm:SpiritSwap:LP:ORBS/FTM\": (args, oracle) => new LP(args, oracle, orbs(), ftm(), \"0x1F0700387Dfe4Aec7b8C99fbf54cdCDbBB5603B5\"),\n\n    });\n  }\n\n\n  class LP implements PositionV1 {\n    lp = erc20(\"SpiritSwapLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.ftm;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      \n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n      \n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn18, convertDecimals, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace Bitcoin {\n  export function register() {\n    PositionFactory.register({\n      \"x:Bitcoin\": (args, oracle) => new BitcoinBalance(args, oracle),\n    });\n  }\n\n  export type BTC = Token & { bech32: string };\n\n  class BitcoinBalance implements PositionV1 {\n    token: BTC;\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.address) throw new Error(\"bitcoin bech32 bc1 address required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { bech32: args.address });\n    }\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.btc;\n    getData = () => this.data;\n    getAssets = () => [this.token];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      this.data.tvl = await fetchTVL();\n      this.data.amount = await fetchBalance(this.token.bech32);\n      this.data.value = await fetchPrice().then((p) => this.data.amount.muln(p));\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  async function fetchTVL() {\n    const r = await fetch(\"https://blockchain.info/q/marketcap\");\n    const json = await r.json();\n    return bn18(json);\n  }\n\n  async function fetchBalance(bech32: string) {\n    const r = await fetch(`https://blockchain.info/q/addressbalance/${bech32}`);\n    const json = await r.json();\n    return convertDecimals(json, 8, 18);\n  }\n\n  async function fetchPrice() {\n    const r = await fetch(\"https://blockchain.info/q/24hrprice\");\n    const json = await r.json();\n    return parseFloat(json);\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { bn18, contract, erc20, erc20s, ether, to3, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport type { LiquityStabilityPoolAbi, LiquityTroveManagerAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Liquity {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Liquity:LUSD\": (args, oracle) => new Pool(args, oracle),\n      \"eth:Liquity:Trove\": (args, oracle) => new CDP(args, oracle),\n    });\n  }\n\n  const lusd = () => erc20(\"LUSD\", \"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0\");\n  const lqty = () => erc20(\"LQTY\", \"0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D\");\n\n  class CDP implements PositionV1 {\n    manager = contract<LiquityTroveManagerAbi>(require(\"../abi/LiquityTroveManagerAbi.json\"), \"0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2\");\n\n    CR_LIQUIDATION = bn18(1.1);\n    CR_RECOVERY = bn18(1.5);\n\n    data = {\n      manager: this.manager.options.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      debt: zero,\n      cr: zero,\n      ltv: zero,\n      liquidationPrice: zero,\n      entireSystemDebt: zero,\n      entireSystemCR: zero,\n      recoveryMode: 0,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [erc20s.eth.WETH()];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () =>\n      this.data.cr.lte(this.CR_LIQUIDATION)\n        ? [\n            {\n              severity: Severity.Critical,\n              message: `⚠️ LIQUIDATION`,\n            },\n          ]\n        : this.data.cr.lt(this.CR_RECOVERY)\n        ? [\n            {\n              severity: Severity.High,\n              message: `CR ${to3(this.data.cr, 18).muln(100).toNumber() / 1000}%`,\n            },\n          ]\n        : [];\n    getAmounts = () => [{ asset: erc20s.eth.WETH(), amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const eth = erc20s.eth.WETH();\n      const price = await this.oracle.valueOf(this.getNetwork().id, eth, ether);\n      const [pos, systemColl, systemDebt, recoveryMode] = await Promise.all([\n        this.manager.methods.getEntireDebtAndColl(this.args.address).call(),\n        this.manager.methods.getEntireSystemColl().call().then(eth.mantissa),\n        this.manager.methods.getEntireSystemDebt().call().then(lusd().mantissa),\n        this.manager.methods.checkRecoveryMode(price).call(),\n      ]);\n      this.data.recoveryMode = recoveryMode ? 1 : 0;\n      this.data.amount = await eth.mantissa(pos.coll);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, eth, this.data.amount);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, eth, systemColl);\n      this.data.debt = await lusd().mantissa(pos.debt);\n      this.data.cr = this.data.value.mul(ether).div(this.data.debt);\n      this.data.ltv = ether.mul(ether).div(this.data.cr);\n      const crWithGasFeeRebate = this.data.value.mul(ether).div(this.data.debt.sub(await lusd().amount(200)));\n      this.data.liquidationPrice = price.mul(this.CR_LIQUIDATION).div(crWithGasFeeRebate);\n      this.data.entireSystemDebt = await lusd().mantissa(systemDebt);\n      this.data.entireSystemCR = this.data.tvl.mul(ether).div(this.data.entireSystemDebt);\n    }\n\n    getContractMethods = () => _.functions(this.manager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.manager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.manager.methods as any)[method](...args);\n      alert(`target:\\n${this.manager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class Pool implements PositionV1 {\n    pool = contract<LiquityStabilityPoolAbi>(require(\"../abi/LiquityStabilityPoolAbi.json\"), \"0x66017D22b0f8556afDd19FC67041899Eb65a21bb\");\n\n    data = {\n      pool: this.pool.options.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      pendingReward: zero,\n      pendingRewardValue: zero,\n      pendingETH: zero,\n      pendingETHValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [lusd()];\n    getRewardAssets = () => [lqty(), erc20s.eth.WETH()];\n    getPendingRewards = () => [\n      { asset: lqty(), amount: this.data.pendingReward, value: this.data.pendingRewardValue },\n      { asset: erc20s.eth.WETH(), amount: this.data.pendingETH, value: this.data.pendingETHValue },\n    ];\n    getHealth = () => [];\n    getAmounts = () => [{ asset: lusd(), amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [totalDeposits, deposit, rewards, eth] = await Promise.all([\n        this.pool.methods.getTotalLUSDDeposits().call().then(lusd().mantissa),\n        this.pool.methods.getCompoundedLUSDDeposit(this.args.address).call().then(lusd().mantissa),\n        this.pool.methods.getDepositorLQTYGain(this.args.address).call().then(lqty().mantissa),\n        this.pool.methods.getDepositorETHGain(this.args.address).call().then(erc20s.eth.WETH().mantissa),\n      ]);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, lusd(), totalDeposits);\n      this.data.amount = deposit;\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, lusd(), this.data.amount);\n      this.data.pendingReward = rewards;\n      this.data.pendingRewardValue = await this.oracle.valueOf(this.getNetwork().id, lqty(), this.data.pendingReward);\n      this.data.pendingETH = eth;\n      this.data.pendingETHValue = await this.oracle.valueOf(this.getNetwork().id, erc20s.eth.WETH(), this.data.pendingETH);\n    }\n\n    getContractMethods = () => _.functions(this.pool.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.pool.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.pool.methods as any)[method](...args);\n      alert(`target:\\n${this.pool.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.pool.methods.withdrawFromSP(0), useLegacyTx);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn18, convertDecimals, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport _ from \"lodash\";\n\nexport namespace Raydium {\n  export function register() {\n    PositionFactory.register({\n      \"sol:Raydium:Pool:ORBS/SOL\": (args, oracle) => new Pool(args, oracle, \"ORBS\", \"2iHXwoH2LaMyiLL2WKDNx732rQ7CsMScNRavB1bmT5aZ\", \"orbs\"),\n    });\n  }\n\n  export type SolToken = Token & { sol: true; coingeckoId: string };\n\n  class Pool implements PositionV1 {\n    sol = erc20(\"SOL\", zeroAddress) as SolToken;\n    token = erc20(this.tokenName, zeroAddress) as SolToken;\n\n    data = {\n      tokenName: this.tokenName,\n      lpMintAddress: this.lpMintAddress,\n      amountToken: zero,\n      amountSol: zero,\n      valueToken: zero,\n      valueSol: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public tokenName: string, public lpMintAddress: string, coingeckoId: string) {\n      this.sol.sol = true;\n      this.sol.coingeckoId = \"solana\";\n      this.token.sol = true;\n      this.token.coingeckoId = coingeckoId;\n    }\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.sol;\n    getData = () => this.data;\n    getAssets = () => [this.token, this.sol];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getAmounts = () => [\n      { asset: this.token, amount: this.data.amountToken, value: this.data.valueToken },\n      { asset: this.sol, amount: this.data.amountSol, value: this.data.valueSol },\n    ];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const lpAmount = await this.fetchLpAmount();\n      const lpInfo = await this.fetchLpInfo();\n\n      const totalLps = bn18(lpInfo.tokenAmountLp);\n      const totalTokens = bn18(lpInfo.tokenAmountCoin);\n      const totalSol = bn18(lpInfo.tokenAmountPc);\n\n      this.data.amountToken = totalTokens.mul(lpAmount).div(totalLps);\n      this.data.amountSol = totalSol.mul(lpAmount).div(totalLps);\n\n      this.data.valueToken = await this.oracle.valueOf(networks.sol.id, this.token, this.data.amountToken);\n      this.data.valueSol = await this.oracle.valueOf(networks.sol.id, this.sol, this.data.amountSol);\n\n      const totalTokensValue = await this.oracle.valueOf(networks.sol.id, this.token, totalTokens);\n      const totalSolValue = await this.oracle.valueOf(networks.sol.id, this.sol, totalSol);\n      this.data.tvl = totalTokensValue.add(totalSolValue);\n    }\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n\n    async fetchLpInfo() {\n      const pairs = await fetch(\"https://api.raydium.io/v2/main/pairs\").then((x) => x.json());\n      return _.find(pairs, (p) => p.lpMint === this.lpMintAddress);\n    }\n\n    async fetchLpAmount() {\n      const response = await fetch(`https://api.mainnet-beta.solana.com`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          jsonrpc: \"2.0\",\n          id: 1,\n          method: \"getTokenAccountsByOwner\",\n          params: [this.args.address, { mint: this.lpMintAddress }, { encoding: \"jsonParsed\" }],\n        }),\n      }).then((it) => it.json());\n      const { amount, decimals } = response.result.value[0].account.data.parsed.info.tokenAmount;\n      return convertDecimals(amount, decimals, 18);\n    }\n  }\n}\n","import { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { TokenBalances } from \"./TokenBalances\";\nimport { Uniswap } from \"./Uniswap\";\nimport { OffChain } from \"./OffChain\";\nimport { AlphaHomora } from \"./AlphaHomora\";\nimport { Balancer } from \"./Balancer\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { TraderJoe } from \"./TraderJoe\";\nimport { Ribbon } from \"./Ribbon\";\nimport { LooksRare } from \"./LooksRare\";\nimport { SushiSwap } from \"./SushiSwap\";\nimport { Fodl } from \"./Fodl\";\nimport { QuickSwap } from \"./QuickSwap\";\nimport { Pangolin } from \"./Pangolin\";\nimport { Rook } from \"./Rook\";\nimport { Aave } from \"./Aave\";\nimport { SpookySwap } from \"./SpookySwap\";\nimport { SpiritSwap } from \"./SpiritSwap\";\nimport { Bitcoin } from \"./Bitcoin\";\nimport { Liquity } from \"./Liquity\";\nimport { Raydium } from \"./Raydium\";\n\nexport function registerAllPositions() {\n  OffChain.register();\n  TokenBalances.register();\n  Bitcoin.register();\n\n  Uniswap.register();\n  SushiSwap.register();\n  Pancakeswap.register();\n  Revault.register();\n  AlphaHomora.register();\n  Balancer.register();\n  ElrondMaiar.register();\n  TraderJoe.register();\n  Ribbon.register();\n  LooksRare.register();\n  Unicly.register();\n  Fodl.register();\n  Loops.register();\n  QuickSwap.register();\n  Pangolin.register();\n  Rook.register();\n  Aave.register();\n  SpookySwap.register();\n  SpiritSwap.register();\n  Liquity.register();\n  Raydium.register();\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { PositionArgs, PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport { registerAllPositions } from \"../positionsv1\";\nimport { to3, Token, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positionsv1/base/consts\";\nimport BN from \"bn.js\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, PositionV1>,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string, input: string, name: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, input, name, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    update: (position: PositionV1, newArgs: PositionArgs) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = newArgs;\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions...\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p\n        .load()\n        .then(() => ((p as any).loaded = true))\n        .catch((e) => {\n          (p as any).loaded = false;\n          console.log(p.getArgs().type, e);\n        });\n    })\n  );\n  api.setState({ positions });\n  console.log(`...done loading ${network?.name}`);\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\n\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        name: p.getArgs().name || p.getName() || p.getArgs().type,\n        chain: p.getNetwork().name,\n        health: p.getHealth(),\n        marketValue: num(marketValue(p)),\n        pending: num(p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero)),\n        tvl: num(p.getTVL()),\n        position: p,\n        address: p.getArgs().address,\n        loaded: !!(p as any).loaded,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nexport const useAllPositionsValuePerPosition = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.map(state.positions, (position) => ({ position, marketValue: Math.round(num(marketValue(position))) })),\n    (rows) => {\n      const sorted = _.sortBy(rows, (r) => -r.marketValue);\n      return {\n        labels: sorted.map((p) => p.position.getArgs().name || p.position.getName() || p.position.getArgs().type),\n        values: sorted.map((p) => p.marketValue),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerAssetClass = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .map((position) => position.getAmounts())\n        .flatten()\n        .value(),\n    (amounts) => {\n      const reduced = _(amounts)\n        .groupBy((a) => assetClass(a.asset))\n        .map((values, key) => ({ assetClass: key, value: _.reduce(values, (sum, a) => sum + num(a.value), 0) }))\n        .sortBy((v) => -v.value)\n        .value();\n      return {\n        labels: _.map(reduced, (ac) => ac.assetClass),\n        values: _.map(reduced, (ac) => Math.round(ac.value)),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerChain = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.groupBy(state.positions, (p) => p.getNetwork().name),\n    (grouped) => {\n      const totalPerChain = _(grouped)\n        .map((positions, chain) => ({\n          chain,\n          marketValue: Math.round(num(totalMarketValue(positions))),\n        }))\n        .sortBy((t) => -t.marketValue)\n        .value();\n      return {\n        labels: _.map(totalPerChain, (t) => t.chain),\n        values: _.map(totalPerChain, (t) => t.marketValue),\n        grandtotal: _.reduce(totalPerChain, (sum, t) => sum + t.marketValue, 0),\n      };\n    }\n  ),\n});\n\nfunction num(bn: BN) {\n  return to3(bn, 18).toNumber() / 1000;\n}\n\nfunction marketValue(p: PositionV1) {\n  return _.reduce(p.getAmounts(), (sum, v) => sum.add(v.value), zero);\n}\n\nfunction totalMarketValue(positions: PositionV1[]) {\n  return _.reduce(positions, (sum, pos) => sum.add(marketValue(pos)), zero);\n}\n\nfunction assetClass(a: Token): string {\n  const ext = (a as any).symbol || (a as any).tokenId;\n  if (ext) return ext;\n  if (a.name.toLowerCase().includes(\"usd\") || [\"dai\", \"mai\", \"mim\"].includes(a.name.toLowerCase())) return \"USD\";\n  if (a.name.toLowerCase().includes(\"btc\")) return \"BTC\";\n  if (a.name.toLowerCase().includes(\"eth\")) return \"ETH\";\n  if (a.name.toLowerCase().includes(\"bnb\")) return \"BNB\";\n  if (a.name.toLowerCase().includes(\"avax\")) return \"AVAX\";\n  if (a.name.toLowerCase().includes(\"matic\")) return \"MATIC\";\n  if (a.name.toLowerCase().includes(\"ftm\")) return \"FTM\";\n  if ((a as any).bech32) return \"BTC\";\n  return a.name || a.address;\n}\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as PositionV1 | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: PositionV1) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        try {\n          const result = await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs));\n          showAlert(_.toString(result) || \"undefined\");\n        } catch (e: any) {\n          showAlert(_.toString(e));\n        }\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), fmtData),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      rawData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n\nfunction fmtData(data: any): any {\n  if (_.isArray(data)) return _.map(data, fmtData);\n  return data instanceof BN ? fmt18(data) : data;\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport _ from \"lodash\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    input: \"\",\n    name: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", input: \"\", name: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        address = _.trim(address);\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n\n    setInput:\n      (input: string) =>\n      async ({ setState }) => {\n        input = _.trim(input);\n        setState({ input });\n      },\n\n    setName:\n      (name: string) =>\n      async ({ setState }) => {\n        name = _.trim(name);\n        setState({ name });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address, state.input, state.name)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Name?\" onChange={(e) => actions.setName(e.target.value)} />}\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Input?\" onChange={(e) => actions.setInput(e.target.value)} />}\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions, useAllPositionsValuePerAssetClass, useAllPositionsValuePerChain, useAllPositionsValuePerPosition } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positionsv1/base/PositionV1\";\nimport { ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { ArcElement, Chart as ChartJS, Legend, Tooltip } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst columns: GridColDef[] = [\n  { field: \"loaded\", headerName: \"🌐\", headerAlign: \"center\", width: 20, align: \"center\", valueFormatter: (v) => (v.value ? \"✅\" : \"❔\") },\n  { field: \"chain\", headerName: \"Chain\", headerAlign: \"center\", width: 120, align: \"left\" },\n  { field: \"name\", headerName: \"Position\", headerAlign: \"center\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"center\",\n    valueFormatter: (v) => {\n      if (!v.value || !(v.value as Threat[]).length) return \"🟢\";\n      return (v.value as Threat[]).map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"marketValue\",\n    headerName: \"Market Value\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    headerAlign: \"center\",\n    width: 130,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", headerAlign: \"center\", width: 450, align: \"left\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(undefined);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n  const [totalValuesPerChain] = useAllPositionsValuePerChain(undefined);\n  const [valuesPerPosition] = useAllPositionsValuePerPosition(undefined);\n  const [valuesPerAssetClass] = useAllPositionsValuePerAssetClass(undefined);\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <ListItemText>Total Market Value: $ {commafy(totalValuesPerChain.grandtotal)}</ListItemText>\n\n      <div style={{ display: \"flex\" }}>\n        <div>\n          <ListItemText>Value Per Chain:</ListItemText>\n          <Pie\n            data={{\n              labels: totalValuesPerChain.labels,\n              datasets: [\n                {\n                  data: totalValuesPerChain.values,\n                  backgroundColor: totalValuesPerChain.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Position:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerPosition.labels,\n              datasets: [\n                {\n                  data: valuesPerPosition.values,\n                  backgroundColor: valuesPerPosition.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Asset Class:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerAssetClass.labels,\n              datasets: [\n                {\n                  data: valuesPerAssetClass.values,\n                  backgroundColor: valuesPerAssetClass.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n      </div>\n\n      <br />\n\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <br />\n      <AddPositionBtn />\n    </div>\n  );\n};\n\nfunction colorOf(num: number) {\n  return bgColors[num % bgColors.length];\n}\n\nconst bgColors = [\n  \"#413d5e\",\n  \"#495371\",\n  \"#638c93\",\n  \"#98B4AA\",\n  \"#F1E0AC\", //\n];\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(undefined);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  // const updatePos = () => appStateActions.withLoading(() => allPositionsActions.update(selector.position!, selector.position!.getArgs())).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.rawData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.name || selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n          {selector.position?.getArgs()?.input && <DialogContentText>Input: {selector.position?.getArgs()?.input}</DialogContentText>}\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positionsv1/base/PositionV1\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}