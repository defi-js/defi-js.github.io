{"version":3,"sources":["assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positionsv1/base/consts.ts","state/AppState.ts","positionsv1/base/PositionFactory.ts","ui/AppHeader.tsx","positionsv1/base/PriceOracle.ts","positionsv1/Pancakeswap.ts","positionsv1/base/PositionV1.ts","positionsv1/Loops.ts","positionsv1/Revault.ts","positionsv1/Unicly.ts","positionsv1/TokenBalances.ts","positionsv1/Uniswap.ts","positionsv1/OffChain.ts","positionsv1/AlphaHomora.ts","positionsv1/Balancer.ts","positionsv1/ElrondMaiar.ts","positionsv1/TraderJoe.ts","positionsv1/Ribbon.ts","positionsv1/LooksRare.ts","positionsv1/SushiSwap.ts","positionsv1/Fodl.ts","positionsv1/QuickSwap.ts","positionsv1/Pangolin.ts","positionsv1/Rook.ts","positionsv1/Aave.ts","positionsv1/SpookySwap.ts","positionsv1/SpiritSwap.ts","positionsv1/Bitcoin.ts","positionsv1/Liquity.ts","positionsv1/Raydium.ts","positionsv1/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx"],"names":["erc20s","_","merge","erc20sOrig","networks","networksOrig","off","id","name","shortname","btc","egld","sol","currentNetwork","_currentNetwork","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","netId","wrap","_context","prev","next","bn","window","ethereum","chainId","toNumber","console","log","abrupt","find","n","stop","sendWithTxType","_x","_x2","_sendWithTxType","_callee2","tx","useLegacyTx","_context2","t0","account","t1","sent","t2","t3","from","type","send","call","isNetworkDisabled","network","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","_ref2","_ref","setState","_withLoading","showAlert","alert","_ref4","_ref3","clickNetwork","networkId","_ref6","_callee5","_ref5","getState","_context5","_callee4","_getState$network","_context4","_ethereum","removeAllListeners","on","_callee3","_context3","_onConnect","request","method","_switchNetwork","_x3","_x4","_x5","_withLoading2","_callee6","t","_context6","concat","message","stack","finish","_x6","_onConnect2","_callee7","_context7","setWeb3Instance","Web3","Error","_x7","_switchNetwork2","_callee8","_context8","params","utils","numberToHex","PositionFactory","useAppState","createHook","useIsAppConnected","selector","state","_state$network","isAddress","useIsLoading","useAppActions","AppHeader","_useAppState","_useAppState2","_slicedToArray","_jsx","style","display","flexDirection","justifyContent","margin","children","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","map","ToggleButton","textTransform","disabled","coingeckoIds","_coingeckoIds","_defineProperty","eth","bsc","poly","arb","avax","oeth","ftm","PriceOracle","_classCallCheck","warm","prices","USD","ether","_createClass","key","token","tokenId","symbol","coingeckoId","address","price","this","getId","_valueOf","amount","isZero","fetchPricesElrond","fetchCoingeckoPrices","fetchOffchainPrice","fetchPrices","toString","zero","times","div","_warmup","positions","bynetwork","coingeckoFetches","elrondFetch","_this","groupBy","getNetwork","keys","filter","getAssets","getRewardAssets","flatten","a","uniq","Promise","all","_toConsumableArray","_fetchPrices","addresses","url","response","json","result","isEmpty","v","k","join","fetch","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","_fetchPricesElrond","tokenIds","body","variables","i","query","headers","JSON","stringify","data","_fetchCoingeckoPrices","_x8","_fetchOffchainPrice","exchange_rate","_x9","inputs","results","registry","_PositionFactory","oracle","register","types","allTypes","create","args","uniqueId","shouldLoad","current","isValidArgs","_web","_web$utils","startsWith","e","isElrondAddress","trim","length","isOffChainSymbol","isBitcoinAddress","isSolanaAddress","Pancakeswap","Severity","Loops","_Pancakeswap","Farm","BUSD","WBNB","erc20","require","CAKE","BTCB","LP","ORBS","asset0","asset1","lpToken","poolId","masterchef","contract","cake","chef","options","lp","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getName","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","_load","_yield$Promise$all","_yield$Promise$all2","userInfo","reserves","token0","totalSupply","pending","lpStaked","_reserve0","_reserve1","r0","r1","amountLP","_yield$Promise$all3","_yield$Promise$all4","getReserves","pendingCake","then","mantissa","balanceOf","toLowerCase","valueOf","_callContract","_sendTransaction","encodeABI","_harvest","deposit","_Farm","_inherits","_super","_createSuper","_this2","_load2","_yield$Promise$all5","_yield$Promise$all6","total0","total1","val0","val1","_yield$Promise$all7","_yield$Promise$all8","plus","_Loops","AaveLoop","CompoundLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","aave","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","minus","lt","severity","Critical","posData","atoken","getPositionData","getBalanceReward","t4","t5","t6","t7","owner","claimRewardsToOwner","WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","ctoken","exchangeRate","underlyingBalance","liquidity","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","_callContract2","_sendTransaction2","_x10","_x11","_harvest2","claimAndTransferAllCompToOwner","_x12","Revault","Unicly","TokenBalances","_Revault","SingleVault","_loop","RevaStake","REVA","revaultFarm","revaultChef","revaStaking","revault","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","vault","_yield$this$revault$m","returnedRevaAmount","returnedTokenAmount","info","tvlBusd","findVault","principal","payload","harvestVault","tokens","_findVault","_supportedVaults","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","_objectSpread","staking","pendingAmount","poolInfo","userPoolInfo","_callee9","_context9","_Unicly","XUnicFarm","Strategies","uPunks","uJenny","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","xunicrate","pendingxUNICs","getxUNICRate","totalLPTokens","_TokenBalances","TokenBalance","mcap","nativeTokens","WMATIC","WAVAX","NativeTokenBalance","_TokenBalance","_len","Array","_key","getBalance","bnm","forEach","input","Uniswap","OffChain","AlphaHomora","Balancer","ElrondMaiar","TraderJoe","Ribbon","LooksRare","SushiSwap","Fodl","QuickSwap","Pangolin","Rook","Aave","SpookySwap","SpiritSwap","Bitcoin","Liquity","Raydium","maxUint128","pow","_Uniswap","V2LP","V3LP","WBTC","token1","nftPositionManager","nftManager","principal0","principal1","valueIfHodl","valueNow","ilValue","il","pending0","pending1","pendingValue0","pendingValue1","totalFeesValue","High","gt","pos","res","decreaseLiquidity","maxUint256","loadFromPositionGraph","loadTVL","fee","collect","_loadFromPositionGraph","principalValue0","principalValue1","collectedValue0","collectedValue1","position","pool","totalValueLockedUSD","depositedToken0","withdrawnToken0","depositedToken1","withdrawnToken1","collectedFeesToken0","collectedFeesToken1","_loadTVL","factory","a0","a1","v0","v1","getPool","router","pair","factoryAddress","_yield$Promise$all9","_yield$Promise$all10","lpAmount","lpTotalSupply","_this3","getPair","_callee10","_context10","_x13","_OffChain","AssetPosition","zeroAddress","BN","_AlphaHomora","LYF","WETHe","WBTCe","alphaHomoraBank","maxHistoryBlocks","supply0","supply1","borrow0","borrow1","ilAmount","debtRatio","lpSupplied","farmAbi","nft","totalLPs","share","debts","totalValue0","totalValue1","getPositionInfo","collateralSize","internalType","outputs","stateMutability","collToken","getUnderlyingToken","collId","getPositionDebts","indexOf","_Balancer","_balToken","DAI","USDT","overridePrice","balToken","balV2","gaugeAddress","undefined","gauge","bal","amounts","values","lpTokenAddress","workingBalance","totalWorkingBalance","bpt","totalBptsStaked","bptTotalSupply","bptBalance","poolTokens","poolAmounts","poolValues","loadFromPool","lp_token","claimable_tokens","catch","claimable_reward_write","getPoolTokens","every","eqIgnoreCase","balances","reduce","sum","b","_loadFromPool","x","_ElrondMaiar","EGLD","esdt","MEX","RIDE","LKMEX","MEX_EGLD","USDC_EGLD","LKFARM","FarmStrategies","assets","farm","L_USDC_EGLD","L_MEX_EGLD","mex","lpBalanceStaked","_this$getAssets","_this$getAssets2","farmEsdts","pairEsdts","totalLPSupply","totalLPStaked","asset0InPair","asset1InPair","asset0TotalValue","asset1TotalValue","esdts","lpNameSuffix","lps","getESDTs","getTotalSupply","tokenIdentifier","balance","split","MexFarm","MexFarmStrategies","L_MEX","totalAssetStaked","farmNftWrapper","_this4","creator","decimals","dec","_getESDTs","get","_getTotalSupply","_TraderJoe","orbs","masterchefAddress","reward","pendingTokens","pendingJoe","lpAddress","_Ribbon","_rewardTokens","ThetaVault","rewardTokens","vaultAddress","rewardToken","strike","_yield$this$vault$met","unredeemedShares","fbalance","fratio","staked","total","currentOption","depositReceipts","liquidityGauge","pricePerShare","totalBalance","t8","t9","t10","t11","t12","bn9","t13","_LooksRare","Staking","AutoCompund","looks","checkPending","stakedLooks","pendingEth","totalShares","sharePrice","tvlAmount","calculateSharesValueInLOOKS","calculatePendingRewards","calculateSharePriceInLOOKS","_Staking","_SushiSwap","getFarmContract","getRewardContract","pendingSushi","_Fodl","XFodlStake","fodl","xfodl","myXfodl","xfodlTotalSupply","fodlStaked","_QuickSwap","quick","stakingAddress","stakedBalance","totalStaked","earned","amount0InLp","amount1InLp","totalLpSupply","tvl_amount0","tvl_amount1","tvl_value0","tvl_value1","stakingToken","stake","_Pangolin","png","pendingReward","_Rook","XRook","rook","xrook","totalValueLocked","_Aave","Collateral","aToken","_SpookySwap","usdc","boo","pendingBOO","_SpiritSwap","_Bitcoin","BitcoinBalance","bech32","fetchTVL","fetchBalance","fetchPrice","_fetchTVL","r","_fetchBalance","_fetchPrice","parseFloat","_Liquity","Pool","CDP","lusd","lqty","manager","CR_LIQUIDATION","CR_RECOVERY","debt","cr","ltv","liquidationPrice","entireSystemDebt","entireSystemCR","recoveryMode","lte","toFixed","systemColl","systemDebt","crWithGasFeeRebate","getEntireDebtAndColl","getEntireSystemColl","getEntireSystemDebt","checkRecoveryMode","coll","pendingRewardValue","pendingETH","pendingETHValue","totalDeposits","rewards","getTotalLUSDDeposits","getCompoundedLUSDDeposit","getDepositorLQTYGain","getDepositorETHGain","withdrawFromSP","_Raydium","tokenName","lpMintAddress","amountToken","amountSol","valueToken","valueSol","lpInfo","totalLps","totalTokens","totalSol","totalTokensValue","totalSolValue","fetchLpAmount","fetchLpInfo","tokenAmountLp","tokenAmountCoin","tokenAmountPc","_fetchLpInfo","pairs","lpMint","_fetchLpAmount","_response$result$valu","jsonrpc","mint","encoding","it","parsed","tokenAmount","convertDecimals","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","load","api","addPosition","update","newArgs","delete","posId","sendTransaction","harvest","_ref8","_ref7","warmup","loaded","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","chain","health","marketValue","num","useAllPositions","useAllPositionsValuePerPosition","Math","round","rows","sorted","labels","useAllPositionsValuePerAssetClass","reduced","ext","includes","assetClass","ac","useAllPositionsValuePerChain","grouped","totalPerChain","totalMarketValue","grandtotal","idiv","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","_ref10","_ref9","_ref12","_ref11","_ref14","_ref13","_ref16","_ref15","callContract","usePositionDialogActions","usePositionDialogSelector","_state$position","m","endsWith","substring","_state$position2","_state$position3","_state$position4","fmtData","positionMethods","selectedMethodArgTypes","rewardAssets","rawData","isArray","toFormat","AddPositionDialogState","show","valid","sort","setType","setAddress","setInput","setName","useAddPositionDialog","AddPositionBtn","_useIsAppConnected","isConnected","_useAddPositionDialog","Button","onClick","AddPositionDialog","_useAppActions","appActions","_useAddPositionDialog3","_useAddPositionDialog4","_useAllPositionsActio","allPositionActions","close","_jsxs","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","ChartJS","ArcElement","Tooltip","Legend","columns","field","headerName","headerAlign","width","align","valueFormatter","sortable","AllPositionsTable","appState","_useAllPositionRows","_useAllPositionRows2","_useAllPositions","_usePositionDialogAct","positionDialogActions","_useAllPositionsValue","totalValuesPerChain","_useAllPositionsValue3","valuesPerPosition","_useAllPositionsValue5","valuesPerAssetClass","useEffect","_appState$network","height","ListItemText","Pie","datasets","backgroundColor","colorOf","responsive","plugins","legend","DataGrid","onCellClick","autoHeight","hideFooter","bgColors","PositionDialog","_selector$position","_selector$position$ge","_selector$position2","_selector$position2$g","_selector$position3","_selector$position3$g","_selector$position4","_selector$position4$g","_selector$position5","_selector$position5$g","_selector$position6","_selector$position6$g","appStateActions","_usePositionDialogSel","_usePositionDialogSel2","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","accept","hidden","addEventListener","file","files","reader","FileReader","onload","_e$target","_e$target$result","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","_useIsLoading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","React","StrictMode","HashRouter","Route","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById"],"mappings":"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","file":"static/js/main.61ecba03.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {});\n\nexport const networks = _.merge({}, networksOrig, {\n  off: { id: -1, name: \"OffChain\", shortname: \"off\" },\n  btc: { id: -2, name: \"Bitcoin\", shortname: \"btc\" },\n  egld: { id: -508, name: \"Elrond\", shortname: \"egld\" },\n  sol: { id: -600, name: \"Solana\", shortname: \"sol\" },\n});\n\nexport async function currentNetwork() {\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positionsv1/base/consts\";\n\n// defaults.middlewares.plus((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./PositionV1\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => PositionV1;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): PositionV1 | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = _.uniqueId(args.type + \":\" + args.address + \"-\" + args.name + \"-\");\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: PositionV1, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return (\n      (!!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address) || isOffChainSymbol(type, address))) ||\n      isBitcoinAddress(type, address) ||\n      isSolanaAddress(type, address)\n    );\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isOffChainSymbol(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:OffChain:Asset\") && _.trim(address).length > 0;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isBitcoinAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:Bitcoin\") && _.trim(address).length > 0 && address.startsWith(\"bc1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isSolanaAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"sol:\") && _.trim(address).length === 44;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport { BN, bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1 } from \"./PositionV1\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\nimport { OffChain } from \"../OffChain\";\nimport { Raydium } from \"../Raydium\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n  [networks.oeth.id]: \"optimistic-ethereum\",\n  [networks.ftm.id]: \"fantom\",\n};\n\nexport class PriceOracle {\n  warm = false;\n  prices: Record<string, BN> = {\n    USD: ether,\n  };\n\n  getId(networkId: number, token: Token) {\n    if (networkId === networks.egld.id) return (token as ElrondMaiar.ESDT).tokenId;\n    if (networkId === networks.off.id) return (token as OffChain.Asset).symbol;\n    if (networkId === networks.sol.id) return (token as Raydium.SolToken).coingeckoId;\n    return token.address;\n  }\n\n  overridePrice(networkId: number, token: Token, price: BN) {\n    this.prices[this.getId(networkId, token)] = price;\n  }\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const id = this.getId(networkId, token);\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (networkId === networks.egld.id) await this.fetchPricesElrond([id]);\n      else if (networkId === networks.sol.id) await this.fetchCoingeckoPrices([id]);\n      else if (networkId === networks.off.id) await this.fetchOffchainPrice(id);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.times(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: PositionV1[]) {\n    if (this.warm) return;\n    this.warm = true;\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[networks.egld.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n\n    try {\n      const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n      const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(addresses, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchCoingeckoPrices(coingeckoIds: string[]): Promise<{ [ids: string]: BN }> {\n    if (_.isEmpty(coingeckoIds)) return {};\n    console.log(\"fetchCoingeckoPrices\", coingeckoIds);\n\n    try {\n      const url = `https://api.coingecko.com/api/v3/simple/price?ids=${coingeckoIds.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(coingeckoIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  async fetchOffchainPrice(symbol: string) {\n    try {\n      const response = await fetch(`https://api.api-ninjas.com/v1/exchangerate?pair=${symbol}_USD`);\n      const json = await response.json();\n      const result = bn18(json.exchange_rate || 1);\n      return this.updateResults(symbol, { [symbol]: result });\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PancakeswapLpAbi, PancakeswapMasterchefV2Abi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // https://docs.pancakeswap.finance/code/migration/masterchef-v2/list-of-farms\n\n  export function register() {\n    const lp_BUSD_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BUSD/BNB\", \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_BTCB_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BTCB/BNB\", \"0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_CAKE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP CAKE/BNB\", \"0x0eD7e52944161450477ee417DE9Cd3a859b14fD0\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ORBS_BUSD = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ORBS/BUSD\", \"0xB87b857670A44356f2b70337E0F218713D2378e8\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOGE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOGE/BNB\", \"0xac109C8025F272414fd9e2faA805a583708A017f\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_TON_BTCB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP TON/BTCB\", \"0x1893da6b92660b85538f58217808685b80fb083e\", 0, require(\"../abi/PancakeswapLpAbi.json\"));\n\n    PositionFactory.register({\n      \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), lp_BUSD_BNB(), 3),\n      \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), lp_CAKE_BNB(), 2),\n      \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), lp_BTCB_BNB(), 11),\n      \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Farm(args, oracle, erc20(\"DOGE\", \"0xbA2aE424d960c26247Dd6c32edC70B295c744C43\"), erc20s.bsc.WBNB(), lp_DOGE_BNB(), 37),\n\n      \"bsc:Pancakeswap:LP:ORBS/BUSD\": (args, oracle) => new LP(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), lp_ORBS_BUSD()),\n      \"bsc:Pancakeswap:LP:TON/BTCB\": (args, oracle) => new LP(args, oracle, erc20(\"TON\", \"0x76A797A59Ba2C17726896976B7B3747BfD1d220f\"), erc20s.bsc.BTCB(), lp_TON_BTCB()),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<PancakeswapMasterchefV2Abi>(require(\"../abi/PancakeswapMasterchefV2Abi.json\"), \"0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652\");\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      lp: this.lpToken.address,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLpAbi,\n      public poolId: number\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call().then(this.cake.mantissa),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call().then(this.lpToken.mantissa),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = pending;\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).times(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).times(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).times(2).times(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n\n  class LP extends Farm {\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpToken: Token & PancakeswapLpAbi) {\n      super(args, oracle, asset0, asset1, lpToken, -1);\n    }\n\n    async load() {\n      const [total0, total1, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpToken.address).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpToken.address).call().then(this.asset1.mantissa),\n        this.lpToken.methods.totalSupply().call().then(this.lpToken.mantissa),\n      ]);\n      const amountLP = await this.lpToken.methods.balanceOf(this.args.address).call().then(this.lpToken.mantissa);\n      this.data.amount0 = total0.times(amountLP).div(totalSupply);\n      this.data.amount1 = total1.times(amountLP).div(totalSupply);\n\n      let val0, val1;\n      [this.data.value0, this.data.value1, val0, val1] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, total0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, total1),\n      ]);\n      this.data.tvl = val0.plus(val1);\n    }\n  }\n}\n","import { BN, Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  address: string;\n  id: string;\n  input?: string;\n  name?: string;\n};\n\nexport interface PositionV1 {\n  getName(): string;\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number | BN[] };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20, erc20s, ether, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi, AaveSAAVEAbi, CompoundCTokenAbi, CompoundLoopAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Loops {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n      \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n    });\n  }\n\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements PositionV1 {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20<AaveSAAVEAbi>(\"stkAAVE\", \"0x4da27a545c0c5B758a6BA100e3a049001de870f5\", 0, require(\"../abi/AaveSAAVEAbi.json\"));\n    aave = erc20(\"AAVE\", \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\");\n    weth = erc20s.eth.WETH();\n\n    data = {\n      contract: this.instance.options.address,\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH.minus(this.data.totalDebtETH),\n        value: this.data.totalCollateralValue.minus(this.data.totalDebtValue),\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20(\"Aave: aUSDC\", \"0xBcca60bB61934080951369a648Fb03DF4F96263C\");\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements PositionV1 {\n    WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL = 0.005; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20(\"COMP\", \"0xc00e94Cb662C3520282E6f5717214004A7f26888\");\n\n    data = {\n      contract: this.instance.options.address,\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance.minus(this.data.borrowBalance),\n        value: this.data.supplyBalance.minus(this.data.borrowBalance),\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.times(this.WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL).div(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20<CompoundCTokenAbi>(\"Compound: cUSDC\", \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\", 0, require(\"../abi/CompoundCTokenAbi.json\"));\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).times(bn18(exchangeRate).times(100)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport type { RevaultChefAbi, RevaultFarmAbi, RevaultStakingAbi } from \"../../typechain-abi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Revault {\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.CAKE()),\n      \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.BUSD()),\n      \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    });\n    for (let i = 0; i < 4; i++) {\n      PositionFactory.register({\n        [`bsc:Revault:RevaStaking:x${i + 1}`]: (args, oracle) => new RevaStake(args, oracle, i),\n      });\n    }\n  }\n\n  const REVA = () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\");\n  const revaultFarm = () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\");\n  const revaultChef = () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\");\n  const revaStaking = () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\");\n\n  class SingleVault implements PositionV1 {\n    revault = revaultFarm();\n    chef = revaultChef();\n    reva = REVA();\n\n    data = {\n      revault: this.revault.options.address,\n      chef: this.chef.options.address,\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  class RevaStake implements PositionV1 {\n    staking = revaStaking();\n    reva = REVA();\n\n    data = {\n      staking: this.staking.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi, UniclyXUnicAbi } from \"../../typechain-abi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Unicly {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n      \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n    });\n  }\n\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", 0, require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", 0, require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements PositionV1 {\n    xfarm = contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\");\n    unic = erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\");\n    xunic = erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\");\n    eth = erc20s.eth.WETH();\n\n    data = {\n      xfarm: this.xfarm.options.address,\n      unic: this.unic.options.address,\n      xunic: this.xunic.options.address,\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).times(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).times(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.times(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).times(2).times(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bnm, erc20, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport Web3 from \"web3\";\n\nexport namespace TokenBalances {\n  class TokenBalance implements PositionV1 {\n    data = {\n      name: \"\",\n      amount: zero,\n      value: zero,\n      totalSupply: zero,\n      mcap: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token: Token) {\n      token.name = args.name || token.name;\n    }\n\n    getName = () => this.data.name;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      [this.data.name, this.data.amount, this.data.totalSupply] = await Promise.all([\n        this.token.methods.name().call(),\n        this.token.methods.balanceOf(this.args.address).call().then(this.token.mantissa),\n        this.token.methods.totalSupply().call().then(this.token.mantissa),\n      ]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.mcap;\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  const nativeTokens = {\n    eth: () => _.merge(erc20s.eth.WETH(), { name: \"ETH\" }),\n    bsc: () => _.merge(erc20s.bsc.WBNB(), { name: \"BNB\" }),\n    poly: () => _.merge(erc20s.poly.WMATIC(), { name: \"MATIC\" }),\n    avax: () => _.merge(erc20s.avax.WAVAX(), { name: \"AVAX\" }),\n    arb: () => _.merge(erc20s.arb.WETH(), { name: \"AETH\" }),\n    oeth: () => _.merge(erc20s.oeth.WETH(), { name: \"ETH\" }),\n  };\n\n  class NativeTokenBalance extends TokenBalance {\n    getName = () => this.token.name;\n\n    async load() {\n      [this.data.amount, this.data.totalSupply] = await Promise.all([web3().eth.getBalance(this.args.address).then(bnm), this.token.methods.totalSupply().call().then(bnm)]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n  }\n\n  export function register() {\n    _.forEach(networks, (n) => {\n      if (n.id < 0) return;\n      PositionFactory.register({\n        [`${n.shortname}:Token`]: (args, oracle) => new TokenBalance(args, oracle, n, erc20(\"\", Web3.utils.toChecksumAddress(args.input!))),\n      });\n\n      const t = (nativeTokens as any)[n.shortname];\n      if (t) PositionFactory.register({ [`${n.shortname}:TokenBase`]: (args, oracle) => new NativeTokenBalance(args, oracle, n, t()) });\n    });\n  }\n}\n","import { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, maxUint256, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { UniswapNftManagerAbi, UniswapV2Abi, UniswapV2FactoryAbi, UniswapV3FactoryAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nconst maxUint128 = bn(2).pow(bn(128)).minus(1).toString();\n\nexport namespace Uniswap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Uniswap:V2LP:USDC/ETH\": (args, oracle) => new V2LP(args, oracle, erc20s.eth.USDC(), erc20s.eth.WETH()),\n\n      \"eth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.WBTC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:USDC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:TON/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20(\"TON\", \"0x582d872A1B094FC48F5DE31D3B73F2D9bE47def1\"), erc20s.eth.WETH()),\n\n      \"arb:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.arb, erc20(\"WBTC\", \"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f\"), erc20s.arb.WETH()),\n\n      \"poly:Uniswap:V3LP:MATIC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.poly, erc20s.poly.WMATIC(), erc20s.poly.WETH()),\n\n      \"oeth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.oeth, erc20s.oeth.WETH(), erc20s.oeth.WBTC()),\n    });\n  }\n\n  class V3LP implements PositionV1 {\n    nftPositionManager = contract<UniswapNftManagerAbi>(require(\"../abi/UniswapNftManagerAbi.json\"), \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\");\n\n    data = {\n      nftManager: this.nftPositionManager.options.address,\n      id: 0,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      principal0: zero,\n      principal1: zero,\n      valueIfHodl: zero,\n      valueNow: zero,\n      ilValue: zero,\n      il: zero,\n      pending0: zero,\n      pending1: zero,\n      pendingValue0: zero,\n      pendingValue1: zero,\n      totalFeesValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!) || 0;\n      if (this.data.id <= 0) throw new Error(\"unknown positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [this.token0, this.token1];\n    getPendingRewards = () => [\n      { asset: this.token0, amount: this.data.pending0, value: this.data.pendingValue0 },\n      { asset: this.token1, amount: this.data.pending1, value: this.data.pendingValue1 },\n    ];\n    getHealth = () => {\n      if (this.data.value0.isZero() || this.data.value1.isZero())\n        return [\n          {\n            severity: Severity.High,\n            message: \"Range\",\n          },\n        ];\n      if (!this.data.totalFeesValue.isZero() && this.data.ilValue.gt(this.data.totalFeesValue))\n        return [\n          {\n            severity: Severity.High,\n            message: \"IL\",\n          },\n        ];\n      return [];\n    };\n\n    async load() {\n      const pos = await this.nftPositionManager.methods.positions(this.data.id).call();\n      if (web3().utils.toChecksumAddress(pos.token0) !== web3().utils.toChecksumAddress(this.token0.address)) throw new Error(`invalid tokens for pos, ${JSON.stringify(pos)}`);\n\n      const res = await this.nftPositionManager.methods.decreaseLiquidity([this.data.id, pos.liquidity, 0, 0, maxUint256]).call({ from: this.args.address });\n      this.data.amount0 = await this.token0.mantissa(res.amount0);\n      this.data.amount1 = await this.token1.mantissa(res.amount1);\n\n      [this.data.value0, this.data.value1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.amount0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.amount1),\n      ]);\n\n      if (this.getNetwork().id === networks.eth.id) await this.loadFromPositionGraph();\n\n      if (this.data.tvl.isZero()) await this.loadTVL(parseInt(pos.fee));\n    }\n\n    getContractMethods = () => _.functions(this.nftPositionManager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      alert(`target:\\n${this.nftPositionManager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]), useLegacyTx);\n    }\n\n    async loadFromPositionGraph() {\n      const response = await fetch(\"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: `{position(id:${this.data.id}) {\n          depositedToken0\n          depositedToken1\n          withdrawnToken0\n          withdrawnToken1\n          collectedFeesToken0\n          collectedFeesToken1\n          pool {\n            id\n            totalValueLockedUSD\n          }\n        }\n      }`,\n        }),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      this.data.tvl = bn(json.data.position.pool.totalValueLockedUSD);\n      this.data.principal0 = bn(json.data.position.depositedToken0).minus(bn(json.data.position.withdrawnToken0));\n      this.data.principal1 = bn(json.data.position.depositedToken1).minus(bn(json.data.position.withdrawnToken1));\n\n      const [principalValue0, principalValue1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.principal0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.principal1),\n      ]);\n      this.data.valueIfHodl = principalValue0.plus(principalValue1);\n      this.data.valueNow = this.data.value0.plus(this.data.value1);\n      this.data.ilValue = this.data.valueIfHodl.minus(this.data.valueNow);\n      this.data.il = bn(1).minus(this.data.valueNow.div(this.data.valueIfHodl));\n      const pending = await this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]).call({ from: this.args.address });\n      this.data.pending0 = await this.token0.mantissa(pending.amount0);\n      this.data.pending1 = await this.token1.mantissa(pending.amount1);\n      this.data.pendingValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.pending0);\n      this.data.pendingValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.pending1);\n      const collectedValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, bn(json.data.position.collectedFeesToken0));\n      const collectedValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, bn(json.data.position.collectedFeesToken1));\n\n      this.data.totalFeesValue = this.data.pendingValue0.plus(this.data.pendingValue1).plus(collectedValue0).plus(collectedValue1);\n    }\n\n    async loadTVL(fee: number) {\n      const factory = contract<UniswapV3FactoryAbi>(require(\"../abi/UniswapV3FactoryAbi.json\"), await this.nftPositionManager.methods.factory().call());\n      const pool = await factory.methods.getPool(this.token0.address, this.token1.address, fee).call();\n      const [a0, a1] = await Promise.all([\n        this.token0.methods.balanceOf(pool).call().then(this.token0.mantissa),\n        this.token1.methods.balanceOf(pool).call().then(this.token1.mantissa),\n      ]);\n      const [v0, v1] = await Promise.all([this.oracle.valueOf(this.network.id, this.token0, a0), this.oracle.valueOf(this.network.id, this.token1, a1)]);\n      this.data.tvl = v0.plus(v1);\n    }\n  }\n\n  class V2LP implements PositionV1 {\n    router = contract<UniswapV2Abi>(require(\"../abi/UniswapV2Abi.json\"), \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\");\n    data = {\n      router: this.router.options.address,\n      pair: \"\",\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [];\n    getData = () => this.data;\n    getHealth = () => [];\n    getPendingRewards = () => [];\n    getTVL = () => this.data.tvl;\n    getAmounts = () => [\n      { asset: this.asset0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.asset1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n\n    async load() {\n      const factoryAddress = await this.router.methods.factory().call();\n      const factory = contract<UniswapV2FactoryAbi>(require(\"../abi/UniswapV2FactoryAbi.json\"), factoryAddress);\n      this.data.pair = await factory.methods.getPair(this.asset0.address, this.asset1.address).call();\n      const lpToken = erc20(\"LP\", this.data.pair);\n\n      const [lpAmount, lpTotalSupply, total0, total1] = await Promise.all([\n        lpToken.methods.balanceOf(this.args.address).call().then(bn),\n        lpToken.methods.totalSupply().call().then(bn),\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((t) => this.asset0.mantissa(t)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((t) => this.asset1.mantissa(t)),\n      ]);\n\n      this.data.amount0 = total0.times(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0)).plus(await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1));\n    }\n\n    getContractMethods = () => _.functions(this.router.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.router.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.router.methods as any)[method](...args);\n      alert(`target:\\n${this.router.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { BN, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace OffChain {\n  export function register() {\n    PositionFactory.register({\n      \"x:OffChain:Asset\": (args, oracle) => new AssetPosition(args, oracle),\n    });\n  }\n\n  export type Asset = Token & { symbol: string };\n\n  class AssetPosition implements PositionV1 {\n    token: Asset;\n    data = {\n      amount: zero,\n      value: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.input) throw new Error(\"input amount required\");\n      if (!args.address) throw new Error(\"address symbol required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { symbol: args.address });\n      this.data.amount = BN(args.input);\n    }\n\n    getName = () => `OffChain:${this.token.name}`;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.off;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => zero;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { Abi, bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport type { AlphaHomoraBankAbi } from \"../../typechain-abi/AlphaHomoraBankAbi\";\nimport _ from \"lodash\";\n\nexport namespace AlphaHomora {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AlphaHomora:WETHe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX()),\n      \"avax:AlphaHomora:WBTCe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WBTCe(), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class LYF implements PositionV1 {\n    alphaHomoraBank = contract<AlphaHomoraBankAbi>(require(\"../abi/AlphaHomoraBankAbi.json\"), \"0x376d16C7dE138B01455a51dA79AD65806E9cd694\");\n    maxHistoryBlocks = {\n      [networks.avax.id]: 10_000_000,\n    };\n\n    data = {\n      contract: this.alphaHomoraBank.options.address,\n      id: 0,\n      supply0: zero,\n      supply1: zero,\n      borrow0: zero,\n      borrow1: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      pending: zero,\n      pendingValue: zero,\n      tvl: zero,\n      valueIfHodl: zero,\n      ilAmount: zero,\n      il: zero,\n      debtRatio: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!);\n      if (!this.data.id) throw new Error(\"invalid input positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => networks.avax;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n\n    async load() {\n      const pos = await this.alphaHomoraBank.methods.getPositionInfo(this.data.id).call();\n      const lpSupplied = bn(pos.collateralSize);\n      const farmAbi = [\n        {\n          inputs: [{ internalType: \"uint256\", name: \"id\", type: \"uint256\" }],\n          name: \"getUnderlyingToken\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ] as Abi;\n      const nft = contract(farmAbi, pos.collToken);\n      const lpToken = erc20(\"\", await nft.methods.getUnderlyingToken(pos.collId).call());\n      const totalLPs = await lpToken.methods.totalSupply().call().then(bn);\n      const share = lpSupplied.times(ether).div(totalLPs);\n      const total0 = await this.token0.methods.balanceOf(lpToken.address).call().then(this.token0.mantissa);\n      const total1 = await this.token1.methods.balanceOf(lpToken.address).call().then(this.token1.mantissa);\n      this.data.supply0 = total0.times(share).div(ether);\n      this.data.supply1 = total1.times(share).div(ether);\n\n      const debts = await this.alphaHomoraBank.methods.getPositionDebts(this.data.id).call();\n      this.data.borrow0 = await this.token0.mantissa(debts.debts[_.indexOf(debts.tokens, this.token0.address)]);\n      this.data.borrow1 = await this.token1.mantissa(debts.debts[_.indexOf(debts.tokens, this.token1.address)]);\n\n      this.data.amount0 = this.data.supply0.minus(this.data.borrow0);\n      this.data.amount1 = this.data.supply1.minus(this.data.borrow1);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.amount1);\n\n      const totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, total0);\n      const totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, total1);\n      this.data.tvl = totalValue0.plus(totalValue1);\n    }\n\n    //     private async loadDeposits() {\n    //       const depositAbi = _(this.alphaHomoraBank.options.jsonInterface).find((x) => x.type === \"function\" && x.name === \"execute\")!;\n    //       const depositSig = web3().eth.abi.encodeFunctionSignature(depositAbi);\n    //\n    //       const currentBlock = await web3().eth.getBlockNumber();\n    //       const earliestBlock = currentBlock - this.maxHistoryBlocks[this.getNetwork().id];\n    //\n    //       const apiKey = \"\";\n    //       const alltxsResponse = await fetch(`https://api.snowtrace.io/api?module=account&action=txlist\n    // &fromBlock=${earliestBlock}\n    // &toBlock=${currentBlock}\n    // &address=${this.args.address}\n    // &sort=asc&apikey=${apiKey}`);\n    //       const alltxs = await alltxsResponse.json();\n    //       const relevantTxs = _.filter(alltxs.result, (tx) => eqIgnoreCase(tx.to, this.alphaHomoraBank.options.address) && tx.input.startsWith(depositSig));\n    //       if (relevantTxs.length !== 1) {\n    //         console.error(\"no / too many deposits\");\n    //         return;\n    //       }\n    //       const deposit = relevantTxs[0];\n    //       const receipt = await web3().eth.getTransactionReceipt(deposit.hash);\n    //       const events = parseEvents(receipt, this.token0);\n    //\n    //       const depositEvent = events.find((e) => e.event === \"Transfer\" && eqIgnoreCase(e.address, this.token0.address) && eqIgnoreCase(e.returnValues.from, this.args.address))!;\n    //       const deposit0 = bn(depositEvent.returnValues.value);\n    //       const deposit1 = _.reduce(relevantTxs, (sum, tx) => sum.plus(bn(tx.value)), zero);\n    //       const valueNow0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, deposit0);\n    //       const valueNow1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, deposit1);\n    //\n    //       this.data.valueIfHodl = valueNow0.plus(valueNow1);\n    //       const valueNow = this.data.value0.plus(this.data.value1);\n    //       this.data.ilAmount = this.data.valueIfHodl.minus(valueNow);\n    //       this.data.il = ether.minus(valueNow.times(ether).div(this.data.valueIfHodl));\n    //     }\n\n    //   private async loadDebtRatio() {\n    //     /*\n    //       struct TokenFactors {\n    //     uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //     uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //     uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    //     mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // }\n    //        */\n    //\n    //     /*\n    //       struct TokenFactors {\n    //   uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //   uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //   uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    // }\n    //\n    // IBaseOracle public immutable source; // Main oracle source\n    // mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // mapping(address => bool) public whitelistERC1155; // Mapping from token address to whitelist status\n    //      */\n    //     const proxyOracleAbi: Abi = [\n    //       {\n    //         name: \"tokenFactors\",\n    //         type: \"function\",\n    //         stateMutability: \"view\",\n    //         inputs: [\n    //           {\n    //             internalType: \"address\",\n    //             name: \"token\",\n    //             type: \"address\",\n    //           },\n    //         ],\n    //         outputs: [\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"borrowFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"collateralFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"liqIncentive\",\n    //             type: \"uint256\",\n    //           },\n    //         ],\n    //       },\n    //     ];\n    //     const o = contract(proxyOracleAbi, await this.alphaHomoraBank.methods.oracle().call());\n    //     const f0 = bn((await o.methods.tokenFactors(this.token0.address).call()).borrowFactor).toNumber() / 1e4;\n    //     const f1 = bn((await o.methods.tokenFactors(this.token1.address).call()).borrowFactor).toNumber() / 1e4;\n    //     console.log(f0, f1);\n    //   }\n\n    getContractMethods = () => _.functions(this.alphaHomoraBank.methods);\n    async callContract(method: string, args: string[]) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      alert(`target:\\n${this.alphaHomoraBank.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { BN, bn, contract, eqIgnoreCase, erc20, ether, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { BalancerGaugeAbi, BalancerV2VaultAbi } from \"../../typechain-abi\";\n\nexport namespace Balancer {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Balancer:WBTC/ETH\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.eth,\n          [erc20s.eth.WBTC(), erc20s.eth.WETH()],\n          \"0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e\",\n          \"0x4E3c048BE671852277Ad6ce29Fd5207aA12fabff\"\n        ),\n\n      \"poly:Balancer:USDC/DAI/MAI/USDT\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.USDC(), erc20s.poly.DAI(), erc20(\"MAI\", \"0xa3Fa99A148fA48D14Ed51d610c367C61876997F1\"), erc20s.poly.USDT()],\n          \"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012\"\n        ),\n      \"poly:Balancer:MATIC/sMATIC\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.WMATIC(), erc20(\"sMATIC\", \"0x3A58a54C066FdC0f2D55FC9C89F0415C92eBf3C4\")],\n          \"0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366\",\n          \"0x9928340f9E1aaAd7dF1D95E27bd9A5c715202a56\"\n        ),\n\n      \"arb:Balancer:MAI/USDT/USDC\": (args, oracle) => {\n        oracle.overridePrice(networks.arb.id, erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"), ether);\n        return new Farm(\n          args,\n          oracle,\n          networks.arb,\n          [\n            erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"),\n            erc20(\"USDT\", \"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9\"),\n            erc20(\"USDC\", \"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8\"),\n          ],\n          \"0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d\"\n        );\n      },\n    });\n  }\n\n  const balToken = {\n    [networks.eth.id]: () => erc20(\"BAL\", \"0xba100000625a3754423978a60c9317c58a424e3D\"),\n    [networks.poly.id]: () => erc20(\"BAL\", \"0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3\"),\n    [networks.arb.id]: () => erc20(\"BAL\", \"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8\"),\n  };\n\n  const balV2 = () => contract<BalancerV2VaultAbi>(require(\"../abi/BalancerV2VaultAbi.json\"), \"0xBA12222222228d8Ba445958a75a0704d566BF2C8\");\n\n  class Farm implements PositionV1 {\n    vault = balV2();\n    gauge = contract<BalancerGaugeAbi>(require(\"../abi/BalancerGaugeAbi.json\"), this.gaugeAddress);\n    bal = balToken[this.network.id]();\n\n    data = {\n      vault: this.vault.options.address,\n      gauge: this.gauge.options.address,\n      amounts: [] as BN[],\n      values: [] as BN[],\n      tvl: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public tokens: Token[], public poolId: string, public gaugeAddress: string = \"\") {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => this.tokens;\n    getAmounts = () => _.map(this.tokens, (asset, i) => ({ asset, amount: this.data.amounts[i] || zero, value: this.data.values[i] || zero }));\n    getRewardAssets = () => [this.bal];\n    getPendingRewards = () => [{ asset: this.bal, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      if (!this.gaugeAddress) return await this.loadFromPool();\n\n      const [lpTokenAddress, workingBalance, totalWorkingBalance] = await Promise.all([\n        this.gauge.methods.lp_token().call(),\n        this.gauge.methods.balanceOf(this.args.address).call().then(bn),\n        this.gauge.methods.totalSupply().call().then(bn),\n      ]);\n      const pending = await this.gauge.methods\n        .claimable_tokens(this.args.address)\n        .call()\n        .catch(() => this.gauge.methods.claimable_reward_write(this.args.address, this.bal.address).call())\n        .then(bn);\n\n      const bpt = erc20(\"BPT\", lpTokenAddress);\n      const [totalBptsStaked, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.gaugeAddress).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n      const bptBalance = totalBptsStaked.times(workingBalance).div(totalWorkingBalance);\n\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).times(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).times(totalBptsStaked).div(bptTotalSupply))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.plus(bn(b)), zero);\n\n      this.data.pending = pending;\n      this.data.pendingValue = await this.oracle.valueOf(this.network.id, this.bal, this.data.pending);\n    }\n\n    private async loadFromPool() {\n      const bpt = erc20(\n        \"BPT\",\n        await this.vault.methods\n          .getPool(this.poolId)\n          .call()\n          .then((x) => x[\"0\"])\n      );\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      const [bptBalance, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.args.address).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).times(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.plus(bn(b)), zero);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.gauge.methods.claimable_tokens(this.args.address), useLegacyTx);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { networks } from \"./base/consts\";\n\nexport namespace ElrondMaiar {\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    MEX_EGLD: () => esdt(\"MEX/EGLD LP\", \"EGLDMEX-0be9e5\", 18),\n    USDC_EGLD: () => esdt(\"USDC/EGLD LP\", \"EGLDUSDC-594e5e\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string; lp: ESDT };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    L_USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\",\n      lp: tokens.MEX_EGLD(),\n    }),\n    L_MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\",\n      lp: tokens.MEX_EGLD(),\n    }),\n  };\n\n  class Farm implements PositionV1 {\n    mex = tokens.MEX();\n\n    data = {\n      pool: this.strategy.pool,\n      farm: this.strategy.farm,\n      lp: this.strategy.lp.tokenId,\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.egld;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () =>\n      this.getAssets().length > 1\n        ? [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n            {\n              asset: this.getAssets()[1],\n              amount: this.data.amount1,\n              value: this.data.value1,\n            },\n          ]\n        : [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n          ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [asset0, asset1] = this.getAssets();\n      const [farmEsdts, pairEsdts, totalLPSupply] = await Promise.all([getESDTs(this.strategy.farm), getESDTs(this.strategy.pool), getTotalSupply(this.strategy.lp)]);\n      const totalLPStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === this.strategy.lp.tokenId)!.balance);\n      const asset0InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset0.tokenId)!.balance);\n      const asset1InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset1.tokenId)!.balance);\n      const asset0TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset0, totalLPStaked.times(asset0InPair).div(totalLPSupply));\n      const asset1TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset1, totalLPStaked.times(asset1InPair).div(totalLPSupply));\n      this.data.tvl = asset0TotalValue.plus(asset1TotalValue);\n\n      const esdts = await getESDTs(this.args.address);\n      const lpNameSuffix = this.strategy.lp.tokenId.split(\"-\")[0];\n      const lps = _.find(esdts, (t) => t.tokenIdentifier.startsWith(lpNameSuffix));\n      if (!lps) return;\n\n      this.data.lpBalanceStaked = bn(lps!.balance);\n      this.data.amount0 = this.data.lpBalanceStaked.times(asset0InPair).div(totalLPSupply);\n      this.data.amount1 = this.data.lpBalanceStaked.times(asset1InPair).div(totalLPSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, asset1, this.data.amount1);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\",\n      lp: tokens.MEX(),\n    }),\n    L_MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\",\n      lp: tokens.LKMEX(),\n    }),\n  };\n\n  class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as Strategy).lp];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const asset = this.getAssets()[0];\n\n      const farmEsdts = await getESDTs(this.strategy.farm);\n      const totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      this.data.tvl = await this.oracle.valueOf(networks.egld.id, asset, totalAssetStaked);\n\n      const esdts = await getESDTs(this.args.address);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === this.strategy.pool.toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n\n      this.data.amount0 = bn(farmNftWrapper.balance.toString());\n      this.data.value0 = await this.oracle.valueOf(networks.egld.id, asset, this.data.amount0);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  async function getESDTs(address: string) {\n    const response = await fetch(`https://gateway.elrond.com/address/${address}/esdt`);\n    const json = await response.json();\n    return _.get(json, [\"data\", \"esdts\"], []);\n  }\n\n  async function getTotalSupply(token: ESDT) {\n    const response = await fetch(`https://gateway.elrond.com/network/esdt/supply/${token.tokenId}`);\n    const json = await response.json();\n    return bn(_.get(json, [\"data\", \"supply\"], \"0\"));\n  }\n\n  export function register() {\n    PositionFactory.register({\n      \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n      \"egld:Maiar:LFarm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_USDC_EGLD()),\n      \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n      \"egld:Maiar:LFarm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_MEX_EGLD()),\n      \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n      \"egld:Maiar:MEXLFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.L_MEX()),\n    });\n  }\n\n  // export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n  //   const assets = _.map(tokens, (t) => t());\n\n  // https://gateway.elrond.com/address/:bech32Address/balance\n\n  // const [esdts, balanceEGLD] = await Promise.all([getESDTs(address), provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString()))]);\n\n  // const balances = await Promise.all(\n  //   _(esdts)\n  //     .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n  //     .filter((t) => !!t.asset)\n  //     .map(async (t) => {\n  //       const amount = to18(t.esdt.balance, t.asset!.dec);\n  //       return {\n  //         asset: t.asset!,\n  //         amount,\n  //         value: await oracle.valueOf(networks.egld.id, t.asset!, amount),\n  //       };\n  //     })\n  //     .value()\n  // );\n\n  // balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(networks.egld.id, tokens.EGLD(), balanceEGLD) });\n\n  // return balances;\n  // }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n\n// farms v2:\n// EGLD/MEX => MEX : erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\n// EGLD/MEX => LKMEX: erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\n// EGLD/USDC => MEX: erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\n// EGLD/USDC => LKMEX: erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\n// MEX => MEX: erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\n// MEX => LKMEX: erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\n","import _ from \"lodash\";\nimport type { TraderJoeFarmAbi } from \"../../typechain-abi\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace TraderJoe {\n  const orbs = () => erc20(\"ORBS\", \"0x340fE1D898ECCAad394e2ba0fC1F93d27c7b717A\");\n\n  export function register() {\n    PositionFactory.register({\n      \"avax:TraderJoe:Farm:WETH/AVAX\": (args, oracle) => new Farm(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX(), 26),\n      \"avax:TraderJoe:Farm:sAVAX/AVAX\": (args, oracle) =>\n        new Farm(args, oracle, erc20(\"sAVAX\", \"0x2b2C81e08f1Af8835a78Bb2A90AE924ACE0eA4bE\"), erc20s.avax.WAVAX(), 51, \"0x188bed1968b795d5c9022f6a0bb5931ac4c18f00\"),\n\n      \"avax:TraderJoe:LP:ORBS/AVAX\": (args, oracle) => new LP(args, oracle, orbs(), erc20s.avax.WAVAX(), \"0x0315522354037e48C75756aD68358CE185dad911\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<TraderJoeFarmAbi>(require(\"../abi/TraderJoeFarmAbi.json\"), this.masterchefAddress);\n    reward = erc20(\"JOE\", \"0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd\");\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public poolId: number,\n      public masterchefAddress: string = \"0xd6a4F121CA35509aF06A0Be99093d08462f53052\"\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingTokens(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken);\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.times(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.times(lpStaked).div(lpTotalSupply))).plus(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.times(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending.pendingJoe);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"TraderJoeLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.times(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.plus(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn9, contract, erc20, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { RibbonGaugeAbi, RibbonThetaVaultAbi } from \"../../typechain-abi\";\n\nexport namespace Ribbon {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Ribbon:T-CC:ETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x25751853Eab4D0eB3652B5eB6ecB102A2789644B\"),\n      \"eth:Ribbon:T-CC:stETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x53773E034d9784153471813dacAFF53dBBB78E8c\"),\n      \"eth:Ribbon:T-CC:WBTC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WBTC(), \"0x65a833afDc250D9d38f8CD9bC2B1E3132dB13B2F\"),\n      \"eth:Ribbon:T-CSP:yvUSDC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.USDC(), \"0xCc323557c71C0D1D20a1861Dc69c06C5f3cC9624\"),\n\n      \"avax:Ribbon:T-CC:AVAX\": (args, oracle) => new ThetaVault(args, oracle, networks.avax, erc20s.avax.WAVAX(), \"0x98d03125c62DaE2328D9d3cb32b7B969e6a87787\"),\n    });\n  }\n\n  const rewardTokens = {\n    [networks.eth.id]: () => erc20(\"RBN\", \"0x6123B0049F904d730dB3C36a31167D9d4121fA6B\"),\n    [networks.avax.id]: () => erc20s.avax.WAVAX(),\n  };\n\n  class ThetaVault implements PositionV1 {\n    rewardToken = rewardTokens[this.network.id]();\n    vault = contract<RibbonThetaVaultAbi>(require(\"../abi/RibbonThetaVaultAbi.json\"), this.vaultAddress);\n\n    data = {\n      vault: this.vaultAddress,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      strike: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset: Token, public vaultAddress: string) {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.asset];\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.rewardToken];\n    getPendingRewards = () => [{ asset: this.rewardToken, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const { amount, unredeemedShares } = await this.vault.methods.depositReceipts(this.args.address).call();\n      this.data.amount = await this.asset.mantissa(bn(amount).plus(bn(unredeemedShares)));\n\n      // farms only on ETH\n      if (this.network.id === networks.eth.id) {\n        const farm = contract<RibbonGaugeAbi>(require(\"../abi/RibbonGaugeAbi.json\"), await this.vault.methods.liquidityGauge().call());\n        const [fbalance, fratio] = await Promise.all([farm.methods.balanceOf(this.args.address).call().then(bn), this.vault.methods.pricePerShare().call().then(bn)]);\n        const staked = await this.asset.mantissa(fbalance.times(fratio).div(await this.asset.amount(1)));\n        this.data.amount = this.data.amount.plus(staked);\n\n        this.data.pending = await farm.methods.claimable_tokens(this.args.address).call().then(bn);\n        this.data.pendingValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardToken, this.data.pending);\n      }\n\n      this.data.value = await this.oracle.valueOf(this.network.id, this.asset, this.data.amount);\n\n      const total = await this.asset.mantissa(await this.vault.methods.totalBalance().call());\n      this.data.tvl = await this.oracle.valueOf(this.network.id, this.asset, total);\n\n      const currentOption = contract(require(\"../abi/RibbonOptionAbi.json\"), await this.vault.methods.currentOption().call());\n      this.data.strike = bn9(await currentOption.methods[\"strikePrice()\"]().call()).times(10);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, ether, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { LooksrareStakingAbi } from \"../../typechain-abi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace LooksRare {\n  export function register() {\n    PositionFactory.register({\n      \"eth:LooksRare:LooksStaking\": (args, oracle) => new Staking(args, oracle),\n      \"eth:LooksRare:LooksAutoCompound\": (args, oracle) => new AutoCompund(args, oracle),\n    });\n  }\n\n  class Staking implements PositionV1 {\n    eth = erc20s.eth.WETH();\n    looks = erc20(\"LOOKS\", \"0xf4d2888d29D722226FafA5d9B24F9164c092421E\");\n    vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0xBcD7254A1D759EFA08eC7c3291B2E85c5dCC12ce\");\n    checkPending = true;\n\n    data = {\n      vault: this.vault.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getNetwork = () => networks.eth;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.looks];\n    getAmounts = () => [{ asset: this.looks, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.eth];\n    getPendingRewards = () => [{ asset: this.eth, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const [stakedLooks, pendingEth, totalShares, sharePrice] = await Promise.all([\n        this.vault.methods.calculateSharesValueInLOOKS(this.args.address).call().then(this.looks.mantissa),\n        this.checkPending ? this.vault.methods.calculatePendingRewards(this.args.address).call().then(bn) : zero,\n        this.vault.methods.totalShares().call().then(this.looks.mantissa),\n        this.vault.methods.calculateSharePriceInLOOKS().call().then(bn),\n      ]);\n      this.data.amount = stakedLooks;\n      this.data.pendingAmount = pendingEth;\n      const tvlAmount = totalShares.times(sharePrice).div(ether);\n\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.looks, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.looks, tvlAmount),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class AutoCompund extends Staking {\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      super(args, oracle);\n      this.vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0x3ab16Af1315dc6C95F83Cbf522fecF98D00fd9ba\");\n      this.data.vault = this.vault.options.address;\n      this.checkPending = false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, Contract, contract, erc20, erc20s, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { SushiswapMinichefAbi } from \"../../typechain-abi\";\n\nexport namespace SushiSwap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:SushiSwap:Farm:USDC/ETH\": (args, oracle) => new Farm(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH(), 1),\n      \"poly:SushiSwap:Farm:ETH/MATIC\": (args, oracle) => new Farm(args, oracle, networks.poly, erc20s.poly.WETH(), erc20s.poly.WMATIC(), 0),\n      \"arb:SushiSwap:Farm:USDC/ETH\": (args, oracle) => new Farm(args, oracle, networks.arb, erc20s.arb.USDC(), erc20s.arb.WETH(), 0),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = getFarmContract(this.network);\n    reward = getRewardContract(this.network);\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingSushi(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken || (await this.masterchef.methods.lpToken(this.poolId).call()));\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.times(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.times(lpStaked).div(lpTotalSupply))).plus(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.times(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      const tx = this.network.id === networks.poly.id ? this.masterchef.methods.deposit(this.poolId, 0, this.args.address) : this.masterchef.methods.deposit(this.poolId, 0);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n  }\n\n  function getFarmContract(network: Network): Contract {\n    switch (network.shortname) {\n      case \"arb\":\n        return contract<SushiswapMinichefAbi>(require(\"../abi/SushiswapMinichefAbi.json\"), \"0xF4d73326C13a4Fc5FD7A064217e12780e9Bd62c3\");\n      case \"poly\":\n        return contract<SushiswapMinichefAbi>(require(\"../abi/SushiswapMinichefAbi.json\"), \"0x0769fd68dFb93167989C6f7254cd0D766Fb2841F\");\n      case \"eth\":\n      default:\n        return contract(require(\"../abi/SushiswapMasterchefAbi.json\"), \"0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd\");\n    }\n  }\n\n  function getRewardContract(network: Network) {\n    switch (network.shortname) {\n      case \"arb\":\n        return erc20(\"SUSHI\", \"0xd4d42F0b6DEF4CE0383636770eF773390d85c61A\");\n      case \"poly\":\n        return erc20(\"SUSHI\", \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\");\n      case \"eth\":\n      default:\n        return erc20(\"SUSHI\", \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\");\n    }\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20, zero } from \"@defi.org/web3-candies\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Fodl {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n    });\n  }\n\n  export class XFodlStake implements PositionV1 {\n    fodl = erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\");\n    xfodl = erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\");\n\n    data = {\n      fodl: this.fodl.address,\n      xfodl: this.xfodl.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(this.xfodl.mantissa),\n        this.xfodl.methods.totalSupply().call().then(this.xfodl.mantissa),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(this.fodl.mantissa),\n      ]);\n      this.data.amount = myXfodl.times(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { QuickswapStakingAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace QuickSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x614389EaAE0A6821DC49062D56BDA3d9d45Fa2ff\");\n  const quick = () => erc20(\"QUICK\", \"0x831753DD7087CaC61aB5644b308642cc1c33Dc13\");\n\n  export function register() {\n    PositionFactory.register({\n      \"poly:QuickSwap:Farm:ORBS/USDC\": (args, oracle) => new Farm(args, oracle, erc20s.poly.USDC(), orbs(), \"0x9CA237962823A0a74bbC8354764e1DAC9e4057F0\"),\n\n      \"poly:QuickSwap:LP:ORBS/QUICK\": (args, oracle) => new LP(args, oracle, orbs(), quick(), \"0x882624931b4A799d50242e5b25E2Fa2719E4d072\"),\n      \"poly:QuickSwap:LP:ORBS/JPYC\": (args, oracle) =>\n        new LP(args, oracle, orbs(), erc20(\"JPYC\", \"0x431D5dfF03120AFA4bDf332c61A6e1766eF37BDB\"), \"0xD01C074C78E9647a5ddAE2648f1A089b98D5380a\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    staking = contract<QuickswapStakingAbi>(require(\"../abi/QuickswapStakingAbi.json\"), this.stakingAddress);\n    reward = erc20(\"dQUICK\", \"0xf28164A485B0B2C90639E47b0f377b4a438a16B1\");\n\n    data = {\n      contract: this.stakingAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public stakingAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, totalStaked, earned, lpAddress] = await Promise.all([\n        this.staking.methods.balanceOf(this.args.address).call().then(bn),\n        this.staking.methods.totalSupply().call().then(bn),\n        this.staking.methods.earned(this.args.address).call().then(this.reward.mantissa),\n        this.staking.methods.stakingToken().call(),\n      ]);\n      this.data.rewardAmount = earned;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(bn),\n      ]);\n      this.data.amount0 = stakedBalance.times(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.times(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_amount0 = totalStaked.times(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.times(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.plus(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.staking.methods.stake(0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"QuickswapLP\", this.lpAddress);\n\n    data = {\n      contract: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [balance, totalSupply] = await Promise.all([this.lp.methods.balanceOf(this.args.address).call().then(bn), this.lp.methods.totalSupply().call().then(bn)]);\n\n      const [amount0InLp, amount1InLp] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n      ]);\n      this.data.amount0 = amount0InLp.times(balance).div(totalSupply);\n      this.data.amount1 = amount1InLp.times(balance).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, amount0InLp);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, amount1InLp);\n      this.data.tvl = tvl_value0.plus(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PangolinChefAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Pangolin {\n  const orbs = () => erc20(\"ORBS\", \"0x340fE1D898ECCAad394e2ba0fC1F93d27c7b717A\");\n  const png = () => erc20(\"PNG\", \"0x60781C2586D68229fde47564546784ab3fACA982\");\n\n  export function register() {\n    PositionFactory.register({\n      \"avax:Pangolin:Farm:ORBS/AVAX\": (args, oracle) => new Farm(args, oracle, orbs(), erc20s.avax.WAVAX(), 36),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    chef = contract<PangolinChefAbi>(require(\"../abi/PangolinChefAbi.json\"), \"0x1f806f7C8dED893fd3caE279191ad7Aa3798E928\");\n    reward = png();\n\n    data = {\n      chef: this.chef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.avax;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, pending, lpAddress] = await Promise.all([\n        this.chef.methods\n          .userInfo(this.poolId, this.args.address)\n          .call()\n          .then((x) => bn(x.amount)),\n        this.chef.methods.pendingReward(this.poolId, this.args.address).call().then(bn),\n        this.chef.methods.lpToken(this.poolId).call(),\n      ]);\n      this.data.rewardAmount = pending;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply, totalStaked] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(bn),\n        lp.methods.balanceOf(this.chef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = stakedBalance.times(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.times(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n\n      const tvl_amount0 = totalStaked.times(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.times(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.isZero() ? tvl_value1.times(2) : tvl_value0.plus(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.chef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.chef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.chef.methods as any)[method](...args);\n      alert(`target:\\n${this.chef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.chef.methods.deposit(this.poolId, 0, this.args.address), useLegacyTx);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { contract, erc20, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { RookLiquidityPoolAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Rook {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Rook:xRook\": (args, oracle) => new XRook(args, oracle),\n    });\n  }\n\n  class XRook implements PositionV1 {\n    pool = contract<RookLiquidityPoolAbi>(require(\"../abi/RookLiquidityPoolAbi.json\"), \"0x4F868C1aa37fCf307ab38D215382e88FCA6275E2\");\n    rook = erc20(\"ROOK\", \"0xfA5047c9c78B8877af97BDcb85Db743fD7313d4a\");\n    xrook = erc20(\"xROOK\", \"0x8aC32F0a635a0896a8428A9c31fBf1AB06ecf489\");\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [this.xrook];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getTVL = () => this.data.tvl;\n    getAmounts = () => [{ asset: this.rook, amount: this.data.amount, value: this.data.value }];\n\n    async load() {\n      this.data.amount = await this.pool.methods.underlyingBalance(this.rook.address, this.args.address).call().then(this.rook.mantissa);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.rook, this.data.amount);\n      const tvlAmount = await this.pool.methods.totalValueLocked(this.rook.address).call().then(this.rook.mantissa);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.rook, tvlAmount);\n    }\n\n    getContractMethods = () => _.functions(this.xrook.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xrook.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.xrook.methods as any)[method](...args);\n      alert(`target:\\n${this.xrook.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks } from \"./base/consts\";\nimport { erc20, Network, Token, zero } from \"@defi.org/web3-candies\";\n\nexport namespace Aave {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AaveV3:aAVAX\": (args, oracle) => new Collateral(args, oracle, networks.avax, erc20(\"aAVAX\", \"0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97\"), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class Collateral implements PositionV1 {\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public aToken: Token, public token: Token) {}\n\n    getName = () => \"\";\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.aToken];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      const [amount, totalSupply] = await Promise.all([\n        this.aToken.methods.balanceOf(this.args.address).call().then(this.aToken.mantissa),\n        this.aToken.methods.totalSupply().call().then(this.aToken.mantissa),\n      ]);\n\n      this.data.amount = amount;\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.token, totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.tvl;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { contract, erc20, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport type { SpookyChefAbi } from \"../../typechain-abi\";\n\nexport namespace SpookySwap {\n  const orbs = () => erc20(\"ORBS\", \"0x3E01B7E242D5AF8064cB9A8F9468aC0f8683617c\");\n  const usdc = () => erc20(\"USDC\", \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\");\n  const ftm = () => erc20(\"FTM\", \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\");\n\n  export function register() {\n    PositionFactory.register({\n      \"ftm:SpookySwap:LP:ORBS/USDC\": (args, oracle) => new LP(args, oracle, orbs(), usdc(), \"0x4FaA520fe975228F54b30c6996129950E975BD8f\", 43),\n      \"ftm:SpookySwap:LP:ORBS/FTM\": (args, oracle) => new LP(args, oracle, orbs(), ftm(), \"0x3Ae87E47c69144d1794a78c0709485978C1002A5\", -1),\n    });\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"SpookySwapLP\", this.lpAddress);\n    boo = erc20(\"BOO\", \"0x841FAD6EAe12c286d1Fd18d1d525DFfA75C7EFFE\");\n    masterchef = contract<SpookyChefAbi>(require(\"../abi/SpookyChefAbi.json\"), \"0x18b4f774fdC7BF685daeeF66c2990b1dDd9ea6aD\");\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.ftm;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.boo];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.boo,\n        amount: this.data.pending,\n        value: this.data.pendingValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      let [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      if (this.poolId > 0) {\n        lpAmount = lpAmount.plus(await this.lp.mantissa((await this.masterchef.methods.userInfo(this.poolId, this.args.address).call()).amount));\n        this.data.pending = await this.masterchef.methods.pendingBOO(this.poolId, this.args.address).call().then(this.boo.mantissa);\n        this.data.pendingValue = await this.oracle.valueOf(this.getNetwork().id, this.boo, this.data.pending);\n      }\n      this.data.amount0 = total0.times(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.plus(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { erc20, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace SpiritSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x3E01B7E242D5AF8064cB9A8F9468aC0f8683617c\");\n  const usdc = () => erc20(\"USDC\", \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\");\n  const ftm = () => erc20(\"FTM\", \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\");\n\n  export function register() {\n    PositionFactory.register({\n      \"ftm:SpiritSwap:LP:ORBS/USDC\": (args, oracle) => new LP(args, oracle, orbs(), usdc(), \"0x4B668A229740b4F6d04cE2D1b05648Ef1d508EC1\"),\n      \"ftm:SpiritSwap:LP:ORBS/FTM\": (args, oracle) => new LP(args, oracle, orbs(), ftm(), \"0x1F0700387Dfe4Aec7b8C99fbf54cdCDbBB5603B5\"),\n    });\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"SpiritSwapLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.ftm;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.times(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.times(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.plus(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn, bnm, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace Bitcoin {\n  export function register() {\n    PositionFactory.register({\n      \"x:Bitcoin\": (args, oracle) => new BitcoinBalance(args, oracle),\n    });\n  }\n\n  export type BTC = Token & { bech32: string };\n\n  class BitcoinBalance implements PositionV1 {\n    token: BTC;\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.address) throw new Error(\"bitcoin bech32 bc1 address required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { bech32: args.address });\n    }\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.btc;\n    getData = () => this.data;\n    getAssets = () => [this.token];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      this.data.tvl = await fetchTVL();\n      this.data.amount = await fetchBalance(this.token.bech32);\n      this.data.value = await fetchPrice().then((p) => this.data.amount.times(p));\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  async function fetchTVL() {\n    const r = await fetch(\"https://blockchain.info/q/marketcap\");\n    const json = await r.json();\n    return bn(json);\n  }\n\n  async function fetchBalance(bech32: string) {\n    const r = await fetch(`https://blockchain.info/q/addressbalance/${bech32}`);\n    const json = await r.json();\n    return bnm(json, 8);\n  }\n\n  async function fetchPrice() {\n    const r = await fetch(\"https://blockchain.info/q/24hrprice\");\n    const json = await r.json();\n    return parseFloat(json);\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { bn18, contract, erc20, erc20s, ether, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport type { LiquityStabilityPoolAbi, LiquityTroveManagerAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Liquity {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Liquity:LUSD\": (args, oracle) => new Pool(args, oracle),\n      \"eth:Liquity:Trove\": (args, oracle) => new CDP(args, oracle),\n    });\n  }\n\n  const lusd = () => erc20(\"LUSD\", \"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0\");\n  const lqty = () => erc20(\"LQTY\", \"0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D\");\n\n  class CDP implements PositionV1 {\n    manager = contract<LiquityTroveManagerAbi>(require(\"../abi/LiquityTroveManagerAbi.json\"), \"0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2\");\n\n    CR_LIQUIDATION = bn18(1.1);\n    CR_RECOVERY = bn18(1.5);\n\n    data = {\n      manager: this.manager.options.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      debt: zero,\n      cr: zero,\n      ltv: zero,\n      liquidationPrice: zero,\n      entireSystemDebt: zero,\n      entireSystemCR: zero,\n      recoveryMode: 0,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [erc20s.eth.WETH()];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () =>\n      this.data.cr.lte(this.CR_LIQUIDATION)\n        ? [\n            {\n              severity: Severity.Critical,\n              message: `⚠️ LIQUIDATION`,\n            },\n          ]\n        : this.data.cr.lt(this.CR_RECOVERY)\n        ? [\n            {\n              severity: Severity.High,\n              message: `CR ${this.data.cr.toFixed(3)}%`,\n            },\n          ]\n        : [];\n    getAmounts = () => [{ asset: erc20s.eth.WETH(), amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const eth = erc20s.eth.WETH();\n      const price = await this.oracle.valueOf(this.getNetwork().id, eth, ether);\n      const [pos, systemColl, systemDebt, recoveryMode] = await Promise.all([\n        this.manager.methods.getEntireDebtAndColl(this.args.address).call(),\n        this.manager.methods.getEntireSystemColl().call().then(eth.mantissa),\n        this.manager.methods.getEntireSystemDebt().call().then(lusd().mantissa),\n        this.manager.methods.checkRecoveryMode(price.toString()).call(),\n      ]);\n      this.data.recoveryMode = recoveryMode ? 1 : 0;\n      this.data.amount = await eth.mantissa(pos.coll);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, eth, this.data.amount);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, eth, systemColl);\n      this.data.debt = await lusd().mantissa(pos.debt);\n      this.data.cr = this.data.value.times(ether).div(this.data.debt);\n      this.data.ltv = ether.times(ether).div(this.data.cr);\n      const crWithGasFeeRebate = this.data.value.times(ether).div(this.data.debt.minus(await lusd().amount(200)));\n      this.data.liquidationPrice = price.times(this.CR_LIQUIDATION).div(crWithGasFeeRebate);\n      this.data.entireSystemDebt = await lusd().mantissa(systemDebt);\n      this.data.entireSystemCR = this.data.tvl.times(ether).div(this.data.entireSystemDebt);\n    }\n\n    getContractMethods = () => _.functions(this.manager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.manager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.manager.methods as any)[method](...args);\n      alert(`target:\\n${this.manager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class Pool implements PositionV1 {\n    pool = contract<LiquityStabilityPoolAbi>(require(\"../abi/LiquityStabilityPoolAbi.json\"), \"0x66017D22b0f8556afDd19FC67041899Eb65a21bb\");\n\n    data = {\n      pool: this.pool.options.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      pendingReward: zero,\n      pendingRewardValue: zero,\n      pendingETH: zero,\n      pendingETHValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [lusd()];\n    getRewardAssets = () => [lqty(), erc20s.eth.WETH()];\n    getPendingRewards = () => [\n      { asset: lqty(), amount: this.data.pendingReward, value: this.data.pendingRewardValue },\n      { asset: erc20s.eth.WETH(), amount: this.data.pendingETH, value: this.data.pendingETHValue },\n    ];\n    getHealth = () => [];\n    getAmounts = () => [{ asset: lusd(), amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [totalDeposits, deposit, rewards, eth] = await Promise.all([\n        this.pool.methods.getTotalLUSDDeposits().call().then(lusd().mantissa),\n        this.pool.methods.getCompoundedLUSDDeposit(this.args.address).call().then(lusd().mantissa),\n        this.pool.methods.getDepositorLQTYGain(this.args.address).call().then(lqty().mantissa),\n        this.pool.methods.getDepositorETHGain(this.args.address).call().then(erc20s.eth.WETH().mantissa),\n      ]);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, lusd(), totalDeposits);\n      this.data.amount = deposit;\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, lusd(), this.data.amount);\n      this.data.pendingReward = rewards;\n      this.data.pendingRewardValue = await this.oracle.valueOf(this.getNetwork().id, lqty(), this.data.pendingReward);\n      this.data.pendingETH = eth;\n      this.data.pendingETHValue = await this.oracle.valueOf(this.getNetwork().id, erc20s.eth.WETH(), this.data.pendingETH);\n    }\n\n    getContractMethods = () => _.functions(this.pool.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.pool.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.pool.methods as any)[method](...args);\n      alert(`target:\\n${this.pool.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.pool.methods.withdrawFromSP(0), useLegacyTx);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn18, convertDecimals, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport _ from \"lodash\";\n\nexport namespace Raydium {\n  export function register() {\n    PositionFactory.register({\n      \"sol:Raydium:Pool:ORBS/SOL\": (args, oracle) => new Pool(args, oracle, \"ORBS\", \"2iHXwoH2LaMyiLL2WKDNx732rQ7CsMScNRavB1bmT5aZ\", \"orbs\"),\n    });\n  }\n\n  export type SolToken = Token & { sol: true; coingeckoId: string };\n\n  class Pool implements PositionV1 {\n    sol = erc20(\"SOL\", zeroAddress) as SolToken;\n    token = erc20(this.tokenName, zeroAddress) as SolToken;\n\n    data = {\n      tokenName: this.tokenName,\n      lpMintAddress: this.lpMintAddress,\n      amountToken: zero,\n      amountSol: zero,\n      valueToken: zero,\n      valueSol: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public tokenName: string, public lpMintAddress: string, coingeckoId: string) {\n      this.sol.sol = true;\n      this.sol.coingeckoId = \"solana\";\n      this.token.sol = true;\n      this.token.coingeckoId = coingeckoId;\n    }\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.sol;\n    getData = () => this.data;\n    getAssets = () => [this.token, this.sol];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getAmounts = () => [\n      { asset: this.token, amount: this.data.amountToken, value: this.data.valueToken },\n      { asset: this.sol, amount: this.data.amountSol, value: this.data.valueSol },\n    ];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const lpAmount = await this.fetchLpAmount();\n      const lpInfo = await this.fetchLpInfo();\n\n      const totalLps = bn18(lpInfo.tokenAmountLp);\n      const totalTokens = bn18(lpInfo.tokenAmountCoin);\n      const totalSol = bn18(lpInfo.tokenAmountPc);\n\n      this.data.amountToken = totalTokens.times(lpAmount).div(totalLps);\n      this.data.amountSol = totalSol.times(lpAmount).div(totalLps);\n\n      this.data.valueToken = await this.oracle.valueOf(networks.sol.id, this.token, this.data.amountToken);\n      this.data.valueSol = await this.oracle.valueOf(networks.sol.id, this.sol, this.data.amountSol);\n\n      const totalTokensValue = await this.oracle.valueOf(networks.sol.id, this.token, totalTokens);\n      const totalSolValue = await this.oracle.valueOf(networks.sol.id, this.sol, totalSol);\n      this.data.tvl = totalTokensValue.plus(totalSolValue);\n    }\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n\n    async fetchLpInfo() {\n      const pairs = await fetch(\"https://api.raydium.io/v2/main/pairs\").then((x) => x.json());\n      return _.find(pairs, (p) => p.lpMint === this.lpMintAddress);\n    }\n\n    async fetchLpAmount() {\n      const response = await fetch(`https://api.mainnet-beta.solana.com`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          jsonrpc: \"2.0\",\n          id: 1,\n          method: \"getTokenAccountsByOwner\",\n          params: [this.args.address, { mint: this.lpMintAddress }, { encoding: \"jsonParsed\" }],\n        }),\n      }).then((it) => it.json());\n      const { amount, decimals } = response.result.value[0].account.data.parsed.info.tokenAmount;\n      return convertDecimals(amount, decimals, 18);\n    }\n  }\n}\n","import { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { TokenBalances } from \"./TokenBalances\";\nimport { Uniswap } from \"./Uniswap\";\nimport { OffChain } from \"./OffChain\";\nimport { AlphaHomora } from \"./AlphaHomora\";\nimport { Balancer } from \"./Balancer\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { TraderJoe } from \"./TraderJoe\";\nimport { Ribbon } from \"./Ribbon\";\nimport { LooksRare } from \"./LooksRare\";\nimport { SushiSwap } from \"./SushiSwap\";\nimport { Fodl } from \"./Fodl\";\nimport { QuickSwap } from \"./QuickSwap\";\nimport { Pangolin } from \"./Pangolin\";\nimport { Rook } from \"./Rook\";\nimport { Aave } from \"./Aave\";\nimport { SpookySwap } from \"./SpookySwap\";\nimport { SpiritSwap } from \"./SpiritSwap\";\nimport { Bitcoin } from \"./Bitcoin\";\nimport { Liquity } from \"./Liquity\";\nimport { Raydium } from \"./Raydium\";\n\nexport function registerAllPositions() {\n  OffChain.register();\n  TokenBalances.register();\n  Bitcoin.register();\n\n  Uniswap.register();\n  SushiSwap.register();\n  Pancakeswap.register();\n  Revault.register();\n  AlphaHomora.register();\n  Balancer.register();\n  ElrondMaiar.register();\n  TraderJoe.register();\n  Ribbon.register();\n  LooksRare.register();\n  Unicly.register();\n  Fodl.register();\n  Loops.register();\n  QuickSwap.register();\n  Pangolin.register();\n  Rook.register();\n  Aave.register();\n  SpookySwap.register();\n  SpiritSwap.register();\n  Liquity.register();\n  Raydium.register();\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { PositionArgs, PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport { registerAllPositions } from \"../positionsv1\";\nimport { BN, Token, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positionsv1/base/consts\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, PositionV1>,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string, input: string, name: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, input, name, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    update: (position: PositionV1, newArgs: PositionArgs) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = newArgs;\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions...\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p\n        .load()\n        .then(() => ((p as any).loaded = true))\n        .catch((e) => {\n          (p as any).loaded = false;\n          console.log(p.getArgs().type, e);\n        });\n    })\n  );\n  api.setState({ positions });\n  console.log(`...done loading ${network?.name}`);\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\n\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        name: p.getArgs().name || p.getName() || p.getArgs().type,\n        chain: p.getNetwork().name,\n        health: p.getHealth(),\n        marketValue: num(marketValue(p)),\n        pending: num(p.getPendingRewards().reduce((sum, v) => sum.plus(v.value), zero)),\n        tvl: num(p.getTVL()),\n        position: p,\n        address: p.getArgs().address,\n        loaded: !!(p as any).loaded,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nexport const useAllPositionsValuePerPosition = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.map(state.positions, (position) => ({ position, marketValue: Math.round(num(marketValue(position))) })),\n    (rows) => {\n      const sorted = _.sortBy(rows, (r) => -r.marketValue);\n      return {\n        labels: sorted.map((p) => p.position.getArgs().name || p.position.getName() || p.position.getArgs().type),\n        values: sorted.map((p) => p.marketValue),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerAssetClass = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .map((position) => position.getAmounts())\n        .flatten()\n        .value(),\n    (amounts) => {\n      const reduced = _(amounts)\n        .groupBy((a) => assetClass(a.asset))\n        .map((values, key) => ({ assetClass: key, value: _.reduce(values, (sum, a) => sum + num(a.value), 0) }))\n        .sortBy((v) => -v.value)\n        .value();\n      return {\n        labels: _.map(reduced, (ac) => ac.assetClass),\n        values: _.map(reduced, (ac) => Math.round(ac.value)),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerChain = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.groupBy(state.positions, (p) => p.getNetwork().name),\n    (grouped) => {\n      const totalPerChain = _(grouped)\n        .map((positions, chain) => ({\n          chain,\n          marketValue: Math.round(num(totalMarketValue(positions))),\n        }))\n        .sortBy((t) => -t.marketValue)\n        .value();\n      return {\n        labels: _.map(totalPerChain, (t) => t.chain),\n        values: _.map(totalPerChain, (t) => t.marketValue),\n        grandtotal: _.reduce(totalPerChain, (sum, t) => sum + t.marketValue, 0),\n      };\n    }\n  ),\n});\n\nfunction num(bn: BN) {\n  return bn.times(1000).idiv(1000).toNumber();\n}\n\nfunction marketValue(p: PositionV1) {\n  return _.reduce(p.getAmounts(), (sum, v) => sum.plus(v.value), zero);\n}\n\nfunction totalMarketValue(positions: PositionV1[]) {\n  return _.reduce(positions, (sum, pos) => sum.plus(marketValue(pos)), zero);\n}\n\nfunction assetClass(a: Token): string {\n  const ext = (a as any).symbol || (a as any).tokenId;\n  if (ext) return ext;\n  if (a.name.toLowerCase().includes(\"usd\") || [\"dai\", \"mai\", \"mim\"].includes(a.name.toLowerCase())) return \"USD\";\n  if (a.name.toLowerCase().includes(\"btc\")) return \"BTC\";\n  if (a.name.toLowerCase().includes(\"eth\")) return \"ETH\";\n  if (a.name.toLowerCase().includes(\"bnb\")) return \"BNB\";\n  if (a.name.toLowerCase().includes(\"avax\")) return \"AVAX\";\n  if (a.name.toLowerCase().includes(\"matic\")) return \"MATIC\";\n  if (a.name.toLowerCase().includes(\"ftm\")) return \"FTM\";\n  if ((a as any).bech32) return \"BTC\";\n  return a.name || a.address;\n}\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport _ from \"lodash\";\nimport { BN } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as PositionV1 | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: PositionV1) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        try {\n          const result = await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs));\n          showAlert(_.toString(result) || \"undefined\");\n        } catch (e: any) {\n          showAlert(_.toString(e));\n        }\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), fmtData),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      rawData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n\nfunction fmtData(data: any): any {\n  if (_.isArray(data)) return _.map(data, fmtData);\n  return data instanceof BN ? data.toFormat(3) : data;\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport _ from \"lodash\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    input: \"\",\n    name: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", input: \"\", name: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        address = _.trim(address);\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n\n    setInput:\n      (input: string) =>\n      async ({ setState }) => {\n        input = _.trim(input);\n        setState({ input });\n      },\n\n    setName:\n      (name: string) =>\n      async ({ setState }) => {\n        name = _.trim(name);\n        setState({ name });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address, state.input, state.name)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Name?\" onChange={(e) => actions.setName(e.target.value)} />}\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Input?\" onChange={(e) => actions.setInput(e.target.value)} />}\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions, useAllPositionsValuePerAssetClass, useAllPositionsValuePerChain, useAllPositionsValuePerPosition } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { Threat } from \"../positionsv1/base/PositionV1\";\nimport { ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { ArcElement, Chart as ChartJS, Legend, Tooltip } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\nimport { BN } from \"@defi.org/web3-candies\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst columns: GridColDef[] = [\n  { field: \"loaded\", headerName: \"🌐\", headerAlign: \"center\", width: 20, align: \"center\", valueFormatter: (v) => (v.value ? \"✅\" : \"❔\") },\n  { field: \"chain\", headerName: \"Chain\", headerAlign: \"center\", width: 120, align: \"left\" },\n  { field: \"name\", headerName: \"Position\", headerAlign: \"center\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"center\",\n    valueFormatter: (v) => {\n      if (!v.value || !(v.value as Threat[]).length) return \"🟢\";\n      return (v.value as Threat[]).map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"marketValue\",\n    headerName: \"Market Value\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + BN(v.value).toFormat(0),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + BN(v.value).toFormat(0),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    headerAlign: \"center\",\n    width: 130,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + BN(v.value).toFormat(0),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", headerAlign: \"center\", width: 450, align: \"left\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(undefined);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n  const [totalValuesPerChain] = useAllPositionsValuePerChain(undefined);\n  const [valuesPerPosition] = useAllPositionsValuePerPosition(undefined);\n  const [valuesPerAssetClass] = useAllPositionsValuePerAssetClass(undefined);\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <ListItemText>Total Market Value: $ {BN(totalValuesPerChain.grandtotal).toFormat()}</ListItemText>\n\n      <div style={{ display: \"flex\" }}>\n        <div>\n          <ListItemText>Value Per Chain:</ListItemText>\n          <Pie\n            data={{\n              labels: totalValuesPerChain.labels,\n              datasets: [\n                {\n                  data: totalValuesPerChain.values,\n                  backgroundColor: totalValuesPerChain.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Position:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerPosition.labels,\n              datasets: [\n                {\n                  data: valuesPerPosition.values,\n                  backgroundColor: valuesPerPosition.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Asset Class:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerAssetClass.labels,\n              datasets: [\n                {\n                  data: valuesPerAssetClass.values,\n                  backgroundColor: valuesPerAssetClass.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n      </div>\n\n      <br />\n\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <br />\n      <AddPositionBtn />\n    </div>\n  );\n};\n\nfunction colorOf(num: number) {\n  return bgColors[num % bgColors.length];\n}\n\nconst bgColors = [\n  \"#413d5e\",\n  \"#495371\",\n  \"#638c93\",\n  \"#98B4AA\",\n  \"#F1E0AC\", //\n];\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(undefined);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  // const updatePos = () => appStateActions.withLoading(() => allPositionsActions.update(selector.position!, selector.position!.getArgs())).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.rawData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.name || selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n          {selector.position?.getArgs()?.input && <DialogContentText>Input: {selector.position?.getArgs()?.input}</DialogContentText>}\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positionsv1/base/PositionV1\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}