{"version":3,"sources":["assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positionsv1/base/consts.ts","state/AppState.ts","positionsv1/base/PositionFactory.ts","ui/AppHeader.tsx","positionsv1/base/PriceOracle.ts","positionsv1/Pancakeswap.ts","positionsv1/base/PositionV1.ts","positionsv1/Loops.ts","positionsv1/Revault.ts","positionsv1/Unicly.ts","positionsv1/Fodl.ts","positionsv1/TokenBalances.ts","positionsv1/Uniswap.ts","positionsv1/OffChain.ts","positionsv1/AlphaHomora.ts","positionsv1/Balancer.ts","positionsv1/ElrondMaiar.ts","positionsv1/TraderJoe.ts","positionsv1/Ribbon.ts","positionsv1/LooksRare.ts","positionsv1/SushiSwap.ts","positionsv1/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx"],"names":["erc20s","_","merge","erc20sOrig","networks","networksOrig","egld","id","name","shortname","off","currentNetwork","a","netId","bn","window","ethereum","chainId","toNumber","console","log","find","n","sendWithTxType","tx","useLegacyTx","account","from","type","send","isNetworkDisabled","network","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","setState","_withLoading","showAlert","alert","clickNetwork","networkId","getState","_ethereum","removeAllListeners","on","_onConnect","request","method","_switchNetwork","t","message","stack","setWeb3Instance","Web3","Error","params","utils","numberToHex","useAppState","createHook","useIsAppConnected","selector","state","isAddress","useIsLoading","useAppActions","AppHeader","style","display","flexDirection","justifyContent","margin","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","map","ToggleButton","textTransform","disabled","coingeckoIds","eth","bsc","poly","arb","avax","oeth","PriceOracle","warm","prices","USD","ether","token","tokenId","symbol","address","price","this","getId","amount","isZero","fetchPricesElrond","fetchPrices","toString","zero","mul","div","positions","bynetwork","groupBy","getNetwork","coingeckoFetches","keys","filter","getAssets","concat","getRewardAssets","flatten","uniq","elrondFetch","Promise","all","addresses","isEmpty","coingeckoId","v","k","url","join","fetch","response","json","result","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","JSON","stringify","data","inputs","results","registry","oracle","isElrondAddress","startsWith","e","types","args","uniqueId","current","trim","length","isOffChainSymbol","PositionFactory","Severity","register","Farm","BUSD","WBNB","erc20","require","CAKE","BTCB","DOT","ADA","LINK","DOGE","LP","ORBS","asset0","asset1","lpToken","poolId","masterchef","contract","cake","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getName","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","encodeABI","deposit","then","total0","total1","val0","val1","add","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","aave","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","sub","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","owner","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","SingleVault","RevaStake","REVA","revault","chef","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","staking","pendingAmount","userPoolInfo","poolInfo","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","getxUNICRate","xunicrate","totalLPTokens","Unicly","XFodlStake","fodl","xfodl","myXfodl","xfodlTotalSupply","fodlStaked","Fodl","TokenBalance","mcap","nativeTokens","WMATIC","WAVAX","NativeTokenBalance","getBalance","forEach","input","TokenBalances","maxUint128","pow","subn","V3LP","WBTC","token1","IL_WARN","nftPositionManager","principal0","principal1","valueIfHodl","valueNow","ilValue","il","pending0","pending1","pendingValue0","pendingValue1","totalFeesValue","gt","High","pos","decreaseLiquidity","maxUint256","res","loadFromPositionGraph","loadTVL","fee","collect","position","pool","totalValueLockedUSD","depositedToken0","withdrawnToken0","depositedToken1","withdrawnToken1","principalValue0","principalValue1","collectedFeesToken0","collectedValue0","collectedFeesToken1","collectedValue1","factory","getPool","a0","a1","v0","v1","Uniswap","AssetPosition","zeroAddress","OffChain","LYF","WETHe","baseToken","alphaHomoraBank","maxHistoryBlocks","supply0","supply1","borrow0","borrow1","ilAmount","debtRatio","getPositionInfo","lpSupplied","collateralSize","nft","collToken","getUnderlyingToken","collId","totalLPs","share","getPositionDebts","debts","indexOf","totalValue0","totalValue1","AlphaHomora","DAI","USDT","overridePrice","balToken","bal","amounts","values","x","bpt","getPoolTokens","poolTokens","every","eqIgnoreCase","bptBalance","bptTotalSupply","balances","poolAmounts","poolValues","reduce","sum","b","Balancer","esdt","USDC_EGLD","assets","farm","L_USDC_EGLD","MEX_EGLD","L_MEX_EGLD","mex","lpBalanceStaked","getESDTs","getTotalSupply","farmEsdts","pairEsdts","totalLPSupply","totalLPStaked","tokenIdentifier","balance","asset0InPair","asset1InPair","asset0TotalValue","asset1TotalValue","esdts","lpNameSuffix","split","lps","MexFarm","MEX","L_MEX","totalAssetStaked","farmNftWrapper","creator","decimals","dec","get","ElrondMaiar","FarmStrategies","MexFarmStrategies","reward","pendingTokens","lpTotalSupply","lpAmount","pendingJoe","TraderJoe","ThetaVault","vaultAddress","strike","depositReceipts","unredeemedShares","liquidityGauge","pricePerShare","fbalance","fratio","staked","totalBalance","total","currentOption","bn9","Ribbon","Staking","AutoCompund","looks","checkPending","calculateSharesValueInLOOKS","calculatePendingRewards","totalShares","calculateSharePriceInLOOKS","stakedLooks","pendingEth","sharePrice","tvlAmount","LooksRare","getFarmContract","getRewardContract","pendingSushi","SushiSwap","Strategies","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","load","api","addPosition","create","update","newArgs","delete","posId","sendTransaction","harvest","warmup","shouldLoad","loaded","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","chain","health","marketValue","num","useAllPositions","useAllPositionsValuePerPosition","Math","round","rows","sorted","r","labels","useAllPositionsValuePerAssetClass","reduced","ext","includes","assetClass","key","ac","useAllPositionsValuePerChain","grouped","totalPerChain","totalMarketValue","grandtotal","to3","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","fmtData","positionMethods","selectedMethodArgTypes","rewardAssets","rawData","isArray","BN","fmt18","AddPositionDialogState","show","valid","allTypes","sort","setType","isValidArgs","setAddress","setInput","setName","useAddPositionDialog","AddPositionBtn","isConnected","Button","onClick","AddPositionDialog","appActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","ChartJS","ArcElement","Tooltip","Legend","columns","field","headerName","headerAlign","width","align","valueFormatter","commafy","toFixed","sortable","AllPositionsTable","appState","positionDialogActions","totalValuesPerChain","valuesPerPosition","valuesPerAssetClass","useEffect","height","ListItemText","datasets","backgroundColor","colorOf","responsive","plugins","legend","DataGrid","onCellClick","autoHeight","hideFooter","bgColors","PositionDialog","appStateActions","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","accept","hidden","addEventListener","file","files","reader","FileReader","onload","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById"],"mappings":"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","file":"static/js/main.4267fd80.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {});\n\nexport const networks = _.merge({}, networksOrig, {\n  egld: { id: -508, name: \"Elrond\", shortname: \"egld\" },\n  off: { id: -1, name: \"OffChain\", shortname: \"off\" },\n});\n\nexport async function currentNetwork() {\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positionsv1/base/consts\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./PositionV1\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => PositionV1;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): PositionV1 | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = _.uniqueId(args.type + \":\" + args.address + \"-\" + args.name + \"-\");\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: PositionV1, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return web3()?.utils?.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address) || isOffChainSymbol(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isOffChainSymbol(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:OffChain:Asset\") && _.trim(address).length > 0;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1 } from \"./PositionV1\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\nimport { OffChain } from \"../OffChain\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n  [networks.oeth.id]: \"optimistic-ethereum\",\n};\n\nexport class PriceOracle {\n  warm = false;\n  prices: Record<string, BN> = {\n    USD: ether,\n  };\n\n  getId(networkId: number, token: Token) {\n    if (networkId === networks.egld.id) return (token as ElrondMaiar.ESDT).tokenId;\n    if (networkId === networks.off.id) return (token as OffChain.Asset).symbol;\n    return token.address;\n  }\n\n  overridePrice(networkId: number, token: Token, price: BN) {\n    this.prices[this.getId(networkId, token)] = price;\n  }\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const id = this.getId(networkId, token);\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (networkId === networks.egld.id) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: PositionV1[]) {\n    if (this.warm) return;\n    this.warm = true;\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[networks.egld.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n\n    try {\n      const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n      const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(addresses, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PancakeswapMasterchefV2Abi } from \"../../typechain-abi/PancakeswapMasterchefV2Abi\";\nimport { PancakeswapLpAbi } from \"../../typechain-abi/PancakeswapLpAbi\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // https://docs.pancakeswap.finance/code/migration/masterchef-v2/list-of-farms\n\n  export function register() {\n    const lp_BUSD_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BUSD/BNB\", \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_BTCB_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BTCB/BNB\", \"0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_CAKE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP CAKE/BNB\", \"0x0eD7e52944161450477ee417DE9Cd3a859b14fD0\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ORBS_BUSD = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ORBS/BUSD\", \"0xB87b857670A44356f2b70337E0F218713D2378e8\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOT_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOT/BNB\", \"0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ADA_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ADA/BNB\", \"0x28415ff2C35b65B9E5c7de82126b4015ab9d031F\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_LINK_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP LINK/BNB\", \"0x824eb9faDFb377394430d2744fa7C42916DE3eCe\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOGE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOGE/BNB\", \"0xac109C8025F272414fd9e2faA805a583708A017f\", require(\"../abi/PancakeswapLpAbi.json\"));\n\n    PositionFactory.register({\n      \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), lp_BUSD_BNB(), 3),\n      \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), lp_CAKE_BNB(), 2),\n      \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), lp_BTCB_BNB(), 11),\n      \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), lp_DOT_BNB(), 5),\n      \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), lp_ADA_BNB(), 4),\n      \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), lp_LINK_BNB(), 6),\n      \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), lp_DOGE_BNB(), 37),\n\n      \"bsc:Pancakeswap:LP:ORBS/BUSD\": (args, oracle) => new LP(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), lp_ORBS_BUSD()),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<PancakeswapMasterchefV2Abi>(require(\"../abi/PancakeswapMasterchefV2Abi.json\"), \"0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652\");\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLpAbi,\n      public poolId: number\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n\n  class LP extends Farm {\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpToken: Token & PancakeswapLpAbi) {\n      super(args, oracle, asset0, asset1, lpToken, -1);\n    }\n\n    async load() {\n      const [total0, total1, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpToken.address).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpToken.address).call().then(this.asset1.mantissa),\n        this.lpToken.methods.totalSupply().call().then(this.lpToken.mantissa),\n      ]);\n      const amountLP = await this.lpToken.methods.balanceOf(this.args.address).call().then(this.lpToken.mantissa);\n      this.data.amount0 = total0.mul(amountLP).div(totalSupply);\n      this.data.amount1 = total1.mul(amountLP).div(totalSupply);\n\n      let val0, val1;\n      [this.data.value0, this.data.value1, val0, val1] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, total0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, total1),\n      ]);\n      this.data.tvl = val0.add(val1);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  address: string;\n  id: string;\n  input?: string;\n  name?: string;\n};\n\nexport interface PositionV1 {\n  getName(): string;\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number | BN[] };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { PositionV1, PositionArgs, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport type { AaveSAAVEAbi } from \"../../typechain-abi/AaveSAAVEAbi\";\nimport type { CompoundCTokenAbi } from \"../../typechain-abi/CompoundCTokenAbi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements PositionV1 {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20<AaveSAAVEAbi>(\"stkAAVE\", \"0x4da27a545c0c5B758a6BA100e3a049001de870f5\", require(\"../abi/AaveSAAVEAbi.json\"));\n    aave = erc20(\"AAVE\", \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\");\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH.sub(this.data.totalDebtETH),\n        value: this.data.totalCollateralValue.sub(this.data.totalDebtValue),\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20(\"Aave: aUSDC\", \"0xBcca60bB61934080951369a648Fb03DF4F96263C\");\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements PositionV1 {\n    WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL = 0.005; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20(\"COMP\", \"0xc00e94Cb662C3520282E6f5717214004A7f26888\");\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance.sub(this.data.borrowBalance),\n        value: this.data.supplyBalance.sub(this.data.borrowBalance),\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20<CompoundCTokenAbi>(\"Compound: cUSDC\", \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\", require(\"../abi/CompoundCTokenAbi.json\"));\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\nimport type { RevaultStakingAbi } from \"../../typechain-abi/RevaultStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Revault {\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.CAKE()),\n      \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.BUSD()),\n      \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    });\n    for (let i = 0; i < 4; i++) {\n      PositionFactory.register({\n        [`bsc:Revault:RevaStaking:x${i + 1}`]: (args, oracle) => new RevaStake(args, oracle, i),\n      });\n    }\n  }\n\n  const REVA = () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\");\n  const revaultFarm = () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\");\n  const revaultChef = () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\");\n  const revaStaking = () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\");\n\n  class SingleVault implements PositionV1 {\n    revault = revaultFarm();\n    chef = revaultChef();\n    reva = REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  class RevaStake implements PositionV1 {\n    staking = revaStaking();\n    reva = REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements PositionV1 {\n    xfarm = contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\");\n    unic = erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\");\n    xunic = erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\");\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, zero } from \"@defi.org/web3-candies\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\n\nexport namespace Fodl {\n  export class XFodlStake implements PositionV1 {\n    fodl = erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\");\n    xfodl = erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\");\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(bn),\n        this.xfodl.methods.totalSupply().call().then(bn),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(bn),\n      ]);\n      this.data.amount = myXfodl.mul(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport Web3 from \"web3\";\n\nexport namespace TokenBalances {\n  class TokenBalance implements PositionV1 {\n    data = {\n      name: \"\",\n      amount: zero,\n      value: zero,\n      totalSupply: zero,\n      mcap: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token: Token) {\n      token.name = args.name || token.name;\n    }\n\n    getName = () => this.data.name;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      [this.data.name, this.data.amount, this.data.totalSupply] = await Promise.all([\n        this.token.methods.name().call(),\n        this.token.methods.balanceOf(this.args.address).call().then(this.token.mantissa),\n        this.token.methods.totalSupply().call().then(this.token.mantissa),\n      ]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.mcap;\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  const nativeTokens = {\n    eth: () => _.merge(erc20s.eth.WETH(), { name: \"ETH\" }),\n    bsc: () => _.merge(erc20s.bsc.WBNB(), { name: \"BNB\" }),\n    poly: () => _.merge(erc20s.poly.WMATIC(), { name: \"MATIC\" }),\n    avax: () => _.merge(erc20s.avax.WAVAX(), { name: \"AVAX\" }),\n    arb: () => _.merge(erc20s.arb.WETH(), { name: \"AETH\" }),\n    oeth: () => _.merge(erc20s.oeth.WETH(), { name: \"ETH\" }),\n  };\n\n  class NativeTokenBalance extends TokenBalance {\n    getName = () => this.token.name;\n\n    async load() {\n      [this.data.amount, this.data.totalSupply] = await Promise.all([web3().eth.getBalance(this.args.address).then(bn), this.token.methods.totalSupply().call().then(bn)]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n  }\n\n  export function register() {\n    _.forEach(networks, (n) => {\n      if (n.id < 0) return;\n      PositionFactory.register({\n        [`${n.shortname}:Token`]: (args, oracle) => new TokenBalance(args, oracle, n, erc20(\"\", Web3.utils.toChecksumAddress(args.input!))),\n      });\n\n      const t = (nativeTokens as any)[n.shortname];\n      if (t) PositionFactory.register({ [`${n.shortname}:TokenBase`]: (args, oracle) => new NativeTokenBalance(args, oracle, n, t()) });\n    });\n  }\n}\n","import { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, ether, maxUint256, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { UniswapNftManagerAbi } from \"../../typechain-abi/UniswapNftManagerAbi\";\nimport _ from \"lodash\";\nimport { UniswapV3FactoryAbi } from \"../../typechain-abi/UniswapV3FactoryAbi\";\n\nconst maxUint128 = bn(2).pow(bn(128)).subn(1).toString();\n\nexport namespace Uniswap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.WBTC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:USDC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH()),\n\n      \"poly:Uniswap:V3LP:MATIC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.poly, erc20s.poly.WMATIC(), erc20s.poly.WETH()),\n\n      \"oeth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.oeth, erc20s.oeth.WETH(), erc20s.oeth.WBTC()),\n    });\n  }\n\n  class V3LP implements PositionV1 {\n    IL_WARN = bn18(1 / 100);\n\n    nftPositionManager = contract<UniswapNftManagerAbi>(require(\"../abi/UniswapNftManagerAbi.json\"), \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\");\n\n    data = {\n      id: 0,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      principal0: zero,\n      principal1: zero,\n      valueIfHodl: zero,\n      valueNow: zero,\n      ilValue: zero,\n      il: zero,\n      pending0: zero,\n      pending1: zero,\n      pendingValue0: zero,\n      pendingValue1: zero,\n      totalFeesValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!) || 0;\n      if (this.data.id <= 0) throw new Error(\"unknown positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [this.token0, this.token1];\n    getPendingRewards = () => [\n      { asset: this.token0, amount: this.data.pending0, value: this.data.pendingValue0 },\n      { asset: this.token1, amount: this.data.pending1, value: this.data.pendingValue1 },\n    ];\n    getHealth = () => {\n      if (this.data.ilValue.gt(this.data.totalFeesValue) || this.data.il.gt(this.IL_WARN))\n        return [\n          {\n            severity: Severity.High,\n            message: \"IL!\",\n          },\n        ];\n      return [];\n    };\n\n    async load() {\n      const pos = await this.nftPositionManager.methods.positions(this.data.id).call();\n      if (web3().utils.toChecksumAddress(pos.token0) !== web3().utils.toChecksumAddress(this.token0.address)) throw new Error(`invalid tokens for pos, ${JSON.stringify(pos)}`);\n\n      const res = await this.nftPositionManager.methods.decreaseLiquidity([this.data.id, pos.liquidity, 0, 0, maxUint256]).call({ from: this.args.address });\n      this.data.amount0 = await this.token0.mantissa(res.amount0);\n      this.data.amount1 = await this.token1.mantissa(res.amount1);\n\n      [this.data.value0, this.data.value1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.amount0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.amount1),\n      ]);\n\n      if (this.getNetwork().id === networks.eth.id) await this.loadFromPositionGraph();\n\n      if (this.data.tvl.isZero()) await this.loadTVL(parseInt(pos.fee));\n    }\n\n    getContractMethods = () => _.functions(this.nftPositionManager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      alert(`target:\\n${this.nftPositionManager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]), useLegacyTx);\n    }\n\n    async loadFromPositionGraph() {\n      const response = await fetch(\"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: `{position(id:${this.data.id}) {\n          depositedToken0\n          depositedToken1\n          withdrawnToken0\n          withdrawnToken1\n          collectedFeesToken0\n          collectedFeesToken1\n          pool {\n            id\n            totalValueLockedUSD\n          }\n        }\n      }`,\n        }),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      this.data.tvl = bn18(json.data.position.pool.totalValueLockedUSD);\n      this.data.principal0 = bn18(json.data.position.depositedToken0).sub(bn18(json.data.position.withdrawnToken0));\n      this.data.principal1 = bn18(json.data.position.depositedToken1).sub(bn18(json.data.position.withdrawnToken1));\n\n      const [principalValue0, principalValue1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.principal0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.principal1),\n      ]);\n      this.data.valueIfHodl = principalValue0.add(principalValue1);\n      this.data.valueNow = this.data.value0.add(this.data.value1);\n      this.data.ilValue = this.data.valueIfHodl.sub(this.data.valueNow);\n      this.data.il = ether.sub(this.data.valueNow.mul(ether).div(this.data.valueIfHodl));\n      const pending = await this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]).call({ from: this.args.address });\n      this.data.pending0 = await this.token0.mantissa(pending.amount0);\n      this.data.pending1 = await this.token1.mantissa(pending.amount1);\n      this.data.pendingValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.pending0);\n      this.data.pendingValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.pending1);\n      const collectedValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, bn18(json.data.position.collectedFeesToken0));\n      const collectedValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, bn18(json.data.position.collectedFeesToken1));\n\n      this.data.totalFeesValue = this.data.pendingValue0.add(this.data.pendingValue1).add(collectedValue0).add(collectedValue1);\n    }\n\n    async loadTVL(fee: number) {\n      const factory = contract<UniswapV3FactoryAbi>(require(\"../abi/UniswapV3FactoryAbi.json\"), await this.nftPositionManager.methods.factory().call());\n      const pool = await factory.methods.getPool(this.token0.address, this.token1.address, fee).call();\n      const [a0, a1] = await Promise.all([\n        this.token0.methods.balanceOf(pool).call().then(this.token0.mantissa),\n        this.token1.methods.balanceOf(pool).call().then(this.token1.mantissa),\n      ]);\n      const [v0, v1] = await Promise.all([this.oracle.valueOf(this.network.id, this.token0, a0), this.oracle.valueOf(this.network.id, this.token1, a1)]);\n      this.data.tvl = v0.add(v1);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn18, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace OffChain {\n  export function register() {\n    PositionFactory.register({\n      \"x:OffChain:Asset\": (args, oracle) => new AssetPosition(args, oracle),\n    });\n  }\n\n  export type Asset = Token & { symbol: string };\n\n  class AssetPosition implements PositionV1 {\n    token: Asset;\n    data = {\n      amount: zero,\n      value: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.input) throw new Error(\"input amount required\");\n      if (!args.address) throw new Error(\"address symbol required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { symbol: args.address });\n      this.data.amount = bn18(args.input);\n    }\n\n    getName = () => `OffChain:${this.token.name}`;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.off;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => zero;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks } from \"./base/consts\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport type { AlphaHomoraBankAbi } from \"../../typechain-abi/AlphaHomoraBankAbi\";\nimport { AlphaHomoraJoeFarmAbi } from \"../../typechain-abi/AlphaHomoraJoeFarmAbi\";\nimport _ from \"lodash\";\n\nexport namespace AlphaHomora {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AlphaHomora:WETHe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class LYF implements PositionV1 {\n    baseToken = erc20s.avax.WAVAX();\n    alphaHomoraBank = contract<AlphaHomoraBankAbi>(require(\"../abi/AlphaHomoraBankAbi.json\"), \"0x376d16C7dE138B01455a51dA79AD65806E9cd694\");\n    maxHistoryBlocks = {\n      [networks.avax.id]: 10_000_000,\n    };\n\n    data = {\n      id: 0,\n      supply0: zero,\n      supply1: zero,\n      borrow0: zero,\n      borrow1: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      pending: zero,\n      pendingValue: zero,\n      tvl: zero,\n      valueIfHodl: zero,\n      ilAmount: zero,\n      il: zero,\n      debtRatio: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!);\n      if (!this.data.id) throw new Error(\"invalid input positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => networks.avax;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n\n    async load() {\n      const pos = await this.alphaHomoraBank.methods.getPositionInfo(this.data.id).call();\n      const lpSupplied = bn(pos.collateralSize);\n      const nft = contract<AlphaHomoraJoeFarmAbi>(require(\"../abi/AlphaHomoraJoeFarmAbi.json\"), pos.collToken);\n      const lpToken = erc20(\"\", await nft.methods.getUnderlyingToken(pos.collId).call());\n      const totalLPs = await lpToken.methods.totalSupply().call().then(bn);\n      const share = lpSupplied.mul(ether).div(totalLPs);\n      const total0 = await this.token0.methods.balanceOf(lpToken.address).call().then(bn);\n      const total1 = await this.token1.methods.balanceOf(lpToken.address).call().then(bn);\n      this.data.supply0 = total0.mul(share).div(ether);\n      this.data.supply1 = total1.mul(share).div(ether);\n\n      const debts = await this.alphaHomoraBank.methods.getPositionDebts(this.data.id).call();\n      this.data.borrow0 = bn(debts.debts[_.indexOf(debts.tokens, this.token0.address)]);\n      this.data.borrow1 = bn(debts.debts[_.indexOf(debts.tokens, this.token1.address)]);\n\n      this.data.amount0 = this.data.supply0.sub(this.data.borrow0);\n      this.data.amount1 = this.data.supply1.sub(this.data.borrow1);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.amount1);\n\n      const totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, total0);\n      const totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, total1);\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    //     private async loadDeposits() {\n    //       const depositAbi = _(this.alphaHomoraBank.options.jsonInterface).find((x) => x.type === \"function\" && x.name === \"execute\")!;\n    //       const depositSig = web3().eth.abi.encodeFunctionSignature(depositAbi);\n    //\n    //       const currentBlock = await web3().eth.getBlockNumber();\n    //       const earliestBlock = currentBlock - this.maxHistoryBlocks[this.getNetwork().id];\n    //\n    //       const apiKey = \"\";\n    //       const alltxsResponse = await fetch(`https://api.snowtrace.io/api?module=account&action=txlist\n    // &fromBlock=${earliestBlock}\n    // &toBlock=${currentBlock}\n    // &address=${this.args.address}\n    // &sort=asc&apikey=${apiKey}`);\n    //       const alltxs = await alltxsResponse.json();\n    //       const relevantTxs = _.filter(alltxs.result, (tx) => eqIgnoreCase(tx.to, this.alphaHomoraBank.options.address) && tx.input.startsWith(depositSig));\n    //       if (relevantTxs.length !== 1) {\n    //         console.error(\"no / too many deposits\");\n    //         return;\n    //       }\n    //       const deposit = relevantTxs[0];\n    //       const receipt = await web3().eth.getTransactionReceipt(deposit.hash);\n    //       const events = parseEvents(receipt, this.token0);\n    //\n    //       const depositEvent = events.find((e) => e.event === \"Transfer\" && eqIgnoreCase(e.address, this.token0.address) && eqIgnoreCase(e.returnValues.from, this.args.address))!;\n    //       const deposit0 = bn(depositEvent.returnValues.value);\n    //       const deposit1 = _.reduce(relevantTxs, (sum, tx) => sum.add(bn(tx.value)), zero);\n    //       const valueNow0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, deposit0);\n    //       const valueNow1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, deposit1);\n    //\n    //       this.data.valueIfHodl = valueNow0.add(valueNow1);\n    //       const valueNow = this.data.value0.add(this.data.value1);\n    //       this.data.ilAmount = this.data.valueIfHodl.sub(valueNow);\n    //       this.data.il = ether.sub(valueNow.mul(ether).div(this.data.valueIfHodl));\n    //     }\n\n    //   private async loadDebtRatio() {\n    //     /*\n    //       struct TokenFactors {\n    //     uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //     uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //     uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    //     mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // }\n    //        */\n    //\n    //     /*\n    //       struct TokenFactors {\n    //   uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //   uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //   uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    // }\n    //\n    // IBaseOracle public immutable source; // Main oracle source\n    // mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // mapping(address => bool) public whitelistERC1155; // Mapping from token address to whitelist status\n    //      */\n    //     const proxyOracleAbi: Abi = [\n    //       {\n    //         name: \"tokenFactors\",\n    //         type: \"function\",\n    //         stateMutability: \"view\",\n    //         inputs: [\n    //           {\n    //             internalType: \"address\",\n    //             name: \"token\",\n    //             type: \"address\",\n    //           },\n    //         ],\n    //         outputs: [\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"borrowFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"collateralFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"liqIncentive\",\n    //             type: \"uint256\",\n    //           },\n    //         ],\n    //       },\n    //     ];\n    //     const o = contract(proxyOracleAbi, await this.alphaHomoraBank.methods.oracle().call());\n    //     const f0 = bn((await o.methods.tokenFactors(this.token0.address).call()).borrowFactor).toNumber() / 1e4;\n    //     const f1 = bn((await o.methods.tokenFactors(this.token1.address).call()).borrowFactor).toNumber() / 1e4;\n    //     console.log(f0, f1);\n    //   }\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { bn, contract, eqIgnoreCase, erc20, ether, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { BalancerV2VaultAbi } from \"../../typechain-abi/BalancerV2VaultAbi\";\n\nexport namespace Balancer {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Balancer:WBTC/ETH\": (args, oracle) =>\n        new Farm(args, oracle, networks.eth, [erc20s.eth.WBTC(), erc20s.eth.WETH()], \"0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e\"),\n      \"poly:Balancer:USDC/DAI/MAI/USDT\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.USDC(), erc20s.poly.DAI(), erc20(\"MAI\", \"0xa3Fa99A148fA48D14Ed51d610c367C61876997F1\"), erc20s.poly.USDT()],\n          \"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012\"\n        ),\n      \"arb:Balancer:MAI/USDT/USDC\": (args, oracle) => {\n        oracle.overridePrice(networks.arb.id, erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"), ether);\n        return new Farm(\n          args,\n          oracle,\n          networks.arb,\n          [\n            erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"),\n            erc20(\"USDT\", \"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9\"),\n            erc20(\"USDC\", \"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8\"),\n          ],\n          \"0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d\"\n        );\n      },\n    });\n  }\n\n  const balToken = {\n    [networks.eth.id]: () => erc20(\"BAL\", \"0xba100000625a3754423978a60c9317c58a424e3D\"),\n    [networks.poly.id]: () => erc20(\"BAL\", \"0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3\"),\n    [networks.arb.id]: () => erc20(\"BAL\", \"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8\"),\n  };\n\n  const balV2 = () => contract<BalancerV2VaultAbi>(require(\"../abi/BalancerV2VaultAbi.json\"), \"0xBA12222222228d8Ba445958a75a0704d566BF2C8\");\n\n  class Farm implements PositionV1 {\n    vault = balV2();\n    bal = balToken[this.network.id]();\n\n    data = {\n      amounts: [] as BN[],\n      values: [] as BN[],\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public tokens: Token[], public poolId: string) {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => this.tokens;\n    getAmounts = () => _.map(this.tokens, (asset, i) => ({ asset, amount: this.data.amounts[i] || zero, value: this.data.values[i] || zero }));\n    getRewardAssets = () => [this.bal];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n\n    async load() {\n      const bpt = erc20(\n        \"BPT\",\n        await this.vault.methods\n          .getPool(this.poolId)\n          .call()\n          .then((x) => x[\"0\"])\n      );\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      const [bptBalance, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.args.address).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.add(bn(b)), zero);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { bn, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { networks } from \"./base/consts\";\n\nexport namespace ElrondMaiar {\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    MEX_EGLD: () => esdt(\"MEX/EGLD LP\", \"EGLDMEX-0be9e5\", 18),\n    USDC_EGLD: () => esdt(\"USDC/EGLD LP\", \"EGLDUSDC-594e5e\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string; lp: ESDT };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    L_USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\",\n      lp: tokens.MEX_EGLD(),\n    }),\n    L_MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\",\n      lp: tokens.MEX_EGLD(),\n    }),\n  };\n\n  class Farm implements PositionV1 {\n    mex = tokens.MEX();\n\n    data = {\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.egld;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () =>\n      this.getAssets().length > 1\n        ? [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n            {\n              asset: this.getAssets()[1],\n              amount: this.data.amount1,\n              value: this.data.value1,\n            },\n          ]\n        : [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n          ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [asset0, asset1] = this.getAssets();\n      const [farmEsdts, pairEsdts, totalLPSupply] = await Promise.all([getESDTs(this.strategy.farm), getESDTs(this.strategy.pool), getTotalSupply(this.strategy.lp)]);\n      const totalLPStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === this.strategy.lp.tokenId)!.balance);\n      const asset0InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset0.tokenId)!.balance);\n      const asset1InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset1.tokenId)!.balance);\n      const asset0TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset0, totalLPStaked.mul(asset0InPair).div(totalLPSupply));\n      const asset1TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset1, totalLPStaked.mul(asset1InPair).div(totalLPSupply));\n      this.data.tvl = asset0TotalValue.add(asset1TotalValue);\n\n      const esdts = await getESDTs(this.args.address);\n      const lpNameSuffix = this.strategy.lp.tokenId.split(\"-\")[0];\n      const lps = _.find(esdts, (t) => t.tokenIdentifier.startsWith(lpNameSuffix));\n      if (!lps) return;\n\n      this.data.lpBalanceStaked = bn(lps!.balance);\n      this.data.amount0 = this.data.lpBalanceStaked.mul(asset0InPair).div(totalLPSupply);\n      this.data.amount1 = this.data.lpBalanceStaked.mul(asset1InPair).div(totalLPSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, asset1, this.data.amount1);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\",\n      lp: tokens.MEX(),\n    }),\n    L_MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\",\n      lp: tokens.LKMEX(),\n    }),\n  };\n\n  class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as Strategy).lp];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const asset = this.getAssets()[0];\n\n      const farmEsdts = await getESDTs(this.strategy.farm);\n      const totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      this.data.tvl = await this.oracle.valueOf(networks.egld.id, asset, totalAssetStaked);\n\n      const esdts = await getESDTs(this.args.address);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === this.strategy.pool.toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n\n      this.data.amount0 = bn(farmNftWrapper.balance.toString());\n      this.data.value0 = await this.oracle.valueOf(networks.egld.id, asset, this.data.amount0);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  async function getESDTs(address: string) {\n    const response = await fetch(`https://gateway.elrond.com/address/${address}/esdt`);\n    const json = await response.json();\n    return _.get(json, [\"data\", \"esdts\"], []);\n  }\n\n  async function getTotalSupply(token: ESDT) {\n    const response = await fetch(`https://gateway.elrond.com/network/esdt/supply/${token.tokenId}`);\n    const json = await response.json();\n    return bn(_.get(json, [\"data\", \"supply\"], \"0\"));\n  }\n\n  export function register() {\n    PositionFactory.register({\n      \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n      \"egld:Maiar:LFarm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_USDC_EGLD()),\n      \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n      \"egld:Maiar:LFarm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_MEX_EGLD()),\n      \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n      \"egld:Maiar:MEXLFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.L_MEX()),\n    });\n  }\n\n  // export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n  //   const assets = _.map(tokens, (t) => t());\n\n  // https://gateway.elrond.com/address/:bech32Address/balance\n\n  // const [esdts, balanceEGLD] = await Promise.all([getESDTs(address), provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString()))]);\n\n  // const balances = await Promise.all(\n  //   _(esdts)\n  //     .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n  //     .filter((t) => !!t.asset)\n  //     .map(async (t) => {\n  //       const amount = to18(t.esdt.balance, t.asset!.dec);\n  //       return {\n  //         asset: t.asset!,\n  //         amount,\n  //         value: await oracle.valueOf(networks.egld.id, t.asset!, amount),\n  //       };\n  //     })\n  //     .value()\n  // );\n\n  // balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(networks.egld.id, tokens.EGLD(), balanceEGLD) });\n\n  // return balances;\n  // }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n\n// farms v2:\n// EGLD/MEX => MEX : erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\n// EGLD/MEX => LKMEX: erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\n// EGLD/USDC => MEX: erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\n// EGLD/USDC => LKMEX: erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\n// MEX => MEX: erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\n// MEX => LKMEX: erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\n","import _ from \"lodash\";\nimport type { TraderJoeFarmAbi } from \"../../typechain-abi/TraderJoeFarmAbi\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace TraderJoe {\n  export function register() {\n    PositionFactory.register({\n      \"avax:TraderJoe:Farm:WETH/AVAX\": (args, oracle) => new Farm(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX(), 26),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<TraderJoeFarmAbi>(require(\"../abi/TraderJoeFarmAbi.json\"), \"0xd6a4F121CA35509aF06A0Be99093d08462f53052\");\n    reward = erc20(\"JOE\", \"0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd\");\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingTokens(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken);\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.mul(lpStaked).div(lpTotalSupply))).add(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.mul(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending.pendingJoe);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn9, contract, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { RibbonThetaVaultAbi } from \"../../typechain-abi/RibbonThetaVaultAbi\";\nimport type { RibbonGaugeAbi } from \"../../typechain-abi/RibbonGaugeAbi\";\n\nexport namespace Ribbon {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Ribbon:T-CC:ETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x25751853Eab4D0eB3652B5eB6ecB102A2789644B\"),\n      \"eth:Ribbon:T-CC:stETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x53773E034d9784153471813dacAFF53dBBB78E8c\"),\n      \"eth:Ribbon:T-CC:WBTC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WBTC(), \"0x65a833afDc250D9d38f8CD9bC2B1E3132dB13B2F\"),\n      \"eth:Ribbon:T-CSP:yvUSDC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.USDC(), \"0xCc323557c71C0D1D20a1861Dc69c06C5f3cC9624\"),\n    });\n  }\n\n  class ThetaVault implements PositionV1 {\n    vault = contract<RibbonThetaVaultAbi>(require(\"../abi/RibbonThetaVaultAbi.json\"), this.vaultAddress);\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      strike: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset: Token, public vaultAddress: string) {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.asset];\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n\n    async load() {\n      const { amount, unredeemedShares } = await this.vault.methods.depositReceipts(this.args.address).call();\n      this.data.amount = await this.asset.mantissa(bn(amount).add(bn(unredeemedShares)));\n\n      const farm = contract<RibbonGaugeAbi>(require(\"../abi/RibbonGaugeAbi.json\"), await this.vault.methods.liquidityGauge().call());\n      const [fbalance, fratio] = await Promise.all([farm.methods.balanceOf(this.args.address).call().then(bn), this.vault.methods.pricePerShare().call().then(bn)]);\n      const staked = await this.asset.mantissa(fbalance.mul(fratio).div(await this.asset.amount(1)));\n      this.data.amount = this.data.amount.add(staked);\n\n      this.data.value = await this.oracle.valueOf(this.network.id, this.asset, this.data.amount);\n\n      const total = await this.asset.mantissa(await this.vault.methods.totalBalance().call());\n      this.data.tvl = await this.oracle.valueOf(this.network.id, this.asset, total);\n\n      const currentOption = contract(require(\"../abi/RibbonOptionAbi.json\"), await this.vault.methods.currentOption().call());\n      this.data.strike = bn9(await currentOption.methods[\"strikePrice()\"]().call()).muln(10);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, ether, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { LooksrareStakingAbi } from \"../../typechain-abi/LooksrareStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace LooksRare {\n  export function register() {\n    PositionFactory.register({\n      \"eth:LooksRare:LooksStaking\": (args, oracle) => new Staking(args, oracle),\n      \"eth:LooksRare:LooksAutoCompound\": (args, oracle) => new AutoCompund(args, oracle),\n    });\n  }\n\n  class Staking implements PositionV1 {\n    eth = erc20s.eth.WETH();\n    looks = erc20(\"LOOKS\", \"0xf4d2888d29D722226FafA5d9B24F9164c092421E\");\n    vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0xBcD7254A1D759EFA08eC7c3291B2E85c5dCC12ce\");\n    checkPending = true;\n\n    data = {\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getNetwork = () => networks.eth;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.looks];\n    getAmounts = () => [{ asset: this.looks, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.eth];\n    getPendingRewards = () => [{ asset: this.eth, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const [stakedLooks, pendingEth, totalShares, sharePrice] = await Promise.all([\n        this.vault.methods.calculateSharesValueInLOOKS(this.args.address).call().then(bn),\n        this.checkPending ? this.vault.methods.calculatePendingRewards(this.args.address).call().then(bn) : zero,\n        this.vault.methods.totalShares().call().then(bn),\n        this.vault.methods.calculateSharePriceInLOOKS().call().then(bn),\n      ]);\n      this.data.amount = stakedLooks;\n      this.data.pendingAmount = pendingEth;\n      const tvlAmount = totalShares.mul(sharePrice).div(ether);\n\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.looks, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.looks, tvlAmount),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class AutoCompund extends Staking {\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      super(args, oracle);\n      this.vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0x3ab16Af1315dc6C95F83Cbf522fecF98D00fd9ba\");\n      this.checkPending = false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, Contract, contract, erc20, erc20s, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { SushiswapMinichefAbi } from \"../../typechain-abi/SushiswapMinichefAbi\";\n\nexport namespace SushiSwap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:SushiSwap:Farm:USDC/ETH\": (args, oracle) => new Farm(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH(), 1),\n      \"poly:SushiSwap:Farm:ETH/MATIC\": (args, oracle) => new Farm(args, oracle, networks.poly, erc20s.poly.WETH(), erc20s.poly.WMATIC(), 0),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = getFarmContract(this.network);\n    reward = getRewardContract(this.network);\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingSushi(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken || (await this.masterchef.methods.lpToken(this.poolId).call()));\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.mul(lpStaked).div(lpTotalSupply))).add(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.mul(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      const tx = this.network.id === networks.poly.id ? this.masterchef.methods.deposit(this.poolId, 0, this.args.address) : this.masterchef.methods.deposit(this.poolId, 0);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n  }\n\n  function getFarmContract(network: Network): Contract {\n    switch (network.shortname) {\n      case \"poly\":\n        return contract<SushiswapMinichefAbi>(require(\"../abi/SushiswapMinichefAbi.json\"), \"0x0769fd68dFb93167989C6f7254cd0D766Fb2841F\");\n      case \"eth\":\n      default:\n        return contract(require(\"../abi/SushiswapMasterchefAbi.json\"), \"\");\n    }\n  }\n\n  function getRewardContract(network: Network) {\n    switch (network.shortname) {\n      case \"poly\":\n        return erc20(\"SUSHI\", \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\");\n      case \"eth\":\n      default:\n        return erc20(\"SUSHI\", \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\");\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { Fodl } from \"./Fodl\";\nimport { TokenBalances } from \"./TokenBalances\";\nimport { Uniswap } from \"./Uniswap\";\nimport { OffChain } from \"./OffChain\";\nimport { AlphaHomora } from \"./AlphaHomora\";\nimport { Balancer } from \"./Balancer\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { TraderJoe } from \"./TraderJoe\";\nimport { Ribbon } from \"./Ribbon\";\nimport { LooksRare } from \"./LooksRare\";\nimport { SushiSwap } from \"./SushiSwap\";\n\nexport function registerAllPositions() {\n  OffChain.register();\n  TokenBalances.register();\n\n  Uniswap.register();\n  SushiSwap.register();\n  Pancakeswap.register();\n  Revault.register();\n  AlphaHomora.register();\n  Balancer.register();\n  ElrondMaiar.register();\n  TraderJoe.register();\n  Ribbon.register();\n  LooksRare.register();\n\n  PositionFactory.register({\n    \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { PositionV1, PositionArgs } from \"../positionsv1/base/PositionV1\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport { registerAllPositions } from \"../positionsv1\";\nimport { to3, Token, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positionsv1/base/consts\";\nimport BN from \"bn.js\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, PositionV1>,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string, input: string, name: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, input, name, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    update: (position: PositionV1, newArgs: PositionArgs) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = newArgs;\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions...\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p\n        .load()\n        .then(() => ((p as any).loaded = true))\n        .catch((e) => {\n          (p as any).loaded = false;\n          console.log(p.getArgs().type, e);\n        });\n    })\n  );\n  api.setState({ positions });\n  console.log(`...done loading ${network?.name}`);\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\n\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        name: p.getArgs().name || p.getName() || p.getArgs().type,\n        chain: p.getNetwork().name,\n        health: p.getHealth(),\n        marketValue: num(marketValue(p)),\n        pending: num(p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero)),\n        tvl: num(p.getTVL()),\n        position: p,\n        address: p.getArgs().address,\n        loaded: !!(p as any).loaded,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nexport const useAllPositionsValuePerPosition = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.map(state.positions, (position) => ({ position, marketValue: Math.round(num(marketValue(position))) })),\n    (rows) => {\n      const sorted = _.sortBy(rows, (r) => -r.marketValue);\n      return {\n        labels: sorted.map((p) => p.position.getArgs().name || p.position.getName() || p.position.getArgs().type),\n        values: sorted.map((p) => p.marketValue),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerAssetClass = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .map((position) => position.getAmounts())\n        .flatten()\n        .value(),\n    (amounts) => {\n      const reduced = _(amounts)\n        .groupBy((a) => assetClass(a.asset))\n        .map((values, key) => ({ assetClass: key, value: _.reduce(values, (sum, a) => sum + num(a.value), 0) }))\n        .sortBy((v) => -v.value)\n        .value();\n      return {\n        labels: _.map(reduced, (ac) => ac.assetClass),\n        values: _.map(reduced, (ac) => Math.round(ac.value)),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerChain = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.groupBy(state.positions, (p) => p.getNetwork().name),\n    (grouped) => {\n      const totalPerChain = _(grouped)\n        .map((positions, chain) => ({\n          chain,\n          marketValue: Math.round(num(totalMarketValue(positions))),\n        }))\n        .sortBy((t) => -t.marketValue)\n        .value();\n      return {\n        labels: _.map(totalPerChain, (t) => t.chain),\n        values: _.map(totalPerChain, (t) => t.marketValue),\n        grandtotal: _.reduce(totalPerChain, (sum, t) => sum + t.marketValue, 0),\n      };\n    }\n  ),\n});\n\nfunction num(bn: BN) {\n  return to3(bn, 18).toNumber() / 1000;\n}\n\nfunction marketValue(p: PositionV1) {\n  return _.reduce(p.getAmounts(), (sum, v) => sum.add(v.value), zero);\n}\n\nfunction totalMarketValue(positions: PositionV1[]) {\n  return _.reduce(positions, (sum, pos) => sum.add(marketValue(pos)), zero);\n}\n\nfunction assetClass(a: Token): string {\n  const ext = (a as any).symbol || (a as any).tokenId;\n  if (ext) return ext;\n  if (a.name.toLowerCase().includes(\"usd\") || [\"dai\", \"mai\", \"mim\"].includes(a.name.toLowerCase())) return \"USD\";\n  if (a.name.toLowerCase().includes(\"btc\")) return \"BTC\";\n  if (a.name.toLowerCase().includes(\"eth\")) return \"ETH\";\n  if (a.name.toLowerCase().includes(\"bnb\")) return \"BNB\";\n  if (a.name.toLowerCase().includes(\"avax\")) return \"AVAX\";\n  if (a.name.toLowerCase().includes(\"matic\")) return \"MATIC\";\n  if (a.name.toLowerCase().includes(\"ftm\")) return \"FTM\";\n  return a.name || a.address;\n}\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as PositionV1 | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: PositionV1) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        try {\n          const result = await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs));\n          showAlert(_.toString(result) || \"undefined\");\n        } catch (e: any) {\n          showAlert(_.toString(e));\n        }\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), fmtData),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      rawData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n\nfunction fmtData(data: any): any {\n  if (_.isArray(data)) return _.map(data, fmtData);\n  return data instanceof BN ? fmt18(data) : data;\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport _ from \"lodash\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    input: \"\",\n    name: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", input: \"\", name: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        address = _.trim(address);\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n\n    setInput:\n      (input: string) =>\n      async ({ setState }) => {\n        input = _.trim(input);\n        setState({ input });\n      },\n\n    setName:\n      (name: string) =>\n      async ({ setState }) => {\n        name = _.trim(name);\n        setState({ name });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address, state.input, state.name)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Name?\" onChange={(e) => actions.setName(e.target.value)} />}\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Input?\" onChange={(e) => actions.setInput(e.target.value)} />}\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions, useAllPositionsValuePerAssetClass, useAllPositionsValuePerChain, useAllPositionsValuePerPosition } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positionsv1/base/PositionV1\";\nimport { ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { ArcElement, Chart as ChartJS, Legend, Tooltip } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst columns: GridColDef[] = [\n  { field: \"loaded\", headerName: \"🌐\", headerAlign: \"center\", width: 20, align: \"center\", valueFormatter: (v) => (v.value ? \"✅\" : \"❔\") },\n  { field: \"chain\", headerName: \"Chain\", headerAlign: \"center\", width: 120, align: \"left\" },\n  { field: \"name\", headerName: \"Position\", headerAlign: \"center\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"center\",\n    valueFormatter: (v) => {\n      if (!v.value || !(v.value as Threat[]).length) return \"🟢\";\n      return (v.value as Threat[]).map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"marketValue\",\n    headerName: \"Market Value\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    headerAlign: \"center\",\n    width: 120,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", headerAlign: \"center\", width: 450, align: \"left\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n  const [totalValuesPerChain] = useAllPositionsValuePerChain(null);\n  const [valuesPerPosition] = useAllPositionsValuePerPosition(null);\n  const [valuesPerAssetClass] = useAllPositionsValuePerAssetClass(null);\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <ListItemText>Total Market Value: $ {commafy(totalValuesPerChain.grandtotal)}</ListItemText>\n\n      <div style={{ display: \"flex\" }}>\n        <div>\n          <ListItemText>Value Per Chain:</ListItemText>\n          <Pie\n            data={{\n              labels: totalValuesPerChain.labels,\n              datasets: [\n                {\n                  data: totalValuesPerChain.values,\n                  backgroundColor: totalValuesPerChain.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Position:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerPosition.labels,\n              datasets: [\n                {\n                  data: valuesPerPosition.values,\n                  backgroundColor: valuesPerPosition.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Asset Class:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerAssetClass.labels,\n              datasets: [\n                {\n                  data: valuesPerAssetClass.values,\n                  backgroundColor: valuesPerAssetClass.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n      </div>\n\n      <br />\n\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <br />\n      <AddPositionBtn />\n    </div>\n  );\n};\n\nfunction colorOf(num: number) {\n  return bgColors[num % bgColors.length];\n}\n\nconst bgColors = [\n  \"#413d5e\",\n  \"#495371\",\n  \"#638c93\",\n  \"#98B4AA\",\n  \"#F1E0AC\", //\n];\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  // const updatePos = () => appStateActions.withLoading(() => allPositionsActions.update(selector.position!, selector.position!.getArgs())).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.rawData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.name || selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n          {selector.position?.getArgs()?.input && <DialogContentText>Input: {selector.position?.getArgs()?.input}</DialogContentText>}\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positionsv1/base/PositionV1\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}