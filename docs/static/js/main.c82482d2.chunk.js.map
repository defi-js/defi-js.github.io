{"version":3,"sources":["assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positions/base/consts.ts","state/AppState.ts","positions/base/PositionFactory.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","ui/AppHeader.tsx","positions/base/PriceOracle.ts","positions/Revault.ts","positions/Unicly.ts","positions/Fodl.ts","positions/TokenBalances.ts","positions/Uniswap.ts","positions/OffChain.ts","positions/AlphaHomora.ts","positions/Balancer.ts","positions/ElrondMaiar.ts","positions/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx"],"names":["erc20s","_","merge","erc20sOrig","networks","contractsOrig","networksOrig","egld","id","name","shortname","off","currentNetwork","a","netId","bn","window","ethereum","chainId","toNumber","console","log","find","n","sendWithTxType","tx","useLegacyTx","account","from","type","send","isNetworkDisabled","network","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","setState","_withLoading","showAlert","alert","clickNetwork","networkId","getState","_ethereum","removeAllListeners","on","_onConnect","request","method","_switchNetwork","t","message","stack","setWeb3Instance","Web3","Error","params","utils","numberToHex","Severity","useAppState","createHook","useIsAppConnected","selector","state","isAddress","useIsLoading","useAppActions","AppHeader","style","display","flexDirection","justifyContent","margin","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","map","ToggleButton","textTransform","disabled","coingeckoIds","eth","bsc","poly","arb","avax","PriceOracle","warm","prices","USD","ether","token","tokenId","symbol","address","price","this","getId","amount","isZero","fetchPricesElrond","fetchPrices","toString","zero","mul","div","positions","bynetwork","groupBy","getNetwork","coingeckoFetches","keys","filter","getAssets","concat","getRewardAssets","flatten","uniq","elrondFetch","Promise","all","addresses","isEmpty","coingeckoId","v","k","url","join","fetch","response","json","result","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","JSON","stringify","data","inputs","results","registry","oracle","isElrondAddress","startsWith","e","types","args","uniqueId","current","trim","length","isOffChainSymbol","PositionFactory","register","Farm","BUSD","WBNB","Pancakeswap_LP_BUSD_BNB","CAKE","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","asset0","asset1","lpToken","poolId","masterchef","contracts","Pancakeswap_Masterchef","cake","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getName","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","encodeABI","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","contract","require","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","sub","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","owner","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","SingleVault","RevaStake","REVA","erc20","revault","chef","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","staking","pendingAmount","userPoolInfo","poolInfo","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","getxUNICRate","xunicrate","totalLPTokens","Unicly","XFodlStake","fodl","xfodl","then","myXfodl","xfodlTotalSupply","fodlStaked","Fodl","TokenBalance","mcap","nativeTokens","WMATIC","WAVAX","NativeTokenBalance","getBalance","forEach","input","TokenBalances","maxUint128","pow","subn","positionGraph","posId","position","pool","totalValueLockedUSD","principal0","depositedToken0","withdrawnToken0","principal1","depositedToken1","withdrawnToken1","collectedFees0","collectedFeesToken0","collectedFees1","collectedFeesToken1","tick","V3LP","WBTC","token1","nftPositionManager","valueIfHodl","valueNow","ilValue","il","pending0","pending1","pendingValue0","pendingValue1","totalFeesValue","gt","High","pos","decreaseLiquidity","maxUint256","res","graph","principalValue0","principalValue1","add","collect","Uniswap","AssetPosition","zeroAddress","OffChain","LYF","WETHe","baseToken","alphaHomoraBank","maxHistoryBlocks","supply0","supply1","borrow0","borrow1","ilAmount","debtRatio","getPositionInfo","lpSupplied","collateralSize","nft","collToken","getUnderlyingToken","collId","totalLPs","share","total0","total1","getPositionDebts","debts","indexOf","totalValue0","totalValue1","AlphaHomora","DAI","USDT","balToken","balV2","bal","amounts","values","getPool","x","bpt","getPoolTokens","poolTokens","every","eqIgnoreCase","bptBalance","bptTotalSupply","balances","poolAmounts","poolValues","reduce","sum","b","Balancer","esdt","USDC_EGLD","assets","farm","L_USDC_EGLD","MEX_EGLD","L_MEX_EGLD","mex","lpBalanceStaked","getESDTs","getTotalSupply","farmEsdts","pairEsdts","totalLPSupply","totalLPStaked","tokenIdentifier","balance","asset0InPair","asset1InPair","asset0TotalValue","asset1TotalValue","esdts","lpNameSuffix","split","lps","MexFarm","MEX","L_MEX","totalAssetStaked","farmNftWrapper","creator","decimals","dec","get","ElrondMaiar","FarmStrategies","MexFarmStrategies","Strategies","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","load","api","addPosition","create","update","newArgs","delete","sendTransaction","harvest","warmup","shouldLoad","loaded","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","chain","health","num","marketValue","useAllPositions","useAllPositionsTotals","grouped","totalPerChain","Math","round","totalMarketValue","labels","grandtotal","to3","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","fmtData","positionMethods","selectedMethodArgTypes","rewardAssets","rawData","isArray","BN","fmt18","AddPositionDialogState","show","valid","allTypes","sort","setType","isValidArgs","setAddress","setInput","setName","useAddPositionDialog","AddPositionBtn","isConnected","Button","onClick","AddPositionDialog","appActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","ChartJS","ArcElement","Tooltip","Legend","columns","field","headerName","width","align","valueFormatter","headerAlign","commafy","toFixed","sortable","AllPositionsTable","appState","rows","positionDialogActions","totals","useEffect","height","onCellClick","autoHeight","hideFooter","ListItemText","datasets","borderWidth","backgroundColor","total","bgColors","colorOf","responsive","plugins","legend","PositionDialog","appStateActions","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","accept","hidden","addEventListener","file","files","reader","FileReader","onload","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById"],"mappings":"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","file":"static/js/main.c82482d2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, contracts as contractsOrig, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {});\nexport const contracts = _.merge({}, contractsOrig, {});\n\nexport const networks = _.merge({}, networksOrig, {\n  egld: { id: -508, name: \"Elrond\", shortname: \"egld\" },\n  off: { id: -1, name: \"OffChain\", shortname: \"off\" },\n});\n\nexport async function currentNetwork() {\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positions/base/consts\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = _.uniqueId(args.type + \":\" + args.address + \"-\" + args.name + \"-\");\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return web3()?.utils?.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address) || isOffChainSymbol(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isOffChainSymbol(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:OffChain:Asset\") && _.trim(address).length > 0;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { bn, contracts, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n      \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n      \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n      \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n      \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n      \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n      \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n      \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n    });\n  }\n\n  class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  address: string;\n  id: string;\n  input?: string;\n  name?: string;\n};\n\nexport interface Position {\n  getName(): string;\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number | BN[] };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH.sub(this.data.totalDebtETH),\n        value: this.data.totalCollateralValue.sub(this.data.totalDebtValue),\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL = 0.005; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance.sub(this.data.borrowBalance),\n        value: this.data.supplyBalance.sub(this.data.borrowBalance),\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\nimport { OffChain } from \"../OffChain\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n};\n\nexport class PriceOracle {\n  warm = false;\n  prices: Record<string, BN> = {\n    USD: ether,\n  };\n\n  getId(networkId: number, token: Token) {\n    if (networkId === networks.egld.id) return (token as ElrondMaiar.ESDT).tokenId;\n    if (networkId === networks.off.id) return (token as OffChain.Asset).symbol;\n    return token.address;\n  }\n\n  overridePrice(networkId: number, token: Token, price: BN) {\n    this.prices[this.getId(networkId, token)] = price;\n  }\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const id = this.getId(networkId, token);\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (networkId === networks.egld.id) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    if (this.warm) return;\n    this.warm = true;\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[networks.egld.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n\n    try {\n      const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n      const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(addresses, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\nimport type { RevaultStakingAbi } from \"../../typechain-abi/RevaultStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Revault {\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.CAKE()),\n      \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.BUSD()),\n      \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    });\n    for (let i = 0; i < 4; i++) {\n      PositionFactory.register({\n        [`bsc:Revault:RevaStaking:x${i + 1}`]: (args, oracle) => new RevaStake(args, oracle, i),\n      });\n    }\n  }\n\n  const REVA = () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\");\n  const revaultFarm = () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\");\n  const revaultChef = () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\");\n  const revaStaking = () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\");\n\n  class SingleVault implements Position {\n    revault = revaultFarm();\n    chef = revaultChef();\n    reva = REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  class RevaStake implements Position {\n    staking = revaStaking();\n    reva = REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements Position {\n    xfarm = contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\");\n    unic = erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\");\n    xunic = erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\");\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, zero } from \"@defi.org/web3-candies\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\n\nexport namespace Fodl {\n  export class XFodlStake implements Position {\n    fodl = erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\");\n    xfodl = erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\");\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(bn),\n        this.xfodl.methods.totalSupply().call().then(bn),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(bn),\n      ]);\n      this.data.amount = myXfodl.mul(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport Web3 from \"web3\";\n\nexport namespace TokenBalances {\n  class TokenBalance implements Position {\n    data = {\n      name: \"\",\n      amount: zero,\n      value: zero,\n      totalSupply: zero,\n      mcap: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token: Token) {}\n\n    getName = () => this.data.name;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      [this.data.name, this.data.amount, this.data.totalSupply] = await Promise.all([\n        this.token.methods.name().call(),\n        this.token.methods.balanceOf(this.args.address).call().then(this.token.mantissa),\n        this.token.methods.totalSupply().call().then(this.token.mantissa),\n      ]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.mcap;\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  const nativeTokens = {\n    eth: () => _.merge(erc20s.eth.WETH(), { name: \"ETH\" }),\n    bsc: () => _.merge(erc20s.bsc.WBNB(), { name: \"BNB\" }),\n    poly: () => _.merge(erc20s.poly.WMATIC(), { name: \"MATIC\" }),\n    avax: () => _.merge(erc20s.avax.WAVAX(), { name: \"AVAX\" }),\n    arb: () => _.merge(erc20s.arb.WETH(), { name: \"AETH\" }),\n  };\n\n  class NativeTokenBalance extends TokenBalance {\n    getName = () => this.token.name;\n\n    async load() {\n      [this.data.amount, this.data.totalSupply] = await Promise.all([web3().eth.getBalance(this.args.address).then(bn), this.token.methods.totalSupply().call().then(bn)]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n  }\n\n  export function register() {\n    _.forEach(networks, (n) => {\n      if (n.id < 0) return;\n      PositionFactory.register({\n        [`${n.shortname}:Token`]: (args, oracle) => new TokenBalance(args, oracle, n, erc20(\"\", Web3.utils.toChecksumAddress(args.input!))),\n      });\n\n      const t = (nativeTokens as any)[n.shortname];\n      if (t) PositionFactory.register({ [`${n.shortname}:TokenBase`]: (args, oracle) => new NativeTokenBalance(args, oracle, n, t()) });\n    });\n  }\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, ether, maxUint256, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { UniswapNftManagerAbi } from \"../../typechain-abi/UniswapNftManagerAbi\";\nimport _ from \"lodash\";\n\nconst maxUint128 = bn(2).pow(bn(128)).subn(1).toString();\n\nexport namespace Uniswap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.WBTC(), erc20s.eth.WETH()),\n    });\n  }\n\n  class V3LP implements Position {\n    nftPositionManager = contract<UniswapNftManagerAbi>(require(\"../abi/UniswapNftManagerAbi.json\"), \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\");\n\n    data = {\n      id: 0,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      principal0: zero,\n      principal1: zero,\n      valueIfHodl: zero,\n      valueNow: zero,\n      ilValue: zero,\n      il: zero,\n      pending0: zero,\n      pending1: zero,\n      pendingValue0: zero,\n      pendingValue1: zero,\n      totalFeesValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!);\n      if (this.data.id <= 0) throw new Error(\"unknown positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [this.token0, this.token1];\n    getPendingRewards = () => [\n      { asset: this.token0, amount: this.data.pending0, value: this.data.pendingValue0 },\n      { asset: this.token1, amount: this.data.pending1, value: this.data.pendingValue1 },\n    ];\n    getHealth = () => {\n      if (this.data.ilValue.gt(this.data.totalFeesValue) || this.data.il.gt(bn18(0.01)))\n        return [\n          {\n            severity: Severity.High,\n            message: \"IL!\",\n          },\n        ];\n      return [];\n    };\n\n    async load() {\n      const pos = await this.nftPositionManager.methods.positions(this.data.id).call();\n      if (web3().utils.toChecksumAddress(pos.token0) !== web3().utils.toChecksumAddress(this.token0.address)) throw new Error(`invalid tokens for pos, ${pos}`);\n\n      const res = await this.nftPositionManager.methods.decreaseLiquidity([this.data.id, pos.liquidity, 0, 0, maxUint256]).call();\n      this.data.amount0 = await this.token0.mantissa(res.amount0);\n      this.data.amount1 = await this.token1.mantissa(res.amount1);\n\n      [this.data.value0, this.data.value1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.amount0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.amount1),\n      ]);\n\n      const graph = await positionGraph(this.data.id);\n      this.data.tvl = graph.tvl;\n      this.data.principal0 = graph.principal0;\n      this.data.principal1 = graph.principal1;\n\n      const [principalValue0, principalValue1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.principal0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.principal1),\n      ]);\n      this.data.valueIfHodl = principalValue0.add(principalValue1);\n      this.data.valueNow = this.data.value0.add(this.data.value1);\n      this.data.ilValue = this.data.valueIfHodl.sub(this.data.valueNow);\n      this.data.il = ether.sub(this.data.valueNow.mul(ether).div(this.data.valueIfHodl));\n      const pending = await this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]).call({ from: this.args.address });\n      this.data.pending0 = await this.token0.mantissa(pending.amount0);\n      this.data.pending1 = await this.token1.mantissa(pending.amount1);\n      this.data.pendingValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.pending0);\n      this.data.pendingValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.pending1);\n\n      this.data.totalFeesValue = this.data.pendingValue0.add(this.data.pendingValue1).add(graph.collectedFees0).add(graph.collectedFees1);\n    }\n\n    getContractMethods = () => _.functions(this.nftPositionManager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      alert(`target:\\n${this.nftPositionManager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]), useLegacyTx);\n    }\n  }\n}\n\nasync function positionGraph(posId: number) {\n  const response = await fetch(\"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\", {\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `{position(id:${posId}) {\n          depositedToken0\n          depositedToken1\n          withdrawnToken0\n          withdrawnToken1\n          collectedFeesToken0\n          collectedFeesToken1\n          pool {\n            totalValueLockedUSD\n            tick\n          }\n        }\n      }`,\n    }),\n    method: \"POST\",\n  });\n  const json = await response.json();\n  return {\n    tvl: bn18(json.data.position.pool.totalValueLockedUSD),\n    principal0: bn18(json.data.position.depositedToken0).sub(bn18(json.data.position.withdrawnToken0)),\n    principal1: bn18(json.data.position.depositedToken1).sub(bn18(json.data.position.withdrawnToken1)),\n    collectedFees0: bn18(json.data.position.collectedFeesToken0),\n    collectedFees1: bn18(json.data.position.collectedFeesToken1),\n    tick: json.data.position.pool.tick,\n  };\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn18, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace OffChain {\n  export function register() {\n    PositionFactory.register({\n      \"x:OffChain:Asset\": (args, oracle) => new AssetPosition(args, oracle),\n    });\n  }\n\n  export type Asset = Token & { symbol: string };\n\n  class AssetPosition implements Position {\n    token: Asset;\n    data = {\n      amount: zero,\n      value: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.input) throw new Error(\"input amount required\");\n      if (!args.address) throw new Error(\"address symbol required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { symbol: args.address });\n      this.data.amount = bn18(args.input);\n    }\n\n    getName = () => `OffChain:${this.token.name}`;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.off;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => zero;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks } from \"./base/consts\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport type { AlphaHomoraBankAbi } from \"../../typechain-abi/AlphaHomoraBankAbi\";\nimport { AlphaHomoraJoeFarmAbi } from \"../../typechain-abi/AlphaHomoraJoeFarmAbi\";\nimport _ from \"lodash\";\n\nexport namespace AlphaHomora {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AlphaHomora:WETHe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class LYF implements Position {\n    baseToken = erc20s.avax.WAVAX();\n    alphaHomoraBank = contract<AlphaHomoraBankAbi>(require(\"../abi/AlphaHomoraBankAbi.json\"), \"0x376d16C7dE138B01455a51dA79AD65806E9cd694\");\n    maxHistoryBlocks = {\n      [networks.avax.id]: 10_000_000,\n    };\n\n    data = {\n      id: 0,\n      supply0: zero,\n      supply1: zero,\n      borrow0: zero,\n      borrow1: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      pending: zero,\n      pendingValue: zero,\n      tvl: zero,\n      valueIfHodl: zero,\n      ilAmount: zero,\n      il: zero,\n      debtRatio: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!);\n      if (!this.data.id) throw new Error(\"invalid input positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => networks.avax;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n\n    async load() {\n      const pos = await this.alphaHomoraBank.methods.getPositionInfo(this.data.id).call();\n      const lpSupplied = bn(pos.collateralSize);\n      const nft = contract<AlphaHomoraJoeFarmAbi>(require(\"../abi/AlphaHomoraJoeFarmAbi.json\"), pos.collToken);\n      const lpToken = erc20(\"\", await nft.methods.getUnderlyingToken(pos.collId).call());\n      const totalLPs = await lpToken.methods.totalSupply().call().then(bn);\n      const share = lpSupplied.mul(ether).div(totalLPs);\n      const total0 = await this.token0.methods.balanceOf(lpToken.address).call().then(bn);\n      const total1 = await this.token1.methods.balanceOf(lpToken.address).call().then(bn);\n      this.data.supply0 = total0.mul(share).div(ether);\n      this.data.supply1 = total1.mul(share).div(ether);\n\n      const debts = await this.alphaHomoraBank.methods.getPositionDebts(this.data.id).call();\n      this.data.borrow0 = bn(debts.debts[_.indexOf(debts.tokens, this.token0.address)]);\n      this.data.borrow1 = bn(debts.debts[_.indexOf(debts.tokens, this.token1.address)]);\n\n      this.data.amount0 = this.data.supply0.sub(this.data.borrow0);\n      this.data.amount1 = this.data.supply1.sub(this.data.borrow1);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.amount1);\n\n      const totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, total0);\n      const totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, total1);\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    //     private async loadDeposits() {\n    //       const depositAbi = _(this.alphaHomoraBank.options.jsonInterface).find((x) => x.type === \"function\" && x.name === \"execute\")!;\n    //       const depositSig = web3().eth.abi.encodeFunctionSignature(depositAbi);\n    //\n    //       const currentBlock = await web3().eth.getBlockNumber();\n    //       const earliestBlock = currentBlock - this.maxHistoryBlocks[this.getNetwork().id];\n    //\n    //       const apiKey = \"\";\n    //       const alltxsResponse = await fetch(`https://api.snowtrace.io/api?module=account&action=txlist\n    // &fromBlock=${earliestBlock}\n    // &toBlock=${currentBlock}\n    // &address=${this.args.address}\n    // &sort=asc&apikey=${apiKey}`);\n    //       const alltxs = await alltxsResponse.json();\n    //       const relevantTxs = _.filter(alltxs.result, (tx) => eqIgnoreCase(tx.to, this.alphaHomoraBank.options.address) && tx.input.startsWith(depositSig));\n    //       if (relevantTxs.length !== 1) {\n    //         console.error(\"no / too many deposits\");\n    //         return;\n    //       }\n    //       const deposit = relevantTxs[0];\n    //       const receipt = await web3().eth.getTransactionReceipt(deposit.hash);\n    //       const events = parseEvents(receipt, this.token0);\n    //\n    //       const depositEvent = events.find((e) => e.event === \"Transfer\" && eqIgnoreCase(e.address, this.token0.address) && eqIgnoreCase(e.returnValues.from, this.args.address))!;\n    //       const deposit0 = bn(depositEvent.returnValues.value);\n    //       const deposit1 = _.reduce(relevantTxs, (sum, tx) => sum.add(bn(tx.value)), zero);\n    //       const valueNow0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, deposit0);\n    //       const valueNow1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, deposit1);\n    //\n    //       this.data.valueIfHodl = valueNow0.add(valueNow1);\n    //       const valueNow = this.data.value0.add(this.data.value1);\n    //       this.data.ilAmount = this.data.valueIfHodl.sub(valueNow);\n    //       this.data.il = ether.sub(valueNow.mul(ether).div(this.data.valueIfHodl));\n    //     }\n\n    //   private async loadDebtRatio() {\n    //     /*\n    //       struct TokenFactors {\n    //     uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //     uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //     uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    //     mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // }\n    //        */\n    //\n    //     /*\n    //       struct TokenFactors {\n    //   uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //   uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //   uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    // }\n    //\n    // IBaseOracle public immutable source; // Main oracle source\n    // mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // mapping(address => bool) public whitelistERC1155; // Mapping from token address to whitelist status\n    //      */\n    //     const proxyOracleAbi: Abi = [\n    //       {\n    //         name: \"tokenFactors\",\n    //         type: \"function\",\n    //         stateMutability: \"view\",\n    //         inputs: [\n    //           {\n    //             internalType: \"address\",\n    //             name: \"token\",\n    //             type: \"address\",\n    //           },\n    //         ],\n    //         outputs: [\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"borrowFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"collateralFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"liqIncentive\",\n    //             type: \"uint256\",\n    //           },\n    //         ],\n    //       },\n    //     ];\n    //     const o = contract(proxyOracleAbi, await this.alphaHomoraBank.methods.oracle().call());\n    //     const f0 = bn((await o.methods.tokenFactors(this.token0.address).call()).borrowFactor).toNumber() / 1e4;\n    //     const f1 = bn((await o.methods.tokenFactors(this.token1.address).call()).borrowFactor).toNumber() / 1e4;\n    //     console.log(f0, f1);\n    //   }\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { bn, contract, eqIgnoreCase, erc20, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { BalancerV2VaultAbi } from \"../../typechain-abi/BalancerV2VaultAbi\";\n\nexport namespace Balancer {\n  export function register() {\n    PositionFactory.register({\n      \"poly:Balancer:USDC/DAI/MAI/USDT\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.USDC(), erc20s.poly.DAI(), erc20(\"MAI\", \"0xa3Fa99A148fA48D14Ed51d610c367C61876997F1\"), erc20s.poly.USDT()],\n          \"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012\"\n        ),\n    });\n  }\n\n  const balToken = {\n    [networks.poly.id]: () => erc20(\"BAL\", \"0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3\"),\n  };\n\n  const balV2 = {\n    [networks.poly.id]: () => contract<BalancerV2VaultAbi>(require(\"../abi/BalancerV2VaultAbi.json\"), \"0xBA12222222228d8Ba445958a75a0704d566BF2C8\"),\n  };\n\n  class Farm implements Position {\n    vault = balV2[this.network.id]();\n    bal = balToken[this.network.id]();\n\n    data = {\n      amounts: [] as BN[],\n      values: [] as BN[],\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public tokens: Token[], public poolId: string) {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => this.tokens;\n    getAmounts = () => _.map(this.tokens, (asset, i) => ({ asset, amount: this.data.amounts[i] || zero, value: this.data.values[i] || zero }));\n    getRewardAssets = () => [this.bal];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n\n    async load() {\n      const bpt = erc20(\n        \"BPT\",\n        await this.vault.methods\n          .getPool(this.poolId)\n          .call()\n          .then((x) => x[\"0\"])\n      );\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      const [bptBalance, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.args.address).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.add(bn(b)), zero);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { bn, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { networks } from \"./base/consts\";\n\nexport namespace ElrondMaiar {\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    MEX_EGLD: () => esdt(\"MEX/EGLD LP\", \"EGLDMEX-0be9e5\", 18),\n    USDC_EGLD: () => esdt(\"USDC/EGLD LP\", \"EGLDUSDC-594e5e\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string; lp: ESDT };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    L_USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\",\n      lp: tokens.MEX_EGLD(),\n    }),\n    L_MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\",\n      lp: tokens.MEX_EGLD(),\n    }),\n  };\n\n  class Farm implements Position {\n    mex = tokens.MEX();\n\n    data = {\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.egld;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [asset0, asset1] = this.getAssets();\n      const [farmEsdts, pairEsdts, totalLPSupply] = await Promise.all([getESDTs(this.strategy.farm), getESDTs(this.strategy.pool), getTotalSupply(this.strategy.lp)]);\n      const totalLPStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === this.strategy.lp.tokenId)!.balance);\n      const asset0InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset0.tokenId)!.balance);\n      const asset1InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset1.tokenId)!.balance);\n      const asset0TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset0, totalLPStaked.mul(asset0InPair).div(totalLPSupply));\n      const asset1TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset1, totalLPStaked.mul(asset1InPair).div(totalLPSupply));\n      this.data.tvl = asset0TotalValue.add(asset1TotalValue);\n\n      const esdts = await getESDTs(this.args.address);\n      const lpNameSuffix = this.strategy.lp.tokenId.split(\"-\")[0];\n      const lps = _.find(esdts, (t) => t.tokenIdentifier.startsWith(lpNameSuffix));\n      if (!lps) return;\n\n      this.data.lpBalanceStaked = bn(lps!.balance);\n      this.data.amount0 = this.data.lpBalanceStaked.mul(asset0InPair).div(totalLPSupply);\n      this.data.amount1 = this.data.lpBalanceStaked.mul(asset1InPair).div(totalLPSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, asset1, this.data.amount1);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\",\n      lp: tokens.MEX(),\n    }),\n    L_MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\",\n      lp: tokens.LKMEX(),\n    }),\n  };\n\n  class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as Strategy).lp];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const asset = this.getAssets()[0];\n\n      const farmEsdts = await getESDTs(this.strategy.farm);\n      const totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      this.data.tvl = await this.oracle.valueOf(networks.egld.id, asset, totalAssetStaked);\n\n      const esdts = await getESDTs(this.args.address);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === this.strategy.pool.toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n\n      this.data.amount0 = bn(farmNftWrapper.balance.toString());\n      this.data.value0 = await this.oracle.valueOf(networks.egld.id, asset, this.data.amount0);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  async function getESDTs(address: string) {\n    const response = await fetch(`https://gateway.elrond.com/address/${address}/esdt`);\n    const json = await response.json();\n    return _.get(json, [\"data\", \"esdts\"], []);\n  }\n\n  async function getTotalSupply(token: ESDT) {\n    const response = await fetch(`https://gateway.elrond.com/network/esdt/supply/${token.tokenId}`);\n    const json = await response.json();\n    return bn(_.get(json, [\"data\", \"supply\"], \"0\"));\n  }\n\n  export function register() {\n    PositionFactory.register({\n      \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n      \"egld:Maiar:LFarm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_USDC_EGLD()),\n      \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n      \"egld:Maiar:LFarm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_MEX_EGLD()),\n      \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n      \"egld:Maiar:MEXLFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.L_MEX()),\n    });\n  }\n\n  // export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n  //   const assets = _.map(tokens, (t) => t());\n\n  // https://gateway.elrond.com/address/:bech32Address/balance\n\n  // const [esdts, balanceEGLD] = await Promise.all([getESDTs(address), provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString()))]);\n\n  // const balances = await Promise.all(\n  //   _(esdts)\n  //     .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n  //     .filter((t) => !!t.asset)\n  //     .map(async (t) => {\n  //       const amount = to18(t.esdt.balance, t.asset!.dec);\n  //       return {\n  //         asset: t.asset!,\n  //         amount,\n  //         value: await oracle.valueOf(networks.egld.id, t.asset!, amount),\n  //       };\n  //     })\n  //     .value()\n  // );\n\n  // balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(networks.egld.id, tokens.EGLD(), balanceEGLD) });\n\n  // return balances;\n  // }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n\n// farms v2:\n// EGLD/MEX => MEX : erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\n// EGLD/MEX => LKMEX: erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\n// EGLD/USDC => MEX: erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\n// EGLD/USDC => LKMEX: erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\n// MEX => MEX: erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\n// MEX => LKMEX: erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { Fodl } from \"./Fodl\";\nimport { TokenBalances } from \"./TokenBalances\";\nimport { Uniswap } from \"./Uniswap\";\nimport { OffChain } from \"./OffChain\";\nimport { AlphaHomora } from \"./AlphaHomora\";\nimport { Balancer } from \"./Balancer\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\n\nexport function registerAllPositions() {\n  OffChain.register();\n  TokenBalances.register();\n\n  Uniswap.register();\n  Pancakeswap.register();\n  Revault.register();\n  AlphaHomora.register();\n  Balancer.register();\n  ElrondMaiar.register();\n\n  PositionFactory.register({\n    \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { to3, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positions/base/consts\";\nimport BN from \"bn.js\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string, input: string, name: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, input, name, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    update: (position: Position, newArgs: PositionArgs) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = newArgs;\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions...\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p\n        .load()\n        .then(() => ((p as any).loaded = true))\n        .catch((e) => {\n          (p as any).loaded = false;\n          console.log(p.getArgs().type, e);\n        });\n    })\n  );\n  api.setState({ positions });\n  console.log(`...done loading ${network?.name}`);\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\n\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        name: p.getArgs().name || p.getName() || p.getArgs().type,\n        chain: p.getNetwork().name,\n        health: p.getHealth(),\n        value: num(marketValue(p)),\n        pending: num(p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero)),\n        tvl: num(p.getTVL()),\n        position: p,\n        address: p.getArgs().address,\n        loaded: (p as any).loaded,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nexport const useAllPositionsTotals = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.groupBy(state.positions, (p) => p.getNetwork().name),\n    (grouped) => {\n      const totalPerChain = _(grouped)\n        .map((positions, chain) => ({\n          chain,\n          value: Math.round(num(totalMarketValue(positions))),\n        }))\n        .sortBy((t) => -t.value)\n        .value();\n      return {\n        labels: _.map(totalPerChain, (t) => t.chain),\n        values: _.map(totalPerChain, (t) => t.value),\n        grandtotal: _.reduce(totalPerChain, (sum, t) => sum + t.value, 0),\n      };\n    }\n  ),\n});\n\nfunction num(bn: BN) {\n  return to3(bn, 18).toNumber() / 1000;\n}\n\nfunction marketValue(p: Position) {\n  return _.reduce(p.getAmounts(), (sum, v) => sum.add(v.value), zero);\n}\n\nfunction totalMarketValue(positions: Position[]) {\n  return _.reduce(positions, (sum, pos) => sum.add(marketValue(pos)), zero);\n}\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), fmtData),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      rawData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n\nfunction fmtData(data: any): any {\n  if (_.isArray(data)) return _.map(data, fmtData);\n  return data instanceof BN ? fmt18(data) : data;\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport _ from \"lodash\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    input: \"\",\n    name: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", input: \"\", name: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        address = _.trim(address);\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n\n    setInput:\n      (input: string) =>\n      async ({ setState }) => {\n        input = _.trim(input);\n        setState({ input });\n      },\n\n    setName:\n      (name: string) =>\n      async ({ setState }) => {\n        name = _.trim(name);\n        setState({ name });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address, state.input, state.name)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Name?\" onChange={(e) => actions.setName(e.target.value)} />}\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Input?\" onChange={(e) => actions.setInput(e.target.value)} />}\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions, useAllPositionsTotals } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positions/base/Position\";\nimport { ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { ArcElement, Chart as ChartJS, Legend, Tooltip } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst columns: GridColDef[] = [\n  { field: \"loaded\", headerName: \"🌐\", width: 20, align: \"center\", valueFormatter: (v) => (v.value ? \"✅\" : \"❔\") },\n  { field: \"chain\", headerName: \"Chain\", width: 120, align: \"left\" },\n  { field: \"name\", headerName: \"Position\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    width: 100,\n    align: \"center\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => {\n      const value = v.value as Threat[];\n      if (!value.length) return \"🟢\";\n      return value.map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"value\",\n    headerName: \"Market Value\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    width: 120,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", width: 450, align: \"left\", headerAlign: \"center\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n  const [totals] = useAllPositionsTotals(null);\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <br />\n      <AddPositionBtn />\n\n      <br />\n      <ListItemText>Total Market Value: $ {commafy(totals.grandtotal)}</ListItemText>\n      <ListItemText>Value Per Chain:</ListItemText>\n      <Pie\n        data={{\n          labels: totals.labels,\n          datasets: [\n            {\n              borderWidth: 2,\n              data: totals.values,\n              backgroundColor: totals.values.map((t) => colorOf(t, totals.grandtotal)),\n            },\n          ],\n        }}\n        options={{ responsive: false, plugins: { legend: { display: false } } }}\n        height=\"400\"\n      />\n    </div>\n  );\n};\n\nfunction colorOf(num: number, total: number) {\n  return bgColors[Math.round((num / total) * (bgColors.length - 1))];\n}\n\nconst bgColors = [\"#F1E0AC\", \"#98B4AA\", \"#74959A\", \"#495371\"];\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  // const updatePos = () => appStateActions.withLoading(() => allPositionsActions.update(selector.position!, selector.position!.getArgs())).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.rawData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.name || selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n          {selector.position?.getArgs()?.input && <DialogContentText>Input: {selector.position?.getArgs()?.input}</DialogContentText>}\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positions/base/Position\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}