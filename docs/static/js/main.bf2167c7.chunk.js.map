{"version":3,"sources":["../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$","reportWebVitals.ts","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positions/consts.ts","state/AppState.ts","positions/base/PositionFactory.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","positions/base/PriceOracle.ts","positions/Revault.ts","positions/Unicly.ts","positions/index.ts","state/AllPositionsState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","state/AddWalletDialogState.ts","positions/base/Balances.ts","state/WalletsState.ts","ui/AddWalletDialog.tsx","ui/AppHeader.tsx","state/PositionDialogState.ts","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/AllBalancesTable.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","erc20s","_","merge","erc20sOrig","eth","UNIC","erc20","XUNIC","Unicly_UPUNK","Unicly_UJENNY","Unicly_LP_UPUNK_ETH","require","Unicly_LP_UJENNY_ETH","bsc","REVA","arb","WETH","avax","WAVAX","contracts","contractsOrig","Unicly_XUnicVault","contract","Revault_Farm","Revault_Chef","networks","networksOrig","name","shortname","currentNetwork","a","web3","net","getId","netId","find","n","AppState","createStore","initialState","loading","wallet","balance","zero","network","alertDialog","actions","connect","setState","_withLoading","ethereum","window","alert","_onConnect","on","withLoading","thunk","showAlert","t","message","stack","setWeb3Instance","Web3","account","console","log","bn","getBalance","Severity","useAppState","createHook","useIsAppConnected","selector","state","utils","isAddress","coingeckoIds","poly","PriceOracle","prices","networkId","token","amount","isElrond","ElrondMaiar","tokenId","address","this","isZero","fetchPricesElrond","fetchPrices","toString","mul","div","ether","positions","bynetwork","groupBy","p","getNetwork","Promise","all","getAssets","concat","getRewardAssets","flatten","uniq","value","filter","parseInt","addresses","isEmpty","coingeckoId","v","k","url","join","fetch","response","json","result","mapKeys","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","accept","pragma","JSON","stringify","method","data","inputs","results","registry","oracle","isElrondAddress","type","startsWith","Address","fromString","types","args","current","PositionFactory","Farm","asset0","asset1","lpToken","poolId","masterchef","Pancakeswap_Masterchef","cake","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","tx","useLegacyTx","encodeABI","from","send","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","SingleVault","revault","chef","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","WBNB","BUSD","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","poolInfo","getxUNICRate","xunicrate","totalLPTokens","Unicly","register","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","Strategies","USDC_EGLD","MEX_EGLD","STORAGE_KEY","loadFromStorage","parse","localStorage","getItem","saveToStorage","setItem","AllPositionsState","ready","load","api","addPosition","position","create","getState","delete","posId","sendTransaction","harvest","warmup","values","shouldLoad","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","health","to3","reduce","sum","add","toNumber","useAllPositions","useAllPositionsReady","AddPositionDialogState","show","valid","allTypes","sort","closeDialog","setType","isValidArgs","setAddress","useAddPositionDialog","AddPositionBtn","isConnected","Button","variant","size","disabled","onClick","AddPositionDialog","appStateActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","style","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","onChange","target","MenuItem","TextField","DialogActions","AddWalletDialogState","isValidWallet","useAddWalletDialog","nativeAssets","WMATIC","memAllTokenInfos","fetchBalances","balances","Elrond","getAllTokenInfos","fetchMulticallBalances","withbalance","push","length","it","decimals","uniqBy","reject","includes","blacklist","chainId","remaining","chunk","retries","performMulticallBalanceOf","flattened","shuffle","sleep","multicall","Multicall","web3Instance","tryAggregate","calls","reference","contractAddress","erc20abi","methodName","methodParameters","forEach","callsReturnContext","returnValues","hex","WalletsState","wallets","fetched","useWalletsRows","useWalletsBalancesRows","allbalances","flatMap","amounts","r","reverse","AddWalletBtn","AddWalletDialog","walletsActions","List","w","ListItem","disablePadding","ListItemButton","ListItemText","primary","AppHeader","fontSize","display","flexDirection","justifyContent","ConnectBtn","WalletInfo","fmt18","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","split","BN","positionMethods","selectedMethodArgTypes","assets","rewardAssets","positionData","columns","field","headerName","width","align","headerAlign","valueFormatter","commafy","toFixed","sortable","AllPositionsTable","appState","appActions","rows","positionDialogActions","useEffect","total","useMemo","row","hidden","height","onCellClick","autoHeight","hideFooter","PositionDialog","allPositionsActions","DialogContentText","argType","autoFocus","margin","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","AllBalancesTable","isready","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","href","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","document","getElementById","provider","ProxyProvider","timeout","esdt","usdc","mex","lkmex","egld","getAddressEsdtList","getAccount","esdts","balanceEGLD","balanceUSDC","tokenIdentifier","balanceMEX","balanceLKMEX","balanceWEGLD","vEGLD","vWEGLD","vUSDC","vMEX","vLKMEX","pool","farm","MEX","lpBalanceStaked","pair","SmartContract","base64","farmingTokenReserve","token0Id","token0r","token1r","lpTotalSupply","farmNfts","creator","nft","parseAmountLpFromAttributes","attributes","b","callAndParseGetPendingRewards","percentOfPool","dec","token1","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","bytes","lp_z_index","lp_z","lp_index","slice","balanceFarmNFT","BigUIntValue","BigNumberExt","max","BytesValue","assertSuccess"],"mappings":"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","file":"static/js/main.bf2167c7.chunk.js","sourcesContent":["var map = {\n\t\"./bls.js\": 534,\n\t\"./bls_c.js\": 535\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1032;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { erc20s as erc20sOrig, contracts as contractsOrig, networks as networksOrig, erc20, contract, Network, web3 } from \"@defi.org/web3-candies\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {\n  eth: {\n    UNIC: () => erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\"),\n    XUNIC: () => erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\"),\n\n    Unicly_UPUNK: () => erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n    Unicly_UJENNY: () => erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n    Unicly_LP_UPUNK_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n    Unicly_LP_UJENNY_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n  },\n  bsc: {\n    REVA: () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\"),\n  },\n  arb: {\n    WETH: () => erc20(\"WETH\", \"0x82aF49447D8a07e3bd95BD0d56f35241523fBab1\"),\n  },\n  avax: {\n    WAVAX: () => erc20(\"WAVAX\", \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\"),\n  },\n});\n\nexport const contracts = _.merge({}, contractsOrig, {\n  eth: {\n    Unicly_XUnicVault: () => contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\"),\n  },\n  bsc: {\n    Revault_Farm: () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\"),\n    Revault_Chef: () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\"),\n  },\n});\n\nexport const networks = _.merge({}, networksOrig, {\n  arb: { id: 42161, name: \"Arbitrum\", shortname: \"arb\" } as Network,\n  avax: { id: 43114, name: \"Avalanche\", shortname: \"avax\" } as Network,\n});\n\nexport async function currentNetwork() {\n  const netId = await web3().eth.net.getId();\n  return _.find(networks, (n) => n.id === netId);\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, bn, Network, setWeb3Instance, web3, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positions/consts\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    loading: false,\n    wallet: \"\",\n    balance: zero,\n    network: {} as Network,\n\n    alertDialog: \"\",\n  },\n\n  actions: {\n    connect:\n      () =>\n      async ({ setState }) => {\n        await _withLoading(setState, async () => {\n          setState({ wallet: \"\", balance: zero, network: {} as Network });\n\n          const ethereum = (window as any).ethereum;\n          if (!ethereum) {\n            alert(\"install metamask\");\n            return;\n          }\n          await _onConnect(setState, ethereum);\n\n          ethereum.on(\"accountsChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n          ethereum.on(\"chainChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n        });\n      },\n\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n  },\n});\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any, ethereum: any) {\n  setWeb3Instance(new Web3(ethereum));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"network\", network);\n  if (!network) throw new Error(`network not supported yet`);\n  setState({\n    wallet,\n    network,\n    balance: bn(await web3().eth.getBalance(wallet)),\n  });\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet),\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = args.type + \":\" + args.address;\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return web3()?.utils?.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, contracts, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\nimport { networks } from \"./consts\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.masterchef.methods.deposit(this.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, bn18, contract, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\nimport { networks } from \"./consts\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimRewardsToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimAndTransferAllCompToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3 } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"../consts\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const isElrond = networkId === ElrondMaiar.network.id || !!(token as any).tokenId;\n    const id = isElrond ? (token as ElrondMaiar.ESDT).tokenId : token.address;\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (isElrond) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      throw new Error(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n\n    await Promise.all([\n      this.fetchPricesElrond(\n        _(bynetwork[ElrondMaiar.network.id])\n          .map((p) => p.getAssets().concat(p.getRewardAssets()))\n          .flatten()\n          .map((a) => (a as any).tokenId)\n          .uniq()\n          .value()\n      ),\n      ..._(bynetwork)\n        .keys()\n        .filter((id) => parseInt(id) > 0)\n        .map((id) =>\n          this.fetchPrices(\n            id,\n            _(bynetwork[id])\n              .map((p) => p.getAssets().concat(p.getRewardAssets()))\n              .flatten()\n              .map((a) => a.address)\n              .uniq()\n              .value()\n          )\n        )\n        .value(),\n    ]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetch\", addresses);\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n    const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n    const response = await fetch(url);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetch elrond\", tokenIds);\n    const body = {\n      variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n      query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n    };\n    const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n      headers: {\n        accept: \"*/*\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"application/json\",\n        pragma: \"no-cache\",\n      },\n      body: JSON.stringify(body),\n      method: \"POST\",\n    });\n    const json = await response.json();\n\n    const result = _(json.data)\n      .mapKeys((v, k) => body.variables[k])\n      .mapValues((v) => bn18(v))\n      .value();\n\n    return this.updateResults(tokenIds, result);\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s, networks } from \"./consts\";\nimport _ from \"lodash\";\n\nexport namespace Revault {\n  export class SingleVault implements Position {\n    revault = contracts.bsc.Revault_Farm();\n    chef = contracts.bsc.Revault_Chef();\n    reva = erc20s.bsc.REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload).send({\n        from: await account(),\n        type: useLegacyTx ? \"0x0\" : \"0x2\",\n      } as any);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s, networks } from \"./consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20s.eth.Unicly_UPUNK(),\n      lp: erc20s.eth.Unicly_LP_UPUNK_ETH(),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20s.eth.Unicly_UJENNY(),\n      lp: erc20s.eth.Unicly_LP_UJENNY_ETH(),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements Position {\n    xfarm = contracts.eth.Unicly_XUnicVault();\n    unic = erc20s.eth.UNIC();\n    xunic = erc20s.eth.XUNIC();\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.xfarm.methods.deposit(this.strategy.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"./consts\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n    \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n    \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n    \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n    \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n    \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n\n    \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.CAKE()),\n    \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.BUSD()),\n    \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.WBNB()),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.MEX_EGLD()),\n    // \"egld:Maiar:Farm:MEX\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.MEX()),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { to3, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positions/consts\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nconst saveToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n    ready: false,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      saveToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      saveToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  if (!api.getState().ready) await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p.load().catch((e) => console.log(p.getArgs().type, e));\n    })\n  );\n  api.setState({ positions, ready: true });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        health: p.getHealth(),\n        value:\n          to3(\n            p.getAmounts().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        pending:\n          to3(\n            p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        tvl: to3(p.getTVL(), 18).toNumber() / 1000,\n        position: p,\n        address: p.getArgs().address,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\nexport const useAllPositionsReady = createHook(AllPositionsState, {\n  selector: (state) => state.ready,\n});\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => allPositionActions.addPosition(state.type, state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddWalletDialogState = createStore({\n  name: \"AddWalletDialogState\",\n\n  initialState: {\n    show: false,\n    address: \"\",\n    valid: false,\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState }) => {\n        const valid = PositionFactory.isValidWallet(address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddWalletDialog = createHook(AddWalletDialogState);\n","import { ElrondMaiar } from \"../ElrondMaiar\";\nimport { TokenAmount } from \"./Position\";\nimport { bn, erc20, erc20abi, Network, sleep, web3, zero } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport { erc20s, networks } from \"../consts\";\n\nconst nativeAssets = {\n  eth: () => erc20(\"ETH\", erc20s.eth.WETH().address),\n  bsc: () => erc20(\"BNB\", erc20s.bsc.WBNB().address),\n  poly: () => erc20(\"MATIC\", erc20s.poly.WMATIC().address),\n  arb: () => erc20(\"AETH\", erc20s.arb.WETH().address),\n  avax: () => erc20(\"AVAX\", erc20s.avax.WAVAX().address),\n};\n\ntype TokenInfo = { chainId: number; address: string; decimals: number; logoURI: string; name: string; symbol: string; balance?: BN };\n\nlet memAllTokenInfos: TokenInfo[] = [];\n\nexport async function fetchBalances(oracle: PriceOracle, network: Network, wallet: string): Promise<Record<string, TokenAmount[]>> {\n  if (network.id === ElrondMaiar.network.id || wallet.startsWith(\"erd1\")) {\n    return { Elrond: await ElrondMaiar.balances(oracle, wallet) };\n  }\n\n  const [tokens, balance] = await Promise.all([getAllTokenInfos(network), web3().eth.getBalance(wallet)]);\n  await fetchMulticallBalances(wallet, tokens);\n  const withbalance = _.filter(tokens, (t) => !!t.balance && !bn(t.balance).isZero());\n\n  await oracle.fetchPrices(\n    network.id,\n    _.map(withbalance, (t) => t.address)\n  );\n\n  const result = await Promise.all(\n    _.map(withbalance, (t) => {\n      const asset = erc20(t.name, Web3.utils.toChecksumAddress(t.address));\n      return asset.mantissa(t.balance || zero).then((amount) =>\n        oracle.valueOf(network.id, asset, amount).then((value) => ({\n          asset,\n          amount,\n          value,\n        }))\n      );\n    })\n  );\n\n  const asset = (nativeAssets as any)[network.shortname]();\n  const amount = bn(balance);\n  const value = await oracle.valueOf(network.id, asset, amount);\n  result.push({ asset, amount, value });\n\n  return { [network.name]: result };\n}\n\nasync function getAllTokenInfos(network: Network) {\n  if (network.id !== networks.eth.id) return [];\n  if (memAllTokenInfos.length) return memAllTokenInfos;\n\n  const json = await fetch(`https://tokens.coingecko.com/uniswap/all.json`).then((it) => it.json());\n  const result = _(json.tokens as TokenInfo[])\n    .filter((t) => t.decimals >= 0 && t.decimals <= 18)\n    .uniqBy((t) => t.address)\n    .reject((t) => _.includes(blacklist, t.address))\n    .value();\n\n  console.log(\n    \"non eth:\",\n    _(json.tokens as TokenInfo[])\n      .filter((t) => t.chainId !== network.id)\n      .uniqBy((t) => t.address)\n      .reject((t) => _.includes(blacklist, t.address))\n      .value()\n  );\n  delete json.tokens;\n  console.log(\"fetched total tokens:\", result.length);\n  memAllTokenInfos = result;\n  return result;\n}\n\nasync function fetchMulticallBalances(wallet: string, tokens: TokenInfo[]) {\n  console.log(\"fetching balance for\", tokens.length);\n  let remaining = _.chunk(tokens, 400);\n  for (let retries = 0; remaining.length && retries < 10; retries++) {\n    remaining = await Promise.all(_.map(remaining, (tokens) => performMulticallBalanceOf(wallet, tokens)));\n    const flattened = _.flatten(remaining);\n    if (flattened.length < 20) console.log(\"problematic:\", flattened);\n    console.log(\"remaining\", flattened.length);\n    remaining = _(flattened)\n      .shuffle()\n      .chunk(flattened.length / 10)\n      .value();\n    await sleep(0.5);\n  }\n  console.log(\"finally remaining\", _(remaining).flatten().size());\n}\n\nasync function performMulticallBalanceOf(wallet: string, tokens: TokenInfo[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t.address,\n          contractAddress: t.address,\n          abi: erc20abi,\n          calls: [{ reference: t.address, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n    _.forEach(result.results, (v) => {\n      const t = _.find(tokens, (t) => t.address === v.callsReturnContext[0].reference)!;\n      t.balance = bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16);\n    });\n    result.results = {};\n    return [];\n  } catch (e) {\n    return tokens;\n  }\n}\n\nconst blacklist = [\n  \"0x2859021eE7F2Cb10162E67F33Af2D22764B31aFf\",\n  \"0x5e3845A1d78DB544613EdbE43Dc1Ea497266d3b8\",\n  \"0x47140a767a861f7a1f3b0dd22a2f463421c28814\",\n  \"0x1c5b760f133220855340003b43cc9113ec494823\",\n  \"0x2859021ee7f2cb10162e67f33af2d22764b31aff\",\n  \"0x5e3845a1d78db544613edbe43dc1ea497266d3b8\",\n];\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { fetchBalances } from \"../positions/base/Balances\";\nimport { TokenAmount } from \"../positions/base/Position\";\nimport { to3 } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { currentNetwork } from \"../positions/consts\";\n\nconst STORAGE_KEY = \"Wallets:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"[]\") as string[];\nconst saveToStorage = (data: string[]) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\ntype WalletBalances = Record<string, TokenAmount[]>;\n\nconst WalletsState = createStore({\n  name: \"WalletsState\",\n\n  initialState: {\n    wallets: [] as string[],\n    balances: {} as Record<string, WalletBalances>,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    add: (address: string) => async (api) => {\n      const current = api.getState().wallets;\n      saveToStorage(_.uniq(_.concat(current, address)));\n      await load(api);\n    },\n\n    delete: (address: string) => async (api) => {\n      const current = api.getState().wallets;\n      const wallets = _.filter(current, (a) => a !== address);\n      saveToStorage(wallets);\n      api.setState({ wallets });\n      await load(api);\n    },\n  },\n});\n\nasync function load({ getState, setState }: StoreActionApi<typeof WalletsState.initialState>) {\n  console.log(\"LOAD wallets\");\n  const wallets = _.merge(loadFromStorage(), getState().wallets);\n  setState({ wallets });\n\n  const network = await currentNetwork();\n  if (!network) return;\n\n  for (const wallet of wallets) {\n    const fetched = await fetchBalances(PositionFactory.oracle, network, wallet);\n    const balances = _.merge({}, getState().balances, { [wallet]: fetched });\n    setState({ balances });\n  }\n}\n\nexport const useWalletsRows = createHook(WalletsState, { selector: (state) => state.wallets });\n\nexport const useWalletsBalancesRows = createHook(WalletsState, {\n  selector: createSelector(\n    (state) => state.balances,\n    (allbalances) =>\n      _(allbalances)\n        .flatMap((balances, wallet) =>\n          _.flatMap(balances, (amounts, network) =>\n            _.map(amounts, (t) => ({\n              id: `${wallet}:${network}:${t.asset.name}`,\n              wallet,\n              network,\n              asset: t.asset.name,\n              amount: to3(t.amount, 18).toNumber() / 1000,\n              value: to3(t.value, 18).toNumber() / 1000,\n            }))\n          )\n        )\n        .filter((r) => r.value >= 1)\n        .sortBy((r) => r.value)\n        .reverse()\n        .value()\n  ),\n});\n","import React from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemButton, ListItemText, TextField } from \"@mui/material\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { useAddWalletDialog } from \"../state/AddWalletDialogState\";\nimport _ from \"lodash\";\nimport { useWalletsRows } from \"../state/WalletsState\";\n\nexport const AddWalletBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddWalletDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Wallet\n    </Button>\n  );\n};\n\nexport const AddWalletDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddWalletDialog();\n  const [wallets, walletsActions] = useWalletsRows();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => walletsActions.add(state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Wallet</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Wallet Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n\n          <div>Tracking:</div>\n          <List>\n            {_.map(wallets, (w) => (\n              <ListItem key={w} disablePadding>\n                <ListItemButton>\n                  <ListItemText primary={w} onClick={() => appStateActions.withLoading(() => walletsActions.delete(w))} />\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button } from \"@mui/material\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\nimport { AddWalletBtn } from \"./AddWalletDialog\";\n\nexport const AppHeader = () => (\n  <div style={{ fontSize: \"medium\", minWidth: \"42em\" }}>\n    <br />\n    <br />\n\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ConnectBtn />\n      <AddWalletBtn />\n      <AddPositionBtn />\n    </div>\n\n    <div />\n    <WalletInfo />\n    <div />\n\n    <br />\n  </div>\n);\n\nconst ConnectBtn = () => {\n  const [isConnected, actions] = useIsAppConnected();\n\n  return (\n    <Button variant={\"contained\"} size={\"large\"} onClick={actions.connect}>\n      {isConnected ? \"Refresh\" : \"Connect\"}\n    </Button>\n  );\n};\n\nconst WalletInfo = () => {\n  const [state] = useAppState();\n  return (\n    <div>\n      <br />\n      <div>Network 🌐 {state.network?.name}</div>\n      <div>Wallet 🔑 {state.wallet}</div>\n      <div>Balance 💰 {fmt18(state.balance)}</div>\n    </div>\n  );\n};\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      positionData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n","import React, { useEffect, useMemo } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport { ListItem, ListItemText } from \"@mui/material\";\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Position\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    width: 100,\n    align: \"center\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => {\n      const value = v.value as Threat[];\n      if (!value.length) return \"🟢\";\n      return value.map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"value\",\n    headerName: \"Market Value\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", width: 450, align: \"left\", headerAlign: \"center\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  const total = useMemo(() => commafy(_.reduce(rows, (sum, row) => sum + row.value, 0).toFixed(0)), [rows]);\n\n  return (\n    <div hidden={!rows.length} style={{ height: \"100%\", width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <ListItem>\n        <ListItemText>Total Positions Market Value: $ {total}</ListItemText>\n      </ListItem>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.positionData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { useWalletsBalancesRows } from \"../state/WalletsState\";\nimport { useAllPositionsReady } from \"../state/AllPositionsState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\nimport { ListItem, ListItemText } from \"@mui/material\";\n\nconst columns: GridColDef[] = [\n  { field: \"wallet\", headerName: \"Wallet\", width: 450, align: \"left\" },\n  { field: \"network\", headerName: \"Network\", width: 80, align: \"left\", headerAlign: \"center\" },\n  { field: \"asset\", headerName: \"Asset\", width: 150, align: \"left\", headerAlign: \"center\" },\n  {\n    field: \"value\",\n    headerName: \"Market Value\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n    headerAlign: \"center\",\n  },\n  {\n    field: \"amount\",\n    headerName: \"Amount\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => commafy(_.toString(v.value)),\n    sortable: true,\n    headerAlign: \"center\",\n  },\n];\n\nexport const AllBalancesTable = () => {\n  const [appState, appActions] = useAppState();\n  const [isready] = useAllPositionsReady();\n  const [rows, actions] = useWalletsBalancesRows(null);\n\n  useEffect(() => {\n    if (appState.network.id && isready) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions, isready]);\n\n  const click = (p: any) => {};\n\n  const total = useMemo(() => commafy(_.reduce(rows, (sum, row) => sum + row.value, 0).toFixed(0)), [rows]);\n\n  return (\n    <div hidden={!rows.length || !isready} style={{ height: \"100%\", width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <ListItem>\n        <ListItemText>Total Wallets Market Value: $ {total}</ListItemText>\n      </ListItem>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useAppState } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { AllBalancesTable } from \"./ui/AllBalancesTable\";\nimport { AddWalletDialog } from \"./ui/AddWalletDialog\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n        <AllBalancesTable />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <AddWalletDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [state] = useAppState();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={state.loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Position, PositionArgs, TokenAmount } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { Address, BigUIntValue, BytesValue, ContractFunction, ProxyProvider, SmartContract } from \"@elrondnetwork/erdjs/out\";\nimport _ from \"lodash\";\nimport BigNumberExt from \"bignumber.js\";\nimport BN from \"bn.js\";\n\nexport namespace ElrondMaiar {\n  export const network = { id: -508, name: \"Elrond\", shortname: \"egld\" };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n  };\n\n  export async function balances(oracle: PriceOracle, address: string) {\n    const usdc = tokens.USDC();\n    const mex = tokens.MEX();\n    const lkmex = tokens.LKMEX();\n    const egld = tokens.EGLD();\n\n    const [esdts, balanceEGLD] = await Promise.all([\n      provider.getAddressEsdtList(new Address(address)),\n      provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString())),\n    ]);\n    const balanceUSDC = bn(_.find(esdts, (t) => t.tokenIdentifier === usdc.tokenId)?.balance);\n    const balanceMEX = bn(_.find(esdts, (t) => t.tokenIdentifier === mex.tokenId)?.balance);\n    const balanceLKMEX = bn(_.find(esdts, (t) => t.tokenIdentifier === lkmex.tokenId)?.balance);\n    const balanceWEGLD = bn(_.find(esdts, (t) => t.tokenIdentifier === egld.tokenId)?.balance);\n\n    const [vEGLD, vWEGLD, vUSDC, vMEX, vLKMEX] = await Promise.all([\n      oracle.valueOf(network.id, egld, balanceEGLD),\n      oracle.valueOf(network.id, egld, balanceWEGLD),\n      oracle.valueOf(network.id, usdc, balanceUSDC),\n      oracle.valueOf(network.id, mex, balanceMEX),\n      oracle.valueOf(network.id, mex, balanceLKMEX),\n    ]);\n    return [\n      { asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: vEGLD },\n      { asset: egld, amount: balanceWEGLD, value: vWEGLD },\n      { asset: usdc, amount: balanceUSDC, value: vUSDC },\n      { asset: mex, amount: balanceMEX, value: vMEX },\n      { asset: lkmex, amount: balanceLKMEX, value: vLKMEX },\n    ] as TokenAmount[];\n  }\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n  export const Strategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\",\n      farm: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n    }),\n  };\n\n  export class Farm implements Position {\n    mex = tokens.MEX();\n\n    data = {\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => network;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () =>\n      this.strategy.assets.length === 2\n        ? [\n            {\n              asset: this.strategy.assets[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n            {\n              asset: this.strategy.assets[1],\n              amount: this.data.amount1,\n              value: this.data.value1,\n            },\n          ]\n        : [\n            {\n              asset: this.strategy.assets[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n          ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [esdts, farmingTokenReserve, token0Id, reserves] = await Promise.all([\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      const [token0r, token1r, lpTotalSupply] = reserves;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      if (!farmNfts.length) return;\n\n      this.data.lpBalanceStaked = farmNfts.map((nft) => parseAmountLpFromAttributes(nft.attributes)).reduce((sum, b) => sum.add(b), zero);\n\n      this.data.rewardAmount = await Promise.all(farmNfts.map((nft) => callAndParseGetPendingRewards(farm, nft.balance, nft.attributes))).then((r) =>\n        r.reduce((sum, r) => sum.add(r), zero)\n      );\n\n      const percentOfPool = this.data.lpBalanceStaked.mul(ether).div(lpTotalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl, this.data.rewardValue] = await Promise.all([\n        this.oracle.valueOf(network.id, this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], token1.muln(2).mul(farmingTokenReserve).div(lpTotalSupply)),\n        this.oracle.valueOf(network.id, this.mex, this.data.rewardAmount),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n\n  //#[derive(TopEncode, TopDecode, NestedEncode, NestedDecode, TypeAbi, Clone)]\n  // pub struct FarmTokenAttributes<M: ManagedTypeApi> {\n  //     pub reward_per_share: BigUint<M>,\n  //     pub original_entering_epoch: u64,\n  //     pub entering_epoch: u64,\n  //     pub apr_multiplier: u8,\n  //     pub with_locked_rewards: bool,\n  //     pub initial_farming_amount: BigUint<M>,\n  //     pub compounded_reward: Bigu32,\n  //     pub current_farm_amount: BigUint<M>,\n  // }\n  //000000000000000008 08b17d48809d7fc0 00000000000001e9 00000000000001e9 0f 01 00000008 77a3ec302d1cd52c 00000000 00000009 07029ad6d2a4b07d94\n  function parseAmountLpFromAttributes(attributes: string) {\n    let hex = base64(attributes).toString(\"hex\");\n    if (hex.length % 2 !== 0) {\n      hex = \"0\" + hex;\n    }\n\n    let bytes = [];\n    for (let i = 0; i < hex.length - 1; i += 2) bytes.push(hex[i] + hex[i + 1]);\n\n    const perShare_z = parseInt(bytes[0], 16);\n    const origEpoch_z = 8;\n    const enterEpoch_z = 8;\n    const apr_z = 1;\n    const locked_z = 1;\n    const lp_z_z = 4;\n    const lp_z_index = perShare_z + origEpoch_z + enterEpoch_z + apr_z + locked_z + lp_z_z;\n    const lp_z = parseInt(bytes[lp_z_index], 16);\n    const lp_index = lp_z_index + 1;\n    return bn(_.slice(bytes, lp_index, lp_index + lp_z).join(\"\"), 16);\n  }\n\n  async function callAndParseGetPendingRewards(farm: SmartContract, balanceFarmNFT: BN, attributes: string) {\n    const result = await farm.runQuery(provider, {\n      func: new ContractFunction(\"calculateRewardsForGivenPosition\"),\n      args: [new BigUIntValue(BigNumberExt.max(balanceFarmNFT.toString())), new BytesValue(Buffer.from(attributes, \"base64\"))],\n    });\n    result.assertSuccess();\n    return base64(result.returnData[0]);\n  }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n"],"sourceRoot":""}