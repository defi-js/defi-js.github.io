{"version":3,"sources":["positions/base/PositionFactory.ts","positions/base/PriceOracle.ts","reportWebVitals.ts","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","state/AppState.ts","state/PositionsState.ts","App.tsx","index.tsx","Homepage.tsx","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","positions/index.ts"],"names":["coingeckoIds","eth","bsc","poly","PriceOracle","prices","a","getNetwork","network","coingeckoId","_","find","v","k","shortname","addresses","fetch","join","response","json","result","mapKeys","Web3","utils","toChecksumAddress","mapValues","bn18","usd","value","isEmpty","Error","merge","this","token","amount","address","fetchPrices","mul","div","ether","registry","oracle","types","keys","args","type","JSON","stringify","id","uniqueId","PositionFactory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","middlewares","add","storeState","next","arg","console","log","key","getState","AppState","createStore","name","initialState","loading","useLegacyTx","wallet","balance","zero","actions","setUseLegacyTx","setState","dispatch","connect","withLoading","ethereum","window","alert","setWeb3Instance","enable","on","onConnect","store","t","message","account","bn","web3","getBalance","useAppState","createHook","require","PositionsState","positions","positions_resolved","load","addPosition","position","create","data","p","getArgs","localStorage","setItem","claim","posId","delete","parse","getItem","api","resolveForCurrentNetwork","resolvedCurrent","Promise","all","values","filter","map","fmt","getAmounts","getPendingRewards","fmtHealth","getHealth","amounts","pending","health","useMyPositions","selector","state","useAddPosition","createSelector","allTypes","isValid","isAddress","user","amnt","asset","fmt18","split","length","darkTheme","createTheme","palette","mode","UseLegacyTx","FormGroup","FormControlLabel","control","Switch","checked","onChange","e","target","label","ConnectBtn","isConnected","Button","variant","size","onClick","WalletInfo","Loading","Backdrop","sx","color","zIndex","theme","drawer","open","CircularProgress","AddPosition","useState","myState","setMyState","addPosState","FormControl","width","InputLabel","Select","labelId","event","MenuItem","TextField","marginTop","fullWidth","disabled","columns","field","headerName","renderCell","params","ListItemButton","ListItemText","primary","count","setCount","PositionsUI","useMemo","style","height","rows","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","href","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","hidden","maxWidth","left","top","Geom1","Geom2","document","getElementById","Severity","Farm","asset0","asset1","lpToken","poolId","masterchef","contracts","Pancakeswap_Masterchef","cake","erc20s","CAKE","options","networks","methods","userInfo","call","getReserves","token0","totalSupply","reserves","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","amount0","amount1","valueOf","pendingCake","deposit","from","send","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","contract","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","getPositionData","healthFactor","lt","severity","Critical","info","totalCollateralETH","totalDebtETH","getBalanceReward","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_iPERCENT_OF_SUPPLY","COMP","supplied","getAccountLiquidityWithInterest","accountLiquidity","accountShortfall","minLiquidity","divn","isZero","to18","borrowBalanceCurrent","borrowBalance","Compound_cUSDC","balanceOfUnderlying","supplyBalance","claimAndTransferAllCompToOwner","Loops","register","BUSD","WBNB","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD"],"mappings":"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","file":"static/js/main.6da6b8e7.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position {\n    if (!registry[args.type]) throw new Error(`unknown type ${args.type} for ${JSON.stringify(args)}`);\n\n    if (!args.id) args.id = _.uniqueId(args.type);\n\n    return registry[args.type](args, oracle);\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport { bn18, ether, getNetwork, Token } from \"@defi.org/web3-candies\";\n\nconst coingeckoIds = {\n  eth: \"ethereum\",\n  bsc: \"binance-smart-chain\",\n  poly: \"polygon-pos\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(...addresses: string[]): Promise<{ [address: string]: BN }> {\n    const network = await getNetwork();\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k == network.shortname)!;\n    const response = await fetch(`https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => Web3.utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    if (_.isEmpty(result)) throw new Error(`no price for ${addresses}`);\n    _.merge(this.prices, result);\n\n    return result;\n  }\n\n  async valueOf(token: Token, amount: BN): Promise<BN> {\n    if (!this.prices[token.address]) await this.fetchPrices(token.address);\n\n    return amount.mul(this.prices[token.address]).div(ether);\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import Web3 from \"web3\";\nimport { createHook, createStore, defaults, StoreActionApi } from \"react-sweet-state\";\nimport { account, bn, getNetwork, Network, setWeb3Instance, web3, zero } from \"@defi.org/web3-candies\";\n\ndefaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n  const result = next(arg);\n  console.log(storeState.key, \":\", storeState.getState());\n  return result;\n});\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    loading: false,\n    useLegacyTx: false,\n    wallet: \"\",\n    balance: zero,\n    network: {} as Network,\n  },\n\n  actions: {\n    setUseLegacyTx:\n      (useLegacyTx: boolean) =>\n      ({ setState, dispatch }) => {\n        setState({ useLegacyTx });\n        // dispatch((store) => {});\n      },\n\n    connect:\n      () =>\n      async ({ setState, dispatch }) => {\n        await dispatch(withLoading)(async () => {\n          const ethereum = (window as any).ethereum;\n          if (!ethereum) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          setWeb3Instance(new Web3(ethereum));\n          ethereum.enable();\n\n          ethereum.on(\"accountsChanged\", () => {\n            onConnect(setState);\n          });\n          ethereum.on(\"networkChanged\", () => {\n            onConnect(setState);\n          });\n\n          await onConnect(setState);\n        });\n      },\n  },\n});\n\nconst withLoading = (store: StoreActionApi<typeof AppState.initialState>) => async (t: () => Promise<void>) => {\n  try {\n    store.setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message}`);\n  } finally {\n    store.setState({ loading: false });\n  }\n};\n\nasync function onConnect(setState: any) {\n  const wallet = await account();\n  setState({ wallet, network: await getNetwork(), balance: bn(await web3().eth.getBalance(wallet)) });\n}\n\nexport const useAppState = createHook(AppState);\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position, PositionArgs, Threat, TokenAmount } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { fmt18, getNetwork } from \"@defi.org/web3-candies\";\nimport Web3 from \"web3\";\n\nrequire(\"../positions\");\n\nexport type PositionResolved = { id: string; type: string; amounts: string; pending: string; health: string };\n\nconst PositionsState = createStore({\n  name: \"PositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n    positions_resolved: {} as Record<string, PositionResolved>,\n  },\n\n  actions: {\n    load:\n      () =>\n      async ({ dispatch }) => {\n        await dispatch(load);\n      },\n\n    addPosition:\n      (args: PositionArgs) =>\n      async ({ getState, dispatch }) => {\n        const position = PositionFactory.create(args);\n        if (position.getNetwork() != (await getNetwork())) throw new Error(`wrong network`);\n\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        data[position.getArgs().id] = position.getArgs();\n        localStorage.setItem(\"positions\", JSON.stringify(data));\n\n        await dispatch(load);\n      },\n\n    claim:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].claim(useLegacyTx);\n      },\n\n    delete:\n      (posId: string) =>\n      async ({ getState, dispatch }) => {\n        const positions = _.mapValues(getState().positions, (p) => p.getArgs());\n        delete positions[posId];\n        localStorage.setItem(\"positions\", JSON.stringify(positions));\n\n        const positions_resolved = JSON.parse(localStorage.getItem(\"positions_resolved\") || \"{}\") as Record<string, PositionResolved>;\n        delete positions_resolved[posId];\n        localStorage.setItem(\"positions_resolved\", JSON.stringify(positions_resolved));\n\n        await dispatch(load);\n      },\n  },\n});\n\nasync function load(api: any) {\n  console.log(\"LOAD\");\n  const { setState } = api;\n  const data = JSON.parse(localStorage.getItem(\"positions\") || \"{}\") as Record<string, PositionArgs>;\n  const positions = _.mapValues(data, (args) => PositionFactory.create(args));\n  setState({ positions });\n\n  const positions_resolved = JSON.parse(localStorage.getItem(\"positions_resolved\") || \"{}\") as Record<string, PositionResolved>;\n  const resolvedCurrent = await resolveForCurrentNetwork(positions);\n\n  _.merge(\n    positions_resolved,\n    _.mapKeys(resolvedCurrent, (p) => p.id)\n  );\n\n  localStorage.setItem(\"positions_resolved\", JSON.stringify(positions_resolved));\n\n  setState({ positions_resolved });\n}\n\nasync function resolveForCurrentNetwork(positions: Record<string, Position>) {\n  const network = await getNetwork();\n  return await Promise.all(\n    _(positions)\n      .values()\n      .filter((p) => p.getNetwork().id == network.id)\n      .map(async (position) => ({\n        id: position.getArgs().id,\n        type: position.getArgs().type,\n        amounts: fmt(await position.getAmounts()),\n        pending: fmt(await position.getPendingRewards()),\n        health: fmtHealth(await position.getHealth()),\n      }))\n      .value()\n  );\n}\n\nexport const useMyPositions = createHook(PositionsState, { selector: (state) => _.values(state.positions_resolved) });\nexport const useAddPosition = createHook(PositionsState, {\n  selector: createSelector(\n    (_) => null,\n    (_, args: PositionArgs) => args,\n    (state, args) => ({\n      allTypes: PositionFactory.allTypes(),\n      isValid: Web3.utils.isAddress(args.user) && Web3.utils.isAddress(args.address),\n    })\n  ),\n});\n\nfunction fmt(amnt: TokenAmount[]) {\n  return _(amnt)\n    .map((a) => `${a.asset.name}: ${fmt18(a.amount).split(\".\")[0]} = $${fmt18(a.value).split(\".\")[0]}`)\n    .join(\" + \");\n}\n\nfunction fmtHealth(health: Threat[]) {\n  if (!health.length) return \"🟢\";\n  return health.map((t) => t.message).join(\"⚠️\");\n}\n","import React, { useMemo, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  Backdrop,\n  Button,\n  CircularProgress,\n  createTheme,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  ListItemButton,\n  ListItemText,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Switch,\n  TextField,\n  ThemeProvider,\n} from \"@mui/material\";\nimport { useAppState } from \"./state/AppState\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\nimport { useAddPosition, useMyPositions } from \"./state/PositionsState\";\nimport { PositionArgs } from \"./positions/base/Position\";\nimport Web3 from \"web3\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <div className=\"Header\">\n          <p />\n          <div className=\"Connect\">\n            <ConnectBtn />\n            <UseLegacyTx />\n          </div>\n\n          <p />\n          <WalletInfo />\n          <p />\n        </div>\n\n        <p />\n\n        <AddPosition />\n\n        <p />\n\n        <PositionsUI />\n\n        <p />\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst UseLegacyTx = () => {\n  const [state, actions] = useAppState();\n  return (\n    <FormGroup>\n      <FormControlLabel control={<Switch checked={state.useLegacyTx} onChange={(e: any) => actions.setUseLegacyTx(e.target.checked)} />} label=\"Use Legacy Transaction\" />\n    </FormGroup>\n  );\n};\n\nconst ConnectBtn = () => {\n  const [state, actions] = useAppState();\n  const isConnected = Web3.utils.isAddress(state.wallet);\n  return (\n    <Button variant={\"contained\"} size={\"large\"} onClick={actions.connect}>\n      {isConnected ? \"Refresh\" : \"Connect\"}\n    </Button>\n  );\n};\n\nconst WalletInfo = () => {\n  const [state] = useAppState();\n  return (\n    <div>\n      <p>Network 🌐 {state.network?.name}</p>\n      <p>Wallet 🔑 {state.wallet}</p>\n      <p>Balance 💰 {fmt18(state.balance)} ETH</p>\n    </div>\n  );\n};\n\nconst Loading = () => {\n  const [state] = useAppState();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={state.loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nconst AddPosition = () => {\n  const [myState, setMyState] = useState(() => ({} as PositionArgs));\n  const [addPosState, actions] = useAddPosition(myState);\n\n  return (\n    <div>\n      <FormControl sx={{ width: \"100%\" }}>\n        <InputLabel id=\"demo-simple-select-label\">Position Type</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={myState.type || \"\"}\n          label=\"Position Type\"\n          onChange={(event: SelectChangeEvent) => setMyState({ ...myState, type: event.target.value })}\n        >\n          <MenuItem value=\"\" />\n          {addPosState.allTypes.map((type) => (\n            <MenuItem key={type} value={type}>\n              {type}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <TextField\n        sx={{ marginTop: \"2%\" }}\n        fullWidth\n        id=\"outlined-basic\"\n        variant=\"outlined\"\n        label=\"Target Address\"\n        onChange={(event: any) => setMyState({ ...myState, address: event.target.value })}\n      />\n\n      <TextField\n        sx={{ marginTop: \"2%\" }}\n        fullWidth\n        id=\"outlined-basic\"\n        variant=\"outlined\"\n        label=\"User Address\"\n        onChange={(event: any) => setMyState({ ...myState, user: event.target.value })}\n      />\n\n      <Button\n        sx={{ marginTop: \"2%\" }}\n        variant={\"contained\"}\n        size={\"large\"}\n        onClick={() => actions.addPosition(myState).then(() => setMyState({} as PositionArgs))}\n        disabled={!addPosState.isValid || !myState.type}\n      >\n        Add Position\n      </Button>\n    </div>\n  );\n};\n\nconst RenderCellClaim = (params: any) => {\n  const [state] = useAppState();\n  const [, actions] = useMyPositions();\n  return (\n    <ListItemButton onClick={() => actions.claim(params.id, state.useLegacyTx)}>\n      <ListItemText primary=\"Claim\" />\n    </ListItemButton>\n  );\n};\nconst RenderCellDelete = (params: any) => {\n  const [count, setCount] = useState(0);\n  const [, actions] = useMyPositions();\n  return (\n    <ListItemButton\n      onClick={() => {\n        if (count > 4) {\n          setCount(0);\n          return actions.delete(params.id);\n        } else setCount(count + 1);\n      }}\n    >\n      <ListItemText primary=\"Delete\" />\n    </ListItemButton>\n  );\n};\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Type\", width: 500 },\n  { field: \"amounts\", headerName: \"Amounts\", width: 500 },\n  { field: \"pending\", headerName: \"Pending\", width: 200 },\n  { field: \"health\", headerName: \"Health\", width: 50 },\n  {\n    field: \"claim\",\n    headerName: \"Claim\",\n    width: 50,\n    type: \"actions\",\n    renderCell: RenderCellClaim,\n  },\n  {\n    field: \"delete\",\n    headerName: \"Delete\",\n    width: 50,\n    type: \"actions\",\n    renderCell: RenderCellDelete,\n  },\n];\n\nconst PositionsUI = () => {\n  const [state] = useAppState();\n  const [positions, actions] = useMyPositions();\n  useMemo(() => {\n    if (state.network.id) actions.load().then();\n  }, [state.network, actions]);\n\n  return (\n    <div style={{ height: 500, width: \"90%\" }}>\n      <DataGrid rows={positions} columns={columns} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, contracts, erc20s, networks, Token } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\n\nexport namespace Pancakeswap {\n  const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {\n      args.address = this.masterchef.options.address;\n    }\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.bsc;\n    }\n\n    getAssets() {\n      return [this.asset0, this.asset1];\n    }\n\n    getRewardAssets() {\n      return [this.cake];\n    }\n\n    async getHealth() {\n      return [];\n    }\n\n    async getAmounts() {\n      const [userInfo, reserves, token0, totalSupply] = await Promise.all([\n        await this.masterchef.methods.userInfo(this.poolId, this.args.user).call(),\n        await this.lpToken.methods.getReserves().call(),\n        await this.lpToken.methods.token0().call(),\n        await this.lpToken.methods.totalSupply().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() == this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 == _reserve0 ? _reserve1 : _reserve0;\n\n      const amountLP = bn(userInfo.amount);\n      const amount0 = bn(r0).mul(amountLP).div(bn(totalSupply));\n      const amount1 = bn(r1).mul(amountLP).div(bn(totalSupply));\n      return [\n        {\n          asset: this.asset0,\n          amount: amount0,\n          value: await this.oracle.valueOf(this.asset0, amount0),\n        },\n        {\n          asset: this.asset1,\n          amount: amount1,\n          value: await this.oracle.valueOf(this.asset1, amount1),\n        },\n      ];\n    }\n\n    async getPendingRewards() {\n      const amount = bn(await this.masterchef.methods.pendingCake(this.poolId, this.args.user).call());\n      return [\n        {\n          asset: this.cake,\n          amount,\n          value: await this.oracle.valueOf(this.cake, amount),\n        },\n      ];\n    }\n\n    async claim(useLegacyTx: boolean) {\n      if (this.args.user != (await account())) throw new Error(\"only user able to claim\");\n      await this.masterchef.methods.deposit(this.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n  user: string;\n  args?: string[];\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n  // /**\n  //  * USD, 18 decimals\n  //  */\n  // getTVL(): Promise<BN>;\n\n  // /**\n  //  * Percent spot annual rate without compounding, 18 decimals (123% == 1.23*10^18).\n  //  */\n  // getAPR(): Promise<BN>;\n\n  // getGovernance\n  getHealth(): Promise<Threat[]>;\n  getAmounts(): Promise<TokenAmount[]>;\n  getPendingRewards(): Promise<TokenAmount[]>;\n\n  claim(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n  info: any;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, bn18, contract, erc20s, fmt18, networks, to18 } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\n\nexport namespace Loops {\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    async getHealth() {\n      const data = await this.instance.methods.getPositionData().call();\n      const hf = bn(data.healthFactor);\n      if (hf.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n            info: { args: this.args, data },\n          },\n        ];\n      }\n      return [];\n    }\n\n    async getAmounts() {\n      const { totalCollateralETH, totalDebtETH } = await this.instance.methods.getPositionData().call();\n      return [\n        {\n          asset: this.asset,\n          amount: bn(totalCollateralETH),\n          value: await this.oracle.valueOf(this.weth, bn(totalCollateralETH)),\n        },\n        {\n          asset: this.asset,\n          amount: bn(totalDebtETH),\n          value: await this.oracle.valueOf(this.weth, bn(totalDebtETH)),\n        },\n      ];\n    }\n\n    async getPendingRewards() {\n      const amount = bn(await this.instance.methods.getBalanceReward().call());\n      const value = await this.oracle.valueOf(this.aave, amount);\n      return [\n        {\n          asset: this.rewardAsset,\n          amount,\n          value,\n        },\n      ];\n    }\n\n    async claim(useLegacyTx: boolean) {\n      await this.instance.methods.claimRewardsToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_iPERCENT_OF_SUPPLY = 400; // 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    async getHealth() {\n      const [supplied] = await this.getAmounts();\n      const { accountLiquidity, accountShortfall } = await this.instance.methods.getAccountLiquidityWithInterest().call();\n      const minLiquidity = supplied.value.divn(this.WARN_LIQUIDITY_iPERCENT_OF_SUPPLY);\n\n      if (!bn(accountShortfall).isZero() || bn(accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n            info: { args: this.args, accountLiquidity, accountShortfall },\n          },\n        ];\n      }\n      return [];\n    }\n\n    async getAmounts() {\n      const borrowBalance = to18(await this.instance.methods.borrowBalanceCurrent().call(), 6);\n      const supplyBalance = to18(await erc20s.eth.Compound_cUSDC().methods.balanceOfUnderlying(this.args.address).call(), 6);\n      return [\n        {\n          asset: this.asset,\n          amount: supplyBalance,\n          value: supplyBalance,\n        },\n        {\n          asset: this.asset,\n          amount: borrowBalance,\n          value: borrowBalance,\n        },\n      ];\n    }\n\n    async getPendingRewards() {\n      const amount = bn(await this.instance.methods[\"claimComp()\"]().call());\n      return [\n        {\n          asset: this.rewardAsset,\n          amount,\n          value: await this.oracle.valueOf(this.rewardAsset, amount),\n        },\n      ];\n    }\n\n    async claim(useLegacyTx: boolean) {\n      await this.instance.methods.claimAndTransferAllCompToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"@defi.org/web3-candies\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\n\n// export async function registerAll() {\nPositionFactory.register({\n  \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n  \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n  \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n\n  \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n  \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n});\n// }\n"],"sourceRoot":""}