{"version":3,"sources":["assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positionsv1/base/consts.ts","state/AppState.ts","positionsv1/base/PositionFactory.ts","ui/AppHeader.tsx","positionsv1/base/PriceOracle.ts","positionsv1/Pancakeswap.ts","positionsv1/base/PositionV1.ts","positionsv1/Loops.ts","positionsv1/Revault.ts","positionsv1/Unicly.ts","positionsv1/TokenBalances.ts","positionsv1/Uniswap.ts","positionsv1/OffChain.ts","positionsv1/AlphaHomora.ts","positionsv1/Balancer.ts","positionsv1/ElrondMaiar.ts","positionsv1/TraderJoe.ts","positionsv1/Ribbon.ts","positionsv1/LooksRare.ts","positionsv1/SushiSwap.ts","positionsv1/Fodl.ts","positionsv1/QuickSwap.ts","positionsv1/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx"],"names":["erc20s","_","merge","erc20sOrig","networks","networksOrig","egld","id","name","shortname","off","currentNetwork","a","netId","bn","window","ethereum","chainId","toNumber","console","log","find","n","sendWithTxType","tx","useLegacyTx","account","from","type","send","isNetworkDisabled","network","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","setState","_withLoading","showAlert","alert","clickNetwork","networkId","getState","_ethereum","removeAllListeners","on","_onConnect","request","method","_switchNetwork","t","message","stack","setWeb3Instance","Web3","Error","params","utils","numberToHex","useAppState","createHook","useIsAppConnected","selector","state","isAddress","useIsLoading","useAppActions","AppHeader","style","display","flexDirection","justifyContent","margin","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","map","ToggleButton","textTransform","disabled","coingeckoIds","eth","bsc","poly","arb","avax","oeth","PriceOracle","warm","prices","USD","ether","token","tokenId","symbol","address","price","this","getId","amount","isZero","fetchPricesElrond","fetchPrices","toString","zero","mul","div","positions","bynetwork","groupBy","getNetwork","coingeckoFetches","keys","filter","getAssets","concat","getRewardAssets","flatten","uniq","elrondFetch","Promise","all","addresses","isEmpty","coingeckoId","v","k","url","join","fetch","response","json","result","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","JSON","stringify","data","inputs","results","registry","oracle","isElrondAddress","startsWith","e","types","args","uniqueId","current","trim","length","isOffChainSymbol","PositionFactory","Severity","register","Farm","BUSD","WBNB","erc20","require","CAKE","BTCB","DOT","ADA","LINK","DOGE","LP","ORBS","asset0","asset1","lpToken","poolId","masterchef","contract","cake","chef","options","lp","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getName","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","encodeABI","deposit","then","total0","total1","val0","val1","add","Pancakeswap","Loops","AaveLoop","CompoundLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","aave","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","sub","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","owner","claimRewardsToOwner","WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","SingleVault","RevaStake","REVA","revault","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","staking","pendingAmount","userPoolInfo","poolInfo","Revault","Unicly","XUnicFarm","Strategies","uPunks","uJenny","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","getxUNICRate","xunicrate","totalLPTokens","TokenBalance","mcap","nativeTokens","WMATIC","WAVAX","NativeTokenBalance","getBalance","forEach","input","TokenBalances","maxUint128","pow","subn","V3LP","WBTC","token1","IL_WARN","nftPositionManager","nftManager","principal0","principal1","valueIfHodl","valueNow","ilValue","il","pending0","pending1","pendingValue0","pendingValue1","totalFeesValue","gt","High","pos","decreaseLiquidity","maxUint256","res","loadFromPositionGraph","loadTVL","fee","collect","position","pool","totalValueLockedUSD","depositedToken0","withdrawnToken0","depositedToken1","withdrawnToken1","principalValue0","principalValue1","collectedFeesToken0","collectedValue0","collectedFeesToken1","collectedValue1","factory","getPool","a0","a1","v0","v1","Uniswap","AssetPosition","zeroAddress","OffChain","LYF","WETHe","WBTCe","alphaHomoraBank","maxHistoryBlocks","supply0","supply1","borrow0","borrow1","ilAmount","debtRatio","getPositionInfo","lpSupplied","collateralSize","farmAbi","internalType","outputs","stateMutability","nft","collToken","getUnderlyingToken","collId","totalLPs","share","getPositionDebts","debts","indexOf","totalValue0","totalValue1","AlphaHomora","DAI","USDT","overridePrice","balToken","balV2","gaugeAddress","gauge","bal","amounts","values","loadFromPool","lp_token","claimable_tokens","lpTokenAddress","workingBalance","totalWorkingBalance","bpt","totalBptsStaked","bptTotalSupply","bptBalance","getPoolTokens","poolTokens","every","eqIgnoreCase","balances","poolAmounts","poolValues","reduce","sum","b","x","Balancer","esdt","USDC_EGLD","assets","farm","L_USDC_EGLD","MEX_EGLD","L_MEX_EGLD","mex","lpBalanceStaked","getESDTs","getTotalSupply","farmEsdts","pairEsdts","totalLPSupply","totalLPStaked","tokenIdentifier","balance","asset0InPair","asset1InPair","asset0TotalValue","asset1TotalValue","esdts","lpNameSuffix","split","lps","MexFarm","MEX","L_MEX","totalAssetStaked","farmNftWrapper","creator","decimals","dec","get","ElrondMaiar","FarmStrategies","MexFarmStrategies","reward","pendingTokens","lpTotalSupply","lpAmount","pendingJoe","TraderJoe","ThetaVault","vaultAddress","rbn","strike","depositReceipts","unredeemedShares","liquidityGauge","pricePerShare","fbalance","fratio","staked","totalBalance","total","currentOption","bn9","Ribbon","Staking","AutoCompund","looks","checkPending","calculateSharesValueInLOOKS","calculatePendingRewards","totalShares","calculateSharePriceInLOOKS","stakedLooks","pendingEth","sharePrice","tvlAmount","LooksRare","getFarmContract","getRewardContract","pendingSushi","SushiSwap","Fodl","XFodlStake","fodl","xfodl","myXfodl","xfodlTotalSupply","fodlStaked","orbs","stakingAddress","earned","stakingToken","stakedBalance","totalStaked","lpAddress","amount0InLp","amount1InLp","totalLpSupply","tvl_amount0","tvl_amount1","tvl_value0","tvl_value1","stake","QuickSwap","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","load","api","addPosition","create","update","newArgs","delete","posId","sendTransaction","harvest","warmup","shouldLoad","loaded","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","chain","health","marketValue","num","useAllPositions","useAllPositionsValuePerPosition","Math","round","rows","sorted","r","labels","useAllPositionsValuePerAssetClass","reduced","ext","includes","assetClass","key","ac","useAllPositionsValuePerChain","grouped","totalPerChain","totalMarketValue","grandtotal","to3","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","fmtData","positionMethods","selectedMethodArgTypes","rewardAssets","rawData","isArray","BN","fmt18","AddPositionDialogState","show","valid","allTypes","sort","setType","isValidArgs","setAddress","setInput","setName","useAddPositionDialog","AddPositionBtn","isConnected","Button","onClick","AddPositionDialog","appActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","ChartJS","ArcElement","Tooltip","Legend","columns","field","headerName","headerAlign","width","align","valueFormatter","commafy","toFixed","sortable","AllPositionsTable","appState","positionDialogActions","totalValuesPerChain","valuesPerPosition","valuesPerAssetClass","useEffect","height","ListItemText","datasets","backgroundColor","colorOf","responsive","plugins","legend","DataGrid","onCellClick","autoHeight","hideFooter","bgColors","PositionDialog","appStateActions","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","accept","hidden","addEventListener","file","files","reader","FileReader","onload","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById"],"mappings":"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","file":"static/js/main.2a9736d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {});\n\nexport const networks = _.merge({}, networksOrig, {\n  egld: { id: -508, name: \"Elrond\", shortname: \"egld\" },\n  off: { id: -1, name: \"OffChain\", shortname: \"off\" },\n});\n\nexport async function currentNetwork() {\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positionsv1/base/consts\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./PositionV1\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => PositionV1;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): PositionV1 | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = _.uniqueId(args.type + \":\" + args.address + \"-\" + args.name + \"-\");\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: PositionV1, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return web3()?.utils?.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address) || isOffChainSymbol(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isOffChainSymbol(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:OffChain:Asset\") && _.trim(address).length > 0;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1 } from \"./PositionV1\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\nimport { OffChain } from \"../OffChain\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n  [networks.oeth.id]: \"optimistic-ethereum\",\n};\n\nexport class PriceOracle {\n  warm = false;\n  prices: Record<string, BN> = {\n    USD: ether,\n  };\n\n  getId(networkId: number, token: Token) {\n    if (networkId === networks.egld.id) return (token as ElrondMaiar.ESDT).tokenId;\n    if (networkId === networks.off.id) return (token as OffChain.Asset).symbol;\n    return token.address;\n  }\n\n  overridePrice(networkId: number, token: Token, price: BN) {\n    this.prices[this.getId(networkId, token)] = price;\n  }\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const id = this.getId(networkId, token);\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (networkId === networks.egld.id) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: PositionV1[]) {\n    if (this.warm) return;\n    this.warm = true;\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[networks.egld.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n\n    try {\n      const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n      const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(addresses, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PancakeswapMasterchefV2Abi } from \"../../typechain-abi/PancakeswapMasterchefV2Abi\";\nimport { PancakeswapLpAbi } from \"../../typechain-abi/PancakeswapLpAbi\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // https://docs.pancakeswap.finance/code/migration/masterchef-v2/list-of-farms\n\n  export function register() {\n    const lp_BUSD_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BUSD/BNB\", \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_BTCB_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BTCB/BNB\", \"0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_CAKE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP CAKE/BNB\", \"0x0eD7e52944161450477ee417DE9Cd3a859b14fD0\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ORBS_BUSD = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ORBS/BUSD\", \"0xB87b857670A44356f2b70337E0F218713D2378e8\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOT_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOT/BNB\", \"0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ADA_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ADA/BNB\", \"0x28415ff2C35b65B9E5c7de82126b4015ab9d031F\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_LINK_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP LINK/BNB\", \"0x824eb9faDFb377394430d2744fa7C42916DE3eCe\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOGE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOGE/BNB\", \"0xac109C8025F272414fd9e2faA805a583708A017f\", require(\"../abi/PancakeswapLpAbi.json\"));\n\n    PositionFactory.register({\n      \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), lp_BUSD_BNB(), 3),\n      \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), lp_CAKE_BNB(), 2),\n      \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), lp_BTCB_BNB(), 11),\n      \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), lp_DOT_BNB(), 5),\n      \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), lp_ADA_BNB(), 4),\n      \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), lp_LINK_BNB(), 6),\n      \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), lp_DOGE_BNB(), 37),\n\n      \"bsc:Pancakeswap:LP:ORBS/BUSD\": (args, oracle) => new LP(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), lp_ORBS_BUSD()),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<PancakeswapMasterchefV2Abi>(require(\"../abi/PancakeswapMasterchefV2Abi.json\"), \"0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652\");\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      lp: this.lpToken.address,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLpAbi,\n      public poolId: number\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n\n  class LP extends Farm {\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpToken: Token & PancakeswapLpAbi) {\n      super(args, oracle, asset0, asset1, lpToken, -1);\n    }\n\n    async load() {\n      const [total0, total1, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpToken.address).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpToken.address).call().then(this.asset1.mantissa),\n        this.lpToken.methods.totalSupply().call().then(this.lpToken.mantissa),\n      ]);\n      const amountLP = await this.lpToken.methods.balanceOf(this.args.address).call().then(this.lpToken.mantissa);\n      this.data.amount0 = total0.mul(amountLP).div(totalSupply);\n      this.data.amount1 = total1.mul(amountLP).div(totalSupply);\n\n      let val0, val1;\n      [this.data.value0, this.data.value1, val0, val1] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, total0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, total1),\n      ]);\n      this.data.tvl = val0.add(val1);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  address: string;\n  id: string;\n  input?: string;\n  name?: string;\n};\n\nexport interface PositionV1 {\n  getName(): string;\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number | BN[] };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { PositionV1, PositionArgs, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport type { AaveSAAVEAbi } from \"../../typechain-abi/AaveSAAVEAbi\";\nimport type { CompoundCTokenAbi } from \"../../typechain-abi/CompoundCTokenAbi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Loops {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n      \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n    });\n  }\n\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements PositionV1 {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20<AaveSAAVEAbi>(\"stkAAVE\", \"0x4da27a545c0c5B758a6BA100e3a049001de870f5\", require(\"../abi/AaveSAAVEAbi.json\"));\n    aave = erc20(\"AAVE\", \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\");\n    weth = erc20s.eth.WETH();\n\n    data = {\n      contract: this.instance.options.address,\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH.sub(this.data.totalDebtETH),\n        value: this.data.totalCollateralValue.sub(this.data.totalDebtValue),\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20(\"Aave: aUSDC\", \"0xBcca60bB61934080951369a648Fb03DF4F96263C\");\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements PositionV1 {\n    WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL = 0.005; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20(\"COMP\", \"0xc00e94Cb662C3520282E6f5717214004A7f26888\");\n\n    data = {\n      contract: this.instance.options.address,\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance.sub(this.data.borrowBalance),\n        value: this.data.supplyBalance.sub(this.data.borrowBalance),\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20<CompoundCTokenAbi>(\"Compound: cUSDC\", \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\", require(\"../abi/CompoundCTokenAbi.json\"));\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\nimport type { RevaultStakingAbi } from \"../../typechain-abi/RevaultStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Revault {\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.CAKE()),\n      \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.BUSD()),\n      \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    });\n    for (let i = 0; i < 4; i++) {\n      PositionFactory.register({\n        [`bsc:Revault:RevaStaking:x${i + 1}`]: (args, oracle) => new RevaStake(args, oracle, i),\n      });\n    }\n  }\n\n  const REVA = () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\");\n  const revaultFarm = () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\");\n  const revaultChef = () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\");\n  const revaStaking = () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\");\n\n  class SingleVault implements PositionV1 {\n    revault = revaultFarm();\n    chef = revaultChef();\n    reva = REVA();\n\n    data = {\n      revault: this.revault.options.address,\n      chef: this.chef.options.address,\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  class RevaStake implements PositionV1 {\n    staking = revaStaking();\n    reva = REVA();\n\n    data = {\n      staking: this.staking.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Unicly {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n      \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n    });\n  }\n\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements PositionV1 {\n    xfarm = contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\");\n    unic = erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\");\n    xunic = erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\");\n    eth = erc20s.eth.WETH();\n\n    data = {\n      xfarm: this.xfarm.options.address,\n      unic: this.unic.options.address,\n      xunic: this.xunic.options.address,\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport Web3 from \"web3\";\n\nexport namespace TokenBalances {\n  class TokenBalance implements PositionV1 {\n    data = {\n      name: \"\",\n      amount: zero,\n      value: zero,\n      totalSupply: zero,\n      mcap: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token: Token) {\n      token.name = args.name || token.name;\n    }\n\n    getName = () => this.data.name;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      [this.data.name, this.data.amount, this.data.totalSupply] = await Promise.all([\n        this.token.methods.name().call(),\n        this.token.methods.balanceOf(this.args.address).call().then(this.token.mantissa),\n        this.token.methods.totalSupply().call().then(this.token.mantissa),\n      ]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.mcap;\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  const nativeTokens = {\n    eth: () => _.merge(erc20s.eth.WETH(), { name: \"ETH\" }),\n    bsc: () => _.merge(erc20s.bsc.WBNB(), { name: \"BNB\" }),\n    poly: () => _.merge(erc20s.poly.WMATIC(), { name: \"MATIC\" }),\n    avax: () => _.merge(erc20s.avax.WAVAX(), { name: \"AVAX\" }),\n    arb: () => _.merge(erc20s.arb.WETH(), { name: \"AETH\" }),\n    oeth: () => _.merge(erc20s.oeth.WETH(), { name: \"ETH\" }),\n  };\n\n  class NativeTokenBalance extends TokenBalance {\n    getName = () => this.token.name;\n\n    async load() {\n      [this.data.amount, this.data.totalSupply] = await Promise.all([web3().eth.getBalance(this.args.address).then(bn), this.token.methods.totalSupply().call().then(bn)]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n  }\n\n  export function register() {\n    _.forEach(networks, (n) => {\n      if (n.id < 0) return;\n      PositionFactory.register({\n        [`${n.shortname}:Token`]: (args, oracle) => new TokenBalance(args, oracle, n, erc20(\"\", Web3.utils.toChecksumAddress(args.input!))),\n      });\n\n      const t = (nativeTokens as any)[n.shortname];\n      if (t) PositionFactory.register({ [`${n.shortname}:TokenBase`]: (args, oracle) => new NativeTokenBalance(args, oracle, n, t()) });\n    });\n  }\n}\n","import { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, ether, maxUint256, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { UniswapNftManagerAbi } from \"../../typechain-abi/UniswapNftManagerAbi\";\nimport _ from \"lodash\";\nimport { UniswapV3FactoryAbi } from \"../../typechain-abi/UniswapV3FactoryAbi\";\n\nconst maxUint128 = bn(2).pow(bn(128)).subn(1).toString();\n\nexport namespace Uniswap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.WBTC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:USDC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH()),\n\n      \"poly:Uniswap:V3LP:MATIC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.poly, erc20s.poly.WMATIC(), erc20s.poly.WETH()),\n\n      \"oeth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.oeth, erc20s.oeth.WETH(), erc20s.oeth.WBTC()),\n    });\n  }\n\n  class V3LP implements PositionV1 {\n    IL_WARN = bn18(1 / 100);\n\n    nftPositionManager = contract<UniswapNftManagerAbi>(require(\"../abi/UniswapNftManagerAbi.json\"), \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\");\n\n    data = {\n      nftManager: this.nftPositionManager.options.address,\n      id: 0,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      principal0: zero,\n      principal1: zero,\n      valueIfHodl: zero,\n      valueNow: zero,\n      ilValue: zero,\n      il: zero,\n      pending0: zero,\n      pending1: zero,\n      pendingValue0: zero,\n      pendingValue1: zero,\n      totalFeesValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!) || 0;\n      if (this.data.id <= 0) throw new Error(\"unknown positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [this.token0, this.token1];\n    getPendingRewards = () => [\n      { asset: this.token0, amount: this.data.pending0, value: this.data.pendingValue0 },\n      { asset: this.token1, amount: this.data.pending1, value: this.data.pendingValue1 },\n    ];\n    getHealth = () => {\n      if (this.data.ilValue.gt(this.data.totalFeesValue) || this.data.il.gt(this.IL_WARN))\n        return [\n          {\n            severity: Severity.High,\n            message: \"IL!\",\n          },\n        ];\n      return [];\n    };\n\n    async load() {\n      const pos = await this.nftPositionManager.methods.positions(this.data.id).call();\n      if (web3().utils.toChecksumAddress(pos.token0) !== web3().utils.toChecksumAddress(this.token0.address)) throw new Error(`invalid tokens for pos, ${JSON.stringify(pos)}`);\n\n      const res = await this.nftPositionManager.methods.decreaseLiquidity([this.data.id, pos.liquidity, 0, 0, maxUint256]).call({ from: this.args.address });\n      this.data.amount0 = await this.token0.mantissa(res.amount0);\n      this.data.amount1 = await this.token1.mantissa(res.amount1);\n\n      [this.data.value0, this.data.value1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.amount0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.amount1),\n      ]);\n\n      if (this.getNetwork().id === networks.eth.id) await this.loadFromPositionGraph();\n\n      if (this.data.tvl.isZero()) await this.loadTVL(parseInt(pos.fee));\n    }\n\n    getContractMethods = () => _.functions(this.nftPositionManager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      alert(`target:\\n${this.nftPositionManager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]), useLegacyTx);\n    }\n\n    async loadFromPositionGraph() {\n      const response = await fetch(\"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: `{position(id:${this.data.id}) {\n          depositedToken0\n          depositedToken1\n          withdrawnToken0\n          withdrawnToken1\n          collectedFeesToken0\n          collectedFeesToken1\n          pool {\n            id\n            totalValueLockedUSD\n          }\n        }\n      }`,\n        }),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      this.data.tvl = bn18(json.data.position.pool.totalValueLockedUSD);\n      this.data.principal0 = bn18(json.data.position.depositedToken0).sub(bn18(json.data.position.withdrawnToken0));\n      this.data.principal1 = bn18(json.data.position.depositedToken1).sub(bn18(json.data.position.withdrawnToken1));\n\n      const [principalValue0, principalValue1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.principal0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.principal1),\n      ]);\n      this.data.valueIfHodl = principalValue0.add(principalValue1);\n      this.data.valueNow = this.data.value0.add(this.data.value1);\n      this.data.ilValue = this.data.valueIfHodl.sub(this.data.valueNow);\n      this.data.il = ether.sub(this.data.valueNow.mul(ether).div(this.data.valueIfHodl));\n      const pending = await this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]).call({ from: this.args.address });\n      this.data.pending0 = await this.token0.mantissa(pending.amount0);\n      this.data.pending1 = await this.token1.mantissa(pending.amount1);\n      this.data.pendingValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.pending0);\n      this.data.pendingValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.pending1);\n      const collectedValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, bn18(json.data.position.collectedFeesToken0));\n      const collectedValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, bn18(json.data.position.collectedFeesToken1));\n\n      this.data.totalFeesValue = this.data.pendingValue0.add(this.data.pendingValue1).add(collectedValue0).add(collectedValue1);\n    }\n\n    async loadTVL(fee: number) {\n      const factory = contract<UniswapV3FactoryAbi>(require(\"../abi/UniswapV3FactoryAbi.json\"), await this.nftPositionManager.methods.factory().call());\n      const pool = await factory.methods.getPool(this.token0.address, this.token1.address, fee).call();\n      const [a0, a1] = await Promise.all([\n        this.token0.methods.balanceOf(pool).call().then(this.token0.mantissa),\n        this.token1.methods.balanceOf(pool).call().then(this.token1.mantissa),\n      ]);\n      const [v0, v1] = await Promise.all([this.oracle.valueOf(this.network.id, this.token0, a0), this.oracle.valueOf(this.network.id, this.token1, a1)]);\n      this.data.tvl = v0.add(v1);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn18, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace OffChain {\n  export function register() {\n    PositionFactory.register({\n      \"x:OffChain:Asset\": (args, oracle) => new AssetPosition(args, oracle),\n    });\n  }\n\n  export type Asset = Token & { symbol: string };\n\n  class AssetPosition implements PositionV1 {\n    token: Asset;\n    data = {\n      amount: zero,\n      value: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.input) throw new Error(\"input amount required\");\n      if (!args.address) throw new Error(\"address symbol required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { symbol: args.address });\n      this.data.amount = bn18(args.input);\n    }\n\n    getName = () => `OffChain:${this.token.name}`;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.off;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => zero;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { Abi, bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport type { AlphaHomoraBankAbi } from \"../../typechain-abi/AlphaHomoraBankAbi\";\nimport _ from \"lodash\";\n\nexport namespace AlphaHomora {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AlphaHomora:WETHe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX()),\n      \"avax:AlphaHomora:WBTCe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WBTCe(), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class LYF implements PositionV1 {\n    alphaHomoraBank = contract<AlphaHomoraBankAbi>(require(\"../abi/AlphaHomoraBankAbi.json\"), \"0x376d16C7dE138B01455a51dA79AD65806E9cd694\");\n    maxHistoryBlocks = {\n      [networks.avax.id]: 10_000_000,\n    };\n\n    data = {\n      contract: this.alphaHomoraBank.options.address,\n      id: 0,\n      supply0: zero,\n      supply1: zero,\n      borrow0: zero,\n      borrow1: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      pending: zero,\n      pendingValue: zero,\n      tvl: zero,\n      valueIfHodl: zero,\n      ilAmount: zero,\n      il: zero,\n      debtRatio: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!);\n      if (!this.data.id) throw new Error(\"invalid input positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => networks.avax;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n\n    async load() {\n      const pos = await this.alphaHomoraBank.methods.getPositionInfo(this.data.id).call();\n      const lpSupplied = bn(pos.collateralSize);\n      const farmAbi = [\n        {\n          inputs: [{ internalType: \"uint256\", name: \"id\", type: \"uint256\" }],\n          name: \"getUnderlyingToken\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ] as Abi;\n      const nft = contract(farmAbi, pos.collToken);\n      const lpToken = erc20(\"\", await nft.methods.getUnderlyingToken(pos.collId).call());\n      const totalLPs = await lpToken.methods.totalSupply().call().then(bn);\n      const share = lpSupplied.mul(ether).div(totalLPs);\n      const total0 = await this.token0.methods.balanceOf(lpToken.address).call().then(this.token0.mantissa);\n      const total1 = await this.token1.methods.balanceOf(lpToken.address).call().then(this.token1.mantissa);\n      this.data.supply0 = total0.mul(share).div(ether);\n      this.data.supply1 = total1.mul(share).div(ether);\n\n      const debts = await this.alphaHomoraBank.methods.getPositionDebts(this.data.id).call();\n      this.data.borrow0 = await this.token0.mantissa(debts.debts[_.indexOf(debts.tokens, this.token0.address)]);\n      this.data.borrow1 = await this.token1.mantissa(debts.debts[_.indexOf(debts.tokens, this.token1.address)]);\n\n      this.data.amount0 = this.data.supply0.sub(this.data.borrow0);\n      this.data.amount1 = this.data.supply1.sub(this.data.borrow1);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.amount1);\n\n      const totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, total0);\n      const totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, total1);\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    //     private async loadDeposits() {\n    //       const depositAbi = _(this.alphaHomoraBank.options.jsonInterface).find((x) => x.type === \"function\" && x.name === \"execute\")!;\n    //       const depositSig = web3().eth.abi.encodeFunctionSignature(depositAbi);\n    //\n    //       const currentBlock = await web3().eth.getBlockNumber();\n    //       const earliestBlock = currentBlock - this.maxHistoryBlocks[this.getNetwork().id];\n    //\n    //       const apiKey = \"\";\n    //       const alltxsResponse = await fetch(`https://api.snowtrace.io/api?module=account&action=txlist\n    // &fromBlock=${earliestBlock}\n    // &toBlock=${currentBlock}\n    // &address=${this.args.address}\n    // &sort=asc&apikey=${apiKey}`);\n    //       const alltxs = await alltxsResponse.json();\n    //       const relevantTxs = _.filter(alltxs.result, (tx) => eqIgnoreCase(tx.to, this.alphaHomoraBank.options.address) && tx.input.startsWith(depositSig));\n    //       if (relevantTxs.length !== 1) {\n    //         console.error(\"no / too many deposits\");\n    //         return;\n    //       }\n    //       const deposit = relevantTxs[0];\n    //       const receipt = await web3().eth.getTransactionReceipt(deposit.hash);\n    //       const events = parseEvents(receipt, this.token0);\n    //\n    //       const depositEvent = events.find((e) => e.event === \"Transfer\" && eqIgnoreCase(e.address, this.token0.address) && eqIgnoreCase(e.returnValues.from, this.args.address))!;\n    //       const deposit0 = bn(depositEvent.returnValues.value);\n    //       const deposit1 = _.reduce(relevantTxs, (sum, tx) => sum.add(bn(tx.value)), zero);\n    //       const valueNow0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, deposit0);\n    //       const valueNow1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, deposit1);\n    //\n    //       this.data.valueIfHodl = valueNow0.add(valueNow1);\n    //       const valueNow = this.data.value0.add(this.data.value1);\n    //       this.data.ilAmount = this.data.valueIfHodl.sub(valueNow);\n    //       this.data.il = ether.sub(valueNow.mul(ether).div(this.data.valueIfHodl));\n    //     }\n\n    //   private async loadDebtRatio() {\n    //     /*\n    //       struct TokenFactors {\n    //     uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //     uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //     uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    //     mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // }\n    //        */\n    //\n    //     /*\n    //       struct TokenFactors {\n    //   uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //   uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //   uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    // }\n    //\n    // IBaseOracle public immutable source; // Main oracle source\n    // mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // mapping(address => bool) public whitelistERC1155; // Mapping from token address to whitelist status\n    //      */\n    //     const proxyOracleAbi: Abi = [\n    //       {\n    //         name: \"tokenFactors\",\n    //         type: \"function\",\n    //         stateMutability: \"view\",\n    //         inputs: [\n    //           {\n    //             internalType: \"address\",\n    //             name: \"token\",\n    //             type: \"address\",\n    //           },\n    //         ],\n    //         outputs: [\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"borrowFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"collateralFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"liqIncentive\",\n    //             type: \"uint256\",\n    //           },\n    //         ],\n    //       },\n    //     ];\n    //     const o = contract(proxyOracleAbi, await this.alphaHomoraBank.methods.oracle().call());\n    //     const f0 = bn((await o.methods.tokenFactors(this.token0.address).call()).borrowFactor).toNumber() / 1e4;\n    //     const f1 = bn((await o.methods.tokenFactors(this.token1.address).call()).borrowFactor).toNumber() / 1e4;\n    //     console.log(f0, f1);\n    //   }\n\n    getContractMethods = () => _.functions(this.alphaHomoraBank.methods);\n    async callContract(method: string, args: string[]) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      alert(`target:\\n${this.alphaHomoraBank.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { bn, contract, eqIgnoreCase, erc20, ether, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { BalancerV2VaultAbi } from \"../../typechain-abi/BalancerV2VaultAbi\";\nimport { BalancerGaugeAbi } from \"../../typechain-abi/BalancerGaugeAbi\";\n\nexport namespace Balancer {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Balancer:WBTC/ETH\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.eth,\n          [erc20s.eth.WBTC(), erc20s.eth.WETH()],\n          \"0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e\",\n          \"0x4E3c048BE671852277Ad6ce29Fd5207aA12fabff\"\n        ),\n      \"poly:Balancer:USDC/DAI/MAI/USDT\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.USDC(), erc20s.poly.DAI(), erc20(\"MAI\", \"0xa3Fa99A148fA48D14Ed51d610c367C61876997F1\"), erc20s.poly.USDT()],\n          \"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012\"\n        ),\n      \"arb:Balancer:MAI/USDT/USDC\": (args, oracle) => {\n        oracle.overridePrice(networks.arb.id, erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"), ether);\n        return new Farm(\n          args,\n          oracle,\n          networks.arb,\n          [\n            erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"),\n            erc20(\"USDT\", \"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9\"),\n            erc20(\"USDC\", \"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8\"),\n          ],\n          \"0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d\"\n        );\n      },\n    });\n  }\n\n  const balToken = {\n    [networks.eth.id]: () => erc20(\"BAL\", \"0xba100000625a3754423978a60c9317c58a424e3D\"),\n    [networks.poly.id]: () => erc20(\"BAL\", \"0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3\"),\n    [networks.arb.id]: () => erc20(\"BAL\", \"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8\"),\n  };\n\n  const balV2 = () => contract<BalancerV2VaultAbi>(require(\"../abi/BalancerV2VaultAbi.json\"), \"0xBA12222222228d8Ba445958a75a0704d566BF2C8\");\n\n  class Farm implements PositionV1 {\n    vault = balV2();\n    gauge = contract<BalancerGaugeAbi>(require(\"../abi/BalancerGaugeAbi.json\"), this.gaugeAddress);\n    bal = balToken[this.network.id]();\n\n    data = {\n      vault: this.vault.options.address,\n      gauge: this.gauge.options.address,\n      amounts: [] as BN[],\n      values: [] as BN[],\n      tvl: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public tokens: Token[], public poolId: string, public gaugeAddress: string = \"\") {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => this.tokens;\n    getAmounts = () => _.map(this.tokens, (asset, i) => ({ asset, amount: this.data.amounts[i] || zero, value: this.data.values[i] || zero }));\n    getRewardAssets = () => [this.bal];\n    getPendingRewards = () => [{ asset: this.bal, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      if (!this.gaugeAddress) return await this.loadFromPool();\n\n      const [lpTokenAddress, workingBalance, totalWorkingBalance, pending] = await Promise.all([\n        this.gauge.methods.lp_token().call(),\n        this.gauge.methods.balanceOf(this.args.address).call().then(bn),\n        this.gauge.methods.totalSupply().call().then(bn),\n        this.gauge.methods.claimable_tokens(this.args.address).call().then(bn),\n      ]);\n      const bpt = erc20(\"BPT\", lpTokenAddress);\n      const [totalBptsStaked, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.gaugeAddress).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n      const bptBalance = totalBptsStaked.mul(workingBalance).div(totalWorkingBalance);\n\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(totalBptsStaked).div(bptTotalSupply))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.add(bn(b)), zero);\n\n      this.data.pending = pending;\n      this.data.pendingValue = await this.oracle.valueOf(this.network.id, this.bal, this.data.pending);\n    }\n\n    private async loadFromPool() {\n      const bpt = erc20(\n        \"BPT\",\n        await this.vault.methods\n          .getPool(this.poolId)\n          .call()\n          .then((x) => x[\"0\"])\n      );\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      const [bptBalance, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.args.address).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.add(bn(b)), zero);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.gauge.methods.claimable_tokens(this.args.address), useLegacyTx);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { networks } from \"./base/consts\";\n\nexport namespace ElrondMaiar {\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    MEX_EGLD: () => esdt(\"MEX/EGLD LP\", \"EGLDMEX-0be9e5\", 18),\n    USDC_EGLD: () => esdt(\"USDC/EGLD LP\", \"EGLDUSDC-594e5e\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string; lp: ESDT };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    L_USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\",\n      lp: tokens.MEX_EGLD(),\n    }),\n    L_MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\",\n      lp: tokens.MEX_EGLD(),\n    }),\n  };\n\n  class Farm implements PositionV1 {\n    mex = tokens.MEX();\n\n    data = {\n      pool: this.strategy.pool,\n      farm: this.strategy.farm,\n      lp: this.strategy.lp.tokenId,\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.egld;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () =>\n      this.getAssets().length > 1\n        ? [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n            {\n              asset: this.getAssets()[1],\n              amount: this.data.amount1,\n              value: this.data.value1,\n            },\n          ]\n        : [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n          ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [asset0, asset1] = this.getAssets();\n      const [farmEsdts, pairEsdts, totalLPSupply] = await Promise.all([getESDTs(this.strategy.farm), getESDTs(this.strategy.pool), getTotalSupply(this.strategy.lp)]);\n      const totalLPStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === this.strategy.lp.tokenId)!.balance);\n      const asset0InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset0.tokenId)!.balance);\n      const asset1InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset1.tokenId)!.balance);\n      const asset0TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset0, totalLPStaked.mul(asset0InPair).div(totalLPSupply));\n      const asset1TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset1, totalLPStaked.mul(asset1InPair).div(totalLPSupply));\n      this.data.tvl = asset0TotalValue.add(asset1TotalValue);\n\n      const esdts = await getESDTs(this.args.address);\n      const lpNameSuffix = this.strategy.lp.tokenId.split(\"-\")[0];\n      const lps = _.find(esdts, (t) => t.tokenIdentifier.startsWith(lpNameSuffix));\n      if (!lps) return;\n\n      this.data.lpBalanceStaked = bn(lps!.balance);\n      this.data.amount0 = this.data.lpBalanceStaked.mul(asset0InPair).div(totalLPSupply);\n      this.data.amount1 = this.data.lpBalanceStaked.mul(asset1InPair).div(totalLPSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, asset1, this.data.amount1);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\",\n      lp: tokens.MEX(),\n    }),\n    L_MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\",\n      lp: tokens.LKMEX(),\n    }),\n  };\n\n  class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as Strategy).lp];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const asset = this.getAssets()[0];\n\n      const farmEsdts = await getESDTs(this.strategy.farm);\n      const totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      this.data.tvl = await this.oracle.valueOf(networks.egld.id, asset, totalAssetStaked);\n\n      const esdts = await getESDTs(this.args.address);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === this.strategy.pool.toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n\n      this.data.amount0 = bn(farmNftWrapper.balance.toString());\n      this.data.value0 = await this.oracle.valueOf(networks.egld.id, asset, this.data.amount0);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  async function getESDTs(address: string) {\n    const response = await fetch(`https://gateway.elrond.com/address/${address}/esdt`);\n    const json = await response.json();\n    return _.get(json, [\"data\", \"esdts\"], []);\n  }\n\n  async function getTotalSupply(token: ESDT) {\n    const response = await fetch(`https://gateway.elrond.com/network/esdt/supply/${token.tokenId}`);\n    const json = await response.json();\n    return bn(_.get(json, [\"data\", \"supply\"], \"0\"));\n  }\n\n  export function register() {\n    PositionFactory.register({\n      \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n      \"egld:Maiar:LFarm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_USDC_EGLD()),\n      \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n      \"egld:Maiar:LFarm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_MEX_EGLD()),\n      \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n      \"egld:Maiar:MEXLFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.L_MEX()),\n    });\n  }\n\n  // export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n  //   const assets = _.map(tokens, (t) => t());\n\n  // https://gateway.elrond.com/address/:bech32Address/balance\n\n  // const [esdts, balanceEGLD] = await Promise.all([getESDTs(address), provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString()))]);\n\n  // const balances = await Promise.all(\n  //   _(esdts)\n  //     .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n  //     .filter((t) => !!t.asset)\n  //     .map(async (t) => {\n  //       const amount = to18(t.esdt.balance, t.asset!.dec);\n  //       return {\n  //         asset: t.asset!,\n  //         amount,\n  //         value: await oracle.valueOf(networks.egld.id, t.asset!, amount),\n  //       };\n  //     })\n  //     .value()\n  // );\n\n  // balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(networks.egld.id, tokens.EGLD(), balanceEGLD) });\n\n  // return balances;\n  // }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n\n// farms v2:\n// EGLD/MEX => MEX : erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\n// EGLD/MEX => LKMEX: erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\n// EGLD/USDC => MEX: erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\n// EGLD/USDC => LKMEX: erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\n// MEX => MEX: erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\n// MEX => LKMEX: erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\n","import _ from \"lodash\";\nimport type { TraderJoeFarmAbi } from \"../../typechain-abi/TraderJoeFarmAbi\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace TraderJoe {\n  export function register() {\n    PositionFactory.register({\n      \"avax:TraderJoe:Farm:WETH/AVAX\": (args, oracle) => new Farm(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX(), 26),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<TraderJoeFarmAbi>(require(\"../abi/TraderJoeFarmAbi.json\"), \"0xd6a4F121CA35509aF06A0Be99093d08462f53052\");\n    reward = erc20(\"JOE\", \"0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd\");\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingTokens(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken);\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.mul(lpStaked).div(lpTotalSupply))).add(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.mul(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending.pendingJoe);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn9, contract, erc20, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { RibbonThetaVaultAbi } from \"../../typechain-abi/RibbonThetaVaultAbi\";\nimport type { RibbonGaugeAbi } from \"../../typechain-abi/RibbonGaugeAbi\";\n\nexport namespace Ribbon {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Ribbon:T-CC:ETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x25751853Eab4D0eB3652B5eB6ecB102A2789644B\"),\n      \"eth:Ribbon:T-CC:stETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x53773E034d9784153471813dacAFF53dBBB78E8c\"),\n      \"eth:Ribbon:T-CC:WBTC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WBTC(), \"0x65a833afDc250D9d38f8CD9bC2B1E3132dB13B2F\"),\n      \"eth:Ribbon:T-CSP:yvUSDC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.USDC(), \"0xCc323557c71C0D1D20a1861Dc69c06C5f3cC9624\"),\n    });\n  }\n\n  class ThetaVault implements PositionV1 {\n    rbn = erc20(\"RBN\", \"0x6123B0049F904d730dB3C36a31167D9d4121fA6B\");\n    vault = contract<RibbonThetaVaultAbi>(require(\"../abi/RibbonThetaVaultAbi.json\"), this.vaultAddress);\n\n    data = {\n      vault: this.vaultAddress,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      strike: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset: Token, public vaultAddress: string) {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.asset];\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.rbn];\n    getPendingRewards = () => [{ asset: this.rbn, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const { amount, unredeemedShares } = await this.vault.methods.depositReceipts(this.args.address).call();\n      this.data.amount = await this.asset.mantissa(bn(amount).add(bn(unredeemedShares)));\n\n      const farm = contract<RibbonGaugeAbi>(require(\"../abi/RibbonGaugeAbi.json\"), await this.vault.methods.liquidityGauge().call());\n      const [fbalance, fratio] = await Promise.all([farm.methods.balanceOf(this.args.address).call().then(bn), this.vault.methods.pricePerShare().call().then(bn)]);\n      const staked = await this.asset.mantissa(fbalance.mul(fratio).div(await this.asset.amount(1)));\n      this.data.amount = this.data.amount.add(staked);\n\n      this.data.value = await this.oracle.valueOf(this.network.id, this.asset, this.data.amount);\n\n      const total = await this.asset.mantissa(await this.vault.methods.totalBalance().call());\n      this.data.tvl = await this.oracle.valueOf(this.network.id, this.asset, total);\n\n      const currentOption = contract(require(\"../abi/RibbonOptionAbi.json\"), await this.vault.methods.currentOption().call());\n      this.data.strike = bn9(await currentOption.methods[\"strikePrice()\"]().call()).muln(10);\n\n      this.data.pending = await farm.methods.claimable_tokens(this.args.address).call().then(bn);\n      this.data.pendingValue = await this.oracle.valueOf(this.getNetwork().id, this.rbn, this.data.pending);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, ether, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { LooksrareStakingAbi } from \"../../typechain-abi/LooksrareStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace LooksRare {\n  export function register() {\n    PositionFactory.register({\n      \"eth:LooksRare:LooksStaking\": (args, oracle) => new Staking(args, oracle),\n      \"eth:LooksRare:LooksAutoCompound\": (args, oracle) => new AutoCompund(args, oracle),\n    });\n  }\n\n  class Staking implements PositionV1 {\n    eth = erc20s.eth.WETH();\n    looks = erc20(\"LOOKS\", \"0xf4d2888d29D722226FafA5d9B24F9164c092421E\");\n    vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0xBcD7254A1D759EFA08eC7c3291B2E85c5dCC12ce\");\n    checkPending = true;\n\n    data = {\n      vault: this.vault.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getNetwork = () => networks.eth;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.looks];\n    getAmounts = () => [{ asset: this.looks, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.eth];\n    getPendingRewards = () => [{ asset: this.eth, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const [stakedLooks, pendingEth, totalShares, sharePrice] = await Promise.all([\n        this.vault.methods.calculateSharesValueInLOOKS(this.args.address).call().then(bn),\n        this.checkPending ? this.vault.methods.calculatePendingRewards(this.args.address).call().then(bn) : zero,\n        this.vault.methods.totalShares().call().then(bn),\n        this.vault.methods.calculateSharePriceInLOOKS().call().then(bn),\n      ]);\n      this.data.amount = stakedLooks;\n      this.data.pendingAmount = pendingEth;\n      const tvlAmount = totalShares.mul(sharePrice).div(ether);\n\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.looks, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.looks, tvlAmount),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class AutoCompund extends Staking {\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      super(args, oracle);\n      this.vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0x3ab16Af1315dc6C95F83Cbf522fecF98D00fd9ba\");\n      this.data.vault = this.vault.options.address;\n      this.checkPending = false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, Contract, contract, erc20, erc20s, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { SushiswapMinichefAbi } from \"../../typechain-abi/SushiswapMinichefAbi\";\n\nexport namespace SushiSwap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:SushiSwap:Farm:USDC/ETH\": (args, oracle) => new Farm(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH(), 1),\n      \"poly:SushiSwap:Farm:ETH/MATIC\": (args, oracle) => new Farm(args, oracle, networks.poly, erc20s.poly.WETH(), erc20s.poly.WMATIC(), 0),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = getFarmContract(this.network);\n    reward = getRewardContract(this.network);\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingSushi(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken || (await this.masterchef.methods.lpToken(this.poolId).call()));\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.mul(lpStaked).div(lpTotalSupply))).add(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.mul(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      const tx = this.network.id === networks.poly.id ? this.masterchef.methods.deposit(this.poolId, 0, this.args.address) : this.masterchef.methods.deposit(this.poolId, 0);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n  }\n\n  function getFarmContract(network: Network): Contract {\n    switch (network.shortname) {\n      case \"poly\":\n        return contract<SushiswapMinichefAbi>(require(\"../abi/SushiswapMinichefAbi.json\"), \"0x0769fd68dFb93167989C6f7254cd0D766Fb2841F\");\n      case \"eth\":\n      default:\n        return contract(require(\"../abi/SushiswapMasterchefAbi.json\"), \"0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd\");\n    }\n  }\n\n  function getRewardContract(network: Network) {\n    switch (network.shortname) {\n      case \"poly\":\n        return erc20(\"SUSHI\", \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\");\n      case \"eth\":\n      default:\n        return erc20(\"SUSHI\", \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\");\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, zero } from \"@defi.org/web3-candies\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Fodl {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n    });\n  }\n\n  export class XFodlStake implements PositionV1 {\n    fodl = erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\");\n    xfodl = erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\");\n\n    data = {\n      fodl: this.fodl.address,\n      xfodl: this.xfodl.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(bn),\n        this.xfodl.methods.totalSupply().call().then(bn),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(bn),\n      ]);\n      this.data.amount = myXfodl.mul(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { QuickswapStakingAbi } from \"../../typechain-abi/QuickswapStakingAbi\";\nimport _ from \"lodash\";\n\nexport namespace QuickSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x614389EaAE0A6821DC49062D56BDA3d9d45Fa2ff\");\n  const quick = () => erc20(\"QUICK\", \"0x831753DD7087CaC61aB5644b308642cc1c33Dc13\");\n\n  export function register() {\n    PositionFactory.register({\n      \"poly:QuickSwap:Farm:ORBS/USDC\": (args, oracle) => new Farm(args, oracle, erc20s.poly.USDC(), orbs(), \"0x9CA237962823A0a74bbC8354764e1DAC9e4057F0\"),\n\n      \"poly:QuickSwap:LP:ORBS/QUICK\": (args, oracle) => new LP(args, oracle, orbs(), quick(), \"0x882624931b4A799d50242e5b25E2Fa2719E4d072\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    staking = contract<QuickswapStakingAbi>(require(\"../abi/QuickswapStakingAbi.json\"), this.stakingAddress);\n    reward = erc20(\"dQUICK\", \"0xf28164A485B0B2C90639E47b0f377b4a438a16B1\");\n\n    data = {\n      contract: this.stakingAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public stakingAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, totalStaked, earned, lpAddress] = await Promise.all([\n        this.staking.methods.balanceOf(this.args.address).call().then(bn),\n        this.staking.methods.totalSupply().call().then(bn),\n        this.staking.methods.earned(this.args.address).call().then(bn),\n        this.staking.methods.stakingToken().call(),\n      ]);\n      this.data.rewardAmount = earned;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(lp.mantissa),\n      ]);\n      this.data.amount0 = stakedBalance.mul(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.mul(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_amount0 = totalStaked.mul(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.mul(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.add(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.staking.methods.stake(0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"QuickswapLP\", this.lpAddress);\n\n    data = {\n      contract: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [balance, totalSupply] = await Promise.all([this.lp.methods.balanceOf(this.args.address).call().then(bn), this.lp.methods.totalSupply().call().then(bn)]);\n\n      const [amount0InLp, amount1InLp] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n      ]);\n      this.data.amount0 = amount0InLp.mul(balance).div(totalSupply);\n      this.data.amount1 = amount1InLp.mul(balance).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, amount0InLp);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, amount1InLp);\n      this.data.tvl = tvl_value0.add(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { TokenBalances } from \"./TokenBalances\";\nimport { Uniswap } from \"./Uniswap\";\nimport { OffChain } from \"./OffChain\";\nimport { AlphaHomora } from \"./AlphaHomora\";\nimport { Balancer } from \"./Balancer\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { TraderJoe } from \"./TraderJoe\";\nimport { Ribbon } from \"./Ribbon\";\nimport { LooksRare } from \"./LooksRare\";\nimport { SushiSwap } from \"./SushiSwap\";\nimport { Fodl } from \"./Fodl\";\nimport { QuickSwap } from \"./QuickSwap\";\n\nexport function registerAllPositions() {\n  OffChain.register();\n  TokenBalances.register();\n\n  Uniswap.register();\n  SushiSwap.register();\n  Pancakeswap.register();\n  Revault.register();\n  AlphaHomora.register();\n  Balancer.register();\n  ElrondMaiar.register();\n  TraderJoe.register();\n  Ribbon.register();\n  LooksRare.register();\n  Unicly.register();\n  Fodl.register();\n  Loops.register();\n  QuickSwap.register();\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { PositionV1, PositionArgs } from \"../positionsv1/base/PositionV1\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport { registerAllPositions } from \"../positionsv1\";\nimport { to3, Token, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positionsv1/base/consts\";\nimport BN from \"bn.js\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, PositionV1>,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string, input: string, name: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, input, name, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    update: (position: PositionV1, newArgs: PositionArgs) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = newArgs;\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions...\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p\n        .load()\n        .then(() => ((p as any).loaded = true))\n        .catch((e) => {\n          (p as any).loaded = false;\n          console.log(p.getArgs().type, e);\n        });\n    })\n  );\n  api.setState({ positions });\n  console.log(`...done loading ${network?.name}`);\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\n\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        name: p.getArgs().name || p.getName() || p.getArgs().type,\n        chain: p.getNetwork().name,\n        health: p.getHealth(),\n        marketValue: num(marketValue(p)),\n        pending: num(p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero)),\n        tvl: num(p.getTVL()),\n        position: p,\n        address: p.getArgs().address,\n        loaded: !!(p as any).loaded,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nexport const useAllPositionsValuePerPosition = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.map(state.positions, (position) => ({ position, marketValue: Math.round(num(marketValue(position))) })),\n    (rows) => {\n      const sorted = _.sortBy(rows, (r) => -r.marketValue);\n      return {\n        labels: sorted.map((p) => p.position.getArgs().name || p.position.getName() || p.position.getArgs().type),\n        values: sorted.map((p) => p.marketValue),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerAssetClass = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .map((position) => position.getAmounts())\n        .flatten()\n        .value(),\n    (amounts) => {\n      const reduced = _(amounts)\n        .groupBy((a) => assetClass(a.asset))\n        .map((values, key) => ({ assetClass: key, value: _.reduce(values, (sum, a) => sum + num(a.value), 0) }))\n        .sortBy((v) => -v.value)\n        .value();\n      return {\n        labels: _.map(reduced, (ac) => ac.assetClass),\n        values: _.map(reduced, (ac) => Math.round(ac.value)),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerChain = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.groupBy(state.positions, (p) => p.getNetwork().name),\n    (grouped) => {\n      const totalPerChain = _(grouped)\n        .map((positions, chain) => ({\n          chain,\n          marketValue: Math.round(num(totalMarketValue(positions))),\n        }))\n        .sortBy((t) => -t.marketValue)\n        .value();\n      return {\n        labels: _.map(totalPerChain, (t) => t.chain),\n        values: _.map(totalPerChain, (t) => t.marketValue),\n        grandtotal: _.reduce(totalPerChain, (sum, t) => sum + t.marketValue, 0),\n      };\n    }\n  ),\n});\n\nfunction num(bn: BN) {\n  return to3(bn, 18).toNumber() / 1000;\n}\n\nfunction marketValue(p: PositionV1) {\n  return _.reduce(p.getAmounts(), (sum, v) => sum.add(v.value), zero);\n}\n\nfunction totalMarketValue(positions: PositionV1[]) {\n  return _.reduce(positions, (sum, pos) => sum.add(marketValue(pos)), zero);\n}\n\nfunction assetClass(a: Token): string {\n  const ext = (a as any).symbol || (a as any).tokenId;\n  if (ext) return ext;\n  if (a.name.toLowerCase().includes(\"usd\") || [\"dai\", \"mai\", \"mim\"].includes(a.name.toLowerCase())) return \"USD\";\n  if (a.name.toLowerCase().includes(\"btc\")) return \"BTC\";\n  if (a.name.toLowerCase().includes(\"eth\")) return \"ETH\";\n  if (a.name.toLowerCase().includes(\"bnb\")) return \"BNB\";\n  if (a.name.toLowerCase().includes(\"avax\")) return \"AVAX\";\n  if (a.name.toLowerCase().includes(\"matic\")) return \"MATIC\";\n  if (a.name.toLowerCase().includes(\"ftm\")) return \"FTM\";\n  return a.name || a.address;\n}\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as PositionV1 | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: PositionV1) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        try {\n          const result = await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs));\n          showAlert(_.toString(result) || \"undefined\");\n        } catch (e: any) {\n          showAlert(_.toString(e));\n        }\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), fmtData),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      rawData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n\nfunction fmtData(data: any): any {\n  if (_.isArray(data)) return _.map(data, fmtData);\n  return data instanceof BN ? fmt18(data) : data;\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport _ from \"lodash\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    input: \"\",\n    name: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", input: \"\", name: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        address = _.trim(address);\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n\n    setInput:\n      (input: string) =>\n      async ({ setState }) => {\n        input = _.trim(input);\n        setState({ input });\n      },\n\n    setName:\n      (name: string) =>\n      async ({ setState }) => {\n        name = _.trim(name);\n        setState({ name });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address, state.input, state.name)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Name?\" onChange={(e) => actions.setName(e.target.value)} />}\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Input?\" onChange={(e) => actions.setInput(e.target.value)} />}\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions, useAllPositionsValuePerAssetClass, useAllPositionsValuePerChain, useAllPositionsValuePerPosition } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positionsv1/base/PositionV1\";\nimport { ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { ArcElement, Chart as ChartJS, Legend, Tooltip } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst columns: GridColDef[] = [\n  { field: \"loaded\", headerName: \"🌐\", headerAlign: \"center\", width: 20, align: \"center\", valueFormatter: (v) => (v.value ? \"✅\" : \"❔\") },\n  { field: \"chain\", headerName: \"Chain\", headerAlign: \"center\", width: 120, align: \"left\" },\n  { field: \"name\", headerName: \"Position\", headerAlign: \"center\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"center\",\n    valueFormatter: (v) => {\n      if (!v.value || !(v.value as Threat[]).length) return \"🟢\";\n      return (v.value as Threat[]).map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"marketValue\",\n    headerName: \"Market Value\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    headerAlign: \"center\",\n    width: 120,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", headerAlign: \"center\", width: 450, align: \"left\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n  const [totalValuesPerChain] = useAllPositionsValuePerChain(null);\n  const [valuesPerPosition] = useAllPositionsValuePerPosition(null);\n  const [valuesPerAssetClass] = useAllPositionsValuePerAssetClass(null);\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <ListItemText>Total Market Value: $ {commafy(totalValuesPerChain.grandtotal)}</ListItemText>\n\n      <div style={{ display: \"flex\" }}>\n        <div>\n          <ListItemText>Value Per Chain:</ListItemText>\n          <Pie\n            data={{\n              labels: totalValuesPerChain.labels,\n              datasets: [\n                {\n                  data: totalValuesPerChain.values,\n                  backgroundColor: totalValuesPerChain.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Position:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerPosition.labels,\n              datasets: [\n                {\n                  data: valuesPerPosition.values,\n                  backgroundColor: valuesPerPosition.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Asset Class:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerAssetClass.labels,\n              datasets: [\n                {\n                  data: valuesPerAssetClass.values,\n                  backgroundColor: valuesPerAssetClass.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n      </div>\n\n      <br />\n\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <br />\n      <AddPositionBtn />\n    </div>\n  );\n};\n\nfunction colorOf(num: number) {\n  return bgColors[num % bgColors.length];\n}\n\nconst bgColors = [\n  \"#413d5e\",\n  \"#495371\",\n  \"#638c93\",\n  \"#98B4AA\",\n  \"#F1E0AC\", //\n];\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  // const updatePos = () => appStateActions.withLoading(() => allPositionsActions.update(selector.position!, selector.position!.getArgs())).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.rawData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.name || selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n          {selector.position?.getArgs()?.input && <DialogContentText>Input: {selector.position?.getArgs()?.input}</DialogContentText>}\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positionsv1/base/PositionV1\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}