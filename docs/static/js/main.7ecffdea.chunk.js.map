{"version":3,"sources":["reportWebVitals.ts","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","state/AppState.ts","positions/base/PositionFactory.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","positions/base/PriceOracle.ts","positions/index.ts","state/PositionsState.ts","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts","../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","middlewares","add","storeState","next","arg","result","console","log","key","getState","AppState","createStore","name","initialState","loading","useLegacyTx","wallet","balance","zero","network","actions","setUseLegacyTx","setState","connect","a","withLoading","ethereum","window","alert","onConnect","on","t","message","setWeb3Instance","Web3","account","getNetwork","bn","web3","eth","getBalance","Severity","useAppState","createHook","coingeckoIds","bsc","poly","PriceOracle","prices","token","amount","id","tokenId","address","this","esdt","fetchPricesElrond","fetchPrices","mul","div","ether","coingeckoId","_","find","v","k","shortname","addresses","fetch","join","response","json","mapKeys","utils","toChecksumAddress","mapValues","bn18","usd","value","updateResults","tokenIds","body","variables","i","query","map","headers","accept","pragma","JSON","stringify","method","data","inputs","results","isEmpty","Error","merge","registry","oracle","types","keys","args","type","uniqueId","p","current","isAddress","startsWith","Address","fromString","e","isElrondAddress","PositionFactory","Farm","asset0","asset1","lpToken","poolId","masterchef","contracts","Pancakeswap_Masterchef","cake","erc20s","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","getData","getAmounts","asset","getPendingRewards","networks","Promise","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","all","reserves","pending","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","valueOf","deposit","from","send","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","contract","require","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","isZero","lt","severity","Critical","getPositionData","posData","getBalanceReward","claimRewardsToOwner","tx","exitPosition","encodeABI","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","muln","divn","to18","borrowBalanceCurrent","Compound_cUSDC","balanceOfUnderlying","getAccountLiquidityWithInterest","claimAndTransferAllCompToOwner","Loops","register","BUSD","WBNB","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","ElrondMaiar","tokens","EGLD","MEX","STORAGE_KEY","loadFromStorage","parse","localStorage","getItem","saveToStorage","setItem","PositionsState","positions","load","dispatch","addPosition","position","create","getArgs","delete","posId","claim","sendCustomTx","usePositionActions","selector","useUpdatedPositionRows","createSelector","state","values","sortBy","amounts","fmtAmounts","health","fmtHealth","getHealth","useAddPosition","allTypes","isValid","isValidInput","amnt","fmt18","split","length","darkTheme","createTheme","palette","mode","UseLegacyTx","FormGroup","FormControlLabel","control","Switch","checked","onChange","target","label","ConnectBtn","isConnected","useMemo","Button","variant","size","onClick","WalletInfo","Loading","Backdrop","sx","color","zIndex","theme","drawer","open","CircularProgress","AddPosition","appState","useState","myState","setMyState","addPosState","FormControl","width","InputLabel","Select","labelId","event","MenuItem","TextField","marginTop","fullWidth","disabled","columns","field","headerName","resizable","renderCell","params","ListItemButton","ListItemText","primary","count","setCount","PositionsUI","rows","style","height","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","href","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","hidden","maxWidth","left","top","Geom1","Geom2","document","getElementById","base64","s","Buffer","toString","erc20","zeroAddress","provider","ProxyProvider","assets","getAssets","getRewardAssets","every","getAddressEsdtList","esdts","farmNfts","filter","tokenIdentifier","getAccount","farm","SmartContract","runQuery","func","ContractFunction","returnData","lpReserve","farmNftSupply","farmNftBalance","nft","reduce","sum","b","farmNftPercentOfSupply","lpReserveBalance","pair","BigUIntValue","BigNumber","tokensForPositionRaw","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.7ecffdea.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import Web3 from \"web3\";\nimport { createHook, createStore, defaults } from \"react-sweet-state\";\nimport { account, bn, getNetwork, Network, setWeb3Instance, web3, zero } from \"@defi.org/web3-candies\";\n\ndefaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n  const result = next(arg);\n  console.log(storeState.key, \":\", storeState.getState());\n  return result;\n});\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    loading: false,\n    useLegacyTx: false,\n    wallet: \"\",\n    balance: zero,\n    network: {} as Network,\n  },\n\n  actions: {\n    setUseLegacyTx:\n      (useLegacyTx: boolean) =>\n      ({ setState }) => {\n        setState({ useLegacyTx });\n      },\n\n    connect:\n      () =>\n      async ({ setState }) => {\n        await withLoading(setState, async () => {\n          setState({ wallet: \"\", balance: zero, network: {} as Network });\n\n          const ethereum = (window as any).ethereum;\n          if (!ethereum) {\n            alert(\"install metamask\");\n            return;\n          }\n          await onConnect(setState, ethereum);\n\n          ethereum.on(\"accountsChanged\", () => {\n            onConnect(setState, ethereum);\n          });\n          ethereum.on(\"chainChanged\", () => {\n            onConnect(setState, ethereum);\n          });\n        });\n      },\n  },\n});\n\nasync function withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n    setState({ loading: false });\n  } catch (e: any) {\n    alert(`${e.message}`);\n  }\n}\n\nasync function onConnect(setState: any, ethereum: any) {\n  setWeb3Instance(new Web3(ethereum));\n  const wallet = await account();\n  setState({ wallet, network: await getNetwork(), balance: bn(await web3().eth.getBalance(wallet)) });\n}\n\nexport const useAppState = createHook(AppState);\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network } from \"@defi.org/web3-candies\";\nimport Web3 from \"web3\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position {\n    if (!registry[args.type]) throw new Error(`unknown type ${args.type} for ${JSON.stringify(args)}`);\n\n    if (!args.id) args.id = _.uniqueId(args.type);\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    // TODO refactor into Position\n    return p.getNetwork().id == current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidInput(args: PositionArgs) {\n    return Web3.utils.isAddress(args.address) || isElrondAddress(args);\n  }\n\n  function isElrondAddress(args: PositionArgs) {\n    try {\n      return args.type.startsWith(\"egld:\") && args.address.startsWith(\"erd1\") && !Address.fromString(args.address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, contracts, erc20s, getNetwork, networks, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\n\nexport namespace Pancakeswap {\n  const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.bsc;\n    }\n\n    getAssets() {\n      return [this.asset0, this.asset1];\n    }\n\n    getRewardAssets() {\n      return [this.cake];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const [userInfo, reserves, token0, totalSupply, pending] = await Promise.all([\n        await this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        await this.lpToken.methods.getReserves().call(),\n        await this.lpToken.methods.token0().call(),\n        await this.lpToken.methods.totalSupply().call(),\n        await this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() == this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 == _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.amount0 = bn(r0).mul(amountLP).div(bn(totalSupply));\n      this.data.amount1 = bn(r1).mul(amountLP).div(bn(totalSupply));\n      this.data.value0 = await this.oracle.valueOf(this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.asset1, this.data.amount1);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.cake, this.data.rewardAmount);\n    }\n\n    async claim(useLegacyTx: boolean) {\n      if (this.args.address != (await account())) throw new Error(\"only user able to claim\");\n      await this.masterchef.methods.deposit(this.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async sendCustomTx(useLegacyTx: boolean) {}\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n  // /**\n  //  * USD, 18 decimals\n  //  */\n  // getTVL(): Promise<BN>;\n\n  // /**\n  //  * Percent spot annual rate without compounding, 18 decimals (123% == 1.23*10^18).\n  //  */\n  // getAPR(): Promise<BN>;\n\n  // getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n\n  claim(useLegacyTx: boolean): Promise<void>;\n  sendCustomTx(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, bn18, contract, erc20s, fmt18, getNetwork, networks, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\n\nexport namespace Loops {\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.aave, this.data.rewardAmount);\n    }\n\n    async claim(useLegacyTx: boolean) {\n      await this.instance.methods.claimRewardsToOwner().send({\n        from: await account(),\n        type: useLegacyTx ? \"0x0\" : \"0x2\",\n      } as any);\n    }\n\n    async sendCustomTx(useLegacyTx: boolean) {\n      const tx = this.instance.methods.exitPosition(100);\n      alert(\"exitPosition(100): \" + tx.encodeABI());\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      this.data.borrowBalance = to18(await this.instance.methods.borrowBalanceCurrent().call(), 6);\n      this.data.supplyBalance = to18(await erc20s.eth.Compound_cUSDC().methods.balanceOfUnderlying(this.args.address).call(), 6);\n      this.data.rewardAmount = bn(await this.instance.methods[\"claimComp()\"]().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.rewardAsset, this.data.rewardAmount);\n      const { accountLiquidity, accountShortfall } = await this.instance.methods.getAccountLiquidityWithInterest().call();\n      this.data.accountLiquidity = bn(accountLiquidity);\n      this.data.accountShortfall = bn(accountShortfall);\n    }\n\n    async claim(useLegacyTx: boolean) {\n      await this.instance.methods.claimAndTransferAllCompToOwner().send({\n        from: await account(),\n        type: useLegacyTx ? \"0x0\" : \"0x2\",\n      } as any);\n    }\n\n    async sendCustomTx(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport { bn18, ether, getNetwork, Token } from \"@defi.org/web3-candies\";\n\nconst coingeckoIds = {\n  eth: \"ethereum\",\n  bsc: \"binance-smart-chain\",\n  poly: \"polygon-pos\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(token: Token, amount: BN): Promise<BN> {\n    const id = (token as any).tokenId || token.address;\n    if (!this.prices[id]) {\n      if ((token as any).esdt) await this.fetchPricesElrond(id);\n      else await this.fetchPrices(id);\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(...addresses: string[]): Promise<{ [address: string]: BN }> {\n    const network = await getNetwork();\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k == network.shortname)!;\n    const response = await fetch(`https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => Web3.utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(...tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    const body = {\n      variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n      query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n    };\n    const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n      headers: {\n        accept: \"*/*\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"application/json\",\n        pragma: \"no-cache\",\n      },\n      body: JSON.stringify(body),\n      method: \"POST\",\n    });\n    const json = await response.json();\n\n    const result = _(json.data)\n      .mapKeys((v, k) => body.variables[k])\n      .mapValues((v) => bn18(v))\n      .value();\n\n    return this.updateResults(tokenIds, result);\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"@defi.org/web3-candies\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, [ElrondMaiar.tokens.USDC(), ElrondMaiar.tokens.EGLD()]),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, [ElrondMaiar.tokens.MEX(), ElrondMaiar.tokens.EGLD()]),\n    \"egld:Maiar:Farm:MEX\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, [ElrondMaiar.tokens.MEX()]),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs, Threat, TokenAmount } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nconst saveToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst PositionsState = createStore({\n  name: \"PositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n  },\n\n  actions: {\n    load:\n      () =>\n      async ({ dispatch }) => {\n        await dispatch(load);\n      },\n\n    addPosition:\n      (args: PositionArgs) =>\n      async ({ getState, dispatch }) => {\n        const position = PositionFactory.create(args);\n\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        data[position.getArgs().id] = position.getArgs();\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    delete:\n      (posId: string) =>\n      async ({ getState, dispatch }) => {\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        delete data[posId];\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    claim:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].claim(useLegacyTx);\n      },\n\n    sendCustomTx:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendCustomTx(useLegacyTx);\n      },\n  },\n});\n\nasync function load({ getState, setState }: StoreActionApi<typeof PositionsState.initialState>) {\n  try {\n    console.log(\"LOAD\");\n    const current = getState().positions;\n    const positions = _.mapValues(loadFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n    await Promise.all(_.map(positions, (p) => p.load()));\n    setState({ positions });\n  } catch (e: any) {\n    alert(e.message);\n  }\n}\n\nexport const usePositionActions = createHook(PositionsState, {\n  selector: null,\n});\n\nexport const useUpdatedPositionRows = createHook(PositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        amounts: fmtAmounts(p.getAmounts()),\n        pending: fmtAmounts(p.getPendingRewards()),\n        health: fmtHealth(p.getHealth()),\n      }))\n  ),\n});\nexport const useAddPosition = createHook(PositionsState, {\n  selector: createSelector(\n    () => null,\n    (_, args: PositionArgs) => args,\n    (state, args) => ({\n      allTypes: PositionFactory.allTypes(),\n      isValid: PositionFactory.isValidInput(args),\n    })\n  ),\n});\n\nfunction fmtAmounts(amnt: TokenAmount[]) {\n  return _(amnt)\n    .map((a) => `${a.asset.name}: ${fmt18(a.amount).split(\".\")[0]} = $${fmt18(a.value).split(\".\")[0]}`)\n    .join(\" + \");\n}\n\nfunction fmtHealth(health: Threat[]) {\n  if (!health.length) return \"🟢\";\n  return health.map((t) => t.message).join(\"⚠️\");\n}\n","import React, { useMemo, useState } from \"react\";\nimport \"./App.css\";\nimport {\n  Backdrop,\n  Button,\n  CircularProgress,\n  createTheme,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  ListItemButton,\n  ListItemText,\n  MenuItem,\n  Select,\n  SelectChangeEvent,\n  Switch,\n  TextField,\n  ThemeProvider,\n} from \"@mui/material\";\nimport { useAppState } from \"./state/AppState\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\nimport { useAddPosition, usePositionActions, useUpdatedPositionRows } from \"./state/PositionsState\";\nimport { PositionArgs } from \"./positions/base/Position\";\nimport Web3 from \"web3\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <div className=\"Header\">\n          <p />\n          <div className=\"Connect\">\n            <ConnectBtn />\n            <UseLegacyTx />\n          </div>\n\n          <p />\n          <WalletInfo />\n          <p />\n        </div>\n\n        <p />\n\n        <AddPosition />\n\n        <p />\n\n        <PositionsUI />\n\n        <p />\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst UseLegacyTx = () => {\n  const [state, actions] = useAppState();\n  return (\n    <FormGroup>\n      <FormControlLabel control={<Switch checked={state.useLegacyTx} onChange={(e: any) => actions.setUseLegacyTx(e.target.checked)} />} label=\"Use Legacy Transaction\" />\n    </FormGroup>\n  );\n};\n\nconst ConnectBtn = () => {\n  const [state, actions] = useAppState();\n  const isConnected = Web3.utils.isAddress(state.wallet);\n  useMemo(() => {\n    if (!state.wallet) actions.connect().then();\n  }, [state.wallet]);\n\n  return (\n    <Button variant={\"contained\"} size={\"large\"} onClick={actions.connect}>\n      {isConnected ? \"Refresh\" : \"Connect\"}\n    </Button>\n  );\n};\n\nconst WalletInfo = () => {\n  const [state] = useAppState();\n  return (\n    <div>\n      <p>Network 🌐 {state.network?.name}</p>\n      <p>Wallet 🔑 {state.wallet}</p>\n      <p>Balance 💰 {fmt18(state.balance)} ETH</p>\n    </div>\n  );\n};\n\nconst Loading = () => {\n  const [state] = useAppState();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.drawer + 1 }} open={state.loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n\nconst AddPosition = () => {\n  const [appState] = useAppState();\n  const [myState, setMyState] = useState(() => ({} as PositionArgs));\n  const [addPosState, actions] = useAddPosition(myState);\n\n  return (\n    <div>\n      <FormControl sx={{ width: \"100%\" }}>\n        <InputLabel id=\"demo-simple-select-label\">Position Type</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={myState.type || \"\"}\n          label=\"Position Type\"\n          onChange={(event: SelectChangeEvent) => setMyState({ ...myState, type: event.target.value })}\n        >\n          <MenuItem value=\"\" />\n          {addPosState.allTypes.map((type) => (\n            <MenuItem key={type} value={type}>\n              {type}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <TextField\n        sx={{ marginTop: \"2%\" }}\n        fullWidth\n        id=\"outlined-basic\"\n        variant=\"outlined\"\n        label=\"Target Address\"\n        onChange={(event: any) => setMyState({ ...myState, address: event.target.value })}\n      />\n\n      <Button\n        sx={{ marginTop: \"2%\" }}\n        variant={\"contained\"}\n        size={\"large\"}\n        onClick={() => actions.addPosition(myState).then(() => setMyState({} as PositionArgs))}\n        disabled={!appState.wallet || !addPosState.isValid || !myState.type}\n      >\n        Add Position\n      </Button>\n    </div>\n  );\n};\n\nconst RenderCellClaim = (params: any) => {\n  const [state] = useAppState();\n  const [, actions] = usePositionActions();\n  return (\n    <ListItemButton onClick={() => actions.claim(params.id, state.useLegacyTx)}>\n      <ListItemText primary=\"Claim\" />\n    </ListItemButton>\n  );\n};\nconst RenderCellDelete = (params: any) => {\n  const [count, setCount] = useState(0);\n  const [, actions] = usePositionActions();\n  return (\n    <ListItemButton\n      onClick={() => {\n        if (count > 4) {\n          setCount(0);\n          return actions.delete(params.id);\n        } else setCount(count + 1);\n      }}\n    >\n      <ListItemText primary=\"Delete\" />\n    </ListItemButton>\n  );\n};\nconst RenderCellSendTx = (params: any) => {\n  const [state] = useAppState();\n  const [, actions] = usePositionActions();\n  return (\n    <ListItemButton onClick={() => actions.sendCustomTx(params.id, state.useLegacyTx)}>\n      <ListItemText primary=\"Custom Action\" />\n    </ListItemButton>\n  );\n};\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Type\", width: 200, resizable: true },\n  { field: \"amounts\", headerName: \"Amounts\", width: 500, resizable: true },\n  { field: \"pending\", headerName: \"Pending\", width: 200, resizable: true },\n  { field: \"health\", headerName: \"Health\", width: 50, resizable: true },\n  {\n    field: \"claim\",\n    headerName: \"Claim\",\n    width: 50,\n    type: \"actions\",\n    resizable: true,\n    renderCell: RenderCellClaim,\n  },\n  {\n    field: \"delete\",\n    headerName: \"Delete\",\n    width: 50,\n    type: \"actions\",\n    resizable: true,\n    renderCell: RenderCellDelete,\n  },\n  {\n    field: \"send\",\n    headerName: \"SendTx\",\n    width: 50,\n    type: \"actions\",\n    resizable: true,\n    renderCell: RenderCellSendTx,\n  },\n];\n\nconst PositionsUI = () => {\n  const [state] = useAppState();\n  const [rows, actions] = useUpdatedPositionRows(null);\n  useMemo(() => {\n    if (state.network.id) actions.load().then();\n  }, [state.network, actions]);\n\n  return (\n    <div style={{ height: 500, width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, fmt18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport {\n  AbiRegistry,\n  Address,\n  BigUIntType,\n  BigUIntValue,\n  BinaryCodec,\n  ContractFunction,\n  ContractInterface,\n  EndpointDefinition,\n  EnumType,\n  ProxyProvider,\n  Query,\n  ScArgumentsParser,\n  SmartContract,\n  SmartContractAbi,\n  Struct,\n  StructField,\n  StructFieldDefinition,\n  StructType,\n  TokenIdentifierType,\n  U64Type,\n} from \"@elrondnetwork/erdjs/out\";\nimport _ from \"lodash\";\nimport { ContractWrapper } from \"@elrondnetwork/erdjs/out/smartcontracts/wrapper/contractWrapper\";\nimport BigNumber from \"bignumber.js\";\nimport { StructBinaryCodec } from \"@elrondnetwork/erdjs/out/smartcontracts/codec/struct\";\n\nconst ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\nconst ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\nconst LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\nconst ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\nconst EGLD_MEX_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\nconst EGLD_USDC_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\nconst EGLDMEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\nconst EGLDUSDC_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\nconst MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\nconst PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n\nconst MEX_TOKEN = \"MEX-455c57\";\nconst LKMEX_TOKEN = \"LKMEX-aab910\";\nconst WEGLD_TOKEN = \"WEGLD-bd4d79\";\nconst USDC_TOKEN = \"USDC-c76f1f\";\n\nconst EGLDMEXLP = \"EGLDMEX-0be9e5\";\nconst EGLDUSDCLP = \"EGLDUSDC-594e5e\";\nconst EGLDMEXF = \"EGLDMEXF-5bcc57\";\nconst EGLDUSDCF = \"EGLDUSDCF-8600f8\";\nconst MEXFARM = \"MEXFARM-e7af52\";\nconst LOCKED_LP = \"LKLP-03a2fa\";\nconst LOCKED_FARM = \"LKFARM-9d1ea8\";\n\nconst WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\nconst WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\nconst WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n\nexport namespace ElrondMaiar {\n  export type ESDT = Token & { esdt: true; tokenId: string };\n\n  function esdt(name: string, tokenId: string): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    return result;\n  }\n\n  export const tokens = {\n    EGLD: () => esdt(\"EGLD\", WEGLD_TOKEN),\n    USDC: () => esdt(\"USDC\", USDC_TOKEN),\n    MEX: () => esdt(\"MEX\", MEX_TOKEN),\n  };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\");\n\n  export class Farm implements Position {\n    data = {\n      rewardAmount: zero,\n      rewardValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public assets: ESDT[]) {\n      if (!_.every(assets, (a) => a.esdt)) throw new Error(`only ESDT tokens: ${assets}`);\n    }\n\n    getArgs = () => this.args;\n\n    getNetwork = () => ({ id: -508, name: \"Elrond\", shortname: \"egld\" });\n\n    getAssets = () => this.assets;\n\n    getRewardAssets = () => [tokens.MEX()];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts() {\n      return [];\n    }\n\n    getPendingRewards() {\n      return [];\n    }\n\n    async load() {\n      const account = new Address(this.args.address);\n      const esdts = await provider.getAddressEsdtList(account);\n      const farmNfts = _.filter(esdts, (v) => v.tokenIdentifier.startsWith(EGLDUSDCF));\n      const balanceEGLD = bn((await provider.getAccount(account)).balance.toString());\n\n      const farm = new SmartContract({ address: new Address(EGLDUSDC_FARM_ADDRESS) });\n      const lpReserve = base64((await farm.runQuery(provider, { func: new ContractFunction(\"getFarmingTokenReserve\") })).returnData[0]);\n      const farmNftSupply = base64((await farm.runQuery(provider, { func: new ContractFunction(\"getFarmTokenSupply\") })).returnData[0]);\n      const farmNftBalance = farmNfts.map((nft) => bn(nft.balance)).reduce((sum, b) => sum.add(b), zero);\n      const farmNftPercentOfSupply = farmNftBalance.mul(ether).div(farmNftSupply);\n      const lpReserveBalance = lpReserve.mul(farmNftPercentOfSupply).div(ether);\n\n      console.log(\"lpReserve\", fmt18(lpReserve));\n      console.log(\"farmNftSupply\", fmt18(farmNftSupply));\n      console.log(\"farmNftBalance\", fmt18(farmNftBalance));\n      console.log(\"farmNftPercentOfSupply\", fmt18(farmNftPercentOfSupply));\n      console.log(\"lpReserveBalance\", fmt18(lpReserveBalance));\n\n      const pair = new SmartContract({ address: new Address(EGLD_USDC_POOL_ADDRESS) });\n\n      //pub struct EsdtTokenPayment<BigUint: BigUintApi> {\n      //     pub token_type: EsdtTokenType,\n      //     pub token_name: TokenIdentifier,\n      //     pub token_nonce: u64,\n      //     pub amount: BigUint,\n      // }\n      //pub enum EsdtTokenType {\n      //     Fungible,\n      //     NonFungible,\n      //     SemiFungible,\n      //     Meta,\n      //     Invalid,\n      // }\n\n      const tokensForPositionRaw = await pair.runQuery(provider, {\n        func: new ContractFunction(\"getTokensForGivenPosition\"),\n        args: [new BigUIntValue(BigNumber.sum(lpReserveBalance.toString()))],\n      });\n      console.log(tokensForPositionRaw);\n\n      console.log(\"base64\", base64(tokensForPositionRaw.returnData[0]).toString(16));\n    }\n\n    async claim(useLegacyTx: boolean) {}\n\n    async sendCustomTx(useLegacyTx: boolean) {}\n  }\n}\n\nfunction base64(s: string) {\n  return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n}\nfunction base64Str(s: string) {\n  return Buffer.from(s, \"base64\").toString(\"utf8\");\n}\n","var map = {\n\t\"./bls.js\": 476,\n\t\"./bls_c.js\": 477\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 966;"],"sourceRoot":""}