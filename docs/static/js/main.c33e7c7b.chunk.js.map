{"version":3,"sources":["../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$","reportWebVitals.ts","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","state/AppState.ts","positions/base/PositionFactory.ts","positions/base/PriceOracle.ts","positions/consts.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","positions/Revault.ts","positions/Unicly.ts","positions/index.ts","state/AllPositionsState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","state/AddWalletDialogState.ts","positions/base/Balances.ts","state/WalletsState.ts","ui/AddWalletDialog.tsx","ui/AppHeader.tsx","state/PositionDialogState.ts","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/AllBalancesTable.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppState","createStore","name","initialState","loading","wallet","balance","zero","network","alertDialog","actions","connect","a","setState","_withLoading","ethereum","window","alert","_onConnect","on","withLoading","thunk","showAlert","t","message","setWeb3Instance","Web3","account","getNetwork","bn","web3","eth","getBalance","useAppState","createHook","useIsAppConnected","selector","state","utils","isAddress","coingeckoIds","networks","bsc","poly","PriceOracle","prices","token","amount","tokenId","address","this","isZero","esdt","fetchPricesElrond","fetchPrices","mul","div","ether","positions","bynetwork","_","groupBy","p","Promise","all","ElrondMaiar","getAssets","concat","getRewardAssets","flatten","uniq","value","filter","parseInt","networkId","addresses","isEmpty","console","log","coingeckoId","find","v","k","toString","fetch","join","response","json","result","mapKeys","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","accept","pragma","JSON","stringify","method","data","inputs","results","merge","registry","oracle","isElrondAddress","type","startsWith","Address","fromString","types","args","current","PositionFactory","Severity","erc20s","erc20sOrig","UNIC","erc20","XUNIC","Unicly_UPUNK","Unicly_UJENNY","Unicly_LP_UPUNK_ETH","require","Unicly_LP_UJENNY_ETH","REVA","contracts","contractsOrig","Unicly_XUnicVault","contract","Revault_Farm","Revault_Chef","Farm","asset0","asset1","lpToken","poolId","masterchef","Pancakeswap_Masterchef","cake","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getData","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","tx","useLegacyTx","encodeABI","from","send","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","SingleVault","revault","chef","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","getArgs","getHealth","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","WBNB","BUSD","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","poolInfo","getxUNICRate","xunicrate","totalLPTokens","Unicly","register","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","Strategies","USDC_EGLD","MEX_EGLD","STORAGE_KEY","loadFromStorage","parse","localStorage","getItem","saveToStorage","setItem","AllPositionsState","ready","load","api","addPosition","position","create","getState","delete","posId","sendTransaction","harvest","warmup","values","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","health","fmtHealth","fmt18","reduce","sum","add","split","useAllPositions","useAllPositionsReady","length","AddPositionDialogState","show","valid","allTypes","sort","closeDialog","setType","isValidArgs","setAddress","useAddPositionDialog","AddPositionBtn","isConnected","Button","variant","size","disabled","onClick","AddPositionDialog","appStateActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","style","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","onChange","target","MenuItem","TextField","DialogActions","AddWalletDialogState","isValidWallet","useAddWalletDialog","nativeAssets","WMATIC","fetchBalances","balances","Elrond","getAllTokenInfos","fetchMulticallBalances","withbalance","shortname","push","it","chainId","decimals","uniqBy","reject","includes","blacklist","remaining","chunk","retries","performMulticallBalanceOf","flattened","shuffle","sleep","multicall","Multicall","web3Instance","tryAggregate","calls","reference","contractAddress","erc20abi","methodName","methodParameters","forEach","callsReturnContext","returnValues","hex","WalletsState","wallets","rows","w","fetched","aa","n","nonzero","gte","useWalletsRows","useWalletsBalancesRows","AddWalletBtn","AddWalletDialog","walletsActions","List","ListItem","disablePadding","ListItemButton","ListItemText","primary","AppHeader","fontSize","display","flexDirection","justifyContent","ConnectBtn","WalletInfo","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","BN","positionMethods","selectedMethodArgTypes","assets","rewardAssets","positionData","columns","field","headerName","width","align","AllPositionsTable","appState","appActions","positionDialogActions","useEffect","hidden","height","onCellClick","autoHeight","hideFooter","PositionDialog","allPositionsActions","DialogContentText","argType","autoFocus","margin","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","AllBalancesTable","isready","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","href","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","document","getElementById","provider","ProxyProvider","timeout","usdc","mex","lkmex","egld","getAddressEsdtList","getAccount","r","esdts","balanceEGLD","balanceUSDC","tokenIdentifier","balanceMEX","balanceLKMEX","balanceWEGLD","vEGLD","vWEGLD","vUSDC","vMEX","vLKMEX","pool","farm","MEX","lpBalanceStaked","pair","SmartContract","base64","farmingTokenReserve","token0Id","token0r","token1r","lpTotalSupply","farmNfts","creator","nft","parseAmountLpFromAttributes","attributes","b","callAndParseGetPendingRewards","percentOfPool","dec","token1","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","bytes","lp_z_index","lp_z","lp_index","slice","balanceFarmNFT","BigUIntValue","BigNumberExt","max","BytesValue","assertSuccess"],"mappings":"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","file":"static/js/main.c33e7c7b.chunk.js","sourcesContent":["var map = {\n\t\"./bls.js\": 532,\n\t\"./bls_c.js\": 533\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1029;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, bn, getNetwork, Network, setWeb3Instance, web3, zero } from \"@defi.org/web3-candies\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    loading: false,\n    wallet: \"\",\n    balance: zero,\n    network: {} as Network,\n\n    alertDialog: \"\",\n  },\n\n  actions: {\n    connect:\n      () =>\n      async ({ setState }) => {\n        await _withLoading(setState, async () => {\n          setState({ wallet: \"\", balance: zero, network: {} as Network });\n\n          const ethereum = (window as any).ethereum;\n          if (!ethereum) {\n            alert(\"install metamask\");\n            return;\n          }\n          await _onConnect(setState, ethereum);\n\n          ethereum.on(\"accountsChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n          ethereum.on(\"chainChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n        });\n      },\n\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n  },\n});\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any, ethereum: any) {\n  setWeb3Instance(new Web3(ethereum));\n  const wallet = await account();\n  setState({\n    wallet,\n    network: await getNetwork(),\n    balance: bn(await web3().eth.getBalance(wallet)),\n  });\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet),\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = args.type + \":\" + args.address;\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return web3()?.utils?.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, getNetwork, networks, Token, web3 } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(token: Token, amount: BN): Promise<BN> {\n    const id = (token as any).tokenId || token.address;\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if ((token as any).esdt) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices((await getNetwork()).id, [id]);\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n\n    await Promise.all([\n      this.fetchPricesElrond(\n        _(bynetwork[ElrondMaiar.network.id])\n          .map((p) => p.getAssets().concat(p.getRewardAssets()))\n          .flatten()\n          .map((a) => (a as any).tokenId)\n          .uniq()\n          .value()\n      ),\n      ..._(bynetwork)\n        .keys()\n        .filter((id) => parseInt(id) > 0)\n        .map((id) =>\n          this.fetchPrices(\n            id,\n            _(bynetwork[id])\n              .map((p) => p.getAssets().concat(p.getRewardAssets()))\n              .flatten()\n              .map((a) => a.address)\n              .uniq()\n              .value()\n          )\n        )\n        .value(),\n    ]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetch\", addresses);\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n    const response = await fetch(`https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetch elrond\", tokenIds);\n    const body = {\n      variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n      query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n    };\n    const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n      headers: {\n        accept: \"*/*\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"application/json\",\n        pragma: \"no-cache\",\n      },\n      body: JSON.stringify(body),\n      method: \"POST\",\n    });\n    const json = await response.json();\n\n    const result = _(json.data)\n      .mapKeys((v, k) => body.variables[k])\n      .mapValues((v) => bn18(v))\n      .value();\n\n    return this.updateResults(tokenIds, result);\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import _ from \"lodash\";\nimport { erc20s as erc20sOrig, contracts as contractsOrig, erc20, contract } from \"@defi.org/web3-candies\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {\n  eth: {\n    UNIC: () => erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\"),\n    XUNIC: () => erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\"),\n\n    Unicly_UPUNK: () => erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n    Unicly_UJENNY: () => erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n    Unicly_LP_UPUNK_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n    Unicly_LP_UJENNY_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n  },\n  bsc: {\n    REVA: () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\"),\n  },\n});\n\nexport const contracts = _.merge({}, contractsOrig, {\n  eth: {\n    Unicly_XUnicVault: () => contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\"),\n  },\n  bsc: {\n    Revault_Farm: () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\"),\n    Revault_Chef: () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\"),\n  },\n});\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, contracts, erc20s, getNetwork, networks, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.bsc;\n    }\n\n    getAssets() {\n      return [this.asset0, this.asset1];\n    }\n\n    getRewardAssets() {\n      return [this.cake];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.masterchef.methods.deposit(this.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, bn18, contract, erc20s, ether, getNetwork, networks, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimRewardsToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimAndTransferAllCompToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, getNetwork, networks, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s } from \"./consts\";\nimport _ from \"lodash\";\n\nexport namespace Revault {\n  export class SingleVault implements Position {\n    revault = contracts.bsc.Revault_Farm();\n    chef = contracts.bsc.Revault_Chef();\n    reva = erc20s.bsc.REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.asset, this.data.amount),\n        this.oracle.valueOf(this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload).send({\n        from: await account(),\n        type: useLegacyTx ? \"0x0\" : \"0x2\",\n      } as any);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, ether, getNetwork, networks, Token, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s } from \"./consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20s.eth.Unicly_UPUNK(),\n      lp: erc20s.eth.Unicly_LP_UPUNK_ETH(),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20s.eth.Unicly_UJENNY(),\n      lp: erc20s.eth.Unicly_LP_UJENNY_ETH(),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements Position {\n    xfarm = contracts.eth.Unicly_XUnicVault();\n    unic = erc20s.eth.UNIC();\n    xunic = erc20s.eth.XUNIC();\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.xfarm.methods.deposit(this.strategy.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"./consts\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n    \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n    \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n    \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n    \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n    \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n\n    \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.CAKE()),\n    \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.BUSD()),\n    \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.WBNB()),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.MEX_EGLD()),\n    // \"egld:Maiar:Farm:MEX\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.MEX()),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs, Threat } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { fmt18, zero } from \"@defi.org/web3-candies\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nconst saveToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n    ready: false,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      saveToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      saveToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  if (!api.getState().ready) await PositionFactory.oracle.warmup(_.values(positions));\n\n  await Promise.all(_.map(positions, (p) => p?.load().catch((e) => console.log(p.getArgs().type, e))));\n  api.setState({ positions });\n  api.setState({ ready: true });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        health: fmtHealth(p.getHealth()),\n        value: \"$\" + fmt18(p.getAmounts().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        pending: \"$\" + fmt18(p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        tvl: \"$\" + fmt18(p.getTVL()).split(\".\")[0],\n        position: p,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\nexport const useAllPositionsReady = createHook(AllPositionsState, {\n  selector: (state) => state.ready,\n});\n\nfunction fmtHealth(health: Threat[]) {\n  if (!health.length) return \"🟢\";\n  return health.map((t) => t.message).join(\"⚠️\");\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => allPositionActions.addPosition(state.type, state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddWalletDialogState = createStore({\n  name: \"AddWalletDialogState\",\n\n  initialState: {\n    show: false,\n    address: \"\",\n    valid: false,\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState }) => {\n        const valid = PositionFactory.isValidWallet(address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddWalletDialog = createHook(AddWalletDialogState);\n","import { ElrondMaiar } from \"../ElrondMaiar\";\nimport { TokenAmount } from \"./Position\";\nimport { bn, erc20, erc20abi, Network, sleep, web3, zero } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport { erc20s } from \"../consts\";\n\nconst nativeAssets = {\n  eth: () => erc20(\"ETH\", erc20s.eth.WETH().address),\n  bsc: () => erc20(\"BNB\", erc20s.bsc.WBNB().address),\n  poly: () => erc20(\"MATIC\", erc20s.poly.WMATIC().address),\n};\n\ntype TokenInfo = { chainId: number; address: string; decimals: number; logoURI: string; name: string; symbol: string; balance?: BN };\n\nexport async function fetchBalances(oracle: PriceOracle, network: Network, wallet: string): Promise<Record<string, TokenAmount[]>> {\n  if (wallet.startsWith(\"erd1\")) {\n    return { Elrond: await ElrondMaiar.balances(oracle, wallet) };\n  }\n\n  const tokens = await getAllTokenInfos(network);\n  await fetchMulticallBalances(wallet, tokens);\n  const withbalance = _.filter(tokens, (t) => !!t.balance && !bn(t.balance).isZero());\n  tokens.length = 0;\n\n  await oracle.fetchPrices(\n    network.id,\n    _.map(withbalance, (t) => t.address)\n  );\n\n  const result = await Promise.all(\n    _.map(withbalance, (t) => {\n      const asset = erc20(t.name, Web3.utils.toChecksumAddress(t.address));\n      return asset.mantissa(t.balance || zero).then((amount) =>\n        oracle.valueOf(asset, amount).then((value) => ({\n          asset,\n          amount,\n          value,\n        }))\n      );\n    })\n  );\n\n  const asset = (nativeAssets as any)[network.shortname]();\n  const amount = bn(await web3().eth.getBalance(wallet));\n  const value = await oracle.valueOf(asset, amount);\n  result.push({ asset, amount, value });\n\n  return { [network.name]: result };\n}\n\nasync function getAllTokenInfos(network: Network) {\n  const json = await fetch(`https://tokens.coingecko.com/uniswap/all.json`).then((it) => it.json());\n  const result = _(json.tokens as TokenInfo[])\n    .filter((t) => t.chainId === network.id && t.decimals >= 0 && t.decimals <= 18)\n    .uniqBy((t) => t.address)\n    .reject((t) => _.includes(blacklist, t.address))\n    .value();\n  delete json.tokens;\n  console.log(\"fetched total tokens:\", result.length);\n  return result;\n}\n\nasync function fetchMulticallBalances(wallet: string, tokens: TokenInfo[]) {\n  console.log(\"fetching balance for\", tokens.length);\n  let remaining = _.chunk(tokens, 400);\n  for (let retries = 0; remaining.length && retries < 10; retries++) {\n    remaining = await Promise.all(_.map(remaining, (tokens) => performMulticallBalanceOf(wallet, tokens)));\n    const flattened = _.flatten(remaining);\n    if (flattened.length < 20) console.log(\"problematic:\", flattened);\n    console.log(\"remaining\", flattened.length);\n    remaining = _(flattened)\n      .shuffle()\n      .chunk(flattened.length / 10)\n      .value();\n    await sleep(0.5);\n  }\n  console.log(\"finally remaining\", _(remaining).flatten().size());\n}\n\nasync function performMulticallBalanceOf(wallet: string, tokens: TokenInfo[]) {\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t.address,\n          contractAddress: t.address,\n          abi: erc20abi,\n          calls: [{ reference: t.address, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n    _.forEach(result.results, (v) => {\n      const t = _.find(tokens, (t) => t.address === v.callsReturnContext[0].reference)!;\n      t.balance = bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16);\n    });\n    result.results = {};\n    return [];\n  } catch (e) {\n    return tokens;\n  }\n}\n\nconst blacklist = [\n  \"0x2859021eE7F2Cb10162E67F33Af2D22764B31aFf\",\n  \"0x5e3845A1d78DB544613EdbE43Dc1Ea497266d3b8\",\n  \"0x47140a767a861f7a1f3b0dd22a2f463421c28814\",\n  \"0x1c5b760f133220855340003b43cc9113ec494823\",\n  \"0x2859021ee7f2cb10162e67f33af2d22764b31aff\",\n  \"0x5e3845a1d78db544613edbe43dc1ea497266d3b8\",\n];\n","import _ from \"lodash\";\nimport { createHook, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { fetchBalances } from \"../positions/base/Balances\";\nimport { TokenAmount } from \"../positions/base/Position\";\nimport { ether, fmt18, getNetwork } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst STORAGE_KEY = \"Wallets:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"[]\") as string[];\nconst saveToStorage = (data: string[]) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\ntype WalletBalances = Record<string, TokenAmount[]>;\ntype WalletRow = { id: string; wallet: string; network: string; asset: string; amount: string; value: string };\n\nconst WalletsState = createStore({\n  name: \"WalletsState\",\n\n  initialState: {\n    wallets: [] as string[],\n    balances: {} as Record<string, WalletBalances>,\n    rows: [] as WalletRow[],\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    add: (address: string) => async (api) => {\n      const current = api.getState().wallets;\n      saveToStorage(_.uniq(_.concat(current, address)));\n      await load(api);\n    },\n\n    delete: (address: string) => async (api) => {\n      const current = api.getState().wallets;\n      const wallets = _.filter(current, (a) => a !== address);\n      saveToStorage(wallets);\n      api.setState({ wallets });\n      await load(api);\n    },\n  },\n});\n\nasync function load({ getState, setState }: StoreActionApi<typeof WalletsState.initialState>) {\n  console.log(\"LOAD wallets\");\n  const wallets = _.merge(loadFromStorage(), getState().wallets);\n  setState({ wallets });\n\n  const network = await getNetwork();\n  const oracle = PositionFactory.oracle;\n  const fetched = await Promise.all(wallets.map((w) => fetchBalances(oracle, network, w)));\n  const balances = getState().balances;\n\n  const rows = [] as WalletRow[];\n  _.forEach(wallets, (w, i) => {\n    balances[w] = _.merge({}, balances[w], fetched[i]);\n\n    _.forEach(balances[w], (aa, n) => {\n      const nonzero = _.filter(aa, (a) => a.value.gte(ether));\n      _.forEach(nonzero, (a) => {\n        rows.push({\n          id: `${w}:${n}:${a.asset.name}`,\n          wallet: w,\n          network: n,\n          asset: a.asset.name,\n          amount: fmt18(a.amount),\n          value: \"$\" + fmt18(a.value).split(\".\")[0],\n        });\n      });\n    });\n  });\n\n  setState({ rows });\n}\nexport const useWalletsRows = createHook(WalletsState, { selector: (state) => state.wallets });\nexport const useWalletsBalancesRows = createHook(WalletsState, {\n  selector: (state) => state.rows,\n});\n","import React from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemButton, ListItemText, TextField } from \"@mui/material\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { useAddWalletDialog } from \"../state/AddWalletDialogState\";\nimport _ from \"lodash\";\nimport { useWalletsRows } from \"../state/WalletsState\";\n\nexport const AddWalletBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddWalletDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Wallet\n    </Button>\n  );\n};\n\nexport const AddWalletDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddWalletDialog();\n  const [wallets, walletsActions] = useWalletsRows();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => walletsActions.add(state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Wallet</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Wallet Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n\n          <div>Tracking:</div>\n          <List>\n            {_.map(wallets, (w) => (\n              <ListItem key={w} disablePadding>\n                <ListItemButton>\n                  <ListItemText primary={w} onClick={() => appStateActions.withLoading(() => walletsActions.delete(w))} />\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button } from \"@mui/material\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\nimport { AddWalletBtn } from \"./AddWalletDialog\";\n\nexport const AppHeader = () => (\n  <div style={{ fontSize: \"medium\", minWidth: \"42em\" }}>\n    <br />\n    <br />\n\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ConnectBtn />\n      <AddWalletBtn />\n      <AddPositionBtn />\n    </div>\n\n    <div />\n    <WalletInfo />\n    <div />\n\n    <br />\n  </div>\n);\n\nconst ConnectBtn = () => {\n  const [isConnected, actions] = useIsAppConnected();\n\n  return (\n    <Button variant={\"contained\"} size={\"large\"} onClick={actions.connect}>\n      {isConnected ? \"Refresh\" : \"Connect\"}\n    </Button>\n  );\n};\n\nconst WalletInfo = () => {\n  const [state] = useAppState();\n  return (\n    <div>\n      <br />\n      <div>Network 🌐 {state.network?.name}</div>\n      <div>Wallet 🔑 {state.wallet}</div>\n      <div>Balance 💰 {fmt18(state.balance)}</div>\n    </div>\n  );\n};\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      positionData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Position\", width: 300, align: \"left\" },\n  { field: \"health\", headerName: \"Health\", width: 100, align: \"center\" },\n  { field: \"value\", headerName: \"Market Value\", width: 100, align: \"right\" },\n  { field: \"pending\", headerName: \"Pending\", width: 100, align: \"right\" },\n  { field: \"tvl\", headerName: \"TVL\", width: 150, align: \"right\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div hidden={!rows.length} style={{ height: \"100%\", width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.positionData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { useWalletsBalancesRows } from \"../state/WalletsState\";\nimport { useAllPositionsReady } from \"../state/AllPositionsState\";\n\nconst columns: GridColDef[] = [\n  { field: \"wallet\", headerName: \"Wallet\", width: 420, align: \"left\" },\n  { field: \"network\", headerName: \"Network\", width: 80, align: \"left\" },\n  { field: \"asset\", headerName: \"Asset\", width: 200, align: \"left\" },\n  { field: \"value\", headerName: \"Market Value\", width: 100, align: \"right\" },\n  { field: \"amount\", headerName: \"Amount\", width: 100, align: \"right\" },\n];\n\nexport const AllBalancesTable = () => {\n  const [appState, appActions] = useAppState();\n  const [isready] = useAllPositionsReady();\n  const [rows, actions] = useWalletsBalancesRows();\n\n  useEffect(() => {\n    if (appState.network.id && isready) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions, isready]);\n\n  const click = (p: any) => {};\n\n  return (\n    <div hidden={!rows.length || !isready} style={{ height: \"100%\", width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useAppState } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { AllBalancesTable } from \"./ui/AllBalancesTable\";\nimport { AddWalletDialog } from \"./ui/AddWalletDialog\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n        <AllBalancesTable />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <AddWalletDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [state] = useAppState();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={state.loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Position, PositionArgs, TokenAmount } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { Address, BigUIntValue, BytesValue, ContractFunction, ProxyProvider, SmartContract } from \"@elrondnetwork/erdjs/out\";\nimport _ from \"lodash\";\nimport BigNumberExt from \"bignumber.js\";\nimport BN from \"bn.js\";\n\nexport namespace ElrondMaiar {\n  export const network = { id: -508, name: \"Elrond\", shortname: \"egld\" };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n  };\n\n  export async function balances(oracle: PriceOracle, address: string) {\n    const usdc = tokens.USDC();\n    const mex = tokens.MEX();\n    const lkmex = tokens.LKMEX();\n    const egld = tokens.EGLD();\n\n    const [esdts, balanceEGLD] = await Promise.all([\n      provider.getAddressEsdtList(new Address(address)),\n      provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString())),\n    ]);\n    const balanceUSDC = bn(_.find(esdts, (t) => t.tokenIdentifier === usdc.tokenId)?.balance);\n    const balanceMEX = bn(_.find(esdts, (t) => t.tokenIdentifier === mex.tokenId)?.balance);\n    const balanceLKMEX = bn(_.find(esdts, (t) => t.tokenIdentifier === lkmex.tokenId)?.balance);\n    const balanceWEGLD = bn(_.find(esdts, (t) => t.tokenIdentifier === egld.tokenId)?.balance);\n\n    const [vEGLD, vWEGLD, vUSDC, vMEX, vLKMEX] = await Promise.all([\n      oracle.valueOf(egld, balanceEGLD),\n      oracle.valueOf(egld, balanceWEGLD),\n      oracle.valueOf(usdc, balanceUSDC),\n      oracle.valueOf(mex, balanceMEX),\n      oracle.valueOf(mex, balanceLKMEX),\n    ]);\n    return [\n      { asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: vEGLD },\n      { asset: egld, amount: balanceWEGLD, value: vWEGLD },\n      { asset: usdc, amount: balanceUSDC, value: vUSDC },\n      { asset: mex, amount: balanceMEX, value: vMEX },\n      { asset: lkmex, amount: balanceLKMEX, value: vLKMEX },\n    ] as TokenAmount[];\n  }\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n  export const Strategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\",\n      farm: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n    }),\n  };\n\n  export class Farm implements Position {\n    mex = tokens.MEX();\n\n    data = {\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => network;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () =>\n      this.strategy.assets.length === 2\n        ? [\n            {\n              asset: this.strategy.assets[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n            {\n              asset: this.strategy.assets[1],\n              amount: this.data.amount1,\n              value: this.data.value1,\n            },\n          ]\n        : [\n            {\n              asset: this.strategy.assets[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n          ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [esdts, farmingTokenReserve, token0Id, reserves] = await Promise.all([\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      const [token0r, token1r, lpTotalSupply] = reserves;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      if (!farmNfts.length) return;\n\n      this.data.lpBalanceStaked = farmNfts.map((nft) => parseAmountLpFromAttributes(nft.attributes)).reduce((sum, b) => sum.add(b), zero);\n\n      this.data.rewardAmount = await Promise.all(farmNfts.map((nft) => callAndParseGetPendingRewards(farm, nft.balance, nft.attributes))).then((r) =>\n        r.reduce((sum, r) => sum.add(r), zero)\n      );\n\n      const percentOfPool = this.data.lpBalanceStaked.mul(ether).div(lpTotalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl, this.data.rewardValue] = await Promise.all([\n        this.oracle.valueOf(this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(this.strategy.assets[1], token1.muln(2).mul(farmingTokenReserve).div(lpTotalSupply)),\n        this.oracle.valueOf(this.mex, this.data.rewardAmount),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n\n  //#[derive(TopEncode, TopDecode, NestedEncode, NestedDecode, TypeAbi, Clone)]\n  // pub struct FarmTokenAttributes<M: ManagedTypeApi> {\n  //     pub reward_per_share: BigUint<M>,\n  //     pub original_entering_epoch: u64,\n  //     pub entering_epoch: u64,\n  //     pub apr_multiplier: u8,\n  //     pub with_locked_rewards: bool,\n  //     pub initial_farming_amount: BigUint<M>,\n  //     pub compounded_reward: Bigu32,\n  //     pub current_farm_amount: BigUint<M>,\n  // }\n  //000000000000000008 08b17d48809d7fc0 00000000000001e9 00000000000001e9 0f 01 00000008 77a3ec302d1cd52c 00000000 00000009 07029ad6d2a4b07d94\n  function parseAmountLpFromAttributes(attributes: string) {\n    let hex = base64(attributes).toString(\"hex\");\n    if (hex.length % 2 !== 0) {\n      hex = \"0\" + hex;\n    }\n\n    let bytes = [];\n    for (let i = 0; i < hex.length - 1; i += 2) bytes.push(hex[i] + hex[i + 1]);\n\n    const perShare_z = parseInt(bytes[0], 16);\n    const origEpoch_z = 8;\n    const enterEpoch_z = 8;\n    const apr_z = 1;\n    const locked_z = 1;\n    const lp_z_z = 4;\n    const lp_z_index = perShare_z + origEpoch_z + enterEpoch_z + apr_z + locked_z + lp_z_z;\n    const lp_z = parseInt(bytes[lp_z_index], 16);\n    const lp_index = lp_z_index + 1;\n    return bn(_.slice(bytes, lp_index, lp_index + lp_z).join(\"\"), 16);\n  }\n\n  async function callAndParseGetPendingRewards(farm: SmartContract, balanceFarmNFT: BN, attributes: string) {\n    const result = await farm.runQuery(provider, {\n      func: new ContractFunction(\"calculateRewardsForGivenPosition\"),\n      args: [new BigUIntValue(BigNumberExt.max(balanceFarmNFT.toString())), new BytesValue(Buffer.from(attributes, \"base64\"))],\n    });\n    result.assertSuccess();\n    return base64(result.returnData[0]);\n  }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n"],"sourceRoot":""}