{"version":3,"sources":["reportWebVitals.ts","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","state/AppState.ts","positions/base/PositionFactory.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","positions/base/PriceOracle.ts","positions/Revault.ts","positions/consts.ts","positions/index.ts","state/AllPositionsState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AppHeader.tsx","state/PositionDialogState.ts","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts","../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppState","createStore","name","initialState","loading","wallet","balance","zero","network","alertDialog","actions","connect","a","setState","_withLoading","ethereum","window","alert","_onConnect","on","withLoading","thunk","showAlert","t","message","setWeb3Instance","Web3","account","getNetwork","bn","web3","eth","getBalance","Severity","useAppState","createHook","useIsAppConnected","selector","state","utils","isAddress","coingeckoIds","networks","id","bsc","poly","PriceOracle","prices","token","amount","tokenId","address","this","isZero","esdt","fetchPricesElrond","fetchPrices","mul","div","ether","positions","bynetwork","_","groupBy","p","Promise","all","ElrondMaiar","map","getAssets","concat","getRewardAssets","flatten","value","keys","filter","parseInt","networkId","addresses","isEmpty","coingeckoId","find","v","k","toString","fetch","join","response","json","result","mapKeys","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","accept","pragma","JSON","stringify","method","data","inputs","results","Error","merge","registry","oracle","types","args","type","current","startsWith","Address","fromString","e","isElrondAddress","PositionFactory","Farm","asset0","asset1","lpToken","poolId","masterchef","contracts","Pancakeswap_Masterchef","cake","erc20s","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getData","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","tx","useLegacyTx","encodeABI","from","send","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","contract","require","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","erc20sOrig","REVA","erc20","contractsOrig","Revault_Farm","SingleVault","revault","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","getArgs","getHealth","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","revaChef","chef","tokens","tvlBusd","WBNB","BUSD","supportedVaults","abi","encodeFunctionSignature","vaults","getUserVaultPrincipal","Revault","register","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","Strategies","USDC_EGLD","MEX_EGLD","STORAGE_KEY","loadFromStorage","parse","localStorage","getItem","saveToStorage","setItem","AllPositionsState","load","dispatch","addPosition","getState","position","create","delete","posId","sendTransaction","harvest","console","log","warmup","values","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","health","fmtHealth","fmt18","reduce","sum","add","split","useAllPositions","length","AddPositionDialogState","show","valid","allTypes","sort","closeDialog","setType","isValidInput","setAddress","useAddPositionDialog","AddPositionBtn","isConnected","Button","variant","size","disabled","onClick","AddPositionDialog","appStateActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","style","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","onChange","target","MenuItem","TextField","DialogActions","AppHeader","fontSize","display","flexDirection","justifyContent","ConnectBtn","WalletInfo","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","BN","positionMethods","selectedMethodArgTypes","assets","rewardAssets","positionData","columns","field","headerName","width","align","AllPositionsTable","appState","appActions","rows","positionDialogActions","useEffect","height","onCellClick","PositionDialog","allPositionsActions","DialogContentText","argType","autoFocus","margin","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","href","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","hidden","maxWidth","left","top","Geom1","Geom2","document","getElementById","shortname","provider","ProxyProvider","timeout","pool","farm","strategy","balanceEGLD","pair","SmartContract","getAccount","r","getAddressEsdtList","base64","esdts","lpTotalStakedInFarm","farmNftTotalSupply","token0Id","farmNfts","creator","farmNftBalance","nft","b","farmNftPercentOfSupply","lpBalance","token0r","token1r","percentOfPool","dec","token1","decimals","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.ccc9b239.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, bn, getNetwork, Network, setWeb3Instance, web3, zero } from \"@defi.org/web3-candies\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    loading: false,\n    wallet: \"\",\n    balance: zero,\n    network: {} as Network,\n\n    alertDialog: \"\",\n  },\n\n  actions: {\n    connect:\n      () =>\n      async ({ setState }) => {\n        await _withLoading(setState, async () => {\n          setState({ wallet: \"\", balance: zero, network: {} as Network });\n\n          const ethereum = (window as any).ethereum;\n          if (!ethereum) {\n            alert(\"install metamask\");\n            return;\n          }\n          await _onConnect(setState, ethereum);\n\n          ethereum.on(\"accountsChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n          ethereum.on(\"chainChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n        });\n      },\n\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n  },\n});\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any, ethereum: any) {\n  setWeb3Instance(new Web3(ethereum));\n  const wallet = await account();\n  setState({\n    wallet,\n    network: await getNetwork(),\n    balance: bn(await web3().eth.getBalance(wallet)),\n  });\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet),\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network } from \"@defi.org/web3-candies\";\nimport Web3 from \"web3\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = args.type + \":\" + args.address;\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidInput(type: string, address: string) {\n    return !!type && (Web3.utils.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, contracts, erc20s, getNetwork, networks, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.bsc;\n    }\n\n    getAssets() {\n      return [this.asset0, this.asset1];\n    }\n\n    getRewardAssets() {\n      return [this.cake];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.masterchef.methods.deposit(this.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, bn18, contract, erc20s, ether, getNetwork, networks, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimRewardsToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimAndTransferAllCompToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport { bn18, ether, getNetwork, Network, networks, Token } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(token: Token, amount: BN): Promise<BN> {\n    const id = (token as any).tokenId || token.address;\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if ((token as any).esdt) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices((await getNetwork()).id, [id]);\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n\n    await Promise.all([\n      this.fetchPricesElrond(\n        _(bynetwork[ElrondMaiar.network.id])\n          .map((p) => p.getAssets().concat(p.getRewardAssets()))\n          .flatten()\n          .map((a) => a.address)\n          .value()\n      ),\n      ..._(bynetwork)\n        .keys()\n        .filter((id) => parseInt(id) > 0)\n        .map((id) =>\n          this.fetchPrices(\n            id,\n            _(bynetwork[id])\n              .map((p) => p.getAssets().concat(p.getRewardAssets()))\n              .flatten()\n              .map((a) => a.address)\n              .value()\n          )\n        )\n        .value(),\n    ]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n    const response = await fetch(`https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => Web3.utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    const body = {\n      variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n      query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n    };\n    const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n      headers: {\n        accept: \"*/*\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"application/json\",\n        pragma: \"no-cache\",\n      },\n      body: JSON.stringify(body),\n      method: \"POST\",\n    });\n    const json = await response.json();\n\n    const result = _(json.data)\n      .mapKeys((v, k) => body.variables[k])\n      .mapValues((v) => bn18(v))\n      .value();\n\n    return this.updateResults(tokenIds, result);\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, contract, getNetwork, networks, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s } from \"./consts\";\nimport _ from \"lodash\";\nimport { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\n\nexport namespace Revault {\n  export class SingleVault implements Position {\n    revault = contracts.bsc.Revault_Farm();\n    reva = erc20s.bsc.REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue] = await Promise.all([\n        this.oracle.valueOf(this.asset, this.data.amount),\n        this.oracle.valueOf(this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.asset, this.data.pending),\n      ]);\n\n      const chef = contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), await this.revault.methods.revaChef().call());\n      const { tvlBusd } = await chef.methods.tokens(this.asset.address).call();\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 },\n        [erc20s.bsc.BUSD().address]: { id: 1 },\n        [erc20s.bsc.CAKE().address]: { id: 2 },\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.getUserVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { erc20s as erc20sOrig, contracts as contractsOrig, erc20, contract } from \"@defi.org/web3-candies\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {\n  bsc: {\n    REVA: () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\"),\n  },\n});\n\nexport const contracts = _.merge({}, contractsOrig, {\n  bsc: {\n    Revault_Farm: () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\"),\n  },\n});\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"@defi.org/web3-candies\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n    \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n    \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n    \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n    \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n    \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n\n    \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.CAKE()),\n    \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.BUSD()),\n    \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.WBNB()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.MEX_EGLD()),\n    // \"egld:Maiar:Farm:MEX\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, [ElrondMaiar.tokens.MEX()]),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs, Threat } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { fmt18, zero } from \"@defi.org/web3-candies\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nconst saveToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n  },\n\n  actions: {\n    load:\n      () =>\n      async ({ dispatch }) => {\n        await dispatch(load);\n      },\n\n    addPosition:\n      (type: string, address: string) =>\n      async ({ getState, dispatch }) => {\n        const position = PositionFactory.create({ type, address, id: \"\" });\n        if (!position) {\n          alert(`unknown type ${type} at ${address}`);\n          return;\n        }\n\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        data[position.getArgs().id] = position.getArgs();\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    delete:\n      (posId: string) =>\n      async ({ getState, dispatch }) => {\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        delete data[posId];\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load({ getState, setState }: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD\");\n  const current = getState().positions;\n  const positions = _.mapValues(loadFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n  await PositionFactory.oracle.warmup(_.values(positions));\n  await Promise.all(_.map(positions, (p) => p.load().catch((e) => console.log(p.getArgs().type, e))));\n  setState({ positions });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        health: fmtHealth(p.getHealth()),\n        value: \"$\" + fmt18(p.getAmounts().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        pending: \"$\" + fmt18(p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        tvl: \"$\" + fmt18(p.getTVL()).split(\".\")[0],\n        position: p,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nfunction fmtHealth(health: Threat[]) {\n  if (!health.length) return \"🟢\";\n  return health.map((t) => t.message).join(\"⚠️\");\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidInput(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidInput(getState().type, address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => allPositionActions.addPosition(state.type, state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button } from \"@mui/material\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nexport const AppHeader = () => (\n  <div style={{ fontSize: \"large\", minWidth: \"42em\" }}>\n    <br />\n    <br />\n\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ConnectBtn />\n\n      <AddPositionBtn />\n    </div>\n\n    <div />\n    <WalletInfo />\n    <div />\n\n    <br />\n  </div>\n);\n\nconst ConnectBtn = () => {\n  const [isConnected, actions] = useIsAppConnected();\n\n  return (\n    <Button variant={\"contained\"} size={\"large\"} onClick={actions.connect}>\n      {isConnected ? \"Refresh\" : \"Connect\"}\n    </Button>\n  );\n};\n\nconst WalletInfo = () => {\n  const [state] = useAppState();\n  return (\n    <div>\n      <p>Network 🌐 {state.network?.name}</p>\n      <p>Wallet 🔑 {state.wallet}</p>\n      <p>Balance 💰 {fmt18(state.balance)}</p>\n    </div>\n  );\n};\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      positionData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Type\", width: 300, align: \"left\" },\n  { field: \"health\", headerName: \"Health\", width: 60, align: \"center\" },\n  { field: \"value\", headerName: \"Market Value\", width: 100, align: \"right\" },\n  { field: \"pending\", headerName: \"Pending\", width: 100, align: \"right\" },\n  { field: \"tvl\", headerName: \"TVL\", width: 150, align: \"right\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: 500, width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.positionData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useAppState } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [state] = useAppState();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={state.loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { Address, ContractFunction, ProxyProvider, SmartContract } from \"@elrondnetwork/erdjs/out\";\nimport _ from \"lodash\";\n\nexport namespace ElrondMaiar {\n  export const network = { id: -508, name: \"Elrond\", shortname: \"egld\" };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"EGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n  export const Strategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n  };\n\n  export class Farm implements Position {\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      balanceEGLD: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => network;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [tokens.MEX()];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [balanceEGLD, esdts, lpTotalStakedInFarm, farmNftTotalSupply, token0Id, reserves] = await Promise.all([\n        provider.getAccount(account).then((r) => bn(r.balance.toString())),\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(farm, \"getFarmTokenSupply\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      this.data.balanceEGLD = balanceEGLD;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      const farmNftBalance = farmNfts.map((nft) => bn(nft.balance)).reduce((sum, b) => sum.add(b), zero);\n      const farmNftPercentOfSupply = farmNftBalance.mul(ether).div(farmNftTotalSupply);\n      const lpBalance = lpTotalStakedInFarm.mul(farmNftPercentOfSupply).div(ether);\n\n      const [token0r, token1r, totalSupply] = reserves;\n      const percentOfPool = lpBalance.mul(ether).div(totalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(this.strategy.assets[0], token0.muln(2).mul(lpTotalStakedInFarm).div(totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function base64Str(s: string) {\n    return Buffer.from(s, \"base64\").toString(\"utf8\");\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n","var map = {\n\t\"./bls.js\": 480,\n\t\"./bls_c.js\": 481\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 974;"],"sourceRoot":""}