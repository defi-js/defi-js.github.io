{"version":3,"sources":["reportWebVitals.ts","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","state/AppState.ts","positions/base/PositionFactory.ts","positions/base/PriceOracle.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","positions/index.ts","state/AllPositionsState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AppHeader.tsx","state/PositionDialogState.ts","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts","../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppState","createStore","name","initialState","loading","wallet","balance","zero","network","actions","connect","a","setState","_withLoading","ethereum","window","alert","_onConnect","on","withLoading","thunk","t","message","setWeb3Instance","Web3","account","getNetwork","bn","web3","eth","getBalance","useAppState","createHook","useIsAppConnected","selector","state","utils","isAddress","coingeckoIds","bsc","poly","PriceOracle","prices","token","amount","id","tokenId","address","this","esdt","fetchPricesElrond","fetchPrices","mul","div","ether","coingeckoId","_","find","v","k","shortname","addresses","fetch","join","response","json","result","mapKeys","toChecksumAddress","mapValues","bn18","usd","value","updateResults","tokenIds","body","variables","i","query","map","headers","accept","pragma","JSON","stringify","method","data","d","decimals","substring","length","inputs","results","isEmpty","Error","merge","registry","oracle","types","keys","args","type","p","current","startsWith","Address","fromString","e","isElrondAddress","PositionFactory","Severity","Farm","asset0","asset1","lpToken","poolId","masterchef","contracts","Pancakeswap_Masterchef","cake","erc20s","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","getData","getAmounts","asset","getPendingRewards","getContractMethods","functions","methods","networks","Promise","userInfo","call","getReserves","token0","totalSupply","pendingCake","all","reserves","pending","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","valueOf","useLegacyTx","tx","options","encodeABI","from","send","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","contract","require","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","isZero","lt","severity","Critical","getPositionData","posData","getBalanceReward","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","muln","divn","to18","borrowBalanceCurrent","Compound_cUSDC","balanceOfUnderlying","getAccountLiquidityWithInterest","claimAndTransferAllCompToOwner","Loops","register","BUSD","WBNB","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","ElrondMaiar","Strategies","USDC_EGLD","MEX_EGLD","STORAGE_KEY","loadFromStorage","parse","localStorage","getItem","saveToStorage","setItem","AllPositionsState","positions","load","dispatch","addPosition","getState","position","create","getArgs","delete","posId","sendTransaction","harvest","console","log","catch","useAllPositionsActions","useAllPositionRows","createSelector","values","sortBy","amounts","fmtAmounts","health","fmtHealth","getHealth","fmt18","reduce","sum","add","split","useAllPositions","amnt","AddPositionDialogState","show","valid","allTypes","closeDialog","setType","isValidInput","setAddress","useAddPositionDialog","AddPositionBtn","isConnected","Button","variant","size","disabled","onClick","AddPositionDialog","appStateActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","style","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","onChange","target","MenuItem","TextField","DialogActions","AppHeader","fontSize","display","flexDirection","justifyContent","ConnectBtn","WalletInfo","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","selectMethod","setMethodArg","index","arg","setUseLegacy","usePositionDialogActions","usePositionDialogSelector","filter","m","endsWith","indexOf","positionMethods","selectedMethodArgTypes","columns","field","headerName","width","AllPositionsTable","appState","appActions","rows","positionDialogActions","useEffect","height","onCellClick","toString","PositionDialog","allPositionsActions","DialogContentText","argType","autoFocus","margin","FormGroup","FormControlLabel","control","Switch","checked","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","href","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","hidden","maxWidth","left","top","Geom1","Geom2","document","getElementById","provider","ProxyProvider","timeout","tokens","assets","pool","farm","strategy","balanceEGLD","getAssets","getRewardAssets","pair","SmartContract","getAccount","r","getAddressEsdtList","base64","esdts","lpTotalStakedInFarm","farmNftTotalSupply","token0Id","farmNfts","creator","farmNftBalance","nft","b","farmNftPercentOfSupply","lpBalance","token0r","token1r","percentOfPool","dec","token1","erc20","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.e3df467b.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, bn, getNetwork, Network, setWeb3Instance, web3, zero } from \"@defi.org/web3-candies\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    loading: false,\n    wallet: \"\",\n    balance: zero,\n    network: {} as Network,\n  },\n\n  actions: {\n    connect:\n      () =>\n      async ({ setState }) => {\n        await _withLoading(setState, async () => {\n          setState({ wallet: \"\", balance: zero, network: {} as Network });\n\n          const ethereum = (window as any).ethereum;\n          if (!ethereum) {\n            alert(\"install metamask\");\n            return;\n          }\n          await _onConnect(setState, ethereum);\n\n          ethereum.on(\"accountsChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n          ethereum.on(\"chainChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n        });\n      },\n\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n  },\n});\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any, ethereum: any) {\n  setWeb3Instance(new Web3(ethereum));\n  const wallet = await account();\n  setState({\n    wallet,\n    network: await getNetwork(),\n    balance: bn(await web3().eth.getBalance(wallet)),\n  });\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet),\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network } from \"@defi.org/web3-candies\";\nimport Web3 from \"web3\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = args.type + \":\" + args.address;\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidInput(type: string, address: string) {\n    return !!type && (Web3.utils.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport { bn18, decimals, ether, getNetwork, to18, Token, zero } from \"@defi.org/web3-candies\";\n\nconst coingeckoIds = {\n  eth: \"ethereum\",\n  bsc: \"binance-smart-chain\",\n  poly: \"polygon-pos\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(token: Token, amount: BN): Promise<BN> {\n    const id = (token as any).tokenId || token.address;\n    if (!this.prices[id]) {\n      if ((token as any).esdt) await this.fetchPricesElrond(id);\n      else await this.fetchPrices(id);\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(...addresses: string[]): Promise<{ [address: string]: BN }> {\n    const network = await getNetwork();\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === network.shortname)!;\n    const response = await fetch(`https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => Web3.utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(...tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    const body = {\n      variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n      query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n    };\n    const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n      headers: {\n        accept: \"*/*\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"application/json\",\n        pragma: \"no-cache\",\n      },\n      body: JSON.stringify(body),\n      method: \"POST\",\n    });\n    const json = await response.json();\n\n    const result = _(json.data)\n      .mapKeys((v, k) => body.variables[k])\n      .mapValues((v) => {\n        const d = decimals(v);\n        if (d > 18) v = v.substring(0, v.length - (d - 18));\n        return bn18(v);\n      })\n      .value();\n\n    return this.updateResults(tokenIds, result);\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, contracts, erc20s, getNetwork, networks, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.bsc;\n    }\n\n    getAssets() {\n      return [this.asset0, this.asset1];\n    }\n\n    getRewardAssets() {\n      return [this.cake];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const [userInfo, reserves, token0, totalSupply, pending] = await Promise.all([\n        await this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        await this.lpToken.methods.getReserves().call(),\n        await this.lpToken.methods.token0().call(),\n        await this.lpToken.methods.totalSupply().call(),\n        await this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.amount0 = bn(r0).mul(amountLP).div(bn(totalSupply));\n      this.data.amount1 = bn(r1).mul(amountLP).div(bn(totalSupply));\n      this.data.value0 = await this.oracle.valueOf(this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.asset1, this.data.amount1);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.cake, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.masterchef.methods.deposit(this.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n  // /**\n  //  * USD, 18 decimals\n  //  */\n  // getTVL(): Promise<BN>;\n\n  // /**\n  //  * Percent spot annual rate without compounding, 18 decimals (123% == 1.23*10^18).\n  //  */\n  // getAPR(): Promise<BN>;\n\n  // getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n\n  getContractMethods(): string[];\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, bn18, contract, erc20s, getNetwork, networks, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.aave, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimRewardsToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      this.data.borrowBalance = to18(await this.instance.methods.borrowBalanceCurrent().call(), 6);\n      this.data.supplyBalance = to18(await erc20s.eth.Compound_cUSDC().methods.balanceOfUnderlying(this.args.address).call(), 6);\n      this.data.rewardAmount = bn(await this.instance.methods[\"claimComp()\"]().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.rewardAsset, this.data.rewardAmount);\n      const { accountLiquidity, accountShortfall } = await this.instance.methods.getAccountLiquidityWithInterest().call();\n      this.data.accountLiquidity = bn(accountLiquidity);\n      this.data.accountShortfall = bn(accountShortfall);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimAndTransferAllCompToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"@defi.org/web3-candies\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.MEX_EGLD()),\n    // \"egld:Maiar:Farm:MEX\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, [ElrondMaiar.tokens.MEX()]),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs, Threat, TokenAmount } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { fmt18, zero } from \"@defi.org/web3-candies\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nconst saveToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n  },\n\n  actions: {\n    load:\n      () =>\n      async ({ dispatch }) => {\n        await dispatch(load);\n      },\n\n    addPosition:\n      (type: string, address: string) =>\n      async ({ getState, dispatch }) => {\n        const position = PositionFactory.create({ type, address, id: \"\" });\n        if (!position) {\n          alert(`unknown type ${type} at ${address}`);\n          return;\n        }\n\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        data[position.getArgs().id] = position.getArgs();\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    delete:\n      (posId: string) =>\n      async ({ getState, dispatch }) => {\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        delete data[posId];\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load({ getState, setState }: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD\");\n  const current = getState().positions;\n  const positions = _.mapValues(loadFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n  await Promise.all(_.map(positions, (p) => p.load().catch((e) => console.log(p.getArgs().type, e))));\n  setState({ positions });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        amounts: fmtAmounts(p.getAmounts()),\n        pending: fmtAmounts(p.getPendingRewards()),\n        health: fmtHealth(p.getHealth()),\n        value: \"$\" + fmt18(p.getAmounts().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        position: p,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nfunction fmtAmounts(amnt: TokenAmount[]) {\n  return _(amnt)\n    .map((a) => `${a.asset.name}: ${fmt18(a.amount).split(\".\")[0]} ($${fmt18(a.value).split(\".\")[0]})`)\n    .join(\" + \");\n}\n\nfunction fmtHealth(health: Threat[]) {\n  if (!health.length) return \"🟢\";\n  return health.map((t) => t.message).join(\"⚠️\");\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidInput(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidInput(getState().type, address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => allPositionActions.addPosition(state.type, state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button } from \"@mui/material\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nexport const AppHeader = () => (\n  <div style={{ fontSize: \"large\", minWidth: \"42em\" }}>\n    <br />\n    <br />\n\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ConnectBtn />\n\n      <AddPositionBtn />\n    </div>\n\n    <div />\n    <WalletInfo />\n    <div />\n\n    <br />\n  </div>\n);\n\nconst ConnectBtn = () => {\n  const [isConnected, actions] = useIsAppConnected();\n\n  return (\n    <Button variant={\"contained\"} size={\"large\"} onClick={actions.connect}>\n      {isConnected ? \"Refresh\" : \"Connect\"}\n    </Button>\n  );\n};\n\nconst WalletInfo = () => {\n  const [state] = useAppState();\n  return (\n    <div>\n      <p>Network 🌐 {state.network?.name}</p>\n      <p>Wallet 🔑 {state.wallet}</p>\n      <p>Balance 💰 {fmt18(state.balance)}</p>\n    </div>\n  );\n};\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state.position,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) => state.selectedMethod,\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) => state.useLegacy,\n    (position, positionMethods, selectedMethod, selectedMethodArgTypes, useLegacy) => ({\n      position,\n      positionMethods,\n      selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy,\n    })\n  ),\n});\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Type\", width: 200 },\n  { field: \"amounts\", headerName: \"Amounts\", width: 500 },\n  { field: \"pending\", headerName: \"Pending\", width: 200 },\n  { field: \"health\", headerName: \"Health\", width: 50 },\n  { field: \"value\", headerName: \"Value\", width: 200 },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: 500, width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Send Transaction to {selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Custom Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useAppState } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [state] = useAppState();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={state.loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, fmt18, fmt6, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { Address, ContractFunction, ProxyProvider, SmartContract } from \"@elrondnetwork/erdjs/out\";\nimport _ from \"lodash\";\n\nexport namespace ElrondMaiar {\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"EGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n  export const Strategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n  };\n\n  export class Farm implements Position {\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      balanceEGLD: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => ({ id: -508, name: \"Elrond\", shortname: \"egld\" });\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [tokens.MEX()];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards() {\n      return [];\n    }\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [balanceEGLD, esdts, lpTotalStakedInFarm, farmNftTotalSupply, token0Id, reserves] = await Promise.all([\n        provider.getAccount(account).then((r) => bn(r.balance.toString())),\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(farm, \"getFarmTokenSupply\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      this.data.balanceEGLD = balanceEGLD;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      const farmNftBalance = farmNfts.map((nft) => bn(nft.balance)).reduce((sum, b) => sum.add(b), zero);\n      const farmNftPercentOfSupply = farmNftBalance.mul(ether).div(farmNftTotalSupply);\n      const lpBalance = lpTotalStakedInFarm.mul(farmNftPercentOfSupply).div(ether);\n\n      const [token0r, token1r, totalSupply] = reserves;\n      const percentOfPool = lpBalance.mul(ether).div(totalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      this.data.value0 = await this.oracle.valueOf(this.strategy.assets[0], this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.strategy.assets[1], this.data.amount1);\n    }\n\n    getContractMethods = () => [];\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function base64Str(s: string) {\n    return Buffer.from(s, \"base64\").toString(\"utf8\");\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n","var map = {\n\t\"./bls.js\": 479,\n\t\"./bls_c.js\": 480\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 973;"],"sourceRoot":""}