{"version":3,"sources":["../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positions/base/consts.ts","state/AppState.ts","positions/base/PositionFactory.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","ui/AppHeader.tsx","positions/base/PriceOracle.ts","positions/Revault.ts","positions/Unicly.ts","positions/Fodl.ts","positions/TokenBalances.ts","positions/Uniswap.ts","positions/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","erc20s","_","merge","erc20sOrig","networks","contractsOrig","networksOrig","egld","ElrondMaiar","network","off","name","shortname","currentNetwork","a","netId","bn","window","ethereum","chainId","toNumber","console","log","find","n","sendWithTxType","tx","useLegacyTx","account","from","type","send","isNetworkDisabled","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","setState","_withLoading","showAlert","alert","clickNetwork","networkId","getState","_ethereum","removeAllListeners","on","_onConnect","request","method","_switchNetwork","t","message","stack","setWeb3Instance","Web3","params","utils","numberToHex","Severity","useAppState","createHook","useIsAppConnected","selector","state","isAddress","useIsLoading","useAppActions","AppHeader","style","display","flexDirection","justifyContent","margin","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","ToggleButton","textTransform","disabled","coingeckoIds","eth","bsc","poly","arb","avax","PriceOracle","prices","token","amount","isElrond","tokenId","address","this","isZero","fetchPricesElrond","fetchPrices","toString","zero","mul","div","ether","positions","bynetwork","groupBy","getNetwork","coingeckoFetches","filter","getAssets","concat","getRewardAssets","flatten","uniq","elrondFetch","Promise","all","addresses","isEmpty","coingeckoId","v","k","url","join","fetch","response","json","result","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","accept","pragma","JSON","stringify","data","inputs","results","registry","oracle","isElrondAddress","startsWith","Address","fromString","types","args","uniqueId","current","PositionFactory","register","Farm","BUSD","WBNB","Pancakeswap_LP_BUSD_BNB","CAKE","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","asset0","asset1","lpToken","poolId","masterchef","contracts","Pancakeswap_Masterchef","cake","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getName","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","encodeABI","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","contract","require","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","sub","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","owner","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","SingleVault","RevaStake","REVA","erc20","revault","chef","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","staking","pendingAmount","userPoolInfo","poolInfo","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","getxUNICRate","xunicrate","totalLPTokens","Unicly","XFodlStake","fodl","xfodl","then","myXfodl","xfodlTotalSupply","fodlStaked","Fodl","positionGraph","posId","position","pool","totalValueLockedUSD","principal0","depositedToken0","withdrawnToken0","principal1","depositedToken1","withdrawnToken1","collectedFees0","collectedFeesToken0","collectedFees1","collectedFeesToken1","TokenBalance","mcap","nativeTokens","WMATIC","WAVAX","NativeTokenBalance","getBalance","forEach","input","TokenBalances","V3LP","WBTC","token1","nftPositionManager","valueIfHodl","valueNow","ilValue","il","pos","decreaseLiquidity","maxUint256","res","graph","principalValue0","principalValue1","add","Uniswap","Strategies","FarmStrategies","USDC_EGLD","MEX_EGLD","MexFarm","MexFarmStrategies","MEX","RIDE","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","ready","load","api","addPosition","create","update","newArgs","delete","sendTransaction","harvest","warmup","values","shouldLoad","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","chain","health","to3","reduce","sum","useAllPositions","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","length","split","BN","fmt18","positionMethods","selectedMethodArgTypes","assets","rewardAssets","rawData","AddPositionDialogState","show","valid","allTypes","sort","setType","isValidArgs","setAddress","trim","setInput","setName","useAddPositionDialog","AddPositionBtn","isConnected","Button","onClick","AddPositionDialog","appActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","columns","field","headerName","width","align","headerAlign","valueFormatter","commafy","toFixed","sortable","AllPositionsTable","appState","rows","positionDialogActions","useEffect","total","useMemo","row","height","onCellClick","autoHeight","hideFooter","ListItem","ListItemText","PositionDialog","appStateActions","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","hidden","addEventListener","file","files","reader","FileReader","onload","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById","provider","ProxyProvider","timeout","EGLD","esdt","LKMEX","LKFARM","EGLD_MEX_FARM","MEX_POOL_NFT","RIDE_POOL_NFT","getAddressEsdtList","getAccount","r","balance","esdts","balanceEGLD","tokenIdentifier","dec","balances","push","farm","mex","lpBalanceStaked","pair","SmartContract","base64","farmingTokenReserve","token0Id","token0r","token1r","lpTotalSupply","farmNfts","creator","nft","parseLPFromFarmTokenAttr","attributes","b","callAndParseGetPendingRewards","percentOfPool","reward","proxy","farmNft","totalAssetStaked","getAddress","farmEsdts","farmNftWrapper","parsePrincipalAmountFromWrappedFarmTokenAttr","decimals","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","balanceFarmNFT","BigUIntValue","BigNumberExt","max","BytesValue","codec","decodeNested","typeFarmTokenAttributes","initial_farming_amount","typeWrappedFarmTokenAttributes","farm_token_id","farming_token_amount","BinaryCodec","StructType","StructFieldDefinition","TokenIdentifierType","U64Type","BigUIntType","U8Type","BooleanType"],"mappings":"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","file":"static/js/main.532deb29.chunk.js","sourcesContent":["var map = {\n\t\"./bls.js\": 539,\n\t\"./bls_c.js\": 540\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1049;","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, contracts as contractsOrig, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {});\nexport const contracts = _.merge({}, contractsOrig, {});\n\nexport const networks = _.merge({}, networksOrig, {\n  egld: ElrondMaiar.network,\n  off: { id: -1, name: \"OffChain\", shortname: \"off\" },\n});\n\nexport async function currentNetwork() {\n  // const netId = await web3().eth.net.getId();\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positions/base/consts\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = _.uniqueId(args.type + \":\" + args.address + \"-\" + args.name + \"-\");\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return web3()?.utils?.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { bn, contracts, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n      \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n      \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n      \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n      \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n      \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n      \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n      \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n    });\n  }\n\n  class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  address: string;\n  id: string;\n  input?: string;\n  name?: string;\n};\n\nexport interface Position {\n  getName(): string;\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH.sub(this.data.totalDebtETH),\n        value: this.data.totalCollateralValue.sub(this.data.totalDebtValue),\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL = 0.005; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance.sub(this.data.borrowBalance),\n        value: this.data.supplyBalance.sub(this.data.borrowBalance),\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const isElrond = networkId === ElrondMaiar.network.id || !!(token as any).tokenId;\n    const id = isElrond ? (token as ElrondMaiar.ESDT).tokenId : token.address;\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (isElrond) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[ElrondMaiar.network.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n    const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n    const response = await fetch(url);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          accept: \"*/*\",\n          \"cache-control\": \"no-cache\",\n          \"content-type\": \"application/json\",\n          pragma: \"no-cache\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\nimport type { RevaultStakingAbi } from \"../../typechain-abi/RevaultStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Revault {\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.CAKE()),\n      \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.BUSD()),\n      \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    });\n    for (let i = 0; i < 4; i++) {\n      PositionFactory.register({\n        [`bsc:Revault:RevaStaking:x${i + 1}`]: (args, oracle) => new RevaStake(args, oracle, i),\n      });\n    }\n  }\n\n  const REVA = () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\");\n  const revaultFarm = () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\");\n  const revaultChef = () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\");\n  const revaStaking = () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\");\n\n  class SingleVault implements Position {\n    revault = revaultFarm();\n    chef = revaultChef();\n    reva = REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  class RevaStake implements Position {\n    staking = revaStaking();\n    reva = REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements Position {\n    xfarm = contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\");\n    unic = erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\");\n    xunic = erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\");\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, zero } from \"@defi.org/web3-candies\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\n\nexport namespace Fodl {\n  export class XFodlStake implements Position {\n    fodl = erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\");\n    xfodl = erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\");\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(bn),\n        this.xfodl.methods.totalSupply().call().then(bn),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(bn),\n      ]);\n      this.data.amount = myXfodl.mul(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport Web3 from \"web3\";\n\nexport namespace TokenBalances {\n  class TokenBalance implements Position {\n    data = {\n      name: \"\",\n      amount: zero,\n      value: zero,\n      totalSupply: zero,\n      mcap: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token: Token) {}\n\n    getName = () => this.data.name;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      [this.data.name, this.data.amount, this.data.totalSupply] = await Promise.all([\n        this.token.methods.name().call(),\n        this.token.methods.balanceOf(this.args.address).call().then(this.token.mantissa),\n        this.token.methods.totalSupply().call().then(this.token.mantissa),\n      ]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.mcap;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  const nativeTokens = {\n    eth: () => _.merge(erc20s.eth.WETH(), { name: \"ETH\" }),\n    bsc: () => _.merge(erc20s.bsc.WBNB(), { name: \"BNB\" }),\n    poly: () => _.merge(erc20s.poly.WMATIC(), { name: \"MATIC\" }),\n    avax: () => _.merge(erc20s.avax.WAVAX(), { name: \"AVAX\" }),\n    arb: () => _.merge(erc20s.arb.WETH(), { name: \"AETH\" }),\n  };\n\n  class NativeTokenBalance extends TokenBalance {\n    getName = () => this.token.name;\n\n    async load() {\n      [this.data.amount, this.data.totalSupply] = await Promise.all([web3().eth.getBalance(this.args.address).then(bn), this.token.methods.totalSupply().call().then(bn)]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n  }\n\n  export function register() {\n    _.forEach(networks, (n) => {\n      if (n.id < 0) return;\n      PositionFactory.register({\n        [`${n.shortname}:Token:*`]: (args, oracle) => new TokenBalance(args, oracle, n, erc20(\"\", Web3.utils.toChecksumAddress(args.input!))),\n      });\n\n      const t = (nativeTokens as any)[n.shortname];\n      if (t) PositionFactory.register({ [`${n.shortname}:TokenBase`]: (args, oracle) => new NativeTokenBalance(args, oracle, n, t()) });\n    });\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn18, contract, ether, maxUint256, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks } from \"./base/consts\";\nimport type { UniswapNftManagerAbi } from \"../../typechain-abi/UniswapNftManagerAbi\";\n\nexport namespace Uniswap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.WBTC(), erc20s.eth.WETH()),\n    });\n  }\n\n  class V3LP implements Position {\n    nftPositionManager = contract<UniswapNftManagerAbi>(require(\"../abi/UniswapNftManagerAbi.json\"), \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\");\n\n    data = {\n      id: 0,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      principal0: zero,\n      principal1: zero,\n      valueIfHodl: zero,\n      valueNow: zero,\n      ilValue: zero,\n      il: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!);\n      if (this.data.id <= 0) throw new Error(\"unknown positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [];\n    getPendingRewards = () => []; // TODO pending fees\n    getHealth = () => [];\n\n    async load() {\n      const pos = await this.nftPositionManager.methods.positions(this.data.id).call();\n      if (web3().utils.toChecksumAddress(pos.token0) !== web3().utils.toChecksumAddress(this.token0.address)) throw new Error(`invalid tokens for pos, ${pos}`);\n\n      const res = await this.nftPositionManager.methods.decreaseLiquidity([this.data.id, pos.liquidity, 0, 0, maxUint256]).call();\n      this.data.amount0 = await this.token0.mantissa(res.amount0);\n      this.data.amount1 = await this.token1.mantissa(res.amount1);\n\n      [this.data.value0, this.data.value1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.amount0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.amount1),\n      ]);\n\n      const graph = await positionGraph(this.data.id);\n      this.data.tvl = graph.tvl;\n      this.data.principal0 = graph.principal0;\n      this.data.principal1 = graph.principal1;\n\n      const [principalValue0, principalValue1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.principal0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.principal1),\n      ]);\n      this.data.valueIfHodl = principalValue0.add(principalValue1);\n      this.data.valueNow = this.data.value0.add(this.data.value1);\n      this.data.ilValue = this.data.valueIfHodl.sub(this.data.valueNow);\n      this.data.il = this.data.valueIfHodl.mul(ether).div(this.data.valueNow).sub(ether);\n    }\n\n    getContractMethods = () => []; // TODO\n    async callContract(method: string, args: string[]) {}\n    async harvest(useLegacyTx: boolean) {} // TODO claim fees\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n  }\n}\n\nasync function positionGraph(posId: number) {\n  const response = await fetch(\"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\", {\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      query: `{position(id:${posId}) {\n          depositedToken0\n          depositedToken1\n          withdrawnToken0\n          withdrawnToken1\n          collectedFeesToken0\n          collectedFeesToken1\n          pool {\n            totalValueLockedUSD\n          }\n        }\n      }`,\n    }),\n    method: \"POST\",\n  });\n  const json = await response.json();\n  return {\n    tvl: bn18(json.data.position.pool.totalValueLockedUSD),\n    principal0: bn18(json.data.position.depositedToken0).sub(bn18(json.data.position.withdrawnToken0)),\n    principal1: bn18(json.data.position.depositedToken1).sub(bn18(json.data.position.withdrawnToken1)),\n    collectedFees0: bn18(json.data.position.collectedFeesToken0),\n    collectedFees1: bn18(json.data.position.collectedFeesToken1),\n  };\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { Fodl } from \"./Fodl\";\nimport { TokenBalances } from \"./TokenBalances\";\nimport { Uniswap } from \"./Uniswap\";\n\nexport function registerAllPositions() {\n  TokenBalances.register();\n\n  Uniswap.register();\n  Pancakeswap.register();\n  Revault.register();\n\n  PositionFactory.register({\n    \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n    \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new ElrondMaiar.MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n    \"egld:Maiar:MEXFarm:RIDE\": (args, oracle) => new ElrondMaiar.MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.RIDE()),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { to3, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positions/base/consts\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n    ready: false,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string, input: string, name: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, input, name, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    update: (position: Position, newArgs: PositionArgs) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = newArgs;\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  if (!api.getState().ready) await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p.load().catch((e) => console.log(p.getArgs().type, e));\n    })\n  );\n  api.setState({ positions, ready: true });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        name: p.getArgs().name || p.getName() || p.getArgs().type,\n        chain: p.getNetwork().name,\n        health: p.getHealth(),\n        value:\n          to3(\n            p.getAmounts().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        pending:\n          to3(\n            p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        tvl: to3(p.getTVL(), 18).toNumber() / 1000,\n        position: p,\n        address: p.getArgs().address,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\nexport const useAllPositionsReady = createHook(AllPositionsState, {\n  selector: (state) => state.ready,\n});\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      rawData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport _ from \"lodash\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    input: \"\",\n    name: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", input: \"\", name: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        address = _.trim(address);\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n\n    setInput:\n      (input: string) =>\n      async ({ setState }) => {\n        input = _.trim(input);\n        setState({ input });\n      },\n\n    setName:\n      (name: string) =>\n      async ({ setState }) => {\n        name = _.trim(name);\n        setState({ name });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address, state.input, state.name)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Name?\" onChange={(e) => actions.setName(e.target.value)} />}\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Input?\" onChange={(e) => actions.setInput(e.target.value)} />}\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport { ListItem, ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\n\nconst columns: GridColDef[] = [\n  { field: \"chain\", headerName: \"Chain\", width: 120, align: \"left\" },\n  { field: \"name\", headerName: \"Position\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    width: 100,\n    align: \"center\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => {\n      const value = v.value as Threat[];\n      if (!value.length) return \"🟢\";\n      return value.map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"value\",\n    headerName: \"Market Value\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    width: 120,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", width: 450, align: \"left\", headerAlign: \"center\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  const total = useMemo(() => commafy(_.reduce(rows, (sum, row) => sum + row.value, 0).toFixed(0)), [rows]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <ListItem>\n        <ListItemText>Total Market Value: $ {total}</ListItemText>\n      </ListItem>\n\n      <AddPositionBtn />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  // const updatePos = () => appStateActions.withLoading(() => allPositionsActions.update(selector.position!, selector.position!.getArgs())).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.rawData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.name || selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n          {selector.position?.getArgs()?.input && <DialogContentText>Input: {selector.position?.getArgs()?.input}</DialogContentText>}\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positions/base/Position\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { Position, PositionArgs, TokenAmount } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport {\n  Address,\n  BigUIntType,\n  BigUIntValue,\n  BinaryCodec,\n  BytesValue,\n  ContractFunction,\n  ProxyProvider,\n  SmartContract,\n  StructType,\n  TokenIdentifierType,\n  U64Type,\n} from \"@elrondnetwork/erdjs\";\nimport BigNumberExt from \"bignumber.js\";\nimport { BooleanType, StructFieldDefinition, U8Type } from \"@elrondnetwork/erdjs/out\";\n\nexport namespace ElrondMaiar {\n  export const network = { id: -508, name: \"Elrond\", shortname: \"egld\" };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n    EGLD_MEX_FARM: () => esdt(\"EGLDMEXF\", \"EGLDMEXF-5bcc57\", 18),\n    MEX_POOL_NFT: () => esdt(\"MEX Pool NFT\", \"MEXFARM-e7af52\", 18),\n    RIDE_POOL_NFT: () => esdt(\"RIDE Pool NFT\", \"MEXRIDEF-bf0320\", 18),\n  };\n\n  export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n    const assets = _.map(tokens, (t) => t());\n\n    const [esdts, balanceEGLD] = await Promise.all([\n      provider.getAddressEsdtList(new Address(address)),\n      provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString())),\n    ]);\n\n    const balances = await Promise.all(\n      _(esdts)\n        .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n        .filter((t) => !!t.asset)\n        .map(async (t) => {\n          const amount = to18(t.esdt.balance, t.asset!.dec);\n          return {\n            asset: t.asset!,\n            amount,\n            value: await oracle.valueOf(network.id, t.asset!, amount),\n          };\n        })\n        .value()\n    );\n\n    balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(network.id, tokens.EGLD(), balanceEGLD) });\n\n    return balances;\n  }\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n  };\n\n  export class Farm implements Position {\n    mex = tokens.MEX();\n\n    data = {\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => network;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [esdts, farmingTokenReserve, token0Id, reserves] = await Promise.all([\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      const [token0r, token1r, lpTotalSupply] = reserves;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      if (!farmNfts.length) return;\n\n      this.data.lpBalanceStaked = farmNfts.map((nft) => parseLPFromFarmTokenAttr(nft.attributes)).reduce((sum, b) => sum.add(b), zero);\n\n      this.data.rewardAmount = await Promise.all(farmNfts.map((nft) => callAndParseGetPendingRewards(farm, nft.balance, nft.attributes))).then((r) =>\n        r.reduce((sum, r) => sum.add(r), zero)\n      );\n\n      const percentOfPool = this.data.lpBalanceStaked.mul(ether).div(lpTotalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl, this.data.rewardValue] = await Promise.all([\n        this.oracle.valueOf(network.id, this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], token1.muln(2).mul(farmingTokenReserve).div(lpTotalSupply)),\n        this.oracle.valueOf(network.id, this.mex, this.data.rewardAmount),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export type MexPoolStrategy = Strategy & { nft: ESDT; reward: ESDT };\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\",\n      nft: tokens.MEX_POOL_NFT(),\n      reward: tokens.MEX(),\n    }),\n    RIDE: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq5e2m9df5yxxkmr86rusejc979arzayjk2jpsz2q43s\",\n      nft: tokens.RIDE_POOL_NFT(),\n      reward: tokens.RIDE(),\n    }),\n  };\n\n  export class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as MexPoolStrategy).reward];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const account = new Address(this.args.address);\n      const proxy = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n      const farmNft = (this.strategy as MexPoolStrategy).nft;\n      const asset = this.getAssets()[0];\n\n      let totalAssetStaked = await call(farm, \"getFarmingTokenReserve\")\n        .then((r) => base64(r[0]))\n        .catch(() => zero);\n      if (totalAssetStaked.isZero()) {\n        const farmEsdts = await provider.getAddressEsdtList(farm.getAddress());\n        totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      }\n      this.data.tvl = await this.oracle.valueOf(network.id, asset, totalAssetStaked);\n\n      const esdts = await provider.getAddressEsdtList(account);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === proxy.getAddress().toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n      this.data.amount0 = parsePrincipalAmountFromWrappedFarmTokenAttr(farmNftWrapper.attributes, farmNft);\n      this.data.value0 = await this.oracle.valueOf(network.id, asset, this.data.amount0);\n\n      this.data.rewardAmount = await callAndParseGetPendingRewards(farm, farmNftWrapper.balance, farmNftWrapper.attributes);\n      this.data.rewardValue = await this.oracle.valueOf(network.id, this.getRewardAssets()[0], this.data.rewardAmount);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n\n  async function callAndParseGetPendingRewards(farm: SmartContract, balanceFarmNFT: BN, attributes: string) {\n    const result = await farm.runQuery(provider, {\n      func: new ContractFunction(\"calculateRewardsForGivenPosition\"),\n      args: [new BigUIntValue(BigNumberExt.max(balanceFarmNFT.toString())), new BytesValue(Buffer.from(attributes, \"base64\"))],\n    });\n    if (result.returnData.length) return base64(result.returnData[0]);\n\n    return zero;\n  }\n\n  function parseLPFromFarmTokenAttr(attributes: string) {\n    const [struct] = codec.decodeNested(Buffer.from(attributes, \"base64\"), typeFarmTokenAttributes);\n    const data = struct.valueOf();\n    return bn((data.initial_farming_amount as BigNumberExt).toString(16), 16);\n  }\n\n  function parsePrincipalAmountFromWrappedFarmTokenAttr(attributes: string, asset: ESDT) {\n    const [struct] = codec.decodeNested(Buffer.from(attributes, \"base64\"), typeWrappedFarmTokenAttributes);\n    const data = struct.valueOf();\n    if ((data.farm_token_id as Buffer).toString() !== asset.tokenId) return zero;\n\n    return bn((data.farming_token_amount as BigNumberExt).toString(16), 16);\n  }\n\n  const codec = new BinaryCodec();\n  const typeWrappedFarmTokenAttributes = new StructType(\"WrappedFarmTokenAttributes\", [\n    new StructFieldDefinition(\"farm_token_id\", \"\", new TokenIdentifierType()),\n    new StructFieldDefinition(\"farm_token_nonce\", \"\", new U64Type()),\n    new StructFieldDefinition(\"farm_token_amount\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"farming_token_id\", \"\", new TokenIdentifierType()),\n    new StructFieldDefinition(\"farming_token_nonce\", \"\", new U64Type()),\n    new StructFieldDefinition(\"farming_token_amount\", \"\", new BigUIntType()),\n  ]);\n  const typeFarmTokenAttributes = new StructType(\"FarmTokenAttributes\", [\n    new StructFieldDefinition(\"reward_per_share\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"original_entering_epoch\", \"\", new U64Type()),\n    new StructFieldDefinition(\"entering_epoch\", \"\", new U64Type()),\n    new StructFieldDefinition(\"apr_multiplier\", \"\", new U8Type()),\n    new StructFieldDefinition(\"with_locked_rewards\", \"\", new BooleanType()),\n    new StructFieldDefinition(\"initial_farming_amount\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"compounded_reward\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"current_farm_amount\", \"\", new BigUIntType()),\n  ]);\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n"],"sourceRoot":""}