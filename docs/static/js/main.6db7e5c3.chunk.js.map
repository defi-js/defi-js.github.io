{"version":3,"sources":["reportWebVitals.ts","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","state/AppState.ts","positions/base/PositionFactory.ts","positions/base/PriceOracle.ts","positions/consts.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","positions/Revault.ts","positions/Unicly.ts","positions/index.ts","state/AllPositionsState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","state/AddWalletDialogState.ts","positions/base/Balances.ts","state/WalletsState.ts","ui/AddWalletDialog.tsx","ui/AppHeader.tsx","state/PositionDialogState.ts","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/AllBalancesTable.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts","../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppState","createStore","name","initialState","loading","wallet","balance","zero","network","alertDialog","actions","connect","a","setState","_withLoading","ethereum","window","alert","_onConnect","on","withLoading","thunk","showAlert","t","message","setWeb3Instance","Web3","account","getNetwork","bn","web3","eth","getBalance","useAppState","createHook","useIsAppConnected","selector","state","utils","isAddress","coingeckoIds","networks","id","bsc","poly","PriceOracle","prices","token","amount","tokenId","address","this","isZero","esdt","fetchPricesElrond","fetchPrices","mul","div","ether","positions","bynetwork","_","groupBy","p","Promise","all","ElrondMaiar","map","getAssets","concat","getRewardAssets","flatten","value","keys","filter","parseInt","networkId","addresses","isEmpty","console","log","coingeckoId","find","v","k","toString","fetch","join","mode","response","json","result","mapKeys","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","accept","pragma","JSON","stringify","method","data","inputs","results","Error","merge","registry","oracle","isElrondAddress","type","startsWith","Address","fromString","e","types","args","current","PositionFactory","Severity","erc20s","erc20sOrig","UNIC","erc20","XUNIC","Unicly_UPUNK","Unicly_UJENNY","Unicly_LP_UPUNK_ETH","require","Unicly_LP_UJENNY_ETH","REVA","contracts","contractsOrig","Unicly_XUnicVault","contract","Revault_Farm","Revault_Chef","Farm","asset0","asset1","lpToken","poolId","masterchef","Pancakeswap_Masterchef","cake","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getData","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","tx","useLegacyTx","encodeABI","from","send","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","SingleVault","revault","chef","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","getArgs","getHealth","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","WBNB","BUSD","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","poolInfo","getxUNICRate","xunicrate","totalLPTokens","Unicly","register","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","Strategies","USDC_EGLD","MEX_EGLD","STORAGE_KEY","loadFromStorage","parse","localStorage","getItem","saveToStorage","setItem","AllPositionsState","ready","load","dispatch","addPosition","getState","position","create","delete","posId","sendTransaction","harvest","warmup","values","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","health","fmtHealth","fmt18","reduce","sum","add","split","useAllPositions","useAllPositionsReady","length","AddPositionDialogState","show","valid","allTypes","sort","closeDialog","setType","isValidArgs","setAddress","useAddPositionDialog","AddPositionBtn","isConnected","Button","variant","size","disabled","onClick","AddPositionDialog","appStateActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","style","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","onChange","target","MenuItem","TextField","DialogActions","AddWalletDialogState","isValidWallet","useAddWalletDialog","fetchBalances","balances","egld","WalletsState","wallets","rows","uniq","w","fetched","forEach","aa","n","nonzero","push","useWalletsRows","useWalletsBalancesRows","AddWalletBtn","AddWalletDialog","walletsActions","List","ListItem","disablePadding","ListItemButton","ListItemText","primary","AppHeader","fontSize","display","flexDirection","justifyContent","ConnectBtn","WalletInfo","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","BN","positionMethods","selectedMethodArgTypes","assets","rewardAssets","positionData","columns","field","headerName","width","align","AllPositionsTable","appState","appActions","positionDialogActions","useEffect","hidden","height","minHeight","onCellClick","PositionDialog","allPositionsActions","DialogContentText","argType","autoFocus","margin","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","AllBalancesTable","isready","darkTheme","createTheme","palette","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","href","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","document","getElementById","shortname","provider","ProxyProvider","timeout","usdc","mex","lkmex","getAddressEsdtList","getAccount","r","esdts","balanceEGLD","balanceUSDC","tokenIdentifier","balanceMEX","balanceLKMEX","vEGLD","vUSDC","vMEX","vLKMEX","pool","farm","lpBalanceStaked","pair","SmartContract","base64","farmingTokenReserve","token0Id","token0r","token1r","lpTotalSupply","farmNfts","creator","nft","parseAmountLpFromAttributes","attributes","b","callAndParseGetPendingRewards","percentOfPool","dec","token1","decimals","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","hex","bytes","lp_z_index","lp_z","lp_index","slice","balanceFarmNFT","BigUIntValue","BigNumberExt","max","BytesValue","assertSuccess","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","Object","resolve","module","exports"],"mappings":"42sCAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,iBCTC,G,cAAA,IAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,wCCA1B,MAA0B,kCCA1B,MAA0B,kC,kICUnCQ,EAAWC,YAAY,CAC3BC,KAAM,WAENC,aAAc,CACZC,SAAS,EACTC,OAAQ,GACRC,QAASC,OACTC,QAAS,GAETC,YAAa,IAGfC,QAAS,CACPC,QACE,yDACA,6BAAAC,EAAA,6DAASC,EAAT,EAASA,SAAT,SACQC,EAAaD,EAAD,sBAAW,4BAAAD,EAAA,yDAC3BC,EAAS,CAAER,OAAQ,GAAIC,QAASC,OAAMC,QAAS,KAEzCO,EAAYC,OAAeD,SAHN,uBAKzBE,MAAM,oBALmB,0CAQrBC,EAAWL,EAAUE,GARA,OAU3BA,EAASI,GAAG,mBAAmB,WAC7BD,EAAWL,EAAUE,MAEvBA,EAASI,GAAG,gBAAgB,WAC1BD,EAAWL,EAAUE,MAdI,4CAD/B,2CADA,uDAqBFK,YACE,SAACC,GAAD,8CACA,6BAAAT,EAAA,6DAASC,EAAT,EAASA,SAAT,SACQC,EAAaD,EAAUQ,GAD/B,2CADA,uDAKFC,UACE,SAACL,GAAD,8CACA,uBAAAL,EAAA,uDAASC,EAAT,EAASA,UACE,CAAEJ,YAAaQ,IAD1B,2CADA,0D,SAOSH,E,gFAAf,WAA4BD,EAAeU,GAA3C,SAAAX,EAAA,sEAEIC,EAAS,CAAET,SAAS,IAFxB,SAGUmB,IAHV,sDAKIN,MAAM,GAAD,OAAI,KAAEO,UALf,uBAOIX,EAAS,CAAET,SAAS,IAPxB,2E,+BAWec,E,gFAAf,WAA0BL,EAAeE,GAAzC,eAAAH,EAAA,6DACEa,0BAAgB,IAAIC,IAAKX,IAD3B,SAEuBY,oBAFvB,cAEQtB,EAFR,YAGEQ,EAHF,KAIIR,EAJJ,SAKmBuB,uBALnB,+BAMaC,KANb,UAMsBC,iBAAOC,IAAIC,WAAW3B,GAN5C,8CAIIA,OAJJ,KAKIG,QALJ,KAMIF,QANJ,kE,sBAUO,I,ECrEA,EDqEM2B,EAAcC,YAAWlC,GACzBmC,EAAoBD,YAAWlC,EAAU,CACpDoC,SAAU,SAACC,GAAD,OAAWX,IAAKY,MAAMC,UAAUF,EAAMhC,W,sKE3E5CmC,IAAY,oBACfC,WAASV,IAAIW,GAAK,YADH,eAEfD,WAASE,IAAID,GAAK,uBAFH,eAGfD,WAASG,KAAKF,GAAK,eAHJ,GAMLG,GAAb,kDACEC,OAA6B,GAD/B,mFAGE,WAAcC,EAAcC,GAA5B,eAAApC,EAAA,yDACQ8B,EAAMK,EAAcE,SAAWF,EAAMG,QAEtCC,KAAKL,OAAOJ,KAAOS,KAAKL,OAAOJ,GAAIU,SAH1C,qBAISL,EAAcM,KAJvB,gCAImCF,KAAKG,kBAAkB,CAACZ,IAJ3D,0CAKeS,KALf,UAKuCvB,uBALvC,2BAKqDc,GALrD,KAKyD,CAACA,GAL1D,eAKoBa,YALpB,sDAQSP,EAAOQ,IAAIL,KAAKL,OAAOJ,IAAKe,IAAIC,UARzC,iDAHF,oHAcE,WAAaC,GAAb,sBAAA/C,EAAA,6DACQgD,EAAYC,KAAEC,QAAQH,GAAW,SAACI,GAAD,OAAOA,EAAEnC,aAAac,MAD/D,SAGQsB,QAAQC,IAAR,CACJd,KAAKG,kBACHO,KAAED,EAAUM,KAAY1D,QAAQkC,KAC7ByB,KAAI,SAACJ,GAAD,OAAOA,EAAEK,YAAYC,OAAON,EAAEO,sBAClCC,UACAJ,KAAI,SAACvD,GAAD,OAAQA,EAAUqC,WACtBuB,UAND,oBAQDX,KAAED,GACFa,OACAC,QAAO,SAAChC,GAAD,OAAQiC,SAASjC,GAAM,KAC9ByB,KAAI,SAACzB,GAAD,OACH,EAAKa,YACHb,EACAmB,KAAED,EAAUlB,IACTyB,KAAI,SAACJ,GAAD,OAAOA,EAAEK,YAAYC,OAAON,EAAEO,sBAClCC,UACAJ,KAAI,SAACvD,GAAD,OAAOA,EAAEsC,WACbsB,YAGNA,WAxBP,gDAdF,uHA6CE,WAAkBI,EAA4BC,GAA9C,qBAAAjE,EAAA,0DACMiD,KAAEiB,QAAQD,GADhB,yCACmC,IADnC,cAEEE,QAAQC,IAAI,QAASH,GACfI,EAAcpB,KAAEqB,KAAK1C,IAAc,SAAC2C,EAAGC,GAAJ,OAAUA,IAAMR,EAAUS,cAHrE,SAIyBC,MAAM,uDAAD,OAAwDL,EAAxD,+BAA0FJ,EAAUU,KAAK,KAAzG,sBAAmI,CAC7JC,KAAM,SALV,cAIQC,EAJR,gBAOsBA,EAASC,OAP/B,cAOQA,EAPR,OASQC,EAAS9B,KAAE6B,GACdE,SAAQ,SAACT,EAAGC,GAAJ,OAAU1D,IAAKY,MAAMuD,kBAAkBT,MAC/CU,WAAU,SAACX,GAAD,OAAOY,eAAKZ,EAAEa,QACxBxB,QAZL,kBAcSrB,KAAK8C,cAAcpB,EAAWc,IAdvC,iDA7CF,+HAiEE,WAAwBO,GAAxB,qBAAAtF,EAAA,0DACMiD,KAAEiB,QAAQoB,GADhB,yCACkC,IADlC,cAEEnB,QAAQC,IAAI,eAAgBkB,GACtBC,EAAO,CACXC,UAAWvC,KAAE+B,QAAQM,GAAU,SAACxD,EAAI2D,GAAL,qBAAmBA,MAClDC,MAAM,UAAD,OAAYzC,KAAEM,IAAI+B,GAAU,SAACxD,EAAI2D,GAAL,sBAAoBA,EAApB,gBAAkCd,KAAK,MAAnE,8BACK1B,KAAEM,IAAI+B,GAAU,SAACxD,EAAI2D,GAAL,qBAAmBA,EAAnB,6CAAyDA,EAAzD,QAA+Dd,KAAK,MADzF,oBALT,SASyBD,MAAM,uCAAwC,CACnEiB,QAAS,CACPC,OAAQ,MACR,gBAAiB,WACjB,eAAgB,mBAChBC,OAAQ,YAEVN,KAAMO,KAAKC,UAAUR,GACrBS,OAAQ,SAjBZ,cASQnB,EATR,gBAmBqBA,EAASC,OAnB9B,cAmBQA,EAnBR,OAqBQC,EAAS9B,KAAE6B,EAAKmB,MACnBjB,SAAQ,SAACT,EAAGC,GAAJ,OAAUe,EAAKC,UAAUhB,MACjCU,WAAU,SAACX,GAAD,OAAOY,eAAKZ,MACtBX,QAxBL,kBA0BSrB,KAAK8C,cAAcC,EAAUP,IA1BtC,iDAjEF,kFA8FE,SAAcmB,EAAaC,GACzB,GAAIlD,KAAEiB,QAAQiC,GAAU,MAAM,IAAIC,MAAJ,uBAA0BF,IACxD,OAAOjD,KAAEoD,MAAM9D,KAAKL,OAAQiE,OAhGhC,K,SDJMG,GAAW,I,YAGR,IAAMC,EAAM,SAAG,IAAItE,GA8B1B,SAASuE,EAAgBC,EAAcnE,GACrC,IACE,OAAOmE,EAAKC,WAAW,UAAYpE,EAAQoE,WAAW,UAAYC,WAAQC,WAAWtE,GAAS4B,UAC9F,MAAO2C,GACP,OAAO,G,WAhCJ,SAAkBC,GACvB7D,KAAEoD,MAAMC,GAAUQ,I,WAGb,WACL,OAAO7D,KAAEY,KAAKyC,K,SAGT,SAAgBS,GACrB,OAAKT,GAASS,EAAKN,OAEdM,EAAKjF,KAAIiF,EAAKjF,GAAKiF,EAAKN,KAAO,IAAMM,EAAKzE,SAExCgE,GAASS,EAAKN,MAAMM,EAAMR,IAJA,M,aAO5B,SAAoBpD,EAAa6D,GACtC,OAAO7D,EAAEnC,aAAac,KAAOkF,EAAQlF,IAAMqB,EAAEnC,aAAac,GAAK,G,gBAG1D,SAAuBQ,GAC5B,OAAOxB,IAAKY,MAAMC,UAAUW,IAAYkE,EAAgB,QAASlE,I,cAG5D,SAAqBmE,EAAcnE,GACxC,QAASmE,IAAS3F,IAAKY,MAAMC,UAAUW,IAAYkE,EAAgBC,EAAMnE,K,CA5B5D2E,M,KEJV,ICDA,GCqCKC,GCpCL,GHAMC,GAASlE,KAAEoD,MAAM,GAAIe,SAAY,CAC5CjG,IAAK,CACHkG,KAAM,kBAAMC,gBAAM,OAAQ,+CAC1BC,MAAO,kBAAMD,gBAAM,QAAS,+CAE5BE,aAAc,kBAAMF,gBAAM,gBAAiB,+CAC3CG,cAAe,kBAAMH,gBAAM,iBAAkB,+CAC7CI,oBAAqB,kBAAMJ,gBAAmB,uBAAwB,6CAA8CK,EAAQ,OAC5HC,qBAAsB,kBAAMN,gBAAmB,wBAAyB,6CAA8CK,EAAQ,QAEhI5F,IAAK,CACH8F,KAAM,kBAAMP,gBAAM,OAAQ,kDAIjBQ,GAAY7E,KAAEoD,MAAM,GAAI0B,YAAe,CAClD5G,IAAK,CACH6G,kBAAmB,kBAAMC,mBAAyBN,EAAQ,MAA+B,gDAE3F5F,IAAK,CACHmG,aAAc,kBAAMD,mBAAyBN,EAAQ,MAA+B,+CACpFQ,aAAc,kBAAMF,mBAAyBN,EAAQ,MAA+B,mD,gBCnBzES,E,WAcX,WACSrB,EACAR,EACA8B,EACAC,EACAC,EACAC,GACN,IAAD,iCANOzB,OAMP,KALOR,SAKP,KAJO8B,SAIP,KAHOC,SAGP,KAFOC,UAEP,KADOC,SACP,KApBFC,WAAaX,YAAU/F,IAAI2G,yBAoBzB,KAnBFC,KAAOxB,SAAOpF,IAAI6G,OAmBhB,KAjBF3C,KAAO,CACL4C,QAASlJ,OACTmJ,QAASnJ,OACToJ,OAAQpJ,OACRqJ,OAAQrJ,OACRsJ,aAActJ,OACduJ,YAAavJ,OACbwJ,IAAKxJ,QAUL,KAkBFyJ,QAAU,kBAAM,EAAKnD,MAlBnB,KAwBFoD,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKjB,OACZjG,OAAQ,EAAK6D,KAAK4C,QAClBjF,MAAO,EAAKqC,KAAK8C,QAEnB,CACEO,MAAO,EAAKhB,OACZlG,OAAQ,EAAK6D,KAAK6C,QAClBlF,MAAO,EAAKqC,KAAK+C,UAjCnB,KAqCFO,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAKX,KACZvG,OAAQ,EAAK6D,KAAKgD,aAClBrF,MAAO,EAAKqC,KAAKiD,eAzCnB,KA6CFM,OAAS,kBAAM,EAAKvD,KAAKkD,KA7CvB,KA2EFM,mBAAqB,kBAAMxG,KAAEyG,UAAU,EAAKjB,WAAWkB,U,4CAzEvD,WACE,OAAOpH,KAAKwE,O,wBAGd,WACE,OAAOlF,WAASE,M,uBAGlB,WACE,MAAO,CAACQ,KAAK8F,OAAQ9F,KAAK+F,U,6BAG5B,WACE,MAAO,CAAC/F,KAAKoG,Q,uBAKf,WACE,MAAO,K,yDA0BT,wDAAA3I,EAAA,sEACagB,uBADb,sBAC2Bc,GAD3B,KACkCS,KAAKvB,aAAac,GADpD,6EAG6EsB,QAAQC,IAAI,CACrFd,KAAKkG,WAAWkB,QAAQC,SAASrH,KAAKiG,OAAQjG,KAAKwE,KAAKzE,SAASuH,OACjEtH,KAAKgG,QAAQoB,QAAQG,cAAcD,OACnCtH,KAAKgG,QAAQoB,QAAQI,SAASF,OAC9BtH,KAAKgG,QAAQoB,QAAQK,cAAcH,OACnCtH,KAAKkG,WAAWkB,QAAQM,YAAY1H,KAAKiG,OAAQjG,KAAKwE,KAAKzE,SAASuH,OACpEtH,KAAKgG,QAAQoB,QAAQO,UAAU3H,KAAKkG,WAAW0B,QAAQ7H,SAASuH,SATpE,0CAGSD,EAHT,KAGmBQ,EAHnB,KAG6BL,EAH7B,KAGqCC,EAHrC,KAGkDK,EAHlD,KAG2DC,EAH3D,KAWUC,EAAyBH,EAAzBG,UAAWC,EAAcJ,EAAdI,UACbC,EAAKV,EAAOW,gBAAkBnI,KAAK8F,OAAO/F,QAAQoI,cAAgBH,EAAYC,EAC9EG,EAAKF,IAAOF,EAAYC,EAAYD,EACpCK,EAAW3J,aAAG2I,EAASxH,QAC7BG,KAAK0D,KAAKgD,aAAehI,aAAGoJ,GAf9B,UAiB4B9H,KAAK8F,OAAOwC,SAAS5J,aAAGwJ,GAAI7H,IAAIgI,GAAU/H,IAAI5B,aAAG+I,KAjB7E,eAiBEzH,KAAK0D,KAAK4C,QAjBZ,iBAkB4BtG,KAAK+F,OAAOuC,SAAS5J,aAAG0J,GAAI/H,IAAIgI,GAAU/H,IAAI5B,aAAG+I,KAlB7E,eAkBEzH,KAAK0D,KAAK6C,QAlBZ,iBAoBqF1F,QAAQC,IAAI,CAC7Fd,KAAKgE,OAAOuE,QAAQvI,KAAK8F,OAAQ9F,KAAK0D,KAAK4C,SAC3CtG,KAAKgE,OAAOuE,QAAQvI,KAAK+F,OAAQ/F,KAAK0D,KAAK6C,SAC3CvG,KAAKgE,OAAOuE,QAAQvI,KAAKoG,KAAMpG,KAAK0D,KAAKgD,cACzC1G,KAAKgE,OAAOuE,QAAQvI,KAAK+F,OAAQrH,aAAG0J,GAAII,KAAK,GAAGnI,IAAI3B,aAAGqJ,IAAWzH,IAAI5B,aAAG+I,OAxB7E,oCAoBGzH,KAAK0D,KAAK8C,OApBb,KAoBqBxG,KAAK0D,KAAK+C,OApB/B,KAoBuCzG,KAAK0D,KAAKiD,YApBjD,KAoB8D3G,KAAK0D,KAAKkD,IApBxE,sD,uHA8BA,WAAmBnD,EAAgBe,GAAnC,iBAAA/G,EAAA,6DACQgL,GAAM,EAAAzI,KAAKkG,WAAWkB,SAAgB3D,GAAjC,qBAA4Ce,IADzD,SAEeiE,EAAGnB,OAFlB,wF,6HAKA,WAAsB7D,EAAgBe,EAAgBkE,GAAtD,iBAAAjL,EAAA,6DACQgL,GAAM,EAAAzI,KAAKkG,WAAWkB,SAAgB3D,GAAjC,qBAA4Ce,IACvD1G,MAAM,YAAD,OAAakC,KAAKkG,WAAW0B,QAAQ7H,QAArC,oBAAwD0I,EAAGE,cAFlE,KAGQF,EAHR,SAG8BjK,oBAH9B,+BAG+CkK,EAAc,MAAQ,MAHrE,MAGkBE,KAHlB,KAGyC1E,KAHzC,qBAGW2E,KAHX,iE,uHAMA,WAAcH,GAAd,SAAAjL,EAAA,kEACQuC,KAAKkG,WAAWkB,QAAQ0B,QAAQ9I,KAAKiG,OAAQ,GADrD,SAC2EzH,oBAD3E,+BAC4FkK,EAAc,MAAQ,MADlH,MAC+DE,KAD/D,KACsF1E,KADtF,oBACwD2E,KADxD,gE,wEAhHaE,Q,cCqCLpE,O,uBAAAA,I,eAAAA,I,mBAAAA,I,cAAAA,Q,qBChCGqE,E,WAoBX,WAAmBxE,EAA2BR,GAAsB,IAAD,iCAAhDQ,OAAgD,KAArBR,SAAqB,KAnBnEiF,mBAAqBrG,eAAK,UAmByC,KAjBnEsG,SAAWxD,mBAAsBN,EAAQ,MAA4BpF,KAAKwE,KAAKzE,SAiBZ,KAhBnEgH,MAAQnC,SAAOhG,IAAIuK,OAgBgD,KAfnEC,YAAcxE,SAAOhG,IAAIyK,eAe0C,KAdnEC,KAAO1E,SAAOhG,IAAI2K,OAciD,KAbnEC,KAAO5E,SAAOhG,IAAI6K,OAaiD,KAXnE/F,KAAO,CACLgG,aAActM,OACduM,mBAAoBvM,OACpBwM,qBAAsBxM,OACtByM,aAAczM,OACd0M,eAAgB1M,OAChBsJ,aAActJ,OACduJ,YAAavJ,OACbwJ,IAAKxJ,QAG4D,KAkBnEyJ,QAAU,kBAAM,EAAKnD,MAlB8C,KAgCnEoD,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKA,MACZlH,OAAQ,EAAK6D,KAAKiG,mBAClBtI,MAAO,EAAKqC,KAAKkG,sBAEnB,CACE7C,MAAO,EAAKA,MACZlH,OAAQ,EAAK6D,KAAKmG,aAClBxI,MAAO,EAAKqC,KAAKoG,kBAzC8C,KA6CnE9C,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAKqC,YACZvJ,OAAQ,EAAK6D,KAAKgD,aAClBrF,MAAO,EAAKqC,KAAKiD,eAjD8C,KAqDnEM,OAAS,kBAAM,EAAKvD,KAAKkD,KArD0C,KAuEnEM,mBAAqB,kBAAMxG,KAAEyG,UAAU,EAAK+B,SAAS9B,U,4CArErD,WACE,OAAOpH,KAAKwE,O,wBAGd,WACE,OAAOlF,WAASV,M,uBAGlB,WACE,MAAO,CAACoB,KAAK+G,S,6BAGf,WACE,MAAO,CAAC/G,KAAKoJ,e,uBAKf,WACE,OAAKpJ,KAAK0D,KAAKgG,aAAazJ,UAAYD,KAAK0D,KAAKgG,aAAaK,GAAG/J,KAAKiJ,oBAC9D,CACL,CACEe,SAAUrF,GAASsF,SACnB5L,QAAS,uBAIR,K,yDA0BT,8BAAAZ,EAAA,sEACagB,uBADb,sBAC2Bc,GAD3B,KACkCS,KAAKvB,aAAac,GADpD,6EAGwBS,KAAKkJ,SAAS9B,QAAQ8C,kBAAkB5C,OAHhE,cAGQ6C,EAHR,OAIEnK,KAAK0D,KAAKgG,aAAehL,aAAGyL,EAAQT,cACpC1J,KAAK0D,KAAKiG,mBAAqBjL,aAAGyL,EAAQR,oBAC1C3J,KAAK0D,KAAKmG,aAAenL,aAAGyL,EAAQN,cANtC,UAOyC7J,KAAKgE,OAAOuE,QAAQvI,KAAKwJ,KAAMxJ,KAAK0D,KAAKiG,oBAPlF,eAOE3J,KAAK0D,KAAKkG,qBAPZ,iBAQmC5J,KAAKgE,OAAOuE,QAAQvI,KAAKwJ,KAAMxJ,KAAK0D,KAAKmG,cAR5E,eAQE7J,KAAK0D,KAAKoG,eARZ,YAS2BpL,KAT3B,UASoCsB,KAAKkJ,SAAS9B,QAAQgD,mBAAmB9C,OAT7E,2BASEtH,KAAK0D,KAAKgD,cATZ,wBAUgC1G,KAAKgE,OAAOuE,QAAQvI,KAAKsJ,KAAMtJ,KAAK0D,KAAKgD,cAVzE,eAUE1G,KAAK0D,KAAKiD,YAVZ,OAYQ0D,EAASzF,SAAOhG,IAAI0L,aAZ5B,KAawBtK,KAAKgE,OAb7B,KAa4ChE,KAAK+G,MAbjD,KAa8DsD,EAb9D,UAaoFA,EAAOjD,QAAQK,cAAcH,OAbjH,0CAaqEgB,SAbrE,0DAaoCC,QAbpC,6BAaEvI,KAAK0D,KAAKkD,IAbZ,wD,uHAkBA,WAAmBnD,EAAgBe,GAAnC,iBAAA/G,EAAA,6DACQgL,GAAM,EAAAzI,KAAKkJ,SAAS9B,SAAgB3D,GAA/B,qBAA0Ce,IADvD,SAEeiE,EAAGnB,OAFlB,wF,6HAKA,WAAsB7D,EAAgBe,EAAgBkE,GAAtD,iBAAAjL,EAAA,6DACQgL,GAAM,EAAAzI,KAAKkJ,SAAS9B,SAAgB3D,GAA/B,qBAA0Ce,IACrD1G,MAAM,YAAD,OAAakC,KAAKkJ,SAAStB,QAAQ7H,QAAnC,oBAAsD0I,EAAGE,cAFhE,KAGQF,EAHR,SAG8BjK,oBAH9B,+BAG+CkK,EAAc,MAAQ,MAHrE,MAGkBE,KAHlB,KAGyC1E,KAHzC,qBAGW2E,KAHX,iE,uHAMA,WAAcH,GAAd,SAAAjL,EAAA,kEACQuC,KAAKkJ,SAAS9B,QAAQmD,sBAD9B,SACuE/L,oBADvE,+BACwFkK,EAAc,MAAQ,MAD9G,MAC2DE,KAD3D,KACkF1E,KADlF,oBACoD2E,KADpD,gE,+EAQW2B,E,WAiBX,WAAmBhG,EAA2BR,GAAsB,IAAD,iCAAhDQ,OAAgD,KAArBR,SAAqB,KAhBnEyG,iCAAmC,IAgBgC,KAdnEvB,SAAWxD,mBAA0BN,EAAQ,MAAgCpF,KAAKwE,KAAKzE,SAcpB,KAbnEgH,MAAQnC,SAAOhG,IAAIuK,OAagD,KAZnEC,YAAcxE,SAAOhG,IAAI8L,OAY0C,KAVnEhH,KAAO,CACLiH,cAAevN,OACfwN,cAAexN,OACfsJ,aAActJ,OACduJ,YAAavJ,OACbyN,iBAAkBzN,OAClB0N,iBAAkB1N,OAClBwJ,IAAKxJ,QAG4D,KAkBnEyJ,QAAU,kBAAM,EAAKnD,MAlB8C,KAoBnEoD,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKA,MACZlH,OAAQ,EAAK6D,KAAKkH,cAClBvJ,MAAO,EAAKqC,KAAKkH,eAEnB,CACE7D,MAAO,EAAKA,MACZlH,OAAQ,EAAK6D,KAAKiH,cAClBtJ,MAAO,EAAKqC,KAAKiH,iBA7B8C,KAiCnE1D,OAAS,kBAAM,EAAKvD,KAAKkD,KAjC0C,KAmCnEI,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAKqC,YACZvJ,OAAQ,EAAK6D,KAAKgD,aAClBrF,MAAO,EAAKqC,KAAKiD,eAvC8C,KA+EnEO,mBAAqB,kBAAMxG,KAAEyG,UAAU,EAAK+B,SAAS9B,U,4CA7ErD,WACE,OAAOpH,KAAKwE,O,wBAGd,WACE,OAAOlF,WAASV,M,uBAGlB,WACE,MAAO,CAACoB,KAAK+G,S,6BAGf,WACE,MAAO,CAAC/G,KAAKoJ,e,uBA4Bf,WACE,IAAM2B,EAAe/K,KAAK0D,KAAKkH,cAAcpC,KAAKxI,KAAKyK,kCAAkCO,KAAK,KAC9F,OAAKhL,KAAK0D,KAAKoH,iBAAiB7K,UAAYvB,aAAGsB,KAAK0D,KAAKmH,kBAAkBd,GAAGgB,GACrE,CACL,CACEf,SAAUrF,GAASsF,SACnB5L,QAAS,mBAIR,K,yDAGT,4CAAAZ,EAAA,sEACagB,uBADb,sBAC2Bc,GAD3B,KACkCS,KAAKvB,aAAac,GADpD,oEAGQ0L,EAASrG,SAAOhG,IAAIsM,iBAH5B,SAIkGrK,QAAQC,IAAI,CAC1GmK,EAAO7D,QAAQK,cAAcH,OAC7B2D,EAAO7D,QAAQ+D,sBAAsB7D,OACrC2D,EAAO7D,QAAQgE,oBAAoBpL,KAAKwE,KAAKzE,SAASuH,OACtDtH,KAAKkJ,SAAS9B,QAAQiE,uBAAuB/D,OAC7CtH,KAAKkJ,SAAS9B,QAAQ,iBAAiBE,OACvCtH,KAAKkJ,SAAS9B,QAAQkE,kCAAkChE,SAV5D,0CAISG,EAJT,KAIsB8D,EAJtB,KAIoCC,EAJpC,KAIuDb,EAJvD,KAIsE7C,EAJtE,KAI+E2D,EAJ/E,eAakCzL,KAAK+G,MAAMuB,SAASkD,GAbtD,eAaExL,KAAK0D,KAAKkH,cAbZ,iBAckC5K,KAAK+G,MAAMuB,SAASqC,GAdtD,eAcE3K,KAAK0D,KAAKiH,cAdZ,OAeE3K,KAAK0D,KAAKgD,aAAehI,aAAGoJ,GAf9B,UAgBgC9H,KAAKgE,OAAOuE,QAAQvI,KAAKoJ,YAAapJ,KAAK0D,KAAKgD,cAhBhF,eAgBE1G,KAAK0D,KAAKiD,YAhBZ,OAiBE3G,KAAK0D,KAAKmH,iBAAmBnM,aAAG+M,EAAUZ,kBAC1C7K,KAAK0D,KAAKoH,iBAAmBpM,aAAG+M,EAAUX,kBAlB5C,UAoByBG,EAAO3C,SAASb,GApBzC,QAoBEzH,KAAK0D,KAAKkD,IApBZ,OAoBuDvG,IAAIqL,eAAKH,EAAc,KAAKjL,IAAIC,SApBvF,iD,uHAyBA,WAAmBkD,EAAgBe,GAAnC,iBAAA/G,EAAA,6DACQgL,GAAM,EAAAzI,KAAKkJ,SAAS9B,SAAgB3D,GAA/B,qBAA0Ce,IADvD,SAEeiE,EAAGnB,OAFlB,wF,6HAKA,WAAsB7D,EAAgBe,EAAgBkE,GAAtD,iBAAAjL,EAAA,6DACQgL,GAAM,EAAAzI,KAAKkJ,SAAS9B,SAAgB3D,GAA/B,qBAA0Ce,IACrD1G,MAAM,YAAD,OAAakC,KAAKkJ,SAAStB,QAAQ7H,QAAnC,oBAAsD0I,EAAGE,cAFhE,KAGQF,EAHR,SAG8BjK,oBAH9B,+BAG+CkK,EAAc,MAAQ,MAHrE,MAGkBE,KAHlB,KAGyC1E,KAHzC,qBAGW2E,KAHX,iE,uHAMA,WAAcH,GAAd,SAAAjL,EAAA,kEACQuC,KAAKkJ,SAAS9B,QAAQuE,iCAD9B,SACkFnN,oBADlF,+BACmGkK,EAAc,MAAQ,MADzH,MACsEE,KADtE,KAC6F1E,KAD7F,oBAC+D2E,KAD/D,gE,gFAjOa+C,Q,SCDV,GCCA,G,2BDAQC,E,WAiBX,WAAmBrH,EAA2BR,EAA4B+C,GAAe,IAAD,iCAArEvC,OAAqE,KAA1CR,SAA0C,KAAd+C,QAAc,KAhBxF+E,QAAUvG,GAAU/F,IAAImG,eAgBgE,KAfxFoG,KAAOxG,GAAU/F,IAAIoG,eAemE,KAdxFoG,KAAOpH,GAAOpF,IAAI8F,OAcsE,KAZxF5B,KAAO,CACL7D,OAAQzC,OACRiE,MAAOjE,OACP0K,QAAS1K,OACT6O,aAAc7O,OACd8O,YAAa9O,OACb+O,iBAAkB/O,OAClBwJ,IAAKxJ,OACLgP,QAAS,EACTC,oBAAqB,IAGiE,KAExF5N,WAAa,kBAAMa,WAASE,KAF4D,KAIxF8M,QAAU,kBAAM,EAAK9H,MAJmE,KAMxFqC,QAAU,kBAAM,EAAKnD,MANmE,KAQxFzC,UAAY,iBAAM,CAAC,EAAK8F,QARgE,KAUxF5F,gBAAkB,iBAAM,CAAC,EAAK4F,MAAO,EAAKiF,OAV8C,KAYxFO,UAAY,iBAAM,IAZsE,KAcxFtF,OAAS,kBAAM,EAAKvD,KAAKkD,KAd+D,KAgBxFE,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAKA,MAAOlH,OAAQ,EAAK6D,KAAK7D,OAAQwB,MAAO,EAAKqC,KAAKrC,SAhBI,KAkBxF2F,kBAAoB,iBAAM,CACxB,CAAED,MAAO,EAAKA,MAAOlH,OAAQ,EAAK6D,KAAKoE,QAASzG,MAAO,EAAKqC,KAAKuI,cACjE,CAAElF,MAAO,EAAKiF,KAAMnM,OAAQ,EAAK6D,KAAKwI,YAAa7K,MAAO,EAAKqC,KAAKyI,oBApBkB,KA4DxFjF,mBAAqB,kBAAMxG,KAAEyG,UAAU,EAAK2E,QAAQ1E,U,gFArCpD,0CAAA3J,EAAA,sEACagB,uBADb,sBAC2Bc,GAD3B,KACkCS,KAAKvB,aAAac,GADpD,6EAGsBS,KAAKwM,YAH3B,cAGQC,EAHR,OAIEzM,KAAK0D,KAAK0I,QAAUK,EAAMlN,GAC1BS,KAAK0D,KAAK7D,OAAS4M,EAAMC,UACzB1M,KAAK0D,KAAK2I,oBAAsBI,EAAME,QANxC,UAQ4D3M,KAAK8L,QAAQ1E,QACpEwF,aAAa5M,KAAK0D,KAAK0I,QAASpM,KAAK0D,KAAK2I,qBAC1C/E,KAAK,CAAEsB,KAAM5I,KAAKwE,KAAKzE,UAV5B,wBAQU8M,EARV,EAQUA,mBAAoBC,EAR9B,EAQ8BA,oBAG5B9M,KAAK0D,KAAKwI,YAAcxN,aAAGmO,GAC3B7M,KAAK0D,KAAKoE,QAAUpJ,aAAGoO,GAZzB,UAesFjM,QAAQC,IAAI,CAC9Fd,KAAKgE,OAAOuE,QAAQvI,KAAK+G,MAAO/G,KAAK0D,KAAK7D,QAC1CG,KAAKgE,OAAOuE,QAAQvI,KAAKgM,KAAMhM,KAAK0D,KAAKwI,aACzClM,KAAKgE,OAAOuE,QAAQvI,KAAK+G,MAAO/G,KAAK0D,KAAKoE,SAC1C9H,KAAK+L,KAAK3E,QAAQ2F,OAAO/M,KAAK+G,MAAMhH,SAASuH,SAnBjD,oCAeGtH,KAAK0D,KAAKrC,MAfb,KAeoBrB,KAAK0D,KAAKyI,iBAf9B,KAegDnM,KAAK0D,KAAKuI,aAf1D,KAewEe,EAfxE,KAqBUC,EAAYD,EAAZC,QACRjN,KAAK0D,KAAKkD,IAAMlI,aAAGuO,GAtBrB,iD,oHAyBA,6HAEKrI,GAAOpF,IAAI0N,OAAOnN,QAAU,CAAER,GAAI,IAFvC,eAGKqF,GAAOpF,IAAI2N,OAAOpN,QAAU,CAAER,GAAI,IAHvC,eAIKqF,GAAOpF,IAAI6G,OAAOtG,QAAU,CAAER,GAAI,IAH/B6N,EADR,EAMQT,EAAUhO,iBAAOC,IAAIyO,IAAIC,wBAAwB,eACjDlB,EAAUgB,EAAgBpN,KAAK+G,MAAMhH,SAASR,GAPtD,SAQmCsB,QAAQC,IAAI,CAACd,KAAK8L,QAAQ1E,QAAQmG,OAAOnB,GAAS9E,OAAQtH,KAAK8L,QAAQ1E,QAAQoG,mBAAmBpB,EAASpM,KAAKwE,KAAKzE,SAASuH,SARjK,0CAQSmF,EART,KAQgBC,EARhB,oDAScD,GATd,IASqBlN,GAAI6M,EAASM,UAAWhO,aAAGgO,GAAYC,aAT5D,iD,uHAcA,WAAmBlJ,EAAgBe,GAAnC,iBAAA/G,EAAA,6DACQgL,GAAM,EAAAzI,KAAK8L,QAAQ1E,SAAgB3D,GAA9B,qBAAyCe,IADtD,SAEeiE,EAAGnB,OAFlB,wF,6HAKA,WAAsB7D,EAAgBe,EAAgBkE,GAAtD,iBAAAjL,EAAA,6DACQgL,GAAM,EAAAzI,KAAK8L,QAAQ1E,SAAgB3D,GAA9B,qBAAyCe,IACpD1G,MAAM,YAAD,OAAakC,KAAK8L,QAAQlE,QAAQ7H,QAAlC,oBAAqD0I,EAAGE,cAF/D,KAGQF,EAHR,SAG8BjK,oBAH9B,+BAG+CkK,EAAc,MAAQ,MAHrE,MAGkBE,KAHlB,KAGyC1E,KAHzC,qBAGW2E,KAHX,iE,uHAMA,WAAcH,GAAd,SAAAjL,EAAA,kEACQuC,KAAK8L,QAAQ1E,QAAQwF,aAAa5M,KAAK0D,KAAK0I,QAASpM,KAAK0D,KAAK2I,qBADvE,SAEgB7N,oBAFhB,+BAGUkK,EAAc,MAAQ,MAHhC,MAEIE,KAFJ,KAGI1E,KAHJ,oBAC4F2E,KAD5F,gE,+EA3Fa4E,Q,iBCQQ,aAAG,CACxBC,OAAQ,iBAAO,CACb3G,MAAOnC,GAAOhG,IAAIqG,eAClB0I,GAAI/I,GAAOhG,IAAIuG,sBACfc,OAAQ,IAEV2H,OAAQ,iBAAO,CACb7G,MAAOnC,GAAOhG,IAAIsG,gBAClByI,GAAI/I,GAAOhG,IAAIyG,uBACfY,OAAQ,MATL,IAaM4H,E,WAiBX,WAAmBrJ,EAA2BR,EAA4B8J,GAAqB,IAAD,iCAA3EtJ,OAA2E,KAAhDR,SAAgD,KAApB8J,WAAoB,KAhB9FC,MAAQxI,GAAU3G,IAAI6G,oBAgBwE,KAf9FuI,KAAOpJ,GAAOhG,IAAIkG,OAe4E,KAd9FmJ,MAAQrJ,GAAOhG,IAAIoG,QAc2E,KAb9FpG,IAAMgG,GAAOhG,IAAI6K,OAa6E,KAX9F/F,KAAO,CACL2E,SAAUjL,OACV8Q,YAAa9Q,OACb+Q,UAAW/Q,OACXgR,WAAYhR,OACZiR,SAAUjR,OACVsJ,aAActJ,OACduJ,YAAavJ,OACbwJ,IAAKxJ,QAGuF,KAE9FkP,QAAU,kBAAM,EAAK9H,MAFyE,KAI9F/F,WAAa,kBAAMa,WAASV,KAJkE,KAM9FqC,UAAY,iBAAM,CAAC,EAAK6M,SAAS/G,MAAO,EAAKnI,MANiD,KAQ9FuC,gBAAkB,iBAAM,CAAC,EAAK8M,QARgE,KAU9FpH,QAAU,kBAAM,EAAKnD,MAVyE,KAY9F6I,UAAY,iBAAM,IAZ4E,KAc9FzF,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAK+G,SAAS/G,MACrBlH,OAAQ,EAAK6D,KAAKwK,YAClB7M,MAAO,EAAKqC,KAAK0K,YAEnB,CACErH,MAAO,EAAKnI,IACZiB,OAAQ,EAAK6D,KAAKyK,UAClB9M,MAAO,EAAKqC,KAAK2K,YAvByE,KA2B9FrH,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAKkH,MACZpO,OAAQ,EAAK6D,KAAKgD,aAClBrF,MAAO,EAAKqC,KAAKiD,eA/ByE,KAmC9FM,OAAS,kBAAM,EAAKvD,KAAKkD,KAnCqE,KAkE9FM,mBAAqB,kBAAMxG,KAAEyG,UAAU,EAAK4G,MAAM3G,U,gFA7BlD,wDAAA3J,EAAA,sEACagB,uBADb,sBAC2Bc,GAD3B,KACkCS,KAAKvB,aAAac,GADpD,6EAGwFsB,QAAQC,IAAI,CAChGd,KAAK+N,MAAM3G,QAAQC,SAASrH,KAAK8N,SAAS7H,OAAQjG,KAAKwE,KAAKzE,SAASuH,OACrEtH,KAAK8N,SAASH,GAAGvG,QAAQG,cAAcD,OACvCtH,KAAK8N,SAASH,GAAGvG,QAAQI,SAASF,OAClCtH,KAAK8N,SAASH,GAAGvG,QAAQK,cAAcH,OACvCtH,KAAK+N,MAAM3G,QAAQkH,cAActO,KAAK8N,SAAS7H,OAAQjG,KAAKwE,KAAKzE,SAASuH,OAC1EtH,KAAK+N,MAAM3G,QAAQmH,SAASvO,KAAK8N,SAAS7H,QAAQqB,OAClDtH,KAAK+N,MAAM3G,QAAQoH,eAAelH,SAVtC,0CAGSD,EAHT,KAGmBQ,EAHnB,KAG6BL,EAH7B,KAGqCC,EAHrC,KAGkDK,EAHlD,KAG2DyG,EAH3D,KAGqEE,EAHrE,KAYUzG,EAAyBH,EAAzBG,UAAWC,EAAcJ,EAAdI,UACbC,EAAKV,EAAOW,gBAAkBnI,KAAK8N,SAAS/G,MAAMhH,QAAQoI,cAAgBH,EAAYC,EACtFG,EAAKF,IAAOF,EAAYC,EAAYD,EAC1ChI,KAAK0D,KAAK2E,SAAW3J,aAAG2I,EAASxH,QAfnC,UAgBiCG,KAAKiO,MAAM3F,SAASR,GAhBrD,eAgBE9H,KAAK0D,KAAKgD,aAhBZ,iBAkBgC1G,KAAK8N,SAAS/G,MAAMuB,SAAS5J,aAAGwJ,GAAI7H,IAAIL,KAAK0D,KAAK2E,UAAU/H,IAAI5B,aAAG+I,KAlBnG,eAkBEzH,KAAK0D,KAAKwK,YAlBZ,iBAmB8BlO,KAAKpB,IAAI0J,SAAS5J,aAAG0J,GAAI/H,IAAIL,KAAK0D,KAAK2E,UAAU/H,IAAI5B,aAAG+I,KAnBtF,eAmBEzH,KAAK0D,KAAKyK,UAnBZ,iBAqB2FtN,QAAQC,IAAI,CACnGd,KAAKgE,OAAOuE,QAAQvI,KAAK8N,SAAS/G,MAAO/G,KAAK0D,KAAKwK,aACnDlO,KAAKgE,OAAOuE,QAAQvI,KAAKpB,IAAKoB,KAAK0D,KAAKyK,WACxCnO,KAAKgE,OAAOuE,QAAQvI,KAAKgO,KAAMhO,KAAK0D,KAAKgD,aAAarG,IAAI3B,aAAG+P,IAAYnO,IAAIC,UAC7EP,KAAKgE,OAAOuE,QAAQvI,KAAKpB,IAAKF,aAAG0J,GAAII,KAAK,GAAGnI,IAAI3B,aAAG6P,EAASG,gBAAgBpO,IAAI5B,aAAG+I,OAzBxF,oCAqBGzH,KAAK0D,KAAK0K,WArBb,KAqByBpO,KAAK0D,KAAK2K,SArBnC,KAqB6CrO,KAAK0D,KAAKiD,YArBvD,KAqBoE3G,KAAK0D,KAAKkD,IArB9E,sD,uHA+BA,WAAmBnD,EAAgBe,GAAnC,iBAAA/G,EAAA,6DACQgL,GAAM,EAAAzI,KAAK+N,MAAM3G,SAAgB3D,GAA5B,qBAAuCe,IADpD,SAEeiE,EAAGnB,OAFlB,wF,6HAKA,WAAsB7D,EAAgBe,EAAgBkE,GAAtD,iBAAAjL,EAAA,6DACQgL,GAAM,EAAAzI,KAAK+N,MAAM3G,SAAgB3D,GAA5B,qBAAuCe,IAClD1G,MAAM,YAAD,OAAakC,KAAK+N,MAAMnG,QAAQ7H,QAAhC,oBAAmD0I,EAAGE,cAF7D,KAGQF,EAHR,SAG8BjK,oBAH9B,+BAG+CkK,EAAc,MAAQ,MAHrE,MAGkBE,KAHlB,KAGyC1E,KAHzC,qBAGW2E,KAHX,iE,uHAMA,WAAcH,GAAd,SAAAjL,EAAA,kEACQuC,KAAK+N,MAAM3G,QAAQ0B,QAAQ9I,KAAK8N,SAAS7H,OAAQ,GADzD,SAC+EzH,oBAD/E,+BACgGkK,EAAc,MAAQ,MADtH,MACmEE,KADnE,KAC0F1E,KAD1F,oBAC4D2E,KAD5D,gE,6EApHa8F,Q,KCEfjK,EAAgBkK,SAAS,CACvB,gCAAiC,SAACpK,EAAMR,GAAP,OAAkB,IAAI+E,GAAYlD,KAAKrB,EAAMR,EAAQY,GAAOpF,IAAI2N,OAAQvI,GAAOpF,IAAI0N,OAAQtI,GAAOpF,IAAIqP,0BAA2B,MAClK,gCAAiC,SAACrK,EAAMR,GAAP,OAAkB,IAAI+E,GAAYlD,KAAKrB,EAAMR,EAAQY,GAAOpF,IAAI6G,OAAQzB,GAAOpF,IAAI0N,OAAQtI,GAAOpF,IAAIsP,0BAA2B,MAClK,iCAAkC,SAACtK,EAAMR,GAAP,OAAkB,IAAI+E,GAAYlD,KAAKrB,EAAMR,EAAQY,GAAOpF,IAAIuP,OAAQnK,GAAOpF,IAAI2N,OAAQvI,GAAOpF,IAAIwP,2BAA4B,MACpK,gCAAiC,SAACxK,EAAMR,GAAP,OAAkB,IAAI+E,GAAYlD,KAAKrB,EAAMR,EAAQY,GAAOpF,IAAIyP,OAAQrK,GAAOpF,IAAI0N,OAAQtI,GAAOpF,IAAI0P,0BAA2B,MAClK,+BAAgC,SAAC1K,EAAMR,GAAP,OAAkB,IAAI+E,GAAYlD,KAAKrB,EAAMR,EAAQY,GAAOpF,IAAI2P,MAAOvK,GAAOpF,IAAI0N,OAAQtI,GAAOpF,IAAI4P,yBAA0B,MAC/J,+BAAgC,SAAC5K,EAAMR,GAAP,OAAkB,IAAI+E,GAAYlD,KAAKrB,EAAMR,EAAQY,GAAOpF,IAAI6P,MAAOzK,GAAOpF,IAAI0N,OAAQtI,GAAOpF,IAAI8P,yBAA0B,MAC/J,gCAAiC,SAAC9K,EAAMR,GAAP,OAAkB,IAAI+E,GAAYlD,KAAKrB,EAAMR,EAAQY,GAAOpF,IAAI+P,OAAQ3K,GAAOpF,IAAI0N,OAAQtI,GAAOpF,IAAIgQ,0BAA2B,MAClK,gCAAiC,SAAChL,EAAMR,GAAP,OAAkB,IAAI+E,GAAYlD,KAAKrB,EAAMR,EAAQY,GAAOpF,IAAIiQ,OAAQ7K,GAAOpF,IAAI0N,OAAQtI,GAAOpF,IAAIkQ,0BAA2B,MAElK,+BAAgC,SAAClL,EAAMR,GAAP,OAAkB,IAAIyJ,GAAQ5B,YAAYrH,EAAMR,EAAQY,GAAOpF,IAAI6G,SACnG,+BAAgC,SAAC7B,EAAMR,GAAP,OAAkB,IAAIyJ,GAAQ5B,YAAYrH,EAAMR,EAAQY,GAAOpF,IAAI2N,SACnG,8BAA+B,SAAC3I,EAAMR,GAAP,OAAkB,IAAIyJ,GAAQ5B,YAAYrH,EAAMR,EAAQY,GAAOpF,IAAI0N,SAElG,8BAA+B,SAAC1I,EAAMR,GAAP,OAAkB,IAAI2K,GAAOd,UAAUrJ,EAAMR,EAAQ2K,GAAOgB,WAAWjC,WACtG,8BAA+B,SAAClJ,EAAMR,GAAP,OAAkB,IAAI2K,GAAOd,UAAUrJ,EAAMR,EAAQ2K,GAAOgB,WAAW/B,WAEtG,qBAAsB,SAACpJ,EAAMR,GAAP,OAAkB,IAAI4H,GAAM5C,SAASxE,EAAMR,IACjE,yBAA0B,SAACQ,EAAMR,GAAP,OAAkB,IAAI4H,GAAMpB,aAAahG,EAAMR,IAEzE,4BAA6B,SAACQ,EAAMR,GAAP,OAAkB,IAAIjD,KAAY8E,KAAKrB,EAAMR,EAAQjD,KAAY4O,WAAWC,cACzG,2BAA4B,SAACpL,EAAMR,GAAP,OAAkB,IAAIjD,KAAY8E,KAAKrB,EAAMR,EAAQjD,KAAY4O,WAAWE,eCrB5G,IAAMC,GAAc,kBACdC,GAAkB,kBAAMxM,KAAKyM,MAAMC,aAAaC,QAAQJ,KAAgB,OACxEK,GAAgB,SAACzM,GAAD,OAAwCuM,aAAaG,QAAQN,GAAavM,KAAKC,UAAUE,KAEzG2M,GAAoBvT,YAAY,CACpCC,KAAM,oBAENC,aAAc,CACZwD,UAAW,GACX8P,OAAO,GAGT/S,QAAS,CACPgT,KACE,yDACA,6BAAA9S,EAAA,6DAAS+S,EAAT,EAASA,SAAT,SACQA,EAASD,IADjB,2CADA,uDAKFE,YACE,SAACvM,EAAcnE,GAAf,8CACA,mCAAAtC,EAAA,yDAASiT,EAAT,EAASA,SAAUF,EAAnB,EAAmBA,SACXG,EAAWjM,EAAgBkM,OAAO,CAAE1M,OAAMnE,UAASR,GAAI,KAD/D,uBAGIzB,MAAM,gBAAD,OAAiBoG,EAAjB,eAA4BnE,IAHrC,iCAOQ2D,EAAOhD,KAAEiC,UAAU+N,IAAWlQ,WAAW,SAACI,GAAD,OAAOA,EAAE0L,cACnDqE,EAASrE,UAAU/M,IAAMoR,EAASrE,UACvC6D,GAAczM,GAThB,UAUQ8M,EAASD,IAVjB,4CADA,uDAcFM,OACE,SAACC,GAAD,8CACA,iCAAArT,EAAA,6DAASiT,EAAT,EAASA,SAAUF,EAAnB,EAAmBA,gBACX9M,EAAOhD,KAAEiC,UAAU+N,IAAWlQ,WAAW,SAACI,GAAD,OAAOA,EAAE0L,cAC5CwE,GACZX,GAAczM,GAHhB,SAIQ8M,EAASD,IAJjB,2CADA,uDAQFQ,gBACE,SAACD,EAAepI,EAAsBjF,EAAgBe,GAAtD,8CACA,6BAAA/G,EAAA,6DAASiT,EAAT,EAASA,SAAT,SACQA,IAAWlQ,UAAUsQ,GAAOC,gBAAgBtN,EAAQe,EAAMkE,GADlE,2CADA,uDAKFsI,QACE,SAACF,EAAepI,GAAhB,8CACA,6BAAAjL,EAAA,6DAASiT,EAAT,EAASA,SAAT,SACQA,IAAWlQ,UAAUsQ,GAAOE,QAAQtI,GAD5C,2CADA,0D,SAOS6H,G,iFAAf,qCAAA9S,EAAA,sDAKE,IAAW8B,KALSmR,EAAtB,EAAsBA,SAAUhT,EAAhC,EAAgCA,SAC9BkE,QAAQC,IAAI,QACN4C,EAAUiM,IAAWlQ,UACrBA,EAAYE,KAAEiC,UAAUoN,MAAmB,SAACvL,GAAD,OAAUC,EAAQD,EAAKjF,KAAOmF,EAAgBkM,OAAOpM,MAErEhE,EAAUjB,WAAYiB,EAAUjB,GALnE,GAOOmR,IAAWJ,MAPlB,gCAO+B5L,EAAgBV,OAAOiN,OAAOvQ,KAAEwQ,OAAO1Q,IAPtE,wBASQK,QAAQC,IAAIJ,KAAEM,IAAIR,GAAW,SAACI,GAAD,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAG2P,OAAOY,OAAM,SAAC7M,GAAD,OAAO1C,QAAQC,IAAIjB,EAAE0L,UAAUpI,KAAMI,UATjG,QAUE5G,EAAS,CAAE8C,YAAW8P,OAAO,IAV/B,6C,sBAaO,IAAMc,GAAyBrS,YAAWsR,GAAmB,CAAEpR,SAAU,OACnEoS,GAAqBtS,YAAWsR,GAAmB,CAC9DpR,SAAUqS,cACR,SAACpS,GAAD,OACEwB,KAAExB,EAAMsB,WACL0Q,SACAK,QAAO,SAAC3Q,GAAD,OAAOA,EAAE0L,UAAUpI,QAC1B7C,WACL,SAACb,GAAD,OACEE,KAAEM,IAAIR,GAAW,SAACI,GAAD,MAAQ,CACvBrB,GAAIqB,EAAE0L,UAAU/M,GAChB2E,KAAMtD,EAAE0L,UAAUpI,KAClBsN,OAAQC,GAAU7Q,EAAE2L,aACpBlL,MAAO,IAAMqQ,gBAAM9Q,EAAEkG,aAAa6K,QAAO,SAACC,EAAK5P,GAAN,OAAY4P,EAAIC,IAAI7P,EAAEX,SAAQjE,SAAO0U,MAAM,KAAK,GACzFhK,QAAS,IAAM4J,gBAAM9Q,EAAEoG,oBAAoB2K,QAAO,SAACC,EAAK5P,GAAN,OAAY4P,EAAIC,IAAI7P,EAAEX,SAAQjE,SAAO0U,MAAM,KAAK,GAClGlL,IAAK,IAAM8K,gBAAM9Q,EAAEqG,UAAU6K,MAAM,KAAK,GACxCnB,SAAU/P,WAILmR,GAAkBhT,YAAWsR,GAAmB,CAC3DpR,SAAU,SAACC,GAAD,OAAWA,EAAMsB,aAEhBwR,GAAuBjT,YAAWsR,GAAmB,CAChEpR,SAAU,SAACC,GAAD,OAAWA,EAAMoR,SAG7B,SAASmB,GAAUD,GACjB,OAAKA,EAAOS,OACLT,EAAOxQ,KAAI,SAAC5C,GAAD,OAAOA,EAAEC,WAAS+D,KAAK,gBADd,eCxG7B,IAAM8P,GAAyBpV,YAAY,CACzCC,KAAM,yBAENC,aAAc,CACZmV,MAAM,EACNjO,KAAM,GACNnE,QAAS,GACTqS,OAAO,EACPC,SAAU3N,EAAgB2N,WAAWC,QAGvC/U,QAAS,CACP4U,KACE,yDACA,uBAAA1U,EAAA,uDAASC,EAAT,EAASA,UACE,CAAEyU,MAAM,EAAMjO,KAAM,GAAInE,QAAS,GAAIqS,OAAO,IADvD,2CADA,uDAKFG,YACE,yDACA,uBAAA9U,EAAA,uDAASC,EAAT,EAASA,UACE,CAAEyU,MAAM,IADnB,2CADA,uDAKFK,QACE,SAACtO,GAAD,8CACA,iCAAAzG,EAAA,sDAASC,EAAT,EAASA,SAAUgT,EAAnB,EAAmBA,SACX0B,EAAQ1N,EAAgB+N,YAAYvO,EAAMwM,IAAW3Q,SAC3DrC,EAAS,CAAEwG,OAAMkO,UAFnB,2CADA,uDAMFM,WACE,SAAC3S,GAAD,8CACA,iCAAAtC,EAAA,sDAASC,EAAT,EAASA,SAAUgT,EAAnB,EAAmBA,SACX0B,EAAQ1N,EAAgB+N,YAAY/B,IAAWxM,KAAMnE,GAC3DrC,EAAS,CAAEqC,UAASqS,UAFtB,2CADA,0DAQOO,GAAuB5T,YAAWmT,ICrClCU,GAAiB,WAC5B,MAAsB5T,IAAf6T,EAAP,oBACA,EAAoBF,KAAXpV,EAAT,oBACA,OACE,cAACuV,EAAA,EAAD,CAAQC,QAAS,YAAaC,KAAM,QAASC,UAAWJ,EAAaK,QAAS,kBAAM3V,EAAQ4U,QAA5F,2BAMSgB,GAAoB,WAC/B,MAA4BrU,IAAnBsU,EAAT,oBACA,EAAyBT,KAAzB,mBAAOzT,EAAP,KAAc3B,EAAd,KACA,EAA+B6T,KAAtBiC,EAAT,oBAEMC,EAAQ,kBAAM/V,EAAQgV,eAI5B,OACE,8BACE,eAACgB,EAAA,EAAD,CAAQC,KAAMtU,EAAMiT,KAAMsB,QAASH,EAAnC,UACE,cAACI,EAAA,EAAD,CAAaC,MAAO,CAAEC,SAAU,QAAhC,0BAEA,eAACC,EAAA,EAAD,WACE,uBACA,eAACC,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,EAAA,EAAD,4BACA,eAACC,EAAA,EAAD,CAAQ5S,MAAOnC,EAAMgF,KAAMgQ,MAAM,gBAAgBC,SAAU,SAAC7P,GAAD,OAAO/G,EAAQiV,QAAQlO,EAAE8P,OAAO/S,QAA3F,UACE,cAACgT,EAAA,EAAD,CAAUhT,MAAM,KACfnC,EAAMmT,SAASrR,KAAI,SAACkD,GAAD,OAClB,cAACmQ,EAAA,EAAD,CAAqBhT,MAAO6C,EAA5B,SACGA,GADYA,YAOrB,uBACA,uBACA,cAACoQ,EAAA,EAAD,CAAWP,WAAS,EAACxU,GAAG,iBAAiBwT,QAAQ,WAAWmB,MAAM,iBAAiBC,SAAU,SAAC7P,GAAD,OAAO/G,EAAQmV,WAAWpO,EAAE8P,OAAO/S,UAEhI,uBACA,0BAEF,cAACkT,EAAA,EAAD,UACE,cAACzB,EAAA,EAAD,CAAQE,KAAK,QAAQC,UAAW/T,EAAMkT,MAAOc,QA7BzC,kBAAME,EAAgBnV,aAAY,kBAAMoV,EAAmB5C,YAAYvR,EAAMgF,KAAMhF,EAAMa,YAAUxD,KAAK+W,IA6B5G,yB,4CCjDJkB,GAAuB1X,YAAY,CACvCC,KAAM,uBAENC,aAAc,CACZmV,MAAM,EACNpS,QAAS,GACTqS,OAAO,GAGT7U,QAAS,CACP4U,KACE,yDACA,uBAAA1U,EAAA,uDAASC,EAAT,EAASA,UACE,CAAEyU,MAAM,EAAMpS,QAAS,GAAIqS,OAAO,IAD7C,2CADA,uDAKFG,YACE,yDACA,uBAAA9U,EAAA,uDAASC,EAAT,EAASA,UACE,CAAEyU,MAAM,IADnB,2CADA,uDAKFO,WACE,SAAC3S,GAAD,8CACA,+BAAAtC,EAAA,sDAASC,EAAT,EAASA,SACD0U,EAAQ1N,EAAgB+P,cAAc1U,GAC5CrC,EAAS,CAAEqC,UAASqS,UAFtB,2CADA,0DAQOsC,GAAqB3V,YAAWyV,IC9BtC,SAAeG,GAAtB,mC,8CAAO,WAA6BzX,GAA7B,SAAAO,EAAA,0DACDP,EAAOiH,WAAW,QADjB,gCAEkBpD,KAAY6T,SAASlQ,EAAgBV,OAAQ9G,GAF/D,6CAEM2X,KAFN,uCAKE,IALF,4C,sBCEP,IAAM/E,GAAc,aACdC,GAAkB,kBAAMxM,KAAKyM,MAAMC,aAAaC,QAAQJ,KAAgB,OACxEK,GAAgB,SAACzM,GAAD,OAAoBuM,aAAaG,QAAQN,GAAavM,KAAKC,UAAUE,KAMrFoR,GAAehY,YAAY,CAC/BC,KAAM,eAENC,aAAc,CACZ+X,QAAS,GACTH,SAAU,GACVI,KAAM,IAGRzX,QAAS,CACPgT,KACE,yDACA,6BAAA9S,EAAA,6DAAS+S,EAAT,EAASA,SAAT,SACQA,EAASD,IADjB,2CADA,uDAKFsB,IACE,SAAC9R,GAAD,8CACA,iCAAAtC,EAAA,6DAASiT,EAAT,EAASA,SAAUF,EAAnB,EAAmBA,SACX/L,EAAUiM,IAAWqE,QAC3B5E,GAAczP,KAAEuU,KAAKvU,KAAEQ,OAAOuD,EAAS1E,KAFzC,SAGQyQ,EAASD,IAHjB,2CADA,uDAOFM,OACE,SAAC9Q,GAAD,8CACA,qCAAAtC,EAAA,6DAASiT,EAAT,EAASA,SAAUhT,EAAnB,EAAmBA,SAAU8S,EAA7B,EAA6BA,SACrB/L,EAAUiM,IAAWqE,QACrBA,EAAUrU,KAAEa,OAAOkD,GAAS,SAAChH,GAAD,OAAOA,IAAMsC,KAC/CoQ,GAAc4E,GACdrX,EAAS,CAAEqX,YAJb,SAKQvE,EAASD,IALjB,2CADA,0D,SAWSA,G,iFAAf,uCAAA9S,EAAA,6DAAsBiT,EAAtB,EAAsBA,SAAUhT,EAAhC,EAAgCA,SAC9BkE,QAAQC,IAAI,gBACNkT,EAAUrU,KAAEoD,MAAMiM,KAAmBW,IAAWqE,SACtDrX,EAAS,CAAEqX,YAHb,SAKwBlU,QAAQC,IAAIiU,EAAQ/T,KAAI,SAACkU,GAAD,OAAOP,GAAcO,OALrE,OAKQC,EALR,OAOEzX,EAAS,CAAEkX,SADLA,EAAW,KAGXI,EAAO,GACbtU,KAAE0U,QAAQL,GAAS,SAACG,EAAGhS,GACrB0R,EAASM,GAAKC,EAAQjS,GACtBxC,KAAE0U,QAAQR,EAASM,IAAI,SAACG,EAAIC,GAC1B,IAAMC,EAAU7U,KAAEa,OAAO8T,GAAI,SAAC5X,GAAD,OAAQA,EAAEoC,OAAOI,YAC9CS,KAAE0U,QAAQG,GAAS,SAAC9X,GAClBuX,EAAKQ,KAAK,CACRjW,GAAG,GAAD,OAAK2V,EAAL,YAAUI,EAAV,YAAe7X,EAAEsJ,MAAMhK,MACzBG,OAAQgY,EACR7X,QAASiY,EACTvO,MAAOtJ,EAAEsJ,MAAMhK,KACf8C,OAAQ6R,gBAAMjU,EAAEoC,QAChBwB,MAAO,IAAMqQ,gBAAMjU,EAAE4D,OAAOyQ,MAAM,KAAK,cAM/CpU,EAAS,CAAEsX,SA3Bb,6C,sBA6BO,IAAMS,GAAiB1W,YAAW+V,GAAc,CAAE7V,SAAU,SAACC,GAAD,OAAWA,EAAM6V,WACvEW,GAAyB3W,YAAW+V,GAAc,CAC7D7V,SAAU,SAACC,GAAD,OAAWA,EAAM8V,QC1EhBW,GAAe,WAC1B,MAAsB3W,IAAf6T,EAAP,oBACA,EAAoB6B,KAAXnX,EAAT,oBACA,OACE,cAACuV,EAAA,EAAD,CAAQC,QAAS,YAAaC,KAAM,QAASC,UAAWJ,EAAaK,QAAS,kBAAM3V,EAAQ4U,QAA5F,yBAMSyD,GAAkB,WAC7B,MAA4B9W,IAAnBsU,EAAT,oBACA,EAAyBsB,KAAzB,mBAAOxV,EAAP,KAAc3B,EAAd,KACA,EAAkCkY,KAAlC,mBAAOV,EAAP,KAAgBc,EAAhB,KAEMvC,EAAQ,kBAAM/V,EAAQgV,eAI5B,OACE,8BACE,eAACgB,EAAA,EAAD,CAAQC,KAAMtU,EAAMiT,KAAMsB,QAASH,EAAnC,UACE,cAACI,EAAA,EAAD,CAAaC,MAAO,CAAEC,SAAU,QAAhC,wBAEA,eAACC,EAAA,EAAD,WACE,uBACA,cAACS,EAAA,EAAD,CAAWP,WAAS,EAACxU,GAAG,iBAAiBwT,QAAQ,WAAWmB,MAAM,iBAAiBC,SAAU,SAAC7P,GAAD,OAAO/G,EAAQmV,WAAWpO,EAAE8P,OAAO/S,UAEhI,uBACA,uBAEA,4CACA,cAACyU,GAAA,EAAD,UACGpV,KAAEM,IAAI+T,GAAS,SAACG,GAAD,OACd,cAACa,GAAA,EAAD,CAAkBC,gBAAc,EAAhC,SACE,cAACC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAcC,QAASjB,EAAGhC,QAAS,kBAAME,EAAgBnV,aAAY,kBAAM4X,EAAehF,OAAOqE,YAFtFA,QAOnB,0BAEF,cAACX,EAAA,EAAD,UACE,cAACzB,EAAA,EAAD,CAAQE,KAAK,QAAQC,UAAW/T,EAAMkT,MAAOc,QA3BzC,kBAAME,EAAgBnV,aAAY,kBAAM4X,EAAehE,IAAI3S,EAAMa,YAAUxD,KAAK+W,IA2BpF,yBC5CG8C,GAAY,kBACvB,sBAAKzC,MAAO,CAAE0C,SAAU,QAASzC,SAAU,QAA3C,UACE,uBACA,uBAEA,sBAAKD,MAAO,CAAE2C,QAAS,OAAQC,cAAe,MAAOC,eAAgB,gBAArE,UACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,OAGF,wBACA,cAAC,GAAD,IACA,wBAEA,2BAIEC,GAAa,WACjB,MAA+BzX,IAA/B,mBAAO6T,EAAP,KAAoBtV,EAApB,KAEA,OACE,cAACuV,EAAA,EAAD,CAAQC,QAAS,YAAaC,KAAM,QAASE,QAAS3V,EAAQC,QAA9D,SACGqV,EAAc,UAAY,aAK3B6D,GAAa,WAAO,IAAD,EACvB,EAAgB5X,IAATI,EAAP,oBACA,OACE,gCACE,gEAAeA,EAAM7B,eAArB,aAAe,EAAeN,QAC9B,qDAAcmC,EAAMhC,UACpB,sDAAewU,gBAAMxS,EAAM/B,gB,8BCpC3BwZ,GAAsB7Z,YAAY,CACtCC,KAAM,sBAENC,aAAc,CACZ2T,SAAU,KACViG,WAAW,EACXC,eAAgB,GAChBC,mBAAoB,IAGtBvZ,QAAS,CACPwZ,aACE,SAACpG,GAAD,8CACA,6BAAAlT,EAAA,sDAASC,EAAT,EAASA,UAAUgT,EAAnB,EAAmBA,YACFC,WAAaA,GAC1BjT,EAAS,CAAEiT,WAAUkG,eAAgB,GAAIC,mBAAoB,GAAIF,WAAW,IAFhF,2CADA,uDAOFrE,YACE,yDACA,uBAAA9U,EAAA,uDAASC,EAAT,EAASA,UACE,CAAEiT,SAAU,OADvB,2CADA,uDAKFqG,aACE,SAACvT,GAAD,8CACA,uBAAAhG,EAAA,uDAASC,EAAT,EAASA,UACE,CAAEmZ,eAAgBpT,EAAQqT,mBAAoB,KADzD,2CADA,uDAKFG,aACE,SAACC,EAAeC,GAAhB,8CACA,+BAAA1Z,EAAA,sDAASC,EAAT,EAASA,SAAUgT,EAAnB,EAAmBA,SACjBhT,EAAS,CAAEoZ,mBAAmB,6BAAMpG,IAAWoG,oBAAlB,mBAAuCI,EAAQC,MAD9E,2CADA,uDAKFC,aACE,SAACR,GAAD,8CACA,uBAAAnZ,EAAA,uDAASC,EAAT,EAASA,UACE,CAAEkZ,cADb,2CADA,uDAKF5F,QACE,yDACA,6BAAAvT,EAAA,6DAASiT,EAAT,EAASA,SAAT,SACQA,IAAWC,SAAUK,QAAQN,IAAWkG,WADhD,2CADA,uDAKF/N,KACE,yDACA,6BAAApL,EAAA,6DAASiT,EAAT,EAASA,SAAT,SACQA,IAAWC,SAAUI,gBAAgBL,IAAWmG,eAAgBnW,KAAEwQ,OAAOR,IAAWoG,oBAAqBpG,IAAWkG,WAD5H,2CADA,uDAKFtP,KACE,SAACnJ,GAAD,8CACA,6BAAAV,EAAA,6DAASiT,EAAT,EAASA,SAAT,KACEvS,EADF,SACkBuS,IAAWC,SAAU0G,aAAa3G,IAAWmG,eAAgBnW,KAAEwQ,OAAOR,IAAWoG,qBADnG,6EADA,0DAOOQ,GAA2BvY,YAAW4X,GAAqB,CAAE1X,SAAU,OACvEsY,GAA4BxY,YAAW4X,GAAqB,CACvE1X,SAAUqS,cACR,SAACpS,GAAD,OAAWA,KACX,SAACA,GAAD,aAAW,UAAAA,EAAMyR,gBAAN,eAAgBzJ,qBAAqB3F,QAAO,SAACiW,GAAD,OAAQA,EAAErT,WAAW,OAASqT,EAAEC,SAAS,UAAS,MACzG,SAACvY,GAAD,OACEA,EAAM2X,eACHa,UAAUxY,EAAM2X,eAAec,QAAQ,KAAO,EAAGzY,EAAM2X,eAAe5E,OAAS,GAC/EH,MAAM,KACNvQ,QAAO,SAAC9D,GAAD,OAAOA,EAAEwU,OAAS,QAC9B,SAAC/S,GAAD,aACEwB,KAAC,UAACxB,EAAMyR,gBAAP,aAAC,EAAgB1P,aACfwB,SAAQ,SAAChF,GAAD,OAAOA,EAAEV,QACjB4F,WAAU,SAACX,GAAD,OAAOA,EAAEjC,WACnBsB,WACL,SAACnC,GAAD,aACEwB,KAAC,UAACxB,EAAMyR,gBAAP,aAAC,EAAgBxP,mBACfsB,SAAQ,SAAChF,GAAD,OAAOA,EAAEV,QACjB4F,WAAU,SAACX,GAAD,OAAOA,EAAEjC,WACnBsB,WACL,SAACnC,GAAD,aAAWwB,KAAEiC,UAAF,UAAYzD,EAAMyR,gBAAlB,aAAY,EAAgB9J,WAAW,SAAC7E,GAAD,OAAQA,aAAa4V,KAAKlG,gBAAM1P,GAAKA,QACvF,SAAC9C,EAAO2Y,EAAiBC,EAAwBC,EAAQC,EAActU,GAAvE,MAAiF,CAC/EiN,SAAUzR,EAAMyR,SAChBkH,kBACAhB,eAAgB3X,EAAM2X,eACtBiB,yBACAlB,UAAW1X,EAAM0X,UACjBqB,aAAc1U,KAAKC,UAAU,CAAEuU,SAAQC,eAActU,QAAQ,KAAM,SC1FnEwU,GAAwB,CAC5B,CAAEC,MAAO,OAAQC,WAAY,OAAQC,MAAO,IAAKC,MAAO,QACxD,CAAEH,MAAO,SAAUC,WAAY,SAAUC,MAAO,IAAKC,MAAO,UAC5D,CAAEH,MAAO,QAASC,WAAY,eAAgBC,MAAO,IAAKC,MAAO,SACjE,CAAEH,MAAO,UAAWC,WAAY,UAAWC,MAAO,IAAKC,MAAO,SAC9D,CAAEH,MAAO,MAAOC,WAAY,MAAOC,MAAO,IAAKC,MAAO,UAG3CC,GAAoB,WAC/B,MAA+BzZ,IAA/B,mBAAO0Z,EAAP,KAAiBC,EAAjB,KACA,EAAwBpH,GAAmB,MAA3C,mBAAO2D,EAAP,KAAazX,EAAb,KACA,EAAoBwU,KAAbvR,EAAP,oBACA,EAAkC8W,KAAzBoB,EAAT,oBAEAC,qBAAU,WACJH,EAASnb,QAAQkC,IAAIkZ,EAAWxa,YAAYV,EAAQgT,MAAMhU,SAC7D,CAACic,EAASnb,QAASob,EAAYlb,IAIlC,OACE,qBAAKqb,QAAS5D,EAAK/C,OAAQ0B,MAAO,CAAEkF,OAAQ,OAAQC,UAAW,IAAKT,MAAO,OAA3E,SACE,cAAC,KAAD,CAAUrD,KAAMA,EAAMkD,QAASA,GAASa,YAJ9B,SAACnY,GAAD,OAAY8X,EAAsB3B,aAAavW,EAAUI,EAAErB,GAAG2C,mB,4CCHjE8W,GAAiB,WAAO,IAAD,YAClC,EAA4Bla,IAAnBsU,EAAT,oBACA,EAA4BmE,GAA0B,MAAtD,mBAAOtY,EAAP,KAAiB1B,EAAjB,KACA,EAAgCwU,KAAvBkH,EAAT,oBAEM3F,EAAQ,kBAAM/V,EAAQgV,eAY5B,OACE,8BACE,eAACgB,EAAA,EAAD,CAAQC,OAAQvU,EAAS0R,SAAU8C,QAASH,EAA5C,UACE,eAACI,EAAA,EAAD,kCAAwBzU,EAAS0R,gBAAjC,iBAAwB,EAAmBrE,iBAA3C,aAAwB,EAA8BpI,QACtD,eAAC2P,EAAA,EAAD,WACE,eAACqF,GAAA,EAAD,iCAA6Bja,EAAS0R,gBAAtC,iBAA6B,EAAmBlS,oBAAhD,aAA6B,EAAiC1B,QAC9D,eAACmc,GAAA,EAAD,iCAA6Bja,EAAS0R,gBAAtC,iBAA6B,EAAmBrE,iBAAhD,aAA6B,EAA8BvM,WAE3D,uBACA,eAAC+T,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,EAAA,EAAD,qBACA,cAACC,EAAA,EAAD,CAAQ5S,MAAOpC,EAAS4X,eAAgB3C,MAAM,SAASC,SAAU,SAAC7P,GAAD,OAAO/G,EAAQyZ,aAAa1S,EAAE8P,OAAO/S,QAAtG,SACGpC,EAAS4Y,gBAAgB7W,KAAI,SAACwW,GAAD,OAC5B,cAACnD,EAAA,EAAD,CAAkBhT,MAAOmW,EAAzB,SACGA,GADYA,WAOrB,uBACCvY,EAAS6Y,uBAAuB7F,OAAS,GACxChT,EAAS6Y,uBAAuB9W,KAAI,SAACmY,EAASjW,GAAV,OAClC,cAACoR,EAAA,EAAD,CAEE8E,WAAS,EACTC,OAAO,QACP9Z,GAAI4Z,EAAUjW,EACdgR,MAAOiF,EACPjV,KAAK,OACL6P,WAAS,EACThB,QAAQ,WACRoB,SAAU,SAAC7P,GAAD,OAAO/G,EAAQ0Z,aAAa/T,EAAGoB,EAAE8P,OAAO/S,SAR7C8X,EAAUjW,MAYrB,uBACA,uBAEA,cAACoW,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAkBC,QAAS,cAACC,GAAA,EAAD,CAAQC,QAASza,EAAS2X,UAAWzC,SAAU,SAAC7P,GAAD,OAAY/G,EAAQ6Z,aAAa9S,EAAE8P,OAAOsF,YAAcxF,MAAM,qCAI5I,eAACK,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CAAQI,QAvDE,kBAAME,EAAgBnV,aAAY,kBAAMgb,EAAoBpI,OAAO5R,EAAS0R,SAAUrE,UAAU/M,OAAKhD,KAAK+W,IAuDpH,6BAEA,cAACR,EAAA,EAAD,CAAQI,QAvDC,kBAAME,EAAgBjV,UAAUc,EAASgZ,eAuDlD,uBAEA,cAACnF,EAAA,EAAD,CAAQI,QAvDA,kBAAME,EAAgBnV,aAAY,kBAAMV,EAAQyT,aAAWzU,KAAK+W,IAuDxE,0BAEA,cAACR,EAAA,EAAD,CAAQG,UAAWhU,EAAS4X,eAAgB3D,QArDvC,kBAAME,EAAgBnV,aAAY,kBAAMV,EAAQ+J,KAAK8L,EAAgBjV,eAqD1E,2BAIA,cAAC2U,EAAA,EAAD,CAAQG,UAAWhU,EAAS4X,eAAgB3D,QA3DvC,kBAAME,EAAgBnV,aAAY,kBAAMV,EAAQsL,UAAQtM,KAAK+W,IA2DlE,uCCzFNqG,GAAW,GAEFC,GAAc,WACzB,MAAoC9a,IAApC,mBAAO0Z,EAAP,KAAiBpF,EAAjB,KACAuG,GAAWnB,EAASlb,aAAeqc,GAEnC,IAAMrG,EAAQ,kBAAMF,EAAgBjV,UAAU,KAE9C,OACE,8BACE,eAACoV,EAAA,EAAD,CAAQC,OAAQgF,EAASlb,YAAamW,QAASH,EAA/C,UACE,cAACI,EAAA,EAAD,CAAaC,MAAO,CAAEC,SAAU,QAAhC,mBAEA,cAACC,EAAA,EAAD,UACE,cAACqF,GAAA,EAAD,CAAmBvF,MAAO,CAAEkG,WAAY,OAAxC,SAAkDF,OAGpD,cAACpF,EAAA,EAAD,UACE,cAACzB,EAAA,EAAD,CAAQE,KAAK,QAAQE,QAASI,EAA9B,wBChBJ4E,GAAwB,CAC5B,CAAEC,MAAO,SAAUC,WAAY,SAAUC,MAAO,IAAKC,MAAO,SAC5D,CAAEH,MAAO,UAAWC,WAAY,UAAWC,MAAO,GAAIC,MAAO,QAC7D,CAAEH,MAAO,QAASC,WAAY,QAASC,MAAO,GAAIC,MAAO,QACzD,CAAEH,MAAO,QAASC,WAAY,eAAgBC,MAAO,IAAKC,MAAO,SACjE,CAAEH,MAAO,SAAUC,WAAY,SAAUC,MAAO,IAAKC,MAAO,UAGjDwB,GAAmB,WAC9B,MAA+Bhb,IAA/B,mBAAO0Z,EAAP,KAAiBC,EAAjB,KACA,EAAkBzG,KAAX+H,EAAP,oBACA,EAAwBrE,KAAxB,mBAAOV,EAAP,KAAazX,EAAb,KAEAob,qBAAU,WACJH,EAASnb,QAAQkC,IAAMwa,GAAStB,EAAWxa,YAAYV,EAAQgT,MAAMhU,SACxE,CAACic,EAASnb,QAASob,EAAYlb,EAASwc,IAI3C,OACE,qBAAKnB,QAAS5D,EAAK/C,SAAW8H,EAASpG,MAAO,CAAEkF,OAAQ,OAAQC,UAAW,IAAKT,MAAO,OAAvF,SACE,cAAC,KAAD,CAAUrD,KAAMA,EAAMkD,QAASA,GAASa,YAJ9B,SAACnY,UCXXoZ,GAAYC,YAAY,CAC5BC,QAAS,CACP7X,KAAM,UAgCJ8X,GAAU,WACd,MAAgBrb,IAATI,EAAP,oBACA,OACE,cAACkb,EAAA,EAAD,CAAUC,GAAI,CAAEC,MAAO,OAAQC,OAAQ,SAACC,GAAD,OAAWA,EAAMD,OAAOE,MAAQ,IAAKjH,KAAMtU,EAAMjC,QAAxF,SACE,cAACyd,EAAA,EAAD,CAAkBJ,MAAM,eC1C9BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAaC,UDKhB,WACjB,OACE,cAACC,EAAA,EAAD,CAAeR,MAAOR,GAAtB,SACE,sBAAKiB,UAAU,MAAf,UACE,cAAC,GAAD,IAEA,uBACA,cAAC,GAAD,IAEA,uBACA,uBACA,cAAC,GAAD,IAEA,gCACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,OAGF,8BACE,cAAC,GAAD,cCzBA,cAAC,IAAD,CAAOH,KAAK,IAAIC,UCAF,WACtB,OACE,gCACE,qBAAKE,UAAU,sBAAsBtH,MAAO,CAAEuH,WAAY,OAA1D,SACE,sBAAKD,UAAU,qBAAf,UACE,qBAAKA,UAAU,+BAAf,+BACA,qBAAKA,UAAU,4BAA4BtH,MAAO,CAAEwH,UAAW,QAA/D,SACE,mBAAGF,UAAU,WAAWG,KAAK,uBAA7B,SACE,qBAAKH,UAAU,WAAWI,IAAKC,EAAUC,IAAK,kBAMtD,sBAAKN,UAAU,sBAAf,UACE,qBAAKA,UAAU,OAAOI,IAAKG,IAC3B,gCACE,sCACM,sBAAMP,UAAU,QAAhB,oBAEN,8IAEF,sDAEF,sBAAKA,UAAU,6BAAf,UACE,mFACA,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKI,IAAKI,IACV,gGAEF,sBAAKR,UAAU,SAAf,UACE,qBAAKI,IAAKK,IACV,yFAEF,sBAAKT,UAAU,SAAf,UACE,qBAAKI,IAAKM,IACV,0EAEF,sBAAKV,UAAU,SAAf,UACE,qBAAKI,IAAKO,IACV,sFAEF,sBAAKX,UAAU,SAAf,UACE,qBAAKI,IAAKQ,IACV,sFAIN,sBAAKZ,UAAU,+BAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,eAAf,UACE,yCACA,qBAAKI,IAAKS,SAGd,qBAAKb,UAAU,cAAf,SACE,qBAAIA,UAAU,aAAd,UACE,uDACA,sDACA,4DACA,uDACA,uDACA,gEACA,qFAKN,sBAAKA,UAAU,aAAf,UACE,sDACA,mBAAGG,KAAK,sCAAR,2BACA,mBAAGA,KAAK,2CAAR,qBACA,mBAAGA,KAAK,mCAAR,oBACA,mBAAGA,KAAK,uBAAR,sBACA,mBAAGA,KAAK,wBAAR,+BAGF,sBAAK7b,GAAG,qBAAqBqZ,QAAQ,EAArC,UACE,qBAAKjF,MAAO,CAAE0E,MAAO,MAAO0D,SAAU,QAASpL,SAAU,WAAYqL,KAAM,MAAOC,IAAK,SAAvF,SACE,qBAAKZ,IAAKa,EAAO7D,MAAM,WAEzB,qBAAK1E,MAAO,CAAE0E,MAAO,MAAO0D,SAAU,QAASpL,SAAU,WAAYqL,KAAM,MAAOC,IAAK,QAAvF,SACE,qBAAKZ,IAAKc,EAAO9D,MAAM,6BD9E/B+D,SAASC,eAAe,SAM1BjgB,EAAgBwF,QAAQC,M,oFEjBjB,E,4GACE,IAAMxE,EAAO,UAAG,CAAEkC,IAAK,IAAKxC,KAAM,SAAUuf,UAAW,QAExDC,EAAW,IAAIC,gBAAc,6BAA8B,CAAEC,QAAS,MAItE1P,EACE,kBAAM7M,EAAK,OAAQ,eAAgB,KADrC6M,EAEE,kBAAM7M,EAAK,OAAQ,cAAe,IAFpC6M,EAGC,kBAAM7M,EAAK,MAAO,aAAc,KAHjC6M,EAIG,kBAAM7M,EAAK,QAAS,eAAgB,K,4CAGtC,WAAwB8D,EAAqBjE,GAA7C,qDAAAtC,EAAA,6DACCif,EAAO3P,IACP4P,EAAM5P,IACN6P,EAAQ7P,IACR8H,EAAO9H,IAJR,SAM8BlM,QAAQC,IAAI,CAC7Cyb,EAASM,mBAAmB,IAAIzY,UAAQrE,IACxCwc,EAASO,WAAW,IAAI1Y,UAAQrE,IAAUxD,MAAK,SAACwgB,GAAD,OAAOre,aAAGqe,EAAE5f,QAAQ+E,iBARhE,0CAME8a,EANF,KAMSC,EANT,KAUCC,EAAcxe,aAAE,UAACgC,IAAEqB,KAAKib,GAAO,SAAC5e,GAAD,OAAOA,EAAE+e,kBAAoBT,EAAK5c,kBAAjD,aAAC,EAA0D3C,SAC3EigB,EAAa1e,aAAE,UAACgC,IAAEqB,KAAKib,GAAO,SAAC5e,GAAD,OAAOA,EAAE+e,kBAAoBR,EAAI7c,kBAAhD,aAAC,EAAyD3C,SACzEkgB,EAAe3e,aAAE,UAACgC,IAAEqB,KAAKib,GAAO,SAAC5e,GAAD,OAAOA,EAAE+e,kBAAoBP,EAAM9c,kBAAlD,aAAC,EAA2D3C,SAZ9E,UAcsC0D,QAAQC,IAAI,CACrDkD,EAAOuE,QAAQsM,EAAMoI,GACrBjZ,EAAOuE,QAAQmU,EAAMQ,GACrBlZ,EAAOuE,QAAQoU,EAAKS,GACpBpZ,EAAOuE,QAAQoU,EAAKU,KAlBjB,2CAcEC,EAdF,KAcSC,EAdT,KAcgBC,EAdhB,KAcsBC,EAdtB,uBAoBE,CACL,CAAE1W,MAAO8N,EAAMhV,OAAQod,EAAa5b,MAAOic,GAC3C,CAAEvW,MAAO2V,EAAM7c,OAAQqd,EAAa7b,MAAOkc,GAC3C,CAAExW,MAAO4V,EAAK9c,OAAQud,EAAY/b,MAAOmc,GACzC,CAAEzW,MAAO6V,EAAO/c,OAAQwd,EAAchc,MAAOoc,KAxB1C,6C,+EA6BgB,aAAG,CACxB7N,UAAW,iBAAO,CAChBmI,OAAQ,CAAChL,IAAeA,KACxB2Q,KAAM,iEACNC,KAAM,mEAER9N,SAAU,iBAAO,CACfkI,OAAQ,CAAChL,IAAcA,KACvB2Q,KAAM,iEACNC,KAAM,oEATH,IAaM9X,E,WAeX,WAAmBrB,EAA2BR,EAA4B8J,GAAqB,IAAD,gCAA3EtJ,OAA2E,KAAhDR,SAAgD,KAApB8J,WAAoB,KAd9F6O,IAAM5P,IAcwF,KAb9F6P,MAAQ7P,IAasF,KAX9FrJ,KAAO,CACLka,gBAAiBxgB,OACjBkJ,QAASlJ,OACTmJ,QAASnJ,OACToJ,OAAQpJ,OACRqJ,OAAQrJ,OACRsJ,aAActJ,OACduJ,YAAavJ,OACbwJ,IAAKxJ,QAGuF,KAE9FkP,QAAU,kBAAM,EAAK9H,MAFyE,KAI9F/F,WAAa,kBAAMpB,GAJ2E,KAM9F4D,UAAY,kBAAM,EAAK6M,SAASiK,QAN8D,KAQ9F5W,gBAAkB,iBAAM,CAAC,EAAKyb,QARgE,KAU9F/V,QAAU,kBAAM,EAAKnD,MAVyE,KAY9F6I,UAAY,iBAAM,IAZ4E,KAc9FzF,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAK+G,SAASiK,OAAO,GAC5BlY,OAAQ,EAAK6D,KAAK4C,QAClBjF,MAAO,EAAKqC,KAAK8C,QAEnB,CACEO,MAAO,EAAK+G,SAASiK,OAAO,GAC5BlY,OAAQ,EAAK6D,KAAK6C,QAClBlF,MAAO,EAAKqC,KAAK+C,UAvByE,KA2B9FO,kBAAoB,iBAAM,CAAC,CAAED,MAAO,EAAK4V,IAAK9c,OAAQ,EAAK6D,KAAKgD,aAAcrF,MAAO,EAAKqC,KAAKiD,eA3BD,KA6B9FM,OAAS,kBAAM,EAAKvD,KAAKkD,KA7BqE,KAkE9FM,mBAAqB,iBAAM,I,+EAnC3B,uEAAAzJ,EAAA,6DACQe,EAAU,IAAI4F,UAAQpE,KAAKwE,KAAKzE,SAChC8d,EAAO,IAAIC,gBAAc,CAAE/d,QAAS,IAAIqE,UAAQpE,KAAK8N,SAAS4P,QAC9DC,EAAO,IAAIG,gBAAc,CAAE/d,QAAS,IAAIqE,UAAQpE,KAAK8N,SAAS6P,QAHtE,SAKiE9c,QAAQC,IAAI,CACzEyb,EAASM,mBAAmBre,GAC5B8I,EAAKqW,EAAM,0BAA0BphB,MAAK,SAACwgB,GAAD,OAAOgB,EAAOhB,EAAE,OAC1DzV,EAAKuW,EAAM,mBAAmBthB,MAAK,SAACwgB,GAAD,OAAOA,EAAE,MAC5CzV,EAAKuW,EAAM,6BAA6BthB,MAAK,SAACwgB,GAAD,OAAOA,EAAE/b,IAAI+c,QAT9D,sCAKSf,EALT,KAKgBgB,EALhB,KAKqCC,EALrC,KAK+CpW,EAL/C,mBAW4CA,EAX5C,GAWSqW,EAXT,KAWkBC,EAXlB,KAW2BC,EAX3B,MAaQC,EAAW3d,IAAEa,OAAOyb,GAAO,SAAChb,GAAD,OAAOA,EAAEsc,UAAY,EAAKxQ,SAAS6P,SACtD1L,OAdhB,0DAgBEjS,KAAK0D,KAAKka,gBAAkBS,EAASrd,KAAI,SAACud,GAAD,OAASC,EAA4BD,EAAIE,eAAa9M,QAAO,SAACC,EAAK8M,GAAN,OAAY9M,EAAIC,IAAI6M,KAAIthB,QAhBhI,UAkBiCyD,QAAQC,IAAIud,EAASrd,KAAI,SAACud,GAAD,OAASI,EAA8BhB,EAAMY,EAAIphB,QAASohB,EAAIE,gBAAcliB,MAAK,SAACwgB,GAAD,OACvIA,EAAEpL,QAAO,SAACC,EAAKmL,GAAN,OAAYnL,EAAIC,IAAIkL,KAAI3f,WAnBrC,eAkBE4C,KAAK0D,KAAKgD,aAlBZ,OAsBQkY,EAAgB5e,KAAK0D,KAAKka,gBAAgBvd,IAAIE,SAAOD,IAAI8d,GACzD5W,EAASkE,eAAK1L,KAAK8N,SAASiK,OAAO,GAAGjY,UAAYme,EAAS,GAAKC,EAAUC,EAASne,KAAK8N,SAASiK,OAAO,GAAG8G,KAC3GC,EAASpT,eAAK1L,KAAK0D,KAAK4C,UAAY4X,EAAUC,EAAUD,EAASle,KAAK8N,SAASiK,OAAO,GAAG8G,KAC/F7e,KAAK0D,KAAK4C,QAAUsY,EAAcve,IAAImH,GAAQlH,IAAIC,SAClDP,KAAK0D,KAAK6C,QAAUqY,EAAcve,IAAIye,GAAQxe,IAAIC,SA1BpD,UA2BqFM,QAAQC,IAAI,CAC7Fd,KAAKgE,OAAOuE,QAAQvI,KAAK8N,SAASiK,OAAO,GAAI/X,KAAK0D,KAAK4C,SACvDtG,KAAKgE,OAAOuE,QAAQvI,KAAK8N,SAASiK,OAAO,GAAI/X,KAAK0D,KAAK6C,SACvDvG,KAAKgE,OAAOuE,QAAQvI,KAAK8N,SAASiK,OAAO,GAAI+G,EAAOtW,KAAK,GAAGnI,IAAI2d,GAAqB1d,IAAI8d,IACzFpe,KAAKgE,OAAOuE,QAAQvI,KAAK2c,IAAK3c,KAAK0D,KAAKgD,gBA/B5C,oCA2BG1G,KAAK0D,KAAK8C,OA3Bb,KA2BqBxG,KAAK0D,KAAK+C,OA3B/B,KA2BuCzG,KAAK0D,KAAKkD,IA3BjD,KA2BsD5G,KAAK0D,KAAKiD,YA3BhE,sD,uHAqCA,WAAmBlD,EAAgBe,GAAnC,SAAA/G,EAAA,0F,6HAEA,WAAsBgG,EAAgBe,EAAgBkE,GAAtD,SAAAjL,EAAA,0F,uHAEA,WAAciL,GAAd,SAAAjL,EAAA,0F,8DAGF,SAASyC,EAAKnD,EAAc+C,EAAiBif,GAC3C,IAAMvc,EAASuC,gBAAMhI,EAAMiiB,eAI3B,OAHAxc,EAAOtC,MAAO,EACdsC,EAAO1C,QAAUA,EACjB0C,EAAOqc,IAAME,EACNvc,EAGT,SAASub,EAAOkB,GACd,OAAOvgB,aAAGwgB,EAAOtW,KAAKqW,EAAG,UAAU/c,SAAS,OAAQ,IAGtD,SAASoF,EAAK5B,EAAyByZ,GACrC,OAAOzZ,EAAS0Z,SAAS7C,EAAU,CAAE8C,KAAM,IAAIC,mBAAiBH,KAAO5iB,MAAK,SAACwgB,GAAD,OAAOA,EAAEwC,cAevF,SAASf,EAA4BC,GACnC,IAAIe,EAAMzB,EAAOU,GAAYvc,SAAS,OAClCsd,EAAIvN,OAAS,IAAM,IACrBuN,EAAM,IAAMA,GAId,IADA,IAAIC,EAAQ,GACHvc,EAAI,EAAGA,EAAIsc,EAAIvN,OAAS,EAAG/O,GAAK,EAAGuc,EAAMjK,KAAKgK,EAAItc,GAAKsc,EAAItc,EAAI,IAExE,IAMMwc,EANale,SAASie,EAAM,GAAI,IAClB,EACC,EACP,EACG,EACF,EAETE,EAAOne,SAASie,EAAMC,GAAa,IACnCE,EAAWF,EAAa,EAC9B,OAAOhhB,aAAGgC,IAAEmf,MAAMJ,EAAOG,EAAUA,EAAWD,GAAMvd,KAAK,IAAK,I,SAGjDuc,E,kFAAf,WAA6ChB,EAAqBmC,EAAoBrB,GAAtF,eAAAhhB,EAAA,sEACuBkgB,EAAKyB,SAAS7C,EAAU,CAC3C8C,KAAM,IAAIC,mBAAiB,oCAC3B9a,KAAM,CAAC,IAAIub,eAAaC,IAAaC,IAAIH,EAAe5d,aAAc,IAAIge,aAAWhB,EAAOtW,KAAK6V,EAAY,cAHjH,cACQjc,EADR,QAKS2d,gBALT,kBAMSpC,EAAOvb,EAAO+c,WAAW,KANlC,4C,gCAnMexe,M,6wPCRjB,IAAIC,EAAM,CACT,WAAY,IACZ,aAAc,KAIf,SAASof,EAAeC,GACvB,IAAI9gB,EAAK+gB,EAAsBD,GAC/B,OAAOE,EAAoBhhB,GAE5B,SAAS+gB,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAExf,EAAKqf,GAAM,CACpC,IAAI/b,EAAI,IAAIT,MAAM,uBAAyBwc,EAAM,KAEjD,MADA/b,EAAEmc,KAAO,mBACHnc,EAEP,OAAOtD,EAAIqf,GAEZD,EAAe9e,KAAO,WACrB,OAAOof,OAAOpf,KAAKN,IAEpBof,EAAeO,QAAUL,EACzBM,EAAOC,QAAUT,EACjBA,EAAe7gB,GAAK,M","file":"static/js/main.6db7e5c3.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, bn, getNetwork, Network, setWeb3Instance, web3, zero } from \"@defi.org/web3-candies\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    loading: false,\n    wallet: \"\",\n    balance: zero,\n    network: {} as Network,\n\n    alertDialog: \"\",\n  },\n\n  actions: {\n    connect:\n      () =>\n      async ({ setState }) => {\n        await _withLoading(setState, async () => {\n          setState({ wallet: \"\", balance: zero, network: {} as Network });\n\n          const ethereum = (window as any).ethereum;\n          if (!ethereum) {\n            alert(\"install metamask\");\n            return;\n          }\n          await _onConnect(setState, ethereum);\n\n          ethereum.on(\"accountsChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n          ethereum.on(\"chainChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n        });\n      },\n\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n  },\n});\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any, ethereum: any) {\n  setWeb3Instance(new Web3(ethereum));\n  const wallet = await account();\n  setState({\n    wallet,\n    network: await getNetwork(),\n    balance: bn(await web3().eth.getBalance(wallet)),\n  });\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet),\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network } from \"@defi.org/web3-candies\";\nimport Web3 from \"web3\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = args.type + \":\" + args.address;\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return Web3.utils.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (Web3.utils.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport { bn18, ether, getNetwork, networks, Token } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(token: Token, amount: BN): Promise<BN> {\n    const id = (token as any).tokenId || token.address;\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if ((token as any).esdt) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices((await getNetwork()).id, [id]);\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n\n    await Promise.all([\n      this.fetchPricesElrond(\n        _(bynetwork[ElrondMaiar.network.id])\n          .map((p) => p.getAssets().concat(p.getRewardAssets()))\n          .flatten()\n          .map((a) => (a as any).tokenId)\n          .value()\n      ),\n      ..._(bynetwork)\n        .keys()\n        .filter((id) => parseInt(id) > 0)\n        .map((id) =>\n          this.fetchPrices(\n            id,\n            _(bynetwork[id])\n              .map((p) => p.getAssets().concat(p.getRewardAssets()))\n              .flatten()\n              .map((a) => a.address)\n              .value()\n          )\n        )\n        .value(),\n    ]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetch\", addresses);\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n    const response = await fetch(`https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`, {\n      mode: \"cors\",\n    });\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => Web3.utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetch elrond\", tokenIds);\n    const body = {\n      variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n      query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n    };\n    const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n      headers: {\n        accept: \"*/*\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"application/json\",\n        pragma: \"no-cache\",\n      },\n      body: JSON.stringify(body),\n      method: \"POST\",\n    });\n    const json = await response.json();\n\n    const result = _(json.data)\n      .mapKeys((v, k) => body.variables[k])\n      .mapValues((v) => bn18(v))\n      .value();\n\n    return this.updateResults(tokenIds, result);\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import _ from \"lodash\";\nimport { erc20s as erc20sOrig, contracts as contractsOrig, erc20, contract } from \"@defi.org/web3-candies\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {\n  eth: {\n    UNIC: () => erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\"),\n    XUNIC: () => erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\"),\n\n    Unicly_UPUNK: () => erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n    Unicly_UJENNY: () => erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n    Unicly_LP_UPUNK_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n    Unicly_LP_UJENNY_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n  },\n  bsc: {\n    REVA: () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\"),\n  },\n});\n\nexport const contracts = _.merge({}, contractsOrig, {\n  eth: {\n    Unicly_XUnicVault: () => contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\"),\n  },\n  bsc: {\n    Revault_Farm: () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\"),\n    Revault_Chef: () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\"),\n  },\n});\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, contracts, erc20s, getNetwork, networks, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.bsc;\n    }\n\n    getAssets() {\n      return [this.asset0, this.asset1];\n    }\n\n    getRewardAssets() {\n      return [this.cake];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.masterchef.methods.deposit(this.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, bn18, contract, erc20s, ether, getNetwork, networks, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimRewardsToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimAndTransferAllCompToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, getNetwork, networks, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s } from \"./consts\";\nimport _ from \"lodash\";\n\nexport namespace Revault {\n  export class SingleVault implements Position {\n    revault = contracts.bsc.Revault_Farm();\n    chef = contracts.bsc.Revault_Chef();\n    reva = erc20s.bsc.REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.asset, this.data.amount),\n        this.oracle.valueOf(this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload).send({\n        from: await account(),\n        type: useLegacyTx ? \"0x0\" : \"0x2\",\n      } as any);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, ether, getNetwork, networks, Token, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s } from \"./consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20s.eth.Unicly_UPUNK(),\n      lp: erc20s.eth.Unicly_LP_UPUNK_ETH(),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20s.eth.Unicly_UJENNY(),\n      lp: erc20s.eth.Unicly_LP_UJENNY_ETH(),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements Position {\n    xfarm = contracts.eth.Unicly_XUnicVault();\n    unic = erc20s.eth.UNIC();\n    xunic = erc20s.eth.XUNIC();\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.xfarm.methods.deposit(this.strategy.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"./consts\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n    \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n    \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n    \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n    \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n    \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n\n    \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.CAKE()),\n    \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.BUSD()),\n    \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.WBNB()),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.MEX_EGLD()),\n    // \"egld:Maiar:Farm:MEX\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, [ElrondMaiar.tokens.MEX()]),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs, Threat } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { fmt18, zero } from \"@defi.org/web3-candies\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nconst saveToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n    ready: false,\n  },\n\n  actions: {\n    load:\n      () =>\n      async ({ dispatch }) => {\n        await dispatch(load);\n      },\n\n    addPosition:\n      (type: string, address: string) =>\n      async ({ getState, dispatch }) => {\n        const position = PositionFactory.create({ type, address, id: \"\" });\n        if (!position) {\n          alert(`unknown type ${type} at ${address}`);\n          return;\n        }\n\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        data[position.getArgs().id] = position.getArgs();\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    delete:\n      (posId: string) =>\n      async ({ getState, dispatch }) => {\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        delete data[posId];\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load({ getState, setState }: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD\");\n  const current = getState().positions;\n  const positions = _.mapValues(loadFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  if (!getState().ready) await PositionFactory.oracle.warmup(_.values(positions));\n\n  await Promise.all(_.map(positions, (p) => p?.load().catch((e) => console.log(p.getArgs().type, e))));\n  setState({ positions, ready: true });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        health: fmtHealth(p.getHealth()),\n        value: \"$\" + fmt18(p.getAmounts().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        pending: \"$\" + fmt18(p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        tvl: \"$\" + fmt18(p.getTVL()).split(\".\")[0],\n        position: p,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\nexport const useAllPositionsReady = createHook(AllPositionsState, {\n  selector: (state) => state.ready,\n});\n\nfunction fmtHealth(health: Threat[]) {\n  if (!health.length) return \"🟢\";\n  return health.map((t) => t.message).join(\"⚠️\");\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => allPositionActions.addPosition(state.type, state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddWalletDialogState = createStore({\n  name: \"AddWalletDialogState\",\n\n  initialState: {\n    show: false,\n    address: \"\",\n    valid: false,\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState }) => {\n        const valid = PositionFactory.isValidWallet(address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddWalletDialog = createHook(AddWalletDialogState);\n","import { ElrondMaiar } from \"../ElrondMaiar\";\nimport { PositionFactory } from \"./PositionFactory\";\nimport { TokenAmount } from \"./Position\";\n\nexport async function fetchBalances(wallet: string): Promise<Record<string, TokenAmount[]>> {\n  if (wallet.startsWith(\"erd1\")) {\n    return { egld: await ElrondMaiar.balances(PositionFactory.oracle, wallet) };\n  }\n\n  return {};\n}\n","import _ from \"lodash\";\nimport { createHook, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { fetchBalances } from \"../positions/base/Balances\";\nimport { TokenAmount } from \"../positions/base/Position\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst STORAGE_KEY = \"Wallets:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"[]\") as string[];\nconst saveToStorage = (data: string[]) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\ntype NetworkShortname = string;\ntype WalletBalances = Record<NetworkShortname, TokenAmount[]>;\ntype WalletRow = { id: string; wallet: string; network: string; asset: string; amount: string; value: string };\n\nconst WalletsState = createStore({\n  name: \"WalletsState\",\n\n  initialState: {\n    wallets: [] as string[],\n    balances: {} as Record<string, WalletBalances>,\n    rows: [] as WalletRow[],\n  },\n\n  actions: {\n    load:\n      () =>\n      async ({ dispatch }) => {\n        await dispatch(load);\n      },\n\n    add:\n      (address: string) =>\n      async ({ getState, dispatch }) => {\n        const current = getState().wallets;\n        saveToStorage(_.uniq(_.concat(current, address)));\n        await dispatch(load);\n      },\n\n    delete:\n      (address: string) =>\n      async ({ getState, setState, dispatch }) => {\n        const current = getState().wallets;\n        const wallets = _.filter(current, (a) => a !== address);\n        saveToStorage(wallets);\n        setState({ wallets });\n        await dispatch(load);\n      },\n  },\n});\n\nasync function load({ getState, setState }: StoreActionApi<typeof WalletsState.initialState>) {\n  console.log(\"LOAD wallets\");\n  const wallets = _.merge(loadFromStorage(), getState().wallets);\n  setState({ wallets });\n\n  const fetched = await Promise.all(wallets.map((w) => fetchBalances(w)));\n  const balances = {} as Record<string, Record<string, TokenAmount[]>>;\n  setState({ balances });\n\n  const rows = [] as WalletRow[];\n  _.forEach(wallets, (w, i) => {\n    balances[w] = fetched[i];\n    _.forEach(balances[w], (aa, n) => {\n      const nonzero = _.filter(aa, (a) => !a.amount.isZero());\n      _.forEach(nonzero, (a) => {\n        rows.push({\n          id: `${w}:${n}:${a.asset.name}`,\n          wallet: w,\n          network: n,\n          asset: a.asset.name,\n          amount: fmt18(a.amount),\n          value: \"$\" + fmt18(a.value).split(\".\")[0],\n        });\n      });\n    });\n  });\n\n  setState({ rows });\n}\nexport const useWalletsRows = createHook(WalletsState, { selector: (state) => state.wallets });\nexport const useWalletsBalancesRows = createHook(WalletsState, {\n  selector: (state) => state.rows,\n});\n","import React from \"react\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, List, ListItem, ListItemButton, ListItemText, TextField } from \"@mui/material\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { useAddWalletDialog } from \"../state/AddWalletDialogState\";\nimport _ from \"lodash\";\nimport { useWalletsRows } from \"../state/WalletsState\";\n\nexport const AddWalletBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddWalletDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Wallet\n    </Button>\n  );\n};\n\nexport const AddWalletDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddWalletDialog();\n  const [wallets, walletsActions] = useWalletsRows();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => walletsActions.add(state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Wallet</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Wallet Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n\n          <div>Tracking:</div>\n          <List>\n            {_.map(wallets, (w) => (\n              <ListItem key={w} disablePadding>\n                <ListItemButton>\n                  <ListItemText primary={w} onClick={() => appStateActions.withLoading(() => walletsActions.delete(w))} />\n                </ListItemButton>\n              </ListItem>\n            ))}\n          </List>\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button } from \"@mui/material\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\nimport { AddWalletBtn } from \"./AddWalletDialog\";\n\nexport const AppHeader = () => (\n  <div style={{ fontSize: \"large\", minWidth: \"42em\" }}>\n    <br />\n    <br />\n\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ConnectBtn />\n      <AddWalletBtn />\n      <AddPositionBtn />\n    </div>\n\n    <div />\n    <WalletInfo />\n    <div />\n\n    <br />\n  </div>\n);\n\nconst ConnectBtn = () => {\n  const [isConnected, actions] = useIsAppConnected();\n\n  return (\n    <Button variant={\"contained\"} size={\"large\"} onClick={actions.connect}>\n      {isConnected ? \"Refresh\" : \"Connect\"}\n    </Button>\n  );\n};\n\nconst WalletInfo = () => {\n  const [state] = useAppState();\n  return (\n    <div>\n      <p>Network 🌐 {state.network?.name}</p>\n      <p>Wallet 🔑 {state.wallet}</p>\n      <p>Balance 💰 {fmt18(state.balance)}</p>\n    </div>\n  );\n};\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      positionData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Type\", width: 300, align: \"left\" },\n  { field: \"health\", headerName: \"Health\", width: 100, align: \"center\" },\n  { field: \"value\", headerName: \"Market Value\", width: 100, align: \"right\" },\n  { field: \"pending\", headerName: \"Pending\", width: 100, align: \"right\" },\n  { field: \"tvl\", headerName: \"TVL\", width: 150, align: \"right\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div hidden={!rows.length} style={{ height: \"100%\", minHeight: 500, width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.positionData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { useWalletsBalancesRows } from \"../state/WalletsState\";\nimport { useAllPositionsReady } from \"../state/AllPositionsState\";\n\nconst columns: GridColDef[] = [\n  { field: \"wallet\", headerName: \"Wallet\", width: 240, align: \"right\" },\n  { field: \"network\", headerName: \"Network\", width: 80, align: \"left\" },\n  { field: \"asset\", headerName: \"Asset\", width: 80, align: \"left\" },\n  { field: \"value\", headerName: \"Market Value\", width: 100, align: \"right\" },\n  { field: \"amount\", headerName: \"Amount\", width: 100, align: \"right\" },\n];\n\nexport const AllBalancesTable = () => {\n  const [appState, appActions] = useAppState();\n  const [isready] = useAllPositionsReady();\n  const [rows, actions] = useWalletsBalancesRows();\n\n  useEffect(() => {\n    if (appState.network.id && isready) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions, isready]);\n\n  const click = (p: any) => {};\n\n  return (\n    <div hidden={!rows.length || !isready} style={{ height: \"100%\", minHeight: 300, width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useAppState } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { AllBalancesTable } from \"./ui/AllBalancesTable\";\nimport { AddWalletDialog } from \"./ui/AddWalletDialog\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <br />\n        <AllPositionsTable />\n\n        <br />\n        <br />\n        <AllBalancesTable />\n\n        <div>\n          <AddPositionDialog />\n          <AddWalletDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [state] = useAppState();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={state.loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Position, PositionArgs, TokenAmount } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { Address, BigUIntValue, BytesValue, ContractFunction, ProxyProvider, SmartContract } from \"@elrondnetwork/erdjs/out\";\nimport _ from \"lodash\";\nimport BigNumberExt from \"bignumber.js\";\nimport BN from \"bn.js\";\n\nexport namespace ElrondMaiar {\n  export const network = { id: -508, name: \"Elrond\", shortname: \"egld\" };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"EGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n  };\n\n  export async function balances(oracle: PriceOracle, address: string) {\n    const usdc = tokens.USDC();\n    const mex = tokens.MEX();\n    const lkmex = tokens.LKMEX();\n    const egld = tokens.EGLD();\n\n    const [esdts, balanceEGLD] = await Promise.all([\n      provider.getAddressEsdtList(new Address(address)),\n      provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString())),\n    ]);\n    const balanceUSDC = bn(_.find(esdts, (t) => t.tokenIdentifier === usdc.tokenId)?.balance);\n    const balanceMEX = bn(_.find(esdts, (t) => t.tokenIdentifier === mex.tokenId)?.balance);\n    const balanceLKMEX = bn(_.find(esdts, (t) => t.tokenIdentifier === lkmex.tokenId)?.balance);\n\n    const [vEGLD, vUSDC, vMEX, vLKMEX] = await Promise.all([\n      oracle.valueOf(egld, balanceEGLD),\n      oracle.valueOf(usdc, balanceUSDC),\n      oracle.valueOf(mex, balanceMEX),\n      oracle.valueOf(mex, balanceLKMEX),\n    ]);\n    return [\n      { asset: egld, amount: balanceEGLD, value: vEGLD },\n      { asset: usdc, amount: balanceUSDC, value: vUSDC },\n      { asset: mex, amount: balanceMEX, value: vMEX },\n      { asset: lkmex, amount: balanceLKMEX, value: vLKMEX },\n    ] as TokenAmount[];\n  }\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n  export const Strategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n  };\n\n  export class Farm implements Position {\n    mex = tokens.MEX();\n    lkmex = tokens.LKMEX();\n\n    data = {\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => network;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.lkmex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [esdts, farmingTokenReserve, token0Id, reserves] = await Promise.all([\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      const [token0r, token1r, lpTotalSupply] = reserves;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      if (!farmNfts.length) return;\n\n      this.data.lpBalanceStaked = farmNfts.map((nft) => parseAmountLpFromAttributes(nft.attributes)).reduce((sum, b) => sum.add(b), zero);\n\n      this.data.rewardAmount = await Promise.all(farmNfts.map((nft) => callAndParseGetPendingRewards(farm, nft.balance, nft.attributes))).then((r) =>\n        r.reduce((sum, r) => sum.add(r), zero)\n      );\n\n      const percentOfPool = this.data.lpBalanceStaked.mul(ether).div(lpTotalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl, this.data.rewardValue] = await Promise.all([\n        this.oracle.valueOf(this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(this.strategy.assets[1], token1.muln(2).mul(farmingTokenReserve).div(lpTotalSupply)),\n        this.oracle.valueOf(this.mex, this.data.rewardAmount),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n\n  //#[derive(TopEncode, TopDecode, NestedEncode, NestedDecode, TypeAbi, Clone)]\n  // pub struct FarmTokenAttributes<M: ManagedTypeApi> {\n  //     pub reward_per_share: BigUint<M>,\n  //     pub original_entering_epoch: u64,\n  //     pub entering_epoch: u64,\n  //     pub apr_multiplier: u8,\n  //     pub with_locked_rewards: bool,\n  //     pub initial_farming_amount: BigUint<M>,\n  //     pub compounded_reward: Bigu32,\n  //     pub current_farm_amount: BigUint<M>,\n  // }\n  //000000000000000008 08b17d48809d7fc0 00000000000001e9 00000000000001e9 0f 01 00000008 77a3ec302d1cd52c 00000000 00000009 07029ad6d2a4b07d94\n  function parseAmountLpFromAttributes(attributes: string) {\n    let hex = base64(attributes).toString(\"hex\");\n    if (hex.length % 2 !== 0) {\n      hex = \"0\" + hex;\n    }\n\n    let bytes = [];\n    for (let i = 0; i < hex.length - 1; i += 2) bytes.push(hex[i] + hex[i + 1]);\n\n    const perShare_z = parseInt(bytes[0], 16);\n    const origEpoch_z = 8;\n    const enterEpoch_z = 8;\n    const apr_z = 1;\n    const locked_z = 1;\n    const lp_z_z = 4;\n    const lp_z_index = perShare_z + origEpoch_z + enterEpoch_z + apr_z + locked_z + lp_z_z;\n    const lp_z = parseInt(bytes[lp_z_index], 16);\n    const lp_index = lp_z_index + 1;\n    return bn(_.slice(bytes, lp_index, lp_index + lp_z).join(\"\"), 16);\n  }\n\n  async function callAndParseGetPendingRewards(farm: SmartContract, balanceFarmNFT: BN, attributes: string) {\n    const result = await farm.runQuery(provider, {\n      func: new ContractFunction(\"calculateRewardsForGivenPosition\"),\n      args: [new BigUIntValue(BigNumberExt.max(balanceFarmNFT.toString())), new BytesValue(Buffer.from(attributes, \"base64\"))],\n    });\n    result.assertSuccess();\n    return base64(result.returnData[0]);\n  }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n","var map = {\n\t\"./bls.js\": 485,\n\t\"./bls_c.js\": 486\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 979;"],"sourceRoot":""}