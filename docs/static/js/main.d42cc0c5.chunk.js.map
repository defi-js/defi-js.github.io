{"version":3,"sources":["../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positions/base/consts.ts","state/AppState.ts","positions/base/PositionFactory.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","ui/AppHeader.tsx","positions/base/PriceOracle.ts","positions/Revault.ts","positions/Unicly.ts","positions/Fodl.ts","positions/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","erc20s","_","merge","erc20sOrig","networks","contractsOrig","networksOrig","egld","ElrondMaiar","network","off","name","shortname","currentNetwork","a","netId","bn","window","ethereum","chainId","toNumber","console","log","find","n","sendWithTxType","tx","useLegacyTx","account","from","type","send","isNetworkDisabled","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","setState","_withLoading","showAlert","alert","clickNetwork","networkId","getState","_ethereum","removeAllListeners","on","_onConnect","request","method","_switchNetwork","t","message","stack","setWeb3Instance","Web3","params","utils","numberToHex","Severity","useAppState","createHook","useIsAppConnected","selector","state","isAddress","useIsLoading","useAppActions","AppHeader","style","display","flexDirection","justifyContent","margin","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","ToggleButton","textTransform","disabled","coingeckoIds","eth","bsc","poly","arb","avax","PriceOracle","prices","token","amount","isElrond","tokenId","address","this","isZero","fetchPricesElrond","fetchPrices","toString","zero","mul","div","ether","positions","bynetwork","groupBy","getNetwork","coingeckoFetches","filter","getAssets","concat","getRewardAssets","flatten","uniq","elrondFetch","Promise","all","addresses","isEmpty","coingeckoId","v","k","url","join","fetch","response","json","result","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","accept","pragma","JSON","stringify","data","inputs","results","registry","oracle","isElrondAddress","startsWith","Address","fromString","types","args","current","PositionFactory","Farm","asset0","asset1","lpToken","poolId","masterchef","contracts","Pancakeswap_Masterchef","cake","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","encodeABI","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","contract","require","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","owner","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","REVA","erc20","SingleVault","revault","chef","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","WBNB","BUSD","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","RevaStake","staking","pendingAmount","userPoolInfo","poolInfo","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","getxUNICRate","xunicrate","totalLPTokens","Unicly","XFodlStake","fodl","xfodl","then","myXfodl","xfodlTotalSupply","fodlStaked","Fodl","register","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","Strategies","FarmStrategies","USDC_EGLD","MEX_EGLD","MexFarm","MexFarmStrategies","MEX","RIDE","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","ready","load","api","addPosition","position","create","delete","posId","sendTransaction","harvest","warmup","values","shouldLoad","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","chain","health","to3","reduce","sum","add","useAllPositions","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","length","split","BN","fmt18","positionMethods","selectedMethodArgTypes","assets","rewardAssets","positionData","AddPositionDialogState","show","valid","allTypes","sort","setType","isValidArgs","setAddress","useAddPositionDialog","AddPositionBtn","isConnected","Button","onClick","AddPositionDialog","appActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","columns","field","headerName","width","align","headerAlign","valueFormatter","commafy","toFixed","sortable","AllPositionsTable","appState","rows","positionDialogActions","useEffect","total","useMemo","row","height","onCellClick","autoHeight","hideFooter","ListItem","ListItemText","PositionDialog","appStateActions","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","hidden","addEventListener","file","files","reader","FileReader","onload","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById","provider","ProxyProvider","timeout","EGLD","esdt","LKMEX","LKFARM","EGLD_MEX_FARM","MEX_POOL_NFT","RIDE_POOL_NFT","getAddressEsdtList","getAccount","r","balance","esdts","balanceEGLD","tokenIdentifier","dec","balances","push","pool","farm","mex","lpBalanceStaked","pair","SmartContract","base64","farmingTokenReserve","token0Id","token0r","token1r","lpTotalSupply","farmNfts","creator","nft","parseLPFromFarmTokenAttr","attributes","b","callAndParseGetPendingRewards","percentOfPool","token1","reward","proxy","farmNft","totalAssetStaked","getAddress","farmEsdts","farmNftWrapper","parsePrincipalAmountFromWrappedFarmTokenAttr","decimals","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","balanceFarmNFT","BigUIntValue","BigNumberExt","max","BytesValue","codec","decodeNested","typeFarmTokenAttributes","initial_farming_amount","typeWrappedFarmTokenAttributes","farm_token_id","farming_token_amount","BinaryCodec","StructType","StructFieldDefinition","TokenIdentifierType","U64Type","BigUIntType","U8Type","BooleanType"],"mappings":"uIAAA,IAAIA,EAAM,CACT,WAAY,IACZ,aAAc,KAIf,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,M,u8iDCvBL,G,cAAA,IAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,uCCA1B,MAA0B,wCCA1B,MAA0B,kCCA1B,MAA0B,kC,8JCK5BY,G,OAASC,IAAEC,MAAM,GAAIC,SAAY,KAGjCC,GAFYH,IAAEC,MAAM,GAAIG,YAAe,IAE5BJ,IAAEC,MAAM,GAAII,WAAc,CAChDC,KAAMC,IAAYC,QAClBC,IAAK,CAAEtB,IAAK,EAAGuB,KAAM,WAAYC,UAAW,UAGvC,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,6DAECC,EAAQC,aAAIC,OAAeC,SAASC,QAAS,IAAIC,WACvDC,QAAQC,IAAI,qBAAsBP,GAH7B,kBAIEd,IAAEsB,KAAKnB,GAAU,SAACoB,GAAD,OAAOA,EAAEpC,KAAO2B,MAJnC,4C,sBAOA,SAAeU,EAAtB,oC,4CAAO,WAA8BC,EAASC,GAAvC,SAAAb,EAAA,kEACCY,EADD,SACuBE,oBADvB,+BACwCD,EAAc,MAAQ,MAD9D,MACWE,KADX,KACkCC,KADlC,oBACIC,KADJ,4D,sBCTA,SAASC,EAAkBvB,GAChC,OAAQA,GAAWA,EAAQrB,GAAK,EAGlC,IAAM6C,EAAWC,YAAY,CAC3BvB,KAAM,WAENwB,aAAc,CACZC,YAAahC,EACbiC,SAAS,EACTC,OAAQ,GACR7B,QAAS,KACT8B,YAAa,IAGfC,QAAS,CACPC,YACE,SAACC,GAAD,8CACA,6BAAA5B,EAAA,6DAAS6B,EAAT,EAASA,SAAT,SACQC,EAAaD,EAAUD,GAD/B,2CADA,uDAKFG,UACE,SAACC,GAAD,8CACA,uBAAAhC,EAAA,uDAAS6B,EAAT,EAASA,UACE,CAAEJ,YAAaO,IAD1B,2CADA,uDAKFC,aACE,SAACC,GAAD,8CACA,+BAAAlC,EAAA,6DAAS6B,EAAT,EAASA,SAAUM,EAAnB,EAAmBA,SAAnB,SACQL,EAAaD,EAAD,sBAAW,4BAAA7B,EAAA,yDACtBoC,IADsB,uBAEzBJ,MAAM,oBAFmB,iCAM3BI,IAAYC,qBACZD,IAAYE,GAAG,eAAf,sBAA+B,sBAAAtC,EAAA,sEACvBuC,EAAWV,GADY,4CAPJ,SAWrBO,IAAYI,QAAQ,CAAEC,OAAQ,wBAXT,uBAarBC,EAAeR,GAbM,UAetBC,IAAWxC,UAAW,UAAAwC,IAAWxC,eAAX,eAAoBrB,MAAO4D,EAf3B,kCAgBnBK,EAAWV,GAhBQ,6CAD/B,2CADA,0DAyBN,SAASO,IACP,OAAQjC,OAAeC,S,SAGV0B,E,gFAAf,WAA4BD,EAAec,GAA3C,SAAA3C,EAAA,sEAEI6B,EAAS,CAAEN,SAAS,IAFxB,SAGUoB,IAHV,sDAKIX,MAAM,GAAD,OAAI,KAAEY,QAAN,YAAiB,KAAEC,QAL5B,uBAOIhB,EAAS,CAAEN,SAAS,IAPxB,2E,+BAWegB,E,8EAAf,WAA0BV,GAA1B,iBAAA7B,EAAA,6DACE6B,EAAS,CAAEL,OAAQ,GAAI7B,QAAS,OAEhCmD,0BAAgB,IAAIC,IAAKX,MAH3B,SAIuBtB,oBAJvB,cAIQU,EAJR,gBAKwBzB,IALxB,UAKQJ,EALR,OAMEY,QAAQC,IAAI,qBAAsBb,IAE9BuB,EAAkBvB,GARxB,uBAQwC,IAAIhB,MAAJ,yBAAqBgB,QAArB,IAAqBA,OAArB,EAAqBA,EAASE,KAA9B,uBARxC,QAUEgC,EAAS,CAAEL,SAAQ7B,YAVrB,6C,+BAae+C,E,8EAAf,WAA8BR,GAA9B,SAAAlC,EAAA,+EAEUoC,IAAYI,QAAQ,CACxBC,OAAQ,6BACRO,OAAQ,CAAC,CAAE3C,QAAS0C,IAAKE,MAAMC,YAAYhB,OAJjD,+G,sBAsBO,I,ECzGA,ECHA,ECoCKiB,GCnCL,GJ2GMC,GAAcC,YAAWlC,GACzBmC,GAAoBD,YAAWlC,EAAU,CACpDoC,SAAU,SAACC,GAAD,aAAWT,IAAKE,MAAMQ,UAAUD,EAAMhC,WAAY,UAACgC,EAAM7D,eAAP,QAAC,EAAerB,OAEjEoF,GAAeL,YAAWlC,EAAU,CAC/CoC,SAAU,SAACC,GAAD,OAAWA,EAAMjC,WAEhBoC,GAAgBN,YAAWlC,EAAU,CAChDoC,SAAU,O,sBKtHCK,GAAY,WAAO,IAAD,EAC7B,EAAyBR,KAAzB,mBAAOI,EAAP,KAAc9B,EAAd,KAEA,OACE,qBAAKmC,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOC,eAAgB,eAAgBC,OAAQ,IAA7F,SACE,cAACC,GAAA,EAAD,CAAmBC,MAAK,UAAEX,EAAM7D,eAAR,aAAE,EAAerB,GAAI8F,WAAS,EAACC,SAAU,SAACC,GAAD,OAAY5C,EAAQO,aAAasC,SAASD,EAAEE,OAAOL,SAApH,SACGhF,IAAEhB,IAAIqF,EAAMlC,aAAa,SAAC3B,GAAD,OACxB,cAAC8E,GAAA,EAAD,CAAcN,MAAOxE,EAAQrB,GAA4BuF,MAAO,CAAEa,cAAe,QAAUC,SAAUzD,EAAkBvB,GAAvH,SACGA,EAAQE,MAD2BF,EAAQG,mB,2CCLlD8E,IAAY,oBACftF,EAASuF,IAAIvG,GAAK,YADH,eAEfgB,EAASwF,IAAIxG,GAAK,uBAFH,eAGfgB,EAASyF,KAAKzG,GAAK,eAHJ,eAIfgB,EAAS0F,IAAI1G,GAAK,gBAJH,eAKfgB,EAAS2F,KAAK3G,GAAK,aALJ,GAQL4G,GAAb,kDACEC,OAA6B,GAD/B,mFAGE,WAAcjD,EAAmBkD,EAAcC,GAA/C,iBAAArF,EAAA,yDACQsF,EAAWpD,IAAcxC,IAAYC,QAAQrB,MAAS8G,EAAcG,QACpEjH,EAAKgH,EAAYF,EAA2BG,QAAUH,EAAMI,QAE7DC,KAAKN,OAAO7G,KAAOmH,KAAKN,OAAO7G,GAAIoH,SAJ1C,qBAKQJ,EALR,gCAKwBG,KAAKE,kBAAkB,CAACrH,IALhD,+CAMemH,KAAKG,YAAY1D,EAAW,CAAC5D,IAN5C,WASOmH,KAAKN,OAAO7G,GATnB,wBAUIiC,QAAQC,IAAR,uBAA4B4E,EAAMvF,KAAlC,YAA0CuF,EAAMI,QAAhD,uBAAsEH,EAAOQ,WAA7E,eAA8F3D,IAVlG,kBAWW4D,QAXX,iCAcST,EAAOU,IAAIN,KAAKN,OAAO7G,IAAK0H,IAAIC,UAdzC,iDAHF,sHAoBE,WAAaC,GAAb,0BAAAlG,EAAA,6DACQmG,EAAYhH,IAAEiH,QAAQF,GAAW,SAAC5B,GAAD,OAAOA,EAAE+B,aAAa/H,MAC7DiC,QAAQC,IAAI,wBAAyB2F,GAE/BG,EAAmBnH,IAAEgH,GACxBtH,OACA0H,QAAO,SAACjI,GAAD,OAAQiG,SAASjG,GAAM,KAC9BH,KAAI,SAACG,GAAD,OACH,EAAKsH,YACHtH,EACAa,IAAEgH,EAAU7H,IACTH,KAAI,SAACmG,GAAD,OAAOA,EAAEkC,YAAYC,OAAOnC,EAAEoC,sBAClCC,UACAxI,KAAI,SAAC6B,GAAD,OAAOA,EAAEwF,WACboB,OACAzC,YAGNA,QAEG0C,EAAcpB,KAAKE,kBACvBxG,IAAEgH,EAAUzG,IAAYC,QAAQrB,KAC7BH,KAAI,SAACmG,GAAD,OAAOA,EAAEkC,YAAYC,OAAOnC,EAAEoC,sBAClCC,UACAxI,KAAI,SAAC6B,GAAD,OAAQA,EAAUuF,WACtBqB,OACAzC,SA1BP,SA6BQ2C,QAAQC,IAAR,uBAAgBT,GAAhB,CAAkCO,KA7B1C,gDApBF,uHAuDE,WAAkB3E,EAA4B8E,GAA9C,uBAAAhH,EAAA,0DACMb,IAAE8H,QAAQD,GADhB,yCACmC,IADnC,cAEEzG,QAAQC,IAAI,cAAewG,GACrBE,EAAc/H,IAAEsB,KAAKmE,IAAc,SAACuC,EAAGC,GAAJ,OAAUA,IAAMlF,EAAU2D,cAC7DwB,EAJR,8DAIqEH,EAJrE,+BAIuGF,EAAUM,KAAK,KAJtH,+BAKyBC,MAAMF,GAL/B,cAKQG,EALR,iBAMsBA,EAASC,OAN/B,eAMQA,EANR,OAQQC,EAASvI,IAAEsI,GACdE,SAAQ,SAACR,EAAGC,GAAJ,OAAUQ,iBAAO3E,MAAM4E,kBAAkBT,MACjDU,WAAU,SAACX,GAAD,OAAOY,eAAKZ,EAAEa,QACxB7D,QAXL,kBAaSsB,KAAKwC,cAAcjB,EAAWU,IAbvC,iDAvDF,+HA0EE,WAAwBQ,GAAxB,qBAAAlI,EAAA,0DACMb,IAAE8H,QAAQiB,GADhB,yCACkC,IADlC,cAEE3H,QAAQC,IAAI,oBAAqB0H,GAFnC,SAKUC,EAAO,CACXC,UAAWjJ,IAAEwI,QAAQO,GAAU,SAAC5J,EAAI+J,GAAL,qBAAmBA,MAClDC,MAAM,UAAD,OAAYnJ,IAAEhB,IAAI+J,GAAU,SAAC5J,EAAI+J,GAAL,sBAAoBA,EAApB,gBAAkCf,KAAK,MAAnE,8BACGnI,IAAEhB,IAAI+J,GAAU,SAAC5J,EAAI+J,GAAL,qBAAmBA,EAAnB,6CAAyDA,EAAzD,QAA+Df,KAAK,MADvF,oBAPX,SAY2BC,MAAM,uCAAwC,CACnEgB,QAAS,CACPC,OAAQ,MACR,gBAAiB,WACjB,eAAgB,mBAChBC,OAAQ,YAEVN,KAAMO,KAAKC,UAAUR,GACrB1F,OAAQ,SApBd,cAYU+E,EAZV,iBAsBuBA,EAASC,OAtBhC,eAsBUA,EAtBV,OAwBUC,EAASvI,IAAEsI,EAAKmB,MACnBjB,SAAQ,SAACR,EAAGC,GAAJ,OAAUe,EAAKC,UAAUhB,MACjCU,WAAU,SAACX,GAAD,OAAOY,eAAKZ,MACtBhD,QA3BP,kBA6BWsB,KAAKwC,cAAcC,EAAUR,IA7BxC,2DA+BW,IA/BX,0DA1EF,kFA6GE,SAAcmB,EAAaC,GACzB,GAAI3J,IAAE8H,QAAQ6B,GAAU,MAAM,IAAInK,MAAJ,uBAA0BkK,IACxD,OAAO1J,IAAEC,MAAMqG,KAAKN,OAAQ2D,OA/GhC,K,SLPMC,GAAW,I,YAGR,IAAMC,EAAM,SAAG,IAAI9D,GA8B1B,SAAS+D,EAAgBjI,EAAcwE,GACrC,IACE,OAAOxE,EAAKkI,WAAW,UAAY1D,EAAQ0D,WAAW,UAAYC,WAAQC,WAAW5D,GAASyB,UAC9F,MAAOvI,GACP,OAAO,G,WAhCJ,SAAkB2K,GACvBlK,IAAEC,MAAM2J,GAAUM,I,WAGb,WACL,OAAOlK,IAAEN,KAAKkK,K,SAGT,SAAgBO,GACrB,OAAKP,GAASO,EAAKtI,OAEdsI,EAAKhL,KAAIgL,EAAKhL,GAAKgL,EAAKtI,KAAO,IAAMsI,EAAK9D,SAExCuD,GAASO,EAAKtI,MAAMsI,EAAMN,IAJA,M,aAO5B,SAAoB1E,EAAaiF,GACtC,OAAOjF,EAAE+B,aAAa/H,KAAOiL,EAAQjL,IAAMgG,EAAE+B,aAAa/H,GAAK,G,gBAG1D,SAAuBkH,GAAkB,IAAD,IAC7C,OAAW,QAAJ,EAAAoC,wBAAA,mBAAQ3E,aAAR,eAAeQ,UAAU+B,KAAYyD,EAAgB,QAASzD,I,cAGhE,SAAqBxE,EAAcwE,GAAkB,IAAD,IACzD,QAASxE,KAAa,QAAJ,EAAA4G,wBAAA,mBAAQ3E,aAAR,eAAeQ,UAAU+B,KAAYyD,EAAgBjI,EAAMwE,K,CA5BhEgE,M,qBCAFC,E,WAcX,WACSH,EACAN,EACAU,EACAC,EACAC,EACAC,GACN,IAAD,iCANOP,OAMP,KALON,SAKP,KAJOU,SAIP,KAHOC,SAGP,KAFOC,UAEP,KADOC,SACP,KApBFC,WAAaC,YAAUjF,IAAIkF,yBAoBzB,KAnBFC,KAAO/K,SAAO4F,IAAIoF,OAmBhB,KAjBFtB,KAAO,CACLuB,QAASrE,OACTsE,QAAStE,OACTuE,OAAQvE,OACRwE,OAAQxE,OACRyE,aAAczE,OACd0E,YAAa1E,OACb2E,IAAK3E,QAUL,KAEF4E,QAAU,kBAAM,EAAKpB,MAFnB,KAIFjD,WAAa,kBAAM/G,EAASwF,KAJ1B,KAMF0B,UAAY,iBAAM,CAAC,EAAKkD,OAAQ,EAAKC,SANnC,KAQFjD,gBAAkB,iBAAM,CAAC,EAAKuD,OAR5B,KAUFU,QAAU,kBAAM,EAAK/B,MAVnB,KAYFgC,UAAY,iBAAM,IAZhB,KAcFC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKpB,OACZrE,OAAQ,EAAKuD,KAAKuB,QAClBhG,MAAO,EAAKyE,KAAKyB,QAEnB,CACES,MAAO,EAAKnB,OACZtE,OAAQ,EAAKuD,KAAKwB,QAClBjG,MAAO,EAAKyE,KAAK0B,UAvBnB,KA2BFS,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAKb,KACZ5E,OAAQ,EAAKuD,KAAK2B,aAClBpG,MAAO,EAAKyE,KAAK4B,eA/BnB,KAmCFQ,OAAS,kBAAM,EAAKpC,KAAK6B,KAnCvB,KA+DFQ,mBAAqB,kBAAM9L,IAAE+L,UAAU,EAAKpB,WAAWqB,U,gFA1BvD,wDAAAnL,EAAA,sEAC6E8G,QAAQC,IAAI,CACrFtB,KAAKqE,WAAWqB,QAAQC,SAAS3F,KAAKoE,OAAQpE,KAAK6D,KAAK9D,SAAS6F,OACjE5F,KAAKmE,QAAQuB,QAAQG,cAAcD,OACnC5F,KAAKmE,QAAQuB,QAAQI,SAASF,OAC9B5F,KAAKmE,QAAQuB,QAAQK,cAAcH,OACnC5F,KAAKqE,WAAWqB,QAAQM,YAAYhG,KAAKoE,OAAQpE,KAAK6D,KAAK9D,SAAS6F,OACpE5F,KAAKmE,QAAQuB,QAAQO,UAAUjG,KAAKqE,WAAW6B,QAAQnG,SAAS6F,SAPpE,0CACSD,EADT,KACmBQ,EADnB,KAC6BL,EAD7B,KACqCC,EADrC,KACkDK,EADlD,KAC2DC,EAD3D,KASUC,EAAyBH,EAAzBG,UAAWC,EAAcJ,EAAdI,UACbC,EAAKV,EAAOW,gBAAkBzG,KAAKiE,OAAOlE,QAAQ0G,cAAgBH,EAAYC,EAC9EG,EAAKF,IAAOF,EAAYC,EAAYD,EACpCK,EAAWlM,aAAGkL,EAAS/F,QAC7BI,KAAKmD,KAAK2B,aAAerK,aAAG2L,GAb9B,UAe4BpG,KAAKiE,OAAO2C,SAASnM,aAAG+L,GAAIlG,IAAIqG,GAAUpG,IAAI9F,aAAGsL,KAf7E,eAeE/F,KAAKmD,KAAKuB,QAfZ,iBAgB4B1E,KAAKkE,OAAO0C,SAASnM,aAAGiM,GAAIpG,IAAIqG,GAAUpG,IAAI9F,aAAGsL,KAhB7E,eAgBE/F,KAAKmD,KAAKwB,QAhBZ,iBAkBqFtD,QAAQC,IAAI,CAC7FtB,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKiE,OAAQjE,KAAKmD,KAAKuB,SACjE1E,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKkE,OAAQlE,KAAKmD,KAAKwB,SACjE3E,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKwE,KAAMxE,KAAKmD,KAAK2B,cAC/D9E,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKkE,OAAQzJ,aAAGiM,GAAII,KAAK,GAAGxG,IAAI7F,aAAG4L,IAAW9F,IAAI9F,aAAGsL,OAtBnG,oCAkBG/F,KAAKmD,KAAKyB,OAlBb,KAkBqB5E,KAAKmD,KAAK0B,OAlB/B,KAkBuC7E,KAAKmD,KAAK4B,YAlBjD,KAkB8D/E,KAAKmD,KAAK6B,IAlBxE,sD,uHA4BA,WAAmBhI,EAAgB6G,GAAnC,iBAAAtJ,EAAA,6DACQY,GAAM,EAAA6E,KAAKqE,WAAWqB,SAAgB1I,GAAjC,qBAA4C6G,IADzD,SAEe1I,EAAGyK,KAAK,CAAEtK,KAAM0E,KAAK6D,KAAK9D,UAFzC,wF,6HAKA,WAAsB/C,EAAgB6G,GAAtC,iBAAAtJ,EAAA,6DACQY,GAAM,EAAA6E,KAAKqE,WAAWqB,SAAgB1I,GAAjC,qBAA4C6G,IACvDtH,MAAM,YAAD,OAAayD,KAAKqE,WAAW6B,QAAQnG,QAArC,oBAAwD5E,EAAG4L,cAFlE,SAGQ7L,EAAeC,GAAI,GAH3B,gD,qHAMA,sBAAAZ,EAAA,sEACQW,EAAe8E,KAAKqE,WAAWqB,QAAQsB,QAAQhH,KAAKoE,OAAQ,IAAI,GADxE,gD,uEApGa6C,M,cCoCLvJ,O,uBAAAA,I,eAAAA,I,mBAAAA,I,cAAAA,Q,qBC/BGwJ,E,WAoBX,WAAmBrD,EAA2BN,GAAsB,IAAD,iCAAhDM,OAAgD,KAArBN,SAAqB,KAnBnE4D,mBAAqB7E,eAAK,UAmByC,KAjBnE8E,SAAWC,mBAAsBC,EAAQ,MAA4BtH,KAAK6D,KAAK9D,SAiBZ,KAhBnEsF,MAAQ5L,SAAO2F,IAAImI,OAgBgD,KAfnEC,YAAc/N,SAAO2F,IAAIqI,eAe0C,KAdnEC,KAAOjO,SAAO2F,IAAIuI,OAciD,KAbnEC,KAAOnO,SAAO2F,IAAIyI,OAaiD,KAXnE1E,KAAO,CACL2E,aAAczH,OACd0H,mBAAoB1H,OACpB2H,qBAAsB3H,OACtB4H,aAAc5H,OACd6H,eAAgB7H,OAChByE,aAAczE,OACd0E,YAAa1E,OACb2E,IAAK3E,QAG4D,KAkBnE6E,QAAU,kBAAM,EAAK/B,MAlB8C,KAgCnEiC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKA,MACZzF,OAAQ,EAAKuD,KAAK4E,mBAClBrJ,MAAO,EAAKyE,KAAK6E,sBAEnB,CACE3C,MAAO,EAAKA,MACZzF,OAAQ,EAAKuD,KAAK8E,aAClBvJ,MAAO,EAAKyE,KAAK+E,kBAzC8C,KA6CnE5C,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAKmC,YACZ5H,OAAQ,EAAKuD,KAAK2B,aAClBpG,MAAO,EAAKyE,KAAK4B,eAjD8C,KAqDnEQ,OAAS,kBAAM,EAAKpC,KAAK6B,KArD0C,KAsEnEQ,mBAAqB,kBAAM9L,IAAE+L,UAAU,EAAK2B,SAAS1B,U,4CApErD,WACE,OAAO1F,KAAK6D,O,wBAGd,WACE,OAAOhK,EAASuF,M,uBAGlB,WACE,MAAO,CAACY,KAAKqF,S,6BAGf,WACE,MAAO,CAACrF,KAAKwH,e,uBAKf,WACE,OAAKxH,KAAKmD,KAAK2E,aAAa7H,UAAYD,KAAKmD,KAAK2E,aAAaK,GAAGnI,KAAKmH,oBAC9D,CACL,CACEiB,SAAU1K,GAAS2K,SACnBlL,QAAS,uBAIR,K,yDA0BT,8BAAA5C,EAAA,sEACwByF,KAAKoH,SAAS1B,QAAQ4C,kBAAkB1C,OADhE,cACQ2C,EADR,OAEEvI,KAAKmD,KAAK2E,aAAerN,aAAG8N,EAAQT,cACpC9H,KAAKmD,KAAK4E,mBAAqBtN,aAAG8N,EAAQR,oBAC1C/H,KAAKmD,KAAK8E,aAAexN,aAAG8N,EAAQN,cAJtC,SAMyCjI,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAK4H,KAAM5H,KAAKmD,KAAK4E,oBANxG,cAME/H,KAAKmD,KAAK6E,qBANZ,iBAOmChI,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAK4H,KAAM5H,KAAKmD,KAAK8E,cAPlG,eAOEjI,KAAKmD,KAAK+E,eAPZ,YAQ2BzN,KAR3B,UAQoCuF,KAAKoH,SAAS1B,QAAQ8C,mBAAmB5C,OAR7E,2BAQE5F,KAAKmD,KAAK2B,cARZ,wBASgC9E,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAK0H,KAAM1H,KAAKmD,KAAK2B,cAT/F,eASE9E,KAAKmD,KAAK4B,YATZ,OAWQ0D,EAAShP,SAAO2F,IAAIsJ,aAX5B,KAYwB1I,KAAKuD,OAZ7B,KAY4CvD,KAAKY,aAAa/H,GAZ9D,KAYkEmH,KAAKqF,MAZvE,KAYoFoD,EAZpF,UAY0GA,EAAO/C,QAAQK,cAAcH,OAZvI,0CAY2FgB,SAZ3F,0DAYoCC,QAZpC,kCAYE7G,KAAKmD,KAAK6B,IAZZ,wD,uHAiBA,WAAmBhI,EAAgB6G,GAAnC,iBAAAtJ,EAAA,6DACQY,GAAM,EAAA6E,KAAKoH,SAAS1B,SAAgB1I,GAA/B,qBAA0C6G,IADvD,KAEe1I,EAFf,SAEqC6E,KAAKoH,SAAS1B,QAAQiD,QAAQ/C,OAFnE,gCAEyBtK,KAFzB,oBAEkBsK,KAFlB,wG,6HAKA,WAAsB5I,EAAgB6G,EAAgBzI,GAAtD,iBAAAb,EAAA,6DACQY,GAAM,EAAA6E,KAAKoH,SAAS1B,SAAgB1I,GAA/B,qBAA0C6G,IACrDtH,MAAM,YAAD,OAAayD,KAAKoH,SAASlB,QAAQnG,QAAnC,oBAAsD5E,EAAG4L,cAFhE,SAGQ7L,EAAeC,EAAIC,GAH3B,gD,uHAMA,WAAcA,GAAd,SAAAb,EAAA,sEACQW,EAAe8E,KAAKoH,SAAS1B,QAAQkD,sBAAuBxN,GADpE,gD,+EAQWyN,E,WAiBX,WAAmBhF,EAA2BN,GAAsB,IAAD,iCAAhDM,OAAgD,KAArBN,SAAqB,KAhBnEuF,iCAAmC,IAgBgC,KAdnE1B,SAAWC,mBAA0BC,EAAQ,MAAgCtH,KAAK6D,KAAK9D,SAcpB,KAbnEsF,MAAQ5L,SAAO2F,IAAImI,OAagD,KAZnEC,YAAc/N,SAAO2F,IAAI2J,OAY0C,KAVnE5F,KAAO,CACL6F,cAAe3I,OACf4I,cAAe5I,OACfyE,aAAczE,OACd0E,YAAa1E,OACb6I,iBAAkB7I,OAClB8I,iBAAkB9I,OAClB2E,IAAK3E,QAG4D,KAkBnE6E,QAAU,kBAAM,EAAK/B,MAlB8C,KAoBnEiC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKA,MACZzF,OAAQ,EAAKuD,KAAK8F,cAClBvK,MAAO,EAAKyE,KAAK8F,eAEnB,CACE5D,MAAO,EAAKA,MACZzF,OAAQ,EAAKuD,KAAK6F,cAClBtK,MAAO,EAAKyE,KAAK6F,iBA7B8C,KAiCnEzD,OAAS,kBAAM,EAAKpC,KAAK6B,KAjC0C,KAmCnEM,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAKmC,YACZ5H,OAAQ,EAAKuD,KAAK2B,aAClBpG,MAAO,EAAKyE,KAAK4B,eAvC8C,KA6EnES,mBAAqB,kBAAM9L,IAAE+L,UAAU,EAAK2B,SAAS1B,U,4CA3ErD,WACE,OAAO1F,KAAK6D,O,wBAGd,WACE,OAAOhK,EAASuF,M,uBAGlB,WACE,MAAO,CAACY,KAAKqF,S,6BAGf,WACE,MAAO,CAACrF,KAAKwH,e,uBA4Bf,WACE,IAAM4B,EAAepJ,KAAKmD,KAAK8F,cAAcnC,KAAK9G,KAAK8I,kCAAkCO,KAAK,KAC9F,OAAKrJ,KAAKmD,KAAKgG,iBAAiBlJ,UAAYxF,aAAGuF,KAAKmD,KAAK+F,kBAAkBf,GAAGiB,GACrE,CACL,CACEhB,SAAU1K,GAAS2K,SACnBlL,QAAS,mBAIR,K,yDAGT,4CAAA5C,EAAA,6DACQ+O,EAAS7P,SAAO2F,IAAImK,iBAD5B,SAEkGlI,QAAQC,IAAI,CAC1GgI,EAAO5D,QAAQK,cAAcH,OAC7B0D,EAAO5D,QAAQ8D,sBAAsB5D,OACrC0D,EAAO5D,QAAQ+D,oBAAoBzJ,KAAK6D,KAAK9D,SAAS6F,OACtD5F,KAAKoH,SAAS1B,QAAQgE,uBAAuB9D,OAC7C5F,KAAKoH,SAAS1B,QAAQ,iBAAiBE,OACvC5F,KAAKoH,SAAS1B,QAAQiE,kCAAkC/D,SAR5D,0CAESG,EAFT,KAEsB6D,EAFtB,KAEoCC,EAFpC,KAEuDb,EAFvD,KAEsE5C,EAFtE,KAE+E0D,EAF/E,eAWkC9J,KAAKqF,MAAMuB,SAASiD,GAXtD,eAWE7J,KAAKmD,KAAK8F,cAXZ,iBAYkCjJ,KAAKqF,MAAMuB,SAASoC,GAZtD,eAYEhJ,KAAKmD,KAAK6F,cAZZ,OAaEhJ,KAAKmD,KAAK2B,aAAerK,aAAG2L,GAb9B,UAcgCpG,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKwH,YAAaxH,KAAKmD,KAAK2B,cAdtG,eAcE9E,KAAKmD,KAAK4B,YAdZ,OAeE/E,KAAKmD,KAAK+F,iBAAmBzO,aAAGqP,EAAUZ,kBAC1ClJ,KAAKmD,KAAKgG,iBAAmB1O,aAAGqP,EAAUX,kBAhB5C,UAkByBG,EAAO1C,SAASb,GAlBzC,QAkBE/F,KAAKmD,KAAK6B,IAlBZ,OAkBuD1E,IAAIyJ,eAAKH,EAAc,KAAKrJ,IAAIC,SAlBvF,iD,uHAuBA,WAAmBxD,EAAgB6G,GAAnC,iBAAAtJ,EAAA,6DACQY,GAAM,EAAA6E,KAAKoH,SAAS1B,SAAgB1I,GAA/B,qBAA0C6G,IADvD,KAEe1I,EAFf,SAEqC6E,KAAKoH,SAAS1B,QAAQiD,QAAQ/C,OAFnE,gCAEyBtK,KAFzB,oBAEkBsK,KAFlB,wG,6HAKA,WAAsB5I,EAAgB6G,EAAgBzI,GAAtD,iBAAAb,EAAA,6DACQY,GAAM,EAAA6E,KAAKoH,SAAS1B,SAAgB1I,GAA/B,qBAA0C6G,IACrDtH,MAAM,YAAD,OAAayD,KAAKoH,SAASlB,QAAQnG,QAAnC,oBAAsD5E,EAAG4L,cAFhE,SAGQ7L,EAAeC,EAAIC,GAH3B,gD,uHAMA,WAAcA,GAAd,SAAAb,EAAA,sEACQW,EAAe8E,KAAKoH,SAAS1B,QAAQsE,iCAAkC5O,GAD/E,gD,gFA9Na6O,Q,SGCV,GCDA,GCFA,G,uBFIL,IAAMC,EAAO,kBAAMC,gBAAM,OAAQ,+CAKpBC,E,WAiBX,WAAmBvG,EAA2BN,EAA4B8B,GAAe,IAAD,iCAArExB,OAAqE,KAA1CN,SAA0C,KAAd8B,QAAc,KAhBxFgF,QALwBhD,mBAAyBC,EAAQ,MAA+B,8CAqBA,KAfxFgD,KALwBjD,mBAAyBC,EAAQ,MAA+B,8CAoBA,KAdxFiD,KAAOL,IAciF,KAZxF/G,KAAO,CACLvD,OAAQS,OACR3B,MAAO2B,OACP+F,QAAS/F,OACTmK,aAAcnK,OACdoK,YAAapK,OACbqK,iBAAkBrK,OAClB2E,IAAK3E,OACLsK,QAAS,EACTC,oBAAqB,IAGiE,KAExFhK,WAAa,kBAAM/G,EAASwF,KAF4D,KAIxF4F,QAAU,kBAAM,EAAKpB,MAJmE,KAMxFqB,QAAU,kBAAM,EAAK/B,MANmE,KAQxFpC,UAAY,iBAAM,CAAC,EAAKsE,QARgE,KAUxFpE,gBAAkB,iBAAM,CAAC,EAAKoE,MAAO,EAAKkF,OAV8C,KAYxFpF,UAAY,iBAAM,IAZsE,KAcxFI,OAAS,kBAAM,EAAKpC,KAAK6B,KAd+D,KAgBxFI,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAKA,MAAOzF,OAAQ,EAAKuD,KAAKvD,OAAQlB,MAAO,EAAKyE,KAAKzE,SAhBI,KAkBxF4G,kBAAoB,iBAAM,CACxB,CAAED,MAAO,EAAKA,MAAOzF,OAAQ,EAAKuD,KAAKiD,QAAS1H,MAAO,EAAKyE,KAAKqH,cACjE,CAAEnF,MAAO,EAAKkF,KAAM3K,OAAQ,EAAKuD,KAAKsH,YAAa/L,MAAO,EAAKyE,KAAKuH,oBApBkB,KA0DxFlF,mBAAqB,kBAAM9L,IAAE+L,UAAU,EAAK4E,QAAQ3E,U,gFAnCpD,0CAAAnL,EAAA,sEACsByF,KAAK6K,YAD3B,cACQC,EADR,OAEE9K,KAAKmD,KAAKwH,QAAUG,EAAMjS,GAC1BmH,KAAKmD,KAAKvD,OAASkL,EAAMC,UACzB/K,KAAKmD,KAAKyH,oBAAsBE,EAAME,QAJxC,SAM4DhL,KAAKqK,QAAQ3E,QACpEuF,aAAajL,KAAKmD,KAAKwH,QAAS3K,KAAKmD,KAAKyH,qBAC1ChF,KAAK,CAAEtK,KAAM0E,KAAK6D,KAAK9D,UAR5B,uBAMUmL,EANV,EAMUA,mBAAoBC,EAN9B,EAM8BA,oBAG5BnL,KAAKmD,KAAKsH,YAAchQ,aAAGyQ,GAC3BlL,KAAKmD,KAAKiD,QAAU3L,aAAG0Q,GAVzB,UAasF9J,QAAQC,IAAI,CAC9FtB,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKqF,MAAOrF,KAAKmD,KAAKvD,QAChEI,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKuK,KAAMvK,KAAKmD,KAAKsH,aAC/DzK,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKqF,MAAOrF,KAAKmD,KAAKiD,SAChEpG,KAAKsK,KAAK5E,QAAQ0F,OAAOpL,KAAKqF,MAAMtF,SAAS6F,SAjBjD,oCAaG5F,KAAKmD,KAAKzE,MAbb,KAaoBsB,KAAKmD,KAAKuH,iBAb9B,KAagD1K,KAAKmD,KAAKqH,aAb1D,KAawEa,EAbxE,KAmBUC,EAAYD,EAAZC,QACRtL,KAAKmD,KAAK6B,IAAMvK,aAAG6Q,GApBrB,iD,oHAuBA,6HAEK7R,EAAO4F,IAAIkM,OAAOxL,QAAU,CAAElH,GAAI,IAFvC,eAGKY,EAAO4F,IAAImM,OAAOzL,QAAU,CAAElH,GAAI,IAHvC,eAIKY,EAAO4F,IAAIoF,OAAO1E,QAAU,CAAElH,GAAI,IAH/B4S,EADR,EAMQT,EAAU7I,iBAAO/C,IAAIsM,IAAIC,wBAAwB,eACjDhB,EAAUc,EAAgBzL,KAAKqF,MAAMtF,SAASlH,GAPtD,SAQmCwI,QAAQC,IAAI,CAACtB,KAAKqK,QAAQ3E,QAAQkG,OAAOjB,GAAS/E,OAAQ5F,KAAKqK,QAAQ3E,QAAQmG,mBAAmBlB,EAAS3K,KAAK6D,KAAK9D,SAAS6F,SARjK,0CAQSkF,EART,KAQgBC,EARhB,oDAScD,GATd,IASqBjS,GAAI8R,EAASI,UAAWtQ,aAAGsQ,GAAYC,aAT5D,iD,uHAcA,WAAmBhO,EAAgB6G,GAAnC,iBAAAtJ,EAAA,6DACQY,GAAM,EAAA6E,KAAKqK,QAAQ3E,SAAgB1I,GAA9B,qBAAyC6G,IADtD,SAEe1I,EAAGyK,KAAK,CAAEtK,KAAM0E,KAAK6D,KAAK9D,UAFzC,wF,6HAKA,WAAsB/C,EAAgB6G,GAAtC,iBAAAtJ,EAAA,6DACQY,GAAM,EAAA6E,KAAKqK,QAAQ3E,SAAgB1I,GAA9B,qBAAyC6G,IACpDtH,MAAM,YAAD,OAAayD,KAAKqK,QAAQnE,QAAQnG,QAAlC,oBAAqD5E,EAAG4L,cAF/D,SAGQ7L,EAAeC,GAAI,GAH3B,gD,qHAMA,sBAAAZ,EAAA,sEACQW,EAAe8E,KAAKqK,QAAQ3E,QAAQuF,aAAajL,KAAKmD,KAAKwH,QAAS3K,KAAKmD,KAAKyH,sBAAsB,GAD5G,gD,iFAKWkB,E,WAYX,WAAmBjI,EAA2BN,EAA4Ba,GAAiB,IAAD,iCAAvEP,OAAuE,KAA5CN,SAA4C,KAAhBa,SAAgB,KAX1F2H,QAhGwB1E,mBAA4BC,EAAQ,MAAkC,8CA2GJ,KAV1FiD,KAAOL,IAUmF,KAR1F/G,KAAO,CACLvD,OAAQS,OACR3B,MAAO2B,OACP2L,cAAe3L,OACfmK,aAAcnK,OACd2E,IAAK3E,QAGmF,KAE1FO,WAAa,kBAAM/G,EAASwF,KAF8D,KAI1F4F,QAAU,kBAAM,EAAKpB,MAJqE,KAM1FqB,QAAU,kBAAM,EAAK/B,MANqE,KAQ1FpC,UAAY,iBAAM,CAAC,EAAKwJ,OARkE,KAU1FtJ,gBAAkB,iBAAM,CAAC,EAAKsJ,OAV4D,KAY1FpF,UAAY,iBAAM,IAZwE,KAc1FI,OAAS,kBAAM,EAAKpC,KAAK6B,KAdiE,KAgB1FI,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAKkF,KAAM3K,OAAQ,EAAKuD,KAAKvD,OAAQlB,MAAO,EAAKyE,KAAKzE,SAhBO,KAkB1F4G,kBAAoB,iBAAM,CAAC,CAAED,MAAO,EAAKkF,KAAM3K,OAAQ,EAAKuD,KAAK6I,cAAetN,MAAO,EAAKyE,KAAKqH,gBAlBP,KAmC1FhF,mBAAqB,kBAAM9L,IAAE+L,UAAU,EAAKsG,QAAQrG,U,gFAfpD,wCAAAnL,EAAA,sEAC8C8G,QAAQC,IAAI,CACtDtB,KAAK+L,QAAQrG,QAAQuG,aAAajM,KAAKoE,OAAQpE,KAAK6D,KAAK9D,SAAS6F,OAClE5F,KAAK+L,QAAQrG,QAAQ+E,YAAYzK,KAAKoE,OAAQpE,KAAK6D,KAAK9D,SAAS6F,OACjE5F,KAAK+L,QAAQrG,QAAQwG,SAASlM,KAAKoE,QAAQwB,SAJ/C,0CACSD,EADT,KACmBS,EADnB,KAC4B8F,EAD5B,KAMElM,KAAKmD,KAAKvD,OAASnF,aAAGkL,EAAS/F,QAC/BI,KAAKmD,KAAK6I,cAAgBvR,aAAG2L,GAP/B,UAQmE/E,QAAQC,IAAI,CAC3EtB,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKuK,KAAMvK,KAAKmD,KAAKvD,QAC/DI,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKuK,KAAMvK,KAAKmD,KAAK6I,eAC/DhM,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKuK,KAAM9P,aAAGyR,EAASnG,gBAXrE,oCAQG/F,KAAKmD,KAAKzE,MARb,KAQoBsB,KAAKmD,KAAKqH,aAR9B,KAQ4CxK,KAAKmD,KAAK6B,IARtD,sD,uHAiBA,WAAmBhI,EAAgB6G,GAAnC,iBAAAtJ,EAAA,6DACQY,GAAM,EAAA6E,KAAK+L,QAAQrG,SAAgB1I,GAA9B,qBAAyC6G,IADtD,SAEe1I,EAAGyK,KAAK,CAAEtK,KAAM0E,KAAK6D,KAAK9D,UAFzC,wF,6HAKA,WAAsB/C,EAAgB6G,GAAtC,iBAAAtJ,EAAA,6DACQY,GAAM,EAAA6E,KAAK+L,QAAQrG,SAAgB1I,GAA9B,qBAAyC6G,IACpDtH,MAAM,YAAD,OAAayD,KAAK+L,QAAQ7F,QAAQnG,QAAlC,oBAAqD5E,EAAG4L,cAF/D,SAGQ7L,EAAeC,GAAI,GAH3B,gD,qHAMA,sBAAAZ,EAAA,0F,4EA/Ja4R,Q,iBCMQ,aAAG,CACxBC,OAAQ,iBAAO,CACb/G,MAAO8E,gBAAM,gBAAiB,8CAC9BkC,GAAIlC,gBAAmB,uBAAwB,6CAA8C7C,EAAQ,MACrGlD,OAAQ,IAEVkI,OAAQ,iBAAO,CACbjH,MAAO8E,gBAAM,iBAAkB,8CAC/BkC,GAAIlC,gBAAmB,wBAAyB,6CAA8C7C,EAAQ,MACtGlD,OAAQ,MATL,IAaMmI,E,WAiBX,WAAmB1I,EAA2BN,EAA4BiJ,GAAqB,IAAD,iCAA3E3I,OAA2E,KAAhDN,SAAgD,KAApBiJ,WAAoB,KAhB9FC,MAAQpF,mBAAyBC,EAAQ,MAA+B,8CAgBsB,KAf9FoF,KAAOvC,gBAAM,OAAQ,8CAeyE,KAd9FwC,MAAQxC,gBAAM,QAAS,8CAcuE,KAb9F/K,IAAM3F,EAAO2F,IAAIyI,OAa6E,KAX9F1E,KAAO,CACLwD,SAAUtG,OACVuM,YAAavM,OACbwM,UAAWxM,OACXyM,WAAYzM,OACZ0M,SAAU1M,OACVyE,aAAczE,OACd0E,YAAa1E,OACb2E,IAAK3E,QAGuF,KAE9F4E,QAAU,kBAAM,EAAKpB,MAFyE,KAI9FjD,WAAa,kBAAM/G,EAASuF,KAJkE,KAM9F2B,UAAY,iBAAM,CAAC,EAAKyL,SAASnH,MAAO,EAAKjG,MANiD,KAQ9F6B,gBAAkB,iBAAM,CAAC,EAAK0L,QARgE,KAU9FzH,QAAU,kBAAM,EAAK/B,MAVyE,KAY9FgC,UAAY,iBAAM,IAZ4E,KAc9FC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKmH,SAASnH,MACrBzF,OAAQ,EAAKuD,KAAKyJ,YAClBlO,MAAO,EAAKyE,KAAK2J,YAEnB,CACEzH,MAAO,EAAKjG,IACZQ,OAAQ,EAAKuD,KAAK0J,UAClBnO,MAAO,EAAKyE,KAAK4J,YAvByE,KA2B9FzH,kBAAoB,iBAAM,CACxB,CACED,MAAO,EAAKsH,MACZ/M,OAAQ,EAAKuD,KAAK2B,aAClBpG,MAAO,EAAKyE,KAAK4B,eA/ByE,KAmC9FQ,OAAS,kBAAM,EAAKpC,KAAK6B,KAnCqE,KAgE9FQ,mBAAqB,kBAAM9L,IAAE+L,UAAU,EAAKgH,MAAM/G,U,gFA3BlD,wDAAAnL,EAAA,sEACwF8G,QAAQC,IAAI,CAChGtB,KAAKyM,MAAM/G,QAAQC,SAAS3F,KAAKwM,SAASpI,OAAQpE,KAAK6D,KAAK9D,SAAS6F,OACrE5F,KAAKwM,SAASH,GAAG3G,QAAQG,cAAcD,OACvC5F,KAAKwM,SAASH,GAAG3G,QAAQI,SAASF,OAClC5F,KAAKwM,SAASH,GAAG3G,QAAQK,cAAcH,OACvC5F,KAAKyM,MAAM/G,QAAQsH,cAAchN,KAAKwM,SAASpI,OAAQpE,KAAK6D,KAAK9D,SAAS6F,OAC1E5F,KAAKyM,MAAM/G,QAAQwG,SAASlM,KAAKwM,SAASpI,QAAQwB,OAClD5F,KAAKyM,MAAM/G,QAAQuH,eAAerH,SARtC,0CACSD,EADT,KACmBQ,EADnB,KAC6BL,EAD7B,KACqCC,EADrC,KACkDK,EADlD,KAC2D8F,EAD3D,KACqEgB,EADrE,KAUU5G,EAAyBH,EAAzBG,UAAWC,EAAcJ,EAAdI,UACbC,EAAKV,EAAOW,gBAAkBzG,KAAKwM,SAASnH,MAAMtF,QAAQ0G,cAAgBH,EAAYC,EACtFG,EAAKF,IAAOF,EAAYC,EAAYD,EAC1CtG,KAAKmD,KAAKwD,SAAWlM,aAAGkL,EAAS/F,QAbnC,UAciCI,KAAK2M,MAAM/F,SAASR,GAdrD,eAcEpG,KAAKmD,KAAK2B,aAdZ,iBAgBgC9E,KAAKwM,SAASnH,MAAMuB,SAASnM,aAAG+L,GAAIlG,IAAIN,KAAKmD,KAAKwD,UAAUpG,IAAI9F,aAAGsL,KAhBnG,eAgBE/F,KAAKmD,KAAKyJ,YAhBZ,iBAiB8B5M,KAAKZ,IAAIwH,SAASnM,aAAGiM,GAAIpG,IAAIN,KAAKmD,KAAKwD,UAAUpG,IAAI9F,aAAGsL,KAjBtF,eAiBE/F,KAAKmD,KAAK0J,UAjBZ,iBAmB2FxL,QAAQC,IAAI,CACnGtB,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKwM,SAASnH,MAAOrF,KAAKmD,KAAKyJ,aACzE5M,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKZ,IAAKY,KAAKmD,KAAK0J,WAC9D7M,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAK0M,KAAM1M,KAAKmD,KAAK2B,aAAaxE,IAAI7F,aAAGyS,IAAY3M,IAAIC,UACnGR,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKZ,IAAK3E,aAAGiM,GAAII,KAAK,GAAGxG,IAAI7F,aAAGyR,EAASiB,gBAAgB5M,IAAI9F,aAAGsL,OAvB9G,oCAmBG/F,KAAKmD,KAAK2J,WAnBb,KAmByB9M,KAAKmD,KAAK4J,SAnBnC,KAmB6C/M,KAAKmD,KAAK4B,YAnBvD,KAmBoE/E,KAAKmD,KAAK6B,IAnB9E,sD,uHA6BA,WAAmBhI,EAAgB6G,GAAnC,iBAAAtJ,EAAA,6DACQY,GAAM,EAAA6E,KAAKyM,MAAM/G,SAAgB1I,GAA5B,qBAAuC6G,IADpD,SAEe1I,EAAGyK,KAAK,CAAEtK,KAAM0E,KAAK6D,KAAK9D,UAFzC,wF,6HAKA,WAAsB/C,EAAgB6G,EAAgBzI,GAAtD,iBAAAb,EAAA,6DACQY,GAAM,EAAA6E,KAAKyM,MAAM/G,SAAgB1I,GAA5B,qBAAuC6G,IAClDtH,MAAM,YAAD,OAAayD,KAAKyM,MAAMvG,QAAQnG,QAAhC,oBAAmD5E,EAAG4L,cAF7D,SAGQ7L,EAAeC,EAAIC,GAH3B,gD,uHAMA,WAAcA,GAAd,SAAAb,EAAA,sEACQW,EAAe8E,KAAKyM,MAAM/G,QAAQsB,QAAQhH,KAAKwM,SAASpI,OAAQ,GAAIhJ,GAD5E,gD,6EAlHagS,Q,qBCDFC,E,WAUX,WAAmBxJ,EAA2BN,GAAsB,IAAD,iCAAhDM,OAAgD,KAArBN,SAAqB,KATnE+J,KAAOnD,gBAAM,OAAQ,8CAS8C,KARnEoD,MAAQpD,gBAAM,cAAe,8CAQsC,KANnEhH,KAAO,CACLvD,OAAQS,OACR3B,MAAO2B,OACP2E,IAAK3E,QAG4D,KAEnEO,WAAa,kBAAM/G,EAASuF,KAFuC,KAInE6F,QAAU,kBAAM,EAAKpB,MAJ8C,KAMnEqB,QAAU,kBAAM,EAAK/B,MAN8C,KAQnEpC,UAAY,iBAAM,CAAC,EAAKuM,OAR2C,KAUnErM,gBAAkB,iBAAM,CAAC,EAAKsM,QAVqC,KAYnEhI,OAAS,kBAAM,EAAKpC,KAAK6B,KAZ0C,KAcnEG,UAAY,iBAAM,IAdiD,KAgBnEC,WAAa,iBAAM,CAAC,CAAEC,MAAO,EAAKiI,KAAM1N,OAAQ,EAAKuD,KAAKvD,OAAQlB,MAAO,EAAKyE,KAAKzE,SAhBhB,KAkBnE4G,kBAAoB,iBAAM,IAlByC,KAgCnEE,mBAAqB,kBAAM9L,IAAE+L,UAAU,EAAK8H,MAAM7H,U,gFAZlD,oCAAAnL,EAAA,sEACwD8G,QAAQC,IAAI,CAChEtB,KAAKuN,MAAM7H,QAAQO,UAAUjG,KAAK6D,KAAK9D,SAAS6F,OAAO4H,KAAK/S,MAC5DuF,KAAKuN,MAAM7H,QAAQK,cAAcH,OAAO4H,KAAK/S,MAC7CuF,KAAKsN,KAAK5H,QAAQO,UAAUjG,KAAKuN,MAAMxN,SAAS6F,OAAO4H,KAAK/S,QAJhE,0CACSgT,EADT,KACkBC,EADlB,KACoCC,EADpC,KAME3N,KAAKmD,KAAKvD,OAAS6N,EAAQnN,IAAIqN,GAAYpN,IAAImN,GANjD,UAO0B1N,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKsN,KAAMtN,KAAKmD,KAAKvD,QAPzF,eAOEI,KAAKmD,KAAKzE,MAPZ,iBASwBsB,KAAKuD,OAAOsD,QAAQ7G,KAAKY,aAAa/H,GAAImH,KAAKsN,KAAMK,GAT7E,QASE3N,KAAKmD,KAAK6B,IATZ,wD,uHAcA,WAAmBhI,EAAgB6G,GAAnC,iBAAAtJ,EAAA,6DACQY,GAAM,EAAA6E,KAAKuN,MAAM7H,SAAgB1I,GAA5B,qBAAuC6G,IADpD,SAEe1I,EAAGyK,KAAK,CAAEtK,KAAM0E,KAAK6D,KAAK9D,UAFzC,wF,6HAKA,WAAsB/C,EAAgB6G,EAAgBzI,GAAtD,iBAAAb,EAAA,6DACQY,GAAM,EAAA6E,KAAKuN,MAAM7H,SAAgB1I,GAA5B,qBAAuC6G,IAClDtH,MAAM,YAAD,OAAayD,KAAKuN,MAAMrH,QAAQnG,QAAhC,oBAAmD5E,EAAG4L,cAF7D,SAGQ7L,EAAeC,EAAIC,GAH3B,gD,uHAMA,WAAcA,GAAd,SAAAb,EAAA,0F,8EAxDaqT,Q,KCIf7J,EAAgB8J,SAAS,CACvB,gCAAiC,SAAChK,EAAMN,GAAP,OAAkB,IAAI0D,EAAYjD,KAAKH,EAAMN,EAAQ9J,EAAO4F,IAAImM,OAAQ/R,EAAO4F,IAAIkM,OAAQ9R,EAAO4F,IAAIyO,0BAA2B,MAClK,gCAAiC,SAACjK,EAAMN,GAAP,OAAkB,IAAI0D,EAAYjD,KAAKH,EAAMN,EAAQ9J,EAAO4F,IAAIoF,OAAQhL,EAAO4F,IAAIkM,OAAQ9R,EAAO4F,IAAI0O,0BAA2B,MAClK,iCAAkC,SAAClK,EAAMN,GAAP,OAAkB,IAAI0D,EAAYjD,KAAKH,EAAMN,EAAQ9J,EAAO4F,IAAI2O,OAAQvU,EAAO4F,IAAImM,OAAQ/R,EAAO4F,IAAI4O,2BAA4B,MACpK,gCAAiC,SAACpK,EAAMN,GAAP,OAAkB,IAAI0D,EAAYjD,KAAKH,EAAMN,EAAQ9J,EAAO4F,IAAI6O,OAAQzU,EAAO4F,IAAIkM,OAAQ9R,EAAO4F,IAAI8O,0BAA2B,MAClK,+BAAgC,SAACtK,EAAMN,GAAP,OAAkB,IAAI0D,EAAYjD,KAAKH,EAAMN,EAAQ9J,EAAO4F,IAAI+O,MAAO3U,EAAO4F,IAAIkM,OAAQ9R,EAAO4F,IAAIgP,yBAA0B,MAC/J,+BAAgC,SAACxK,EAAMN,GAAP,OAAkB,IAAI0D,EAAYjD,KAAKH,EAAMN,EAAQ9J,EAAO4F,IAAIiP,MAAO7U,EAAO4F,IAAIkM,OAAQ9R,EAAO4F,IAAIkP,yBAA0B,MAC/J,gCAAiC,SAAC1K,EAAMN,GAAP,OAAkB,IAAI0D,EAAYjD,KAAKH,EAAMN,EAAQ9J,EAAO4F,IAAImP,OAAQ/U,EAAO4F,IAAIkM,OAAQ9R,EAAO4F,IAAIoP,0BAA2B,MAClK,gCAAiC,SAAC5K,EAAMN,GAAP,OAAkB,IAAI0D,EAAYjD,KAAKH,EAAMN,EAAQ9J,EAAO4F,IAAIqP,OAAQjV,EAAO4F,IAAIkM,OAAQ9R,EAAO4F,IAAIsP,0BAA2B,MAElK,+BAAgC,SAAC9K,EAAMN,GAAP,OAAkB,IAAI4I,GAAQ/B,YAAYvG,EAAMN,EAAQ9J,EAAO4F,IAAIoF,SACnG,+BAAgC,SAACZ,EAAMN,GAAP,OAAkB,IAAI4I,GAAQ/B,YAAYvG,EAAMN,EAAQ9J,EAAO4F,IAAImM,SACnG,8BAA+B,SAAC3H,EAAMN,GAAP,OAAkB,IAAI4I,GAAQ/B,YAAYvG,EAAMN,EAAQ9J,EAAO4F,IAAIkM,SAClG,6BAA8B,SAAC1H,EAAMN,GAAP,OAAkB,IAAI4I,GAAQL,UAAUjI,EAAMN,EAAQ,IACpF,6BAA8B,SAACM,EAAMN,GAAP,OAAkB,IAAI4I,GAAQL,UAAUjI,EAAMN,EAAQ,IACpF,6BAA8B,SAACM,EAAMN,GAAP,OAAkB,IAAI4I,GAAQL,UAAUjI,EAAMN,EAAQ,IACpF,6BAA8B,SAACM,EAAMN,GAAP,OAAkB,IAAI4I,GAAQL,UAAUjI,EAAMN,EAAQ,IAEpF,sBAAuB,SAACM,EAAMN,GAAP,OAAkB,IAAIqK,GAAKP,WAAWxJ,EAAMN,IAEnE,8BAA+B,SAACM,EAAMN,GAAP,OAAkB,IAAI6J,GAAOb,UAAU1I,EAAMN,EAAQ6J,GAAOwB,WAAWxC,WACtG,8BAA+B,SAACvI,EAAMN,GAAP,OAAkB,IAAI6J,GAAOb,UAAU1I,EAAMN,EAAQ6J,GAAOwB,WAAWtC,WAEtG,qBAAsB,SAACzI,EAAMN,GAAP,OAAkB,IAAI0G,GAAM/C,SAASrD,EAAMN,IACjE,yBAA0B,SAACM,EAAMN,GAAP,OAAkB,IAAI0G,GAAMpB,aAAahF,EAAMN,IAEzE,4BAA6B,SAACM,EAAMN,GAAP,OAAkB,IAAItJ,IAAY+J,KAAKH,EAAMN,EAAQtJ,IAAY4U,eAAeC,cAC7G,2BAA4B,SAACjL,EAAMN,GAAP,OAAkB,IAAItJ,IAAY+J,KAAKH,EAAMN,EAAQtJ,IAAY4U,eAAeE,aAC5G,yBAA0B,SAAClL,EAAMN,GAAP,OAAkB,IAAItJ,IAAY+U,QAAQnL,EAAMN,EAAQtJ,IAAYgV,kBAAkBC,QAChH,0BAA2B,SAACrL,EAAMN,GAAP,OAAkB,IAAItJ,IAAY+U,QAAQnL,EAAMN,EAAQtJ,IAAYgV,kBAAkBE,WC7BrH,IAAMC,GAAc,kBACPC,GAA2B,kBAAMpM,KAAKqM,MAAMC,aAAaC,QAAQJ,KAAgB,OACjFK,GAAyB,SAACtM,GAAD,OAAwCoM,aAAaG,QAAQN,GAAanM,KAAKC,UAAUC,KAEzHwM,GAAoBhU,YAAY,CACpCvB,KAAM,oBAENwB,aAAc,CACZ6E,UAAW,GACXmP,OAAO,GAGT3T,QAAS,CACP4T,KAAM,yDAAM,WAAOC,GAAP,SAAAvV,EAAA,sEACJsV,GAAKC,GADD,2CAAN,uDAINC,YAAa,SAACxU,EAAcwE,GAAf,8CAAmC,WAAO+P,GAAP,iBAAAvV,EAAA,yDACxCyV,EAAWjM,EAAgBkM,OAAO,CAAE1U,OAAMwE,UAASlH,GAAI,KADf,uBAG5C0D,MAAM,gBAAD,OAAiBhB,EAAjB,eAA4BwE,IAHW,iCAOxCoD,EAAOzJ,IAAE2I,UAAUyN,EAAIpT,WAAW+D,WAAW,SAAC5B,GAAD,OAAOA,EAAEoG,cACvD+K,EAAS/K,UAAUpM,IAAMmX,EAAS/K,UACvCwK,GAAuBtM,GATuB,SAUxC0M,GAAKC,GAVmC,2CAAnC,uDAabI,OAAQ,SAACC,GAAD,8CAAmB,WAAOL,GAAP,eAAAvV,EAAA,oEACnB4I,EAAOzJ,IAAE2I,UAAUyN,EAAIpT,WAAW+D,WAAW,SAAC5B,GAAD,OAAOA,EAAEoG,cAChDkL,GACZV,GAAuBtM,GAHE,SAInB0M,GAAKC,GAJc,2CAAnB,uDAORM,gBACE,SAACD,EAAe/U,EAAsB4B,EAAgB6G,GAAtD,8CACA,6BAAAtJ,EAAA,6DAASmC,EAAT,EAASA,SAAT,SACQA,IAAW+D,UAAU0P,GAAOC,gBAAgBpT,EAAQ6G,EAAMzI,GADlE,2CADA,uDAKFiV,QACE,SAACF,EAAe/U,GAAhB,8CACA,6BAAAb,EAAA,6DAASmC,EAAT,EAASA,SAAT,SACQA,IAAW+D,UAAU0P,GAAOE,QAAQjV,GAD5C,2CADA,0D,SAOSyU,G,iFAAf,WAAoBC,GAApB,qBAAAvV,EAAA,sDAKE,IAAW1B,KAJXiC,QAAQC,IAAI,kBACN+I,EAAUgM,EAAIpT,WAAW+D,UACzBA,EAAY/G,IAAE2I,UAAUgN,MAA4B,SAACxL,GAAD,OAAUC,EAAQD,EAAKhL,KAAOkL,EAAgBkM,OAAOpM,MAE9EpD,EAAU5H,WAAY4H,EAAU5H,GALnE,GAOOiX,EAAIpT,WAAWkT,MAPtB,gCAOmC7L,EAAgBR,OAAO+M,OAAO5W,IAAE6W,OAAO9P,IAP1E,uBASwBnG,IATxB,cASQJ,EATR,iBAWQmH,QAAQC,IACZ5H,IAAEhB,IAAI+H,GAAW,SAAC5B,GAChB,GAAKA,GAAM3E,GAAY6J,EAAgByM,WAAW3R,EAAG3E,GACrD,OAAO2E,EAAEgR,OAAOY,OAAM,SAACxX,GAAD,OAAO6B,QAAQC,IAAI8D,EAAEoG,UAAU1J,KAAMtC,UAdjE,QAiBE6W,EAAI1T,SAAS,CAAEqE,YAAWmP,OAAO,IAjBnC,6C,sBAoBO,IAAMc,GAAyB9S,YAAW+R,GAAmB,CAAE7R,SAAU,OACnE6S,GAAqB/S,YAAW+R,GAAmB,CAC9D7R,SAAU8S,cACR,SAAC7S,GAAD,OACErE,IAAEqE,EAAM0C,WACL8P,SACAM,QAAO,SAAChS,GAAD,OAAOA,EAAEoG,UAAU1J,QAC1BmD,WACL,SAAC+B,GAAD,OACE/G,IAAEhB,IAAI+H,GAAW,SAAC5B,GAAD,MAAQ,CACvBhG,GAAIgG,EAAEoG,UAAUpM,GAChB0C,KAAMsD,EAAEoG,UAAU1J,KAClBuV,MAAOjS,EAAE+B,aAAaxG,KACtB2W,OAAQlS,EAAEsG,YACVzG,MACEsS,cACEnS,EAAEuG,aAAa6L,QAAO,SAACC,EAAKxP,GAAN,OAAYwP,EAAIC,IAAIzP,EAAEhD,SAAQ2B,QACpD,IACAxF,WAAa,IACjBuL,QACE4K,cACEnS,EAAEyG,oBAAoB2L,QAAO,SAACC,EAAKxP,GAAN,OAAYwP,EAAIC,IAAIzP,EAAEhD,SAAQ2B,QAC3D,IACAxF,WAAa,IACjBmK,IAAKgM,cAAInS,EAAE0G,SAAU,IAAI1K,WAAa,IACtCmV,SAAUnR,EACVkB,QAASlB,EAAEoG,UAAUlF,iBAIhBqR,GAAkBxT,YAAW+R,GAAmB,CAC3D7R,SAAU,SAACC,GAAD,OAAWA,EAAM0C,a,IAEO7C,YAAW+R,GAAmB,CAChE7R,SAAU,SAACC,GAAD,OAAWA,EAAM6R,S,4BC7GvByB,GAAsB1V,YAAY,CACtCvB,KAAM,sBAENwB,aAAc,CACZoU,SAAU,KACVsB,WAAW,EACXC,eAAgB,GAChBC,mBAAoB,IAGtBvV,QAAS,CACPwV,aACE,SAACzB,GAAD,8CACA,6BAAAzV,EAAA,sDAAS6B,EAAT,EAASA,UAAUM,EAAnB,EAAmBA,YACFsT,WAAaA,GAC1B5T,EAAS,CAAE4T,WAAUuB,eAAgB,GAAIC,mBAAoB,GAAIF,WAAW,IAFhF,2CADA,uDAOFI,YACE,yDACA,uBAAAnX,EAAA,uDAAS6B,EAAT,EAASA,UACE,CAAE4T,SAAU,OADvB,2CADA,uDAKF2B,aACE,SAAC3U,GAAD,8CACA,uBAAAzC,EAAA,uDAAS6B,EAAT,EAASA,UACE,CAAEmV,eAAgBvU,EAAQwU,mBAAoB,KADzD,2CADA,uDAKFI,aACE,SAACC,EAAeC,GAAhB,8CACA,+BAAAvX,EAAA,sDAAS6B,EAAT,EAASA,SAAUM,EAAnB,EAAmBA,SACjBN,EAAS,CAAEoV,mBAAmB,6BAAM9U,IAAW8U,oBAAlB,mBAAuCK,EAAQC,MAD9E,2CADA,uDAKFC,aACE,SAACT,GAAD,8CACA,uBAAA/W,EAAA,uDAAS6B,EAAT,EAASA,UACE,CAAEkV,cADb,2CADA,uDAKFjB,QACE,yDACA,6BAAA9V,EAAA,6DAASmC,EAAT,EAASA,SAAT,SACQA,IAAWsT,SAAUK,QAAQ3T,IAAW4U,WADhD,2CADA,uDAKF9V,KACE,yDACA,6BAAAjB,EAAA,6DAASmC,EAAT,EAASA,SAAT,SACQA,IAAWsT,SAAUI,gBAAgB1T,IAAW6U,eAAgB7X,IAAE6W,OAAO7T,IAAW8U,oBAAqB9U,IAAW4U,WAD5H,2CADA,uDAKF1L,KACE,SAACtJ,GAAD,8CACA,6BAAA/B,EAAA,6DAASmC,EAAT,EAASA,SAAT,KACEJ,EADF,SACkBI,IAAWsT,SAAUgC,aAAatV,IAAW6U,eAAgB7X,IAAE6W,OAAO7T,IAAW8U,qBADnG,6EADA,0DAOOS,GAA2BrU,YAAWyT,GAAqB,CAAEvT,SAAU,OACvEoU,GAA4BtU,YAAWyT,GAAqB,CACvEvT,SAAU8S,cACR,SAAC7S,GAAD,OAAWA,KACX,SAACA,GAAD,aAAW,UAAAA,EAAMiS,gBAAN,eAAgBxK,qBAAqB1E,QAAO,SAACqR,GAAD,OAAQA,EAAE1O,WAAW,OAAS0O,EAAEC,SAAS,UAAS,MACzG,SAACrU,GAAD,OACEA,EAAMwT,eACHc,UAAUtU,EAAMwT,eAAee,QAAQ,KAAO,EAAGvU,EAAMwT,eAAegB,OAAS,GAC/EC,MAAM,KACN1R,QAAO,SAACvG,GAAD,OAAOA,EAAEgY,OAAS,QAC9B,SAACxU,GAAD,aACErE,IAAC,UAACqE,EAAMiS,gBAAP,aAAC,EAAgBjP,aACfmB,SAAQ,SAAC3H,GAAD,OAAOA,EAAEH,QACjBiI,WAAU,SAACX,GAAD,OAAOA,EAAE3B,WACnBrB,WACL,SAACX,GAAD,aACErE,IAAC,UAACqE,EAAMiS,gBAAP,aAAC,EAAgB/O,mBACfiB,SAAQ,SAAC3H,GAAD,OAAOA,EAAEH,QACjBiI,WAAU,SAACX,GAAD,OAAOA,EAAE3B,WACnBrB,WACL,SAACX,GAAD,aAAWrE,IAAE2I,UAAF,UAAYtE,EAAMiS,gBAAlB,aAAY,EAAgB9K,WAAW,SAACxD,GAAD,OAAQA,aAAa+Q,KAAKC,gBAAMhR,GAAKA,QACvF,SAAC3D,EAAO4U,EAAiBC,EAAwBC,EAAQC,EAAc3P,GAAvE,MAAiF,CAC/E6M,SAAUjS,EAAMiS,SAChB2C,kBACApB,eAAgBxT,EAAMwT,eACtBqB,yBACAtB,UAAWvT,EAAMuT,UACjByB,aAAc9P,KAAKC,UAAU,CAAE2P,SAAQC,eAAc3P,QAAQ,KAAM,S,gIC7FnE6P,GAAyBrX,YAAY,CACzCvB,KAAM,yBAENwB,aAAc,CACZqX,MAAM,EACN1X,KAAM,GACNwE,QAAS,GACTmT,OAAO,EACPC,SAAUpP,EAAgBoP,WAAWC,QAGvCnX,QAAS,CACPgX,KACE,yDACA,uBAAA1Y,EAAA,uDAAS6B,EAAT,EAASA,UACE,CAAE6W,MAAM,EAAM1X,KAAM,GAAIwE,QAAS,GAAImT,OAAO,IADvD,2CADA,uDAKFxB,YACE,yDACA,uBAAAnX,EAAA,uDAAS6B,EAAT,EAASA,UACE,CAAE6W,MAAM,IADnB,2CADA,uDAKFI,QACE,SAAC9X,GAAD,8CACA,iCAAAhB,EAAA,sDAAS6B,EAAT,EAASA,SAAUM,EAAnB,EAAmBA,SACXwW,EAAQnP,EAAgBuP,YAAY/X,EAAMmB,IAAWqD,SAC3D3D,EAAS,CAAEb,OAAM2X,UAFnB,2CADA,uDAMFK,WACE,SAACxT,GAAD,8CACA,iCAAAxF,EAAA,sDAAS6B,EAAT,EAASA,SAAUM,EAAnB,EAAmBA,SACXwW,EAAQnP,EAAgBuP,YAAY5W,IAAWnB,KAAMwE,GAC3D3D,EAAS,CAAE2D,UAASmT,UAFtB,2CADA,0DAQOM,GAAuB5V,YAAWoV,ICrClCS,GAAiB,WAC5B,MAAsB5V,KAAf6V,EAAP,oBACA,EAAoBF,KAAXvX,EAAT,oBACA,OACE,cAAC0X,GAAA,EAAD,CAAQzU,UAAWwU,EAAaE,QAAS,kBAAM3X,EAAQgX,QAAvD,yBAMSY,GAAoB,WAC/B,MAAuB3V,KAAd4V,EAAT,oBACA,EAAyBN,KAAzB,mBAAOzV,EAAP,KAAc9B,EAAd,KACA,EAA+ByU,KAAtBqD,EAAT,oBAEMC,EAAQ,kBAAM/X,EAAQyV,eAI5B,OACE,8BACE,eAACuC,GAAA,EAAD,CAAQC,KAAMnW,EAAMkV,KAAMkB,QAASH,EAAnC,UACE,cAACI,GAAA,EAAD,CAAahW,MAAO,CAAEiW,SAAU,QAAhC,0BAEA,eAACC,GAAA,EAAD,WACE,uBACA,eAACC,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,GAAA,EAAD,4BACA,eAACC,GAAA,EAAD,CAAQhW,MAAOX,EAAMxC,KAAMoZ,MAAM,gBAAgB/V,SAAU,SAAC3F,GAAD,OAAOgD,EAAQoX,QAAQpa,EAAE8F,OAAOL,QAA3F,UACE,cAACkW,GAAA,EAAD,CAAUlW,MAAM,KACfX,EAAMoV,SAASza,KAAI,SAAC6C,GAAD,OAClB,cAACqZ,GAAA,EAAD,CAAqBlW,MAAOnD,EAA5B,SACGA,GADYA,YAOrB,uBACA,uBACA,cAACsZ,GAAA,EAAD,CAAWL,WAAS,EAAC3b,GAAG,iBAAiBic,QAAQ,WAAWH,MAAM,iBAAiB/V,SAAU,SAAC3F,GAAD,OAAOgD,EAAQsX,WAAWta,EAAE8F,OAAOL,UAEhI,uBACA,0BAEF,cAACqW,GAAA,EAAD,UACE,cAACpB,GAAA,EAAD,CAAQqB,KAAK,QAAQ9V,UAAWnB,EAAMmV,MAAOU,QA7BzC,kBAAME,EAAW5X,aAAY,kBAAM6X,EAAmBhE,YAAYhS,EAAMxC,KAAMwC,EAAMgC,YAAUyN,KAAKwG,IA6BvG,yBCzCJiB,GAAwB,CAC5B,CAAEC,MAAO,QAASC,WAAY,QAASC,MAAO,IAAKC,MAAO,QAC1D,CAAEH,MAAO,OAAQC,WAAY,WAAYC,MAAO,IAAKC,MAAO,QAC5D,CACEH,MAAO,SACPC,WAAY,SACZC,MAAO,IACPC,MAAO,SACPC,YAAa,SACbC,eAAgB,SAAC7T,GACf,IAAMhD,EAAQgD,EAAEhD,MAChB,OAAKA,EAAM6T,OACJ7T,EAAMhG,KAAI,SAACwE,GAAD,OAAOA,EAAEC,WAAS0E,KAAK,gBADd,iBAI9B,CACEqT,MAAO,QACPC,WAAY,eACZC,MAAO,IACPC,MAAO,QACP9Z,KAAM,SACN+Z,YAAa,SACbC,eAAgB,SAAC7T,GAAD,MAAO,MAAQ8T,kBAAS9T,EAAEhD,MAAiB+W,QAAQ,KACnEC,UAAU,GAEZ,CACER,MAAO,UACPC,WAAY,UACZC,MAAO,IACPC,MAAO,QACP9Z,KAAM,SACN+Z,YAAa,SACbC,eAAgB,SAAC7T,GAAD,MAAO,MAAQ8T,kBAAS9T,EAAEhD,MAAiB+W,QAAQ,KACnEC,UAAU,GAEZ,CACER,MAAO,MACPC,WAAY,MACZC,MAAO,IACPC,MAAO,QACP9Z,KAAM,SACN+Z,YAAa,SACbC,eAAgB,SAAC7T,GAAD,MAAO,MAAQ8T,kBAAS9T,EAAEhD,MAAiB+W,QAAQ,KACnEC,UAAU,GAEZ,CAAER,MAAO,UAAWC,WAAY,UAAWC,MAAO,IAAKC,MAAO,OAAQC,YAAa,WAGxEK,GAAoB,WAC/B,MAA+BhY,KAA/B,mBAAOiY,EAAP,KAAiB9B,EAAjB,KACA,EAAwBnD,GAAmB,MAA3C,mBAAOkF,EAAP,KAAa5Z,EAAb,KACA,EAAoBmV,KAAb3Q,EAAP,oBACA,EAAkCwR,KAAzB6D,EAAT,oBAEAC,qBAAU,WAAO,IAAD,EACd,UAAIH,EAAS1b,eAAb,OAAI,EAAkBrB,IAAIib,EAAW5X,YAAYD,EAAQ4T,MAAMrC,SAC9D,CAACoI,EAAS1b,QAAS4Z,EAAY7X,IAElC,IAEM+Z,EAAQC,mBAAQ,kBAAMT,kBAAQ9b,IAAEuX,OAAO4E,GAAM,SAAC3E,EAAKgF,GAAN,OAAchF,EAAMgF,EAAIxX,QAAO,GAAG+W,QAAQ,MAAK,CAACI,IAEnG,OACE,sBAAKzX,MAAO,CAAE+X,OAAQ,OAAQf,MAAO,OAArC,UACE,cAAC,KAAD,CAAUS,KAAMA,EAAMZ,QAASA,GAASmB,YAN9B,SAACvX,GAAD,OAAYiX,EAAsBrE,aAAahR,EAAU5B,EAAEhG,GAAGuH,cAMZiW,YAAU,EAACC,YAAU,IAEjF,cAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,oCAAqCR,OAGvC,cAAC,GAAD,Q,4CC5DOS,GAAiB,WAAO,IAAD,YAClC,EAA4B9Y,KAAnB+Y,EAAT,oBACA,EAA4BxE,GAA0B,MAAtD,mBAAOpU,EAAP,KAAiB7B,EAAjB,KACA,EAAgCmV,KAAvBuF,EAAT,oBAEM3C,EAAQ,kBAAM/X,EAAQyV,eAY5B,OACE,8BACE,eAACuC,GAAA,EAAD,CAAQC,OAAQpW,EAASkS,SAAUmE,QAASH,EAA5C,UACE,eAACI,GAAA,EAAD,kCAAwBtW,EAASkS,gBAAjC,iBAAwB,EAAmB/K,iBAA3C,aAAwB,EAA8B1J,QACtD,eAAC+Y,GAAA,EAAD,WACE,eAACsC,GAAA,EAAD,iCAA6B9Y,EAASkS,gBAAtC,iBAA6B,EAAmBpP,oBAAhD,aAA6B,EAAiCxG,QAC9D,eAACwc,GAAA,EAAD,iCAA6B9Y,EAASkS,gBAAtC,iBAA6B,EAAmB/K,iBAAhD,aAA6B,EAA8BlF,WAE3D,uBACA,eAACwU,GAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,GAAA,EAAD,qBACA,cAACC,GAAA,EAAD,CAAQhW,MAAOZ,EAASyT,eAAgBoD,MAAM,SAAS/V,SAAU,SAAC3F,GAAD,OAAOgD,EAAQ0V,aAAa1Y,EAAE8F,OAAOL,QAAtG,SACGZ,EAAS6U,gBAAgBja,KAAI,SAACyZ,GAAD,OAC5B,cAACyC,GAAA,EAAD,CAAkBlW,MAAOyT,EAAzB,SACGA,GADYA,WAOrB,uBACCrU,EAAS8U,uBAAuBL,OAAS,GACxCzU,EAAS8U,uBAAuBla,KAAI,SAACme,EAASjU,GAAV,OAClC,cAACiS,GAAA,EAAD,CAEEiC,WAAS,EACTtY,OAAO,QACP3F,GAAIge,EAAUjU,EACd+R,MAAOkC,EACPtb,KAAK,OACLiZ,WAAS,EACTM,QAAQ,WACRlW,SAAU,SAAC3F,GAAD,OAAOgD,EAAQ2V,aAAahP,EAAG3J,EAAE8F,OAAOL,SAR7CmY,EAAUjU,MAYrB,uBACA,uBAEA,cAACmU,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CAAkBC,QAAS,cAACC,GAAA,EAAD,CAAQC,QAASrZ,EAASwT,UAAW1S,SAAU,SAAC3F,GAAD,OAAYgD,EAAQ8V,aAAa9Y,EAAE8F,OAAOoY,YAAcxC,MAAM,qCAI5I,eAACI,GAAA,EAAD,WACE,cAACpB,GAAA,EAAD,CAAQC,QAvDE,kBAAM8C,EAAgBxa,aAAY,kBAAMya,EAAoBzG,OAAOpS,EAASkS,SAAU/K,UAAUpM,OAAK2U,KAAKwG,IAuDpH,6BAEA,cAACL,GAAA,EAAD,CAAQC,QAvDC,kBAAM8C,EAAgBpa,UAAUwB,EAASiV,eAuDlD,uBAEA,cAACY,GAAA,EAAD,CAAQC,QAvDA,kBAAM8C,EAAgBxa,aAAY,kBAAMD,EAAQoU,aAAW7C,KAAKwG,IAuDxE,0BAEA,cAACL,GAAA,EAAD,CAAQzU,UAAWpB,EAASyT,eAAgBqC,QArDvC,kBAAM8C,EAAgBxa,aAAY,kBAAMD,EAAQ2J,KAAK8Q,EAAgBpa,eAqD1E,2BAIA,cAACqX,GAAA,EAAD,CAAQzU,UAAWpB,EAASyT,eAAgBqC,QA3DvC,kBAAM8C,EAAgBxa,aAAY,kBAAMD,EAAQT,UAAQgS,KAAKwG,IA2DlE,uCCzFNoD,GAAW,GAEFC,GAAc,WACzB,MAAoC1Z,KAApC,mBAAOiY,EAAP,KAAiBc,EAAjB,KACAU,GAAWxB,EAAS5Z,aAAeob,GAEnC,IAAMpD,EAAQ,kBAAM0C,EAAgBpa,UAAU,KAE9C,OACE,8BACE,eAAC2X,GAAA,EAAD,CAAQC,OAAQ0B,EAAS5Z,YAAamY,QAASH,EAA/C,UACE,cAACI,GAAA,EAAD,CAAahW,MAAO,CAAEiW,SAAU,QAAhC,mBAEA,cAACC,GAAA,EAAD,UACE,cAACsC,GAAA,EAAD,CAAmBxY,MAAO,CAAEkZ,WAAY,OAAxC,SAAkDF,OAGpD,cAACrC,GAAA,EAAD,UACE,cAACpB,GAAA,EAAD,CAAQqB,KAAK,QAAQpB,QAASI,EAA9B,wB,WCDJuD,GAAsB,SAACte,IAhBR,SAACkK,EAAcqU,EAAkBC,GACpD,IAAMC,EAAO,IAAIC,KAAK,CAACxU,GAAO,CAAE5H,KAAMkc,IAEhCld,EAAIqd,SAASC,cAAc,KACjCtd,EAAEud,SAAWN,EACbjd,EAAEwd,KAAOrd,OAAOsd,IAAIC,gBAAgBP,GACpCnd,EAAE2d,cACA,IAAIC,WAAW,QAAS,CACtBC,KAAM1d,OACN2d,SAAS,EACTC,YAAY,KAGhB/d,EAAEge,SAMFC,CAFavV,KAAKC,UAAUmM,KAA4B,KAAM,GACpD,wBAAmB,IAAIoJ,MAAOC,cAAclG,MAAM,KAAK,GAAvD,SACe,cAGrBmG,GAAsB,SAAC1f,GAC3B,IAAMsB,EAAIqd,SAASC,cAAc,SACjCtd,EAAEgB,KAAO,OACThB,EAAEwI,OAAS,mBACXxI,EAAEqe,QAAS,EACXre,EAAE1B,GAAK,gBACP0B,EAAE2d,cACA,IAAIC,WAAW,QAAS,CACtBC,KAAM1d,OACN2d,SAAS,EACTC,YAAY,KAGhB/d,EAAEse,iBAAiB,UAAU,WAC3B,IAAMC,EAAOve,EAAEwe,MAAO,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAACjgB,GAAO,IAAD,IACfkgB,EAAG,UAAGlgB,EAAE8F,cAAL,iBAAG,EAAUkD,cAAb,aAAG,EAAkB7B,WACxB+C,EAAOF,KAAKqM,MAAM6J,GAAO,MAC/Bre,QAAQC,IAAI,SAAUoI,GACtBsM,GAAuBtM,GACvB5I,EAAEge,SACF7d,OAAO0e,SAASC,UAElBL,EAAOM,WAAWR,EAAM,YAIfS,GAAe,WAC1B,OACE,qBAAKnb,MAAO,CAAEC,QAAS,OAAQC,cAAe,MAAOC,eAAgB,gBAArE,SACE,eAACib,GAAA,EAAD,CAAa1E,QAAQ,WAAW,aAAW,wBAA3C,UACE,cAACnB,GAAA,EAAD,CAAQC,QAAS+E,GAAjB,yBACA,cAAChF,GAAA,EAAD,CAAQC,QAAS2D,GAAjB,+BCjDFkC,GAAYC,YAAY,CAC5BC,QAAS,CACPC,KAAM,UAiCJC,GAAU,WACd,MAAkB5b,KAAXnC,EAAP,oBACA,OACE,cAACge,EAAA,EAAD,CAAUC,GAAI,CAAEC,MAAO,OAAQC,OAAQ,SAACC,GAAD,OAAWA,EAAMD,OAAOE,MAAQ,IAAKjG,KAAMpY,EAAlF,SACE,cAACse,EAAA,EAAD,CAAkBJ,MAAM,eC3C9BK,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAaC,UDKhB,WACjB,OACE,cAACC,EAAA,EAAD,CAAeR,MAAOT,GAAtB,SACE,sBAAKkB,UAAU,MAAf,UACE,cAAC,GAAD,IAEA,cAAC,GAAD,IAEA,uBACA,uBAEA,cAAC,GAAD,IAEA,uBAEA,gCACE,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,OAGF,8BACE,cAAC,GAAD,cC1BA,cAAC,IAAD,CAAOH,KAAK,IAAIC,UCCF,WACtB,OACE,gCACE,qBAAKE,UAAU,sBAAsBvc,MAAO,CAAEwc,WAAY,OAA1D,SACE,sBAAKD,UAAU,qBAAf,UACE,qBAAKA,UAAU,+BAAf,+BACA,qBAAKA,UAAU,4BAA4Bvc,MAAO,CAAEyc,UAAW,QAA/D,SACE,mBAAGF,UAAU,WAAW5C,KAAK,uBAA7B,SACE,qBAAK4C,UAAU,WAAWG,IAAKC,EAAUC,IAAK,kBAMtD,sBAAKL,UAAU,sBAAf,UACE,qBAAKA,UAAU,OAAOG,IAAKG,IAC3B,gCACE,sCACM,sBAAMN,UAAU,QAAhB,oBAEN,8IAEF,sDAEF,sBAAKA,UAAU,6BAAf,UACE,mFACA,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,UACE,qBAAKG,IAAKI,IACV,gGAEF,sBAAKP,UAAU,SAAf,UACE,qBAAKG,IAAKK,IACV,yFAEF,sBAAKR,UAAU,SAAf,UACE,qBAAKG,IAAKM,IACV,0EAEF,sBAAKT,UAAU,SAAf,UACE,qBAAKG,IAAKO,IACV,sFAEF,sBAAKV,UAAU,SAAf,UACE,qBAAKG,IAAKQ,IACV,sFAIN,sBAAKX,UAAU,+BAAf,UACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,eAAf,UACE,yCACA,qBAAKG,IAAKS,SAGd,qBAAKZ,UAAU,cAAf,SACE,qBAAIA,UAAU,aAAd,UACE,uDACA,sDACA,4DACA,uDACA,uDACA,gEACA,qFAKN,sBAAKA,UAAU,aAAf,UACE,sDACA,mBAAG5C,KAAK,sCAAR,2BACA,mBAAGA,KAAK,2CAAR,qBACA,mBAAGA,KAAK,mCAAR,oBACA,mBAAGA,KAAK,uBAAR,sBACA,mBAAGA,KAAK,wBAAR,+BAGF,sBAAKlf,GAAG,qBAAqB+f,QAAQ,EAArC,UACE,qBAAKxa,MAAO,CAAEgX,MAAO,MAAOoG,SAAU,QAASxL,SAAU,WAAYyL,KAAM,MAAOC,IAAK,SAAvF,SACE,qBAAKZ,IAAKa,EAAOvG,MAAM,WAEzB,qBAAKhX,MAAO,CAAEgX,MAAO,MAAOoG,SAAU,QAASxL,SAAU,WAAYyL,KAAM,MAAOC,IAAK,QAAvF,SACE,qBAAKZ,IAAKc,EAAOxG,MAAM,6BD/E/BwC,SAASiE,eAAe,U,4yPEGnB,E,6HACE,IAAM3hB,EAAO,UAAG,CAAErB,IAAK,IAAKuB,KAAM,SAAUC,UAAW,QAExDyhB,EAAW,IAAIC,gBAAc,6BAA8B,CAAEC,QAAS,MAItE5Q,EAAS,CACb6Q,KAAM,kBAAMC,EAAK,QAAS,eAAgB,KAC1C3U,KAAM,kBAAM2U,EAAK,OAAQ,cAAe,IACxChN,IAAK,kBAAMgN,EAAK,MAAO,aAAc,KACrC/M,KAAM,kBAAM+M,EAAK,OAAQ,cAAe,KACxCC,MAAO,kBAAMD,EAAK,QAAS,eAAgB,KAE3CE,OAAQ,kBAAMF,EAAK,SAAU,gBAAiB,KAC9CG,cAAe,kBAAMH,EAAK,WAAY,kBAAmB,KACzDI,aAAc,kBAAMJ,EAAK,eAAgB,iBAAkB,KAC3DK,cAAe,kBAAML,EAAK,gBAAiB,kBAAmB,M,4CAGzD,WAAwB3Y,EAAqBxD,GAA7C,yBAAAxF,EAAA,6DACCsY,EAASnZ,IAAEhB,IAAI0S,GAAQ,SAAClO,GAAD,OAAOA,OAD/B,SAG8BmE,QAAQC,IAAI,CAC7Cwa,EAASU,mBAAmB,IAAI9Y,UAAQ3D,IACxC+b,EAASW,WAAW,IAAI/Y,UAAQ3D,IAAUyN,MAAK,SAACkP,GAAD,OAAOjiB,aAAGiiB,EAAEC,QAAQvc,iBALhE,0CAGEwc,EAHF,KAGSC,EAHT,cAQkBxb,QAAQC,IAC7B5H,IAAEkjB,GACClkB,KAAI,SAACO,GAAD,MAAQ,CAAEoM,MAAO3L,IAAEsB,KAAK6X,GAAQ,SAACxN,GAAD,OAAWpM,EAAE6jB,kBAAoBzX,EAAMvF,WAAUoc,KAAMjjB,MAC3F6H,QAAO,SAAC5D,GAAD,QAASA,EAAEmI,SAClB3M,IAHH,uCAGO,WAAOwE,GAAP,eAAA3C,EAAA,6DACGqF,EAASmK,eAAK7M,EAAEgf,KAAKS,QAASzf,EAAEmI,MAAO0X,KAD1C,KAGM7f,EAAEmI,MAHR,KAIDzF,EAJC,SAKY2D,EAAOsD,QAAQ3M,EAAQrB,GAAIqE,EAAEmI,MAAQzF,GALjD,6CAGDyF,MAHC,KAIDzF,OAJC,KAKDlB,MALC,kDAHP,uDAWGA,SApBA,cAQCse,EARD,YAuBLA,EAvBK,KAuBkBd,EAAK,OAAQ,GAAI,IAvBnC,KAuBgDW,EAvBhD,UAuB0EtZ,EAAOsD,QAAQ3M,EAAQrB,GAAIuS,EAAO6Q,OAAQY,GAvBpH,iCAuBWxX,MAvBX,KAuBwCzF,OAvBxC,KAuB6DlB,MAvB7D,WAuBIue,KAvBJ,kCAyBED,GAzBF,4C,iFA8BoB,iBAAG,CAC5BlO,UAAW,iBAAO,CAChB+D,OAAQ,CAACzH,EAAO7D,OAAQ6D,EAAO6Q,QAC/BiB,KAAM,iEACNC,KAAM,mEAERpO,SAAU,iBAAO,CACf8D,OAAQ,CAACzH,EAAO8D,MAAO9D,EAAO6Q,QAC9BiB,KAAM,iEACNC,KAAM,oEATH,IAaMnZ,E,WAcX,WAAmBH,EAA2BN,EAA4BiJ,GAAqB,IAAD,gCAA3E3I,OAA2E,KAAhDN,SAAgD,KAApBiJ,WAAoB,KAb9F4Q,IAAMhS,EAAO8D,MAaiF,KAX9F/L,KAAO,CACLka,gBAAiBhd,OACjBqE,QAASrE,OACTsE,QAAStE,OACTuE,OAAQvE,OACRwE,OAAQxE,OACRyE,aAAczE,OACd0E,YAAa1E,OACb2E,IAAK3E,QAGuF,KAE9F4E,QAAU,kBAAM,EAAKpB,MAFyE,KAI9FjD,WAAa,kBAAM1G,GAJ2E,KAM9F6G,UAAY,kBAAM,EAAKyL,SAASqG,QAN8D,KAQ9F5R,gBAAkB,iBAAM,CAAC,EAAKmc,MARgE,KAU9FlY,QAAU,kBAAM,EAAK/B,MAVyE,KAY9FgC,UAAY,iBAAM,IAZ4E,KAc9FC,WAAa,iBAAM,CACjB,CACEC,MAAO,EAAKmH,SAASqG,OAAO,GAC5BjT,OAAQ,EAAKuD,KAAKuB,QAClBhG,MAAO,EAAKyE,KAAKyB,QAEnB,CACES,MAAO,EAAKmH,SAASqG,OAAO,GAC5BjT,OAAQ,EAAKuD,KAAKwB,QAClBjG,MAAO,EAAKyE,KAAK0B,UAvByE,KA2B9FS,kBAAoB,iBAAM,CAAC,CAAED,MAAO,EAAK+X,IAAKxd,OAAQ,EAAKuD,KAAK2B,aAAcpG,MAAO,EAAKyE,KAAK4B,eA3BD,KA6B9FQ,OAAS,kBAAM,EAAKpC,KAAK6B,KA7BqE,KAkE9FQ,mBAAqB,iBAAM,I,+EAnC3B,uEAAAjL,EAAA,6DACQc,EAAU,IAAIqI,UAAQ1D,KAAK6D,KAAK9D,SAChCud,EAAO,IAAIC,gBAAc,CAAExd,QAAS,IAAI2D,UAAQ1D,KAAKwM,SAAS0Q,QAC9DC,EAAO,IAAII,gBAAc,CAAExd,QAAS,IAAI2D,UAAQ1D,KAAKwM,SAAS2Q,QAHtE,SAKiE9b,QAAQC,IAAI,CACzEwa,EAASU,mBAAmBnhB,GAC5BuK,EAAKuX,EAAM,0BAA0B3P,MAAK,SAACkP,GAAD,OAAOc,EAAOd,EAAE,OAC1D9W,EAAK0X,EAAM,mBAAmB9P,MAAK,SAACkP,GAAD,OAAOA,EAAE,MAC5C9W,EAAK0X,EAAM,6BAA6B9P,MAAK,SAACkP,GAAD,OAAOA,EAAEhkB,IAAI8kB,QAT9D,sCAKSZ,EALT,KAKgBa,EALhB,KAKqCC,EALrC,KAK+CvX,EAL/C,mBAW4CA,EAX5C,GAWSwX,EAXT,KAWkBC,EAXlB,KAW2BC,EAX3B,MAaQC,EAAWpkB,IAAEoH,OAAO8b,GAAO,SAAClb,GAAD,OAAOA,EAAEqc,UAAY,EAAKvR,SAAS2Q,SACtD5K,OAdhB,0DAgBEvS,KAAKmD,KAAKka,gBAAkBS,EAASplB,KAAI,SAACslB,GAAD,OAASC,EAAyBD,EAAIE,eAAajN,QAAO,SAACC,EAAKiN,GAAN,OAAYjN,EAAIC,IAAIgN,KAAI9d,QAhB7H,UAkBiCgB,QAAQC,IAAIwc,EAASplB,KAAI,SAACslB,GAAD,OAASI,EAA8BjB,EAAMa,EAAIrB,QAASqB,EAAIE,gBAAc1Q,MAAK,SAACkP,GAAD,OACvIA,EAAEzL,QAAO,SAACC,EAAKwL,GAAN,OAAYxL,EAAIC,IAAIuL,KAAIrc,WAnBrC,eAkBEL,KAAKmD,KAAK2B,aAlBZ,OAsBQuZ,EAAgBre,KAAKmD,KAAKka,gBAAgB/c,IAAIE,SAAOD,IAAIsd,GACzD/X,EAASiE,eAAK/J,KAAKwM,SAASqG,OAAO,GAAG/S,UAAY4d,EAAS,GAAKC,EAAUC,EAAS5d,KAAKwM,SAASqG,OAAO,GAAGkK,KAC3GuB,EAASvU,eAAK/J,KAAKmD,KAAKuB,UAAYiZ,EAAUC,EAAUD,EAAS3d,KAAKwM,SAASqG,OAAO,GAAGkK,KAC/F/c,KAAKmD,KAAKuB,QAAU2Z,EAAc/d,IAAIwF,GAAQvF,IAAIC,SAClDR,KAAKmD,KAAKwB,QAAU0Z,EAAc/d,IAAIge,GAAQ/d,IAAIC,SA1BpD,UA2BqFa,QAAQC,IAAI,CAC7FtB,KAAKuD,OAAOsD,QAAQ3M,EAAQrB,GAAImH,KAAKwM,SAASqG,OAAO,GAAI7S,KAAKmD,KAAKuB,SACnE1E,KAAKuD,OAAOsD,QAAQ3M,EAAQrB,GAAImH,KAAKwM,SAASqG,OAAO,GAAI7S,KAAKmD,KAAKwB,SACnE3E,KAAKuD,OAAOsD,QAAQ3M,EAAQrB,GAAImH,KAAKwM,SAASqG,OAAO,GAAIyL,EAAOxX,KAAK,GAAGxG,IAAImd,GAAqBld,IAAIsd,IACrG7d,KAAKuD,OAAOsD,QAAQ3M,EAAQrB,GAAImH,KAAKod,IAAKpd,KAAKmD,KAAK2B,gBA/BxD,oCA2BG9E,KAAKmD,KAAKyB,OA3Bb,KA2BqB5E,KAAKmD,KAAK0B,OA3B/B,KA2BuC7E,KAAKmD,KAAK6B,IA3BjD,KA2BsDhF,KAAKmD,KAAK4B,YA3BhE,sD,uHAqCA,WAAmB/H,EAAgB6G,GAAnC,SAAAtJ,EAAA,0F,6HAEA,WAAsByC,EAAgB6G,EAAgBzI,GAAtD,SAAAb,EAAA,0F,uHAEA,WAAca,GAAd,SAAAb,EAAA,0F,uEAI4B,oBAAG,CAC/B2U,IAAK,iBAAO,CACV2D,OAAQ,CAACzH,EAAO8D,OAChBgO,KAAM,iEACNC,KAAM,iEACNa,IAAK5S,EAAOkR,eACZiC,OAAQnT,EAAO8D,QAEjBC,KAAM,iBAAO,CACX0D,OAAQ,CAACzH,EAAO8D,OAChBgO,KAAM,iEACNC,KAAM,iEACNa,IAAK5S,EAAOmR,gBACZgC,OAAQnT,EAAO+D,UAbZ,IAiBMH,E,4MACX/N,gBAAkB,iBAAM,CAAE,EAAKuL,SAA6B+R,S,EAE5DjZ,kBAAoB,iBAAM,CAAC,CAAED,MAAO,EAAK+X,IAAKxd,OAAQ,EAAKuD,KAAK2B,aAAcpG,MAAO,EAAKyE,KAAK4B,e,iFAE/F,2GACQ1J,EAAU,IAAIqI,UAAQ1D,KAAK6D,KAAK9D,SAChCye,EAAQ,IAAIjB,gBAAc,CAAExd,QAAS,IAAI2D,UAAQ1D,KAAKwM,SAAS0Q,QAC/DC,EAAO,IAAII,gBAAc,CAAExd,QAAS,IAAI2D,UAAQ1D,KAAKwM,SAAS2Q,QAC9DsB,EAAWze,KAAKwM,SAA6BwR,IAC7C3Y,EAAQrF,KAAKe,YAAY,GALjC,SAO+B6E,EAAKuX,EAAM,0BACrC3P,MAAK,SAACkP,GAAD,OAAOc,EAAOd,EAAE,OACrBjM,OAAM,kBAAMpQ,UATjB,YAOMqe,EAPN,QAUuBze,SAVvB,kCAW4B6b,EAASU,mBAAmBW,EAAKwB,cAX7D,QAWUC,EAXV,OAYIF,EAAmBjkB,aAAGf,IAAEsB,KAAK4jB,GAAW,SAAC3lB,GAAD,OAAOA,EAAE6jB,kBAAoBzX,EAAMvF,WAAU6c,SAZzF,yBAcwB3c,KAAKuD,OAAOsD,QAAQ3M,EAAQrB,GAAIwM,EAAOqZ,GAd/D,eAcE1e,KAAKmD,KAAK6B,IAdZ,iBAgBsB8W,EAASU,mBAAmBnhB,GAhBlD,WAgBQuhB,EAhBR,OAiBQiC,EAAiBnlB,IAAEsB,KAAK4hB,GAAO,SAAC3jB,GAAD,OAAOA,EAAE8kB,UAAYS,EAAMG,aAAave,YAAcnH,EAAE6jB,gBAAgBrZ,WAAW2H,EAAOgR,SAAStc,YAjB1I,0DAmBEE,KAAKmD,KAAKuB,QAAUoa,EAA6CD,EAAeX,WAAYO,GAnB9F,UAoB2Bze,KAAKuD,OAAOsD,QAAQ3M,EAAQrB,GAAIwM,EAAOrF,KAAKmD,KAAKuB,SApB5E,eAoBE1E,KAAKmD,KAAKyB,OApBZ,iBAsBiCwZ,EAA8BjB,EAAM0B,EAAelC,QAASkC,EAAeX,YAtB5G,eAsBEle,KAAKmD,KAAK2B,aAtBZ,iBAuBgC9E,KAAKuD,OAAOsD,QAAQ3M,EAAQrB,GAAImH,KAAKiB,kBAAkB,GAAIjB,KAAKmD,KAAK2B,cAvBrG,QAuBE9E,KAAKmD,KAAK4B,YAvBZ,wD,2DAL2Bf,GAgC7B,SAASkY,EAAK9hB,EAAc0F,EAAiBif,GAC3C,IAAM9c,EAASkI,gBAAM/P,EAAM4kB,eAI3B,OAHA/c,EAAOia,MAAO,EACdja,EAAOnC,QAAUA,EACjBmC,EAAO8a,IAAMgC,EACN9c,EAGT,SAASub,EAAOyB,GACd,OAAOxkB,aAAGykB,EAAO5jB,KAAK2jB,EAAG,UAAU7e,SAAS,OAAQ,IAGtD,SAASwF,EAAKyB,EAAyB8X,GACrC,OAAO9X,EAAS+X,SAAStD,EAAU,CAAEuD,KAAM,IAAIC,mBAAiBH,KAAO3R,MAAK,SAACkP,GAAD,OAAOA,EAAE6C,c,SAGxEnB,E,kFAAf,WAA6CjB,EAAqBqC,EAAoBtB,GAAtF,eAAA3jB,EAAA,sEACuB4iB,EAAKiC,SAAStD,EAAU,CAC3CuD,KAAM,IAAIC,mBAAiB,oCAC3Bzb,KAAM,CAAC,IAAI4b,eAAaC,IAAaC,IAAIH,EAAepf,aAAc,IAAIwf,aAAWV,EAAO5jB,KAAK4iB,EAAY,cAHjH,YACQjc,EADR,QAKasd,WAAWhN,OALxB,yCAKuCiL,EAAOvb,EAAOsd,WAAW,KALhE,gCAOSlf,QAPT,4C,sBAUA,SAAS4d,EAAyBC,GAChC,MAAiB2B,EAAMC,aAAaZ,EAAO5jB,KAAK4iB,EAAY,UAAW6B,GACjE5c,EADN,oBACoB0D,UACpB,OAAOpM,aAAI0I,EAAK6c,uBAAwC5f,SAAS,IAAK,IAGxE,SAAS0e,EAA6CZ,EAAoB7Y,GACxE,MAAiBwa,EAAMC,aAAaZ,EAAO5jB,KAAK4iB,EAAY,UAAW+B,GACjE9c,EADN,oBACoB0D,UACpB,OAAK1D,EAAK+c,cAAyB9f,aAAeiF,EAAMvF,QAAgBO,OAEjE5F,aAAI0I,EAAKgd,qBAAsC/f,SAAS,IAAK,I,YAGtE,IAAMyf,EAAQ,IAAIO,cACZH,EAAiC,IAAII,aAAW,6BAA8B,CAClF,IAAIC,wBAAsB,gBAAiB,GAAI,IAAIC,uBACnD,IAAID,wBAAsB,mBAAoB,GAAI,IAAIE,WACtD,IAAIF,wBAAsB,oBAAqB,GAAI,IAAIG,eACvD,IAAIH,wBAAsB,mBAAoB,GAAI,IAAIC,uBACtD,IAAID,wBAAsB,sBAAuB,GAAI,IAAIE,WACzD,IAAIF,wBAAsB,uBAAwB,GAAI,IAAIG,iBAEtDV,EAA0B,IAAIM,aAAW,sBAAuB,CACpE,IAAIC,wBAAsB,mBAAoB,GAAI,IAAIG,eACtD,IAAIH,wBAAsB,0BAA2B,GAAI,IAAIE,WAC7D,IAAIF,wBAAsB,iBAAkB,GAAI,IAAIE,WACpD,IAAIF,wBAAsB,iBAAkB,GAAI,IAAII,UACpD,IAAIJ,wBAAsB,sBAAuB,GAAI,IAAIK,eACzD,IAAIL,wBAAsB,yBAA0B,GAAI,IAAIG,eAC5D,IAAIH,wBAAsB,oBAAqB,GAAI,IAAIG,eACvD,IAAIH,wBAAsB,sBAAuB,GAAI,IAAIG,iB,CAnQ5CxmB,M","file":"static/js/main.d42cc0c5.chunk.js","sourcesContent":["var map = {\n\t\"./bls.js\": 541,\n\t\"./bls_c.js\": 542\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1047;","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, contracts as contractsOrig, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {});\nexport const contracts = _.merge({}, contractsOrig, {});\n\nexport const networks = _.merge({}, networksOrig, {\n  egld: ElrondMaiar.network,\n  off: { id: -1, name: \"OffChain\", shortname: \"off\" },\n});\n\nexport async function currentNetwork() {\n  // const netId = await web3().eth.net.getId();\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positions/base/consts\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = args.type + \":\" + args.address;\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidWallet(address: string) {\n    return web3()?.utils?.isAddress(address) || isElrondAddress(\"egld:\", address);\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return !!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { bn, contracts, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const isElrond = networkId === ElrondMaiar.network.id || !!(token as any).tokenId;\n    const id = isElrond ? (token as ElrondMaiar.ESDT).tokenId : token.address;\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (isElrond) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[ElrondMaiar.network.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n    const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n    const response = await fetch(url);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          accept: \"*/*\",\n          \"cache-control\": \"no-cache\",\n          \"content-type\": \"application/json\",\n          pragma: \"no-cache\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\nimport type { RevaultStakingAbi } from \"../../typechain-abi/RevaultStakingAbi\";\n\nexport namespace Revault {\n  const REVA = () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\");\n  const revaultFarm = () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\");\n  const revaultChef = () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\");\n  const revaStaking = () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\");\n\n  export class SingleVault implements Position {\n    revault = revaultFarm();\n    chef = revaultChef();\n    reva = REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  export class RevaStake implements Position {\n    staking = revaStaking();\n    reva = REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements Position {\n    xfarm = contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\");\n    unic = erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\");\n    xunic = erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\");\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, zero } from \"@defi.org/web3-candies\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\n\nexport namespace Fodl {\n  export class XFodlStake implements Position {\n    fodl = erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\");\n    xfodl = erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\");\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(bn),\n        this.xfodl.methods.totalSupply().call().then(bn),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(bn),\n      ]);\n      this.data.amount = myXfodl.mul(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"./base/consts\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { Fodl } from \"./Fodl\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n    \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n    \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n    \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n    \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n    \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n\n    \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.CAKE()),\n    \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.BUSD()),\n    \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    \"bsc:Revault:RevaStaking:x1\": (args, oracle) => new Revault.RevaStake(args, oracle, 0),\n    \"bsc:Revault:RevaStaking:x2\": (args, oracle) => new Revault.RevaStake(args, oracle, 1),\n    \"bsc:Revault:RevaStaking:x3\": (args, oracle) => new Revault.RevaStake(args, oracle, 2),\n    \"bsc:Revault:RevaStaking:x4\": (args, oracle) => new Revault.RevaStake(args, oracle, 3),\n\n    \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n    \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new ElrondMaiar.MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n    \"egld:Maiar:MEXFarm:RIDE\": (args, oracle) => new ElrondMaiar.MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.RIDE()),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { to3, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positions/base/consts\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n    ready: false,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  if (!api.getState().ready) await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p.load().catch((e) => console.log(p.getArgs().type, e));\n    })\n  );\n  api.setState({ positions, ready: true });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        chain: p.getNetwork().name,\n        health: p.getHealth(),\n        value:\n          to3(\n            p.getAmounts().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        pending:\n          to3(\n            p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero),\n            18\n          ).toNumber() / 1000,\n        tvl: to3(p.getTVL(), 18).toNumber() / 1000,\n        position: p,\n        address: p.getArgs().address,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\nexport const useAllPositionsReady = createHook(AllPositionsState, {\n  selector: (state) => state.ready,\n});\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      positionData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect, useMemo } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport { ListItem, ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\n\nconst columns: GridColDef[] = [\n  { field: \"chain\", headerName: \"Chain\", width: 120, align: \"left\" },\n  { field: \"type\", headerName: \"Position\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    width: 100,\n    align: \"center\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => {\n      const value = v.value as Threat[];\n      if (!value.length) return \"🟢\";\n      return value.map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"value\",\n    headerName: \"Market Value\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    width: 120,\n    align: \"right\",\n    type: \"number\",\n    headerAlign: \"center\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", width: 450, align: \"left\", headerAlign: \"center\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  const total = useMemo(() => commafy(_.reduce(rows, (sum, row) => sum + row.value, 0).toFixed(0)), [rows]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <ListItem>\n        <ListItemText>Total Market Value: $ {total}</ListItemText>\n      </ListItem>\n\n      <AddPositionBtn />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.positionData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positions/base/Position\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { Position, PositionArgs, TokenAmount } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport {\n  Address,\n  BigUIntType,\n  BigUIntValue,\n  BinaryCodec,\n  BytesValue,\n  ContractFunction,\n  ProxyProvider,\n  SmartContract,\n  StructType,\n  TokenIdentifierType,\n  U64Type,\n} from \"@elrondnetwork/erdjs\";\nimport BigNumberExt from \"bignumber.js\";\nimport { BooleanType, StructFieldDefinition, U8Type } from \"@elrondnetwork/erdjs/out\";\n\nexport namespace ElrondMaiar {\n  export const network = { id: -508, name: \"Elrond\", shortname: \"egld\" };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n    EGLD_MEX_FARM: () => esdt(\"EGLDMEXF\", \"EGLDMEXF-5bcc57\", 18),\n    MEX_POOL_NFT: () => esdt(\"MEX Pool NFT\", \"MEXFARM-e7af52\", 18),\n    RIDE_POOL_NFT: () => esdt(\"RIDE Pool NFT\", \"MEXRIDEF-bf0320\", 18),\n  };\n\n  export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n    const assets = _.map(tokens, (t) => t());\n\n    const [esdts, balanceEGLD] = await Promise.all([\n      provider.getAddressEsdtList(new Address(address)),\n      provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString())),\n    ]);\n\n    const balances = await Promise.all(\n      _(esdts)\n        .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n        .filter((t) => !!t.asset)\n        .map(async (t) => {\n          const amount = to18(t.esdt.balance, t.asset!.dec);\n          return {\n            asset: t.asset!,\n            amount,\n            value: await oracle.valueOf(network.id, t.asset!, amount),\n          };\n        })\n        .value()\n    );\n\n    balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(network.id, tokens.EGLD(), balanceEGLD) });\n\n    return balances;\n  }\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n  };\n\n  export class Farm implements Position {\n    mex = tokens.MEX();\n\n    data = {\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => network;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [esdts, farmingTokenReserve, token0Id, reserves] = await Promise.all([\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      const [token0r, token1r, lpTotalSupply] = reserves;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      if (!farmNfts.length) return;\n\n      this.data.lpBalanceStaked = farmNfts.map((nft) => parseLPFromFarmTokenAttr(nft.attributes)).reduce((sum, b) => sum.add(b), zero);\n\n      this.data.rewardAmount = await Promise.all(farmNfts.map((nft) => callAndParseGetPendingRewards(farm, nft.balance, nft.attributes))).then((r) =>\n        r.reduce((sum, r) => sum.add(r), zero)\n      );\n\n      const percentOfPool = this.data.lpBalanceStaked.mul(ether).div(lpTotalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl, this.data.rewardValue] = await Promise.all([\n        this.oracle.valueOf(network.id, this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(network.id, this.strategy.assets[1], token1.muln(2).mul(farmingTokenReserve).div(lpTotalSupply)),\n        this.oracle.valueOf(network.id, this.mex, this.data.rewardAmount),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export type MexPoolStrategy = Strategy & { nft: ESDT; reward: ESDT };\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\",\n      nft: tokens.MEX_POOL_NFT(),\n      reward: tokens.MEX(),\n    }),\n    RIDE: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq5e2m9df5yxxkmr86rusejc979arzayjk2jpsz2q43s\",\n      nft: tokens.RIDE_POOL_NFT(),\n      reward: tokens.RIDE(),\n    }),\n  };\n\n  export class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as MexPoolStrategy).reward];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const account = new Address(this.args.address);\n      const proxy = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n      const farmNft = (this.strategy as MexPoolStrategy).nft;\n      const asset = this.getAssets()[0];\n\n      let totalAssetStaked = await call(farm, \"getFarmingTokenReserve\")\n        .then((r) => base64(r[0]))\n        .catch(() => zero);\n      if (totalAssetStaked.isZero()) {\n        const farmEsdts = await provider.getAddressEsdtList(farm.getAddress());\n        totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      }\n      this.data.tvl = await this.oracle.valueOf(network.id, asset, totalAssetStaked);\n\n      const esdts = await provider.getAddressEsdtList(account);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === proxy.getAddress().toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n      this.data.amount0 = parsePrincipalAmountFromWrappedFarmTokenAttr(farmNftWrapper.attributes, farmNft);\n      this.data.value0 = await this.oracle.valueOf(network.id, asset, this.data.amount0);\n\n      this.data.rewardAmount = await callAndParseGetPendingRewards(farm, farmNftWrapper.balance, farmNftWrapper.attributes);\n      this.data.rewardValue = await this.oracle.valueOf(network.id, this.getRewardAssets()[0], this.data.rewardAmount);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n\n  async function callAndParseGetPendingRewards(farm: SmartContract, balanceFarmNFT: BN, attributes: string) {\n    const result = await farm.runQuery(provider, {\n      func: new ContractFunction(\"calculateRewardsForGivenPosition\"),\n      args: [new BigUIntValue(BigNumberExt.max(balanceFarmNFT.toString())), new BytesValue(Buffer.from(attributes, \"base64\"))],\n    });\n    if (result.returnData.length) return base64(result.returnData[0]);\n\n    return zero;\n  }\n\n  function parseLPFromFarmTokenAttr(attributes: string) {\n    const [struct] = codec.decodeNested(Buffer.from(attributes, \"base64\"), typeFarmTokenAttributes);\n    const data = struct.valueOf();\n    return bn((data.initial_farming_amount as BigNumberExt).toString(16), 16);\n  }\n\n  function parsePrincipalAmountFromWrappedFarmTokenAttr(attributes: string, asset: ESDT) {\n    const [struct] = codec.decodeNested(Buffer.from(attributes, \"base64\"), typeWrappedFarmTokenAttributes);\n    const data = struct.valueOf();\n    if ((data.farm_token_id as Buffer).toString() !== asset.tokenId) return zero;\n\n    return bn((data.farming_token_amount as BigNumberExt).toString(16), 16);\n  }\n\n  const codec = new BinaryCodec();\n  const typeWrappedFarmTokenAttributes = new StructType(\"WrappedFarmTokenAttributes\", [\n    new StructFieldDefinition(\"farm_token_id\", \"\", new TokenIdentifierType()),\n    new StructFieldDefinition(\"farm_token_nonce\", \"\", new U64Type()),\n    new StructFieldDefinition(\"farm_token_amount\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"farming_token_id\", \"\", new TokenIdentifierType()),\n    new StructFieldDefinition(\"farming_token_nonce\", \"\", new U64Type()),\n    new StructFieldDefinition(\"farming_token_amount\", \"\", new BigUIntType()),\n  ]);\n  const typeFarmTokenAttributes = new StructType(\"FarmTokenAttributes\", [\n    new StructFieldDefinition(\"reward_per_share\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"original_entering_epoch\", \"\", new U64Type()),\n    new StructFieldDefinition(\"entering_epoch\", \"\", new U64Type()),\n    new StructFieldDefinition(\"apr_multiplier\", \"\", new U8Type()),\n    new StructFieldDefinition(\"with_locked_rewards\", \"\", new BooleanType()),\n    new StructFieldDefinition(\"initial_farming_amount\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"compounded_reward\", \"\", new BigUIntType()),\n    new StructFieldDefinition(\"current_farm_amount\", \"\", new BigUIntType()),\n  ]);\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n"],"sourceRoot":""}