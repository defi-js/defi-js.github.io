{"version":3,"sources":["reportWebVitals.ts","assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","state/AppState.ts","positions/base/PositionFactory.ts","positions/base/PriceOracle.ts","positions/consts.ts","positions/Pancakeswap.ts","positions/base/Position.ts","positions/Loops.ts","positions/Revault.ts","positions/Unicly.ts","positions/index.ts","state/AllPositionsState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AppHeader.tsx","state/PositionDialogState.ts","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","App.tsx","index.tsx","Homepage.tsx","positions/ElrondMaiar.ts","../node_modules/@elrondnetwork/bls-wasm sync /^/.//.*/.js$"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","AppState","createStore","name","initialState","loading","wallet","balance","zero","network","alertDialog","actions","connect","a","setState","_withLoading","ethereum","window","alert","_onConnect","on","withLoading","thunk","showAlert","t","message","setWeb3Instance","Web3","account","getNetwork","bn","web3","eth","getBalance","useAppState","createHook","useIsAppConnected","selector","state","utils","isAddress","coingeckoIds","networks","id","bsc","poly","PriceOracle","prices","token","amount","tokenId","address","this","isZero","esdt","fetchPricesElrond","fetchPrices","mul","div","ether","positions","bynetwork","_","groupBy","p","Promise","all","ElrondMaiar","map","getAssets","concat","getRewardAssets","flatten","value","keys","filter","parseInt","networkId","addresses","isEmpty","coingeckoId","find","v","k","toString","fetch","join","response","json","result","mapKeys","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","accept","pragma","JSON","stringify","method","data","inputs","results","Error","merge","registry","oracle","types","args","type","current","startsWith","Address","fromString","e","isElrondAddress","PositionFactory","Severity","erc20s","erc20sOrig","UNIC","erc20","XUNIC","Unicly_UPUNK","Unicly_UJENNY","Unicly_LP_UPUNK_ETH","require","Unicly_LP_UJENNY_ETH","REVA","contracts","contractsOrig","Unicly_XUnicVault","contract","Revault_Farm","Farm","asset0","asset1","lpToken","poolId","masterchef","Pancakeswap_Masterchef","cake","CAKE","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getData","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","options","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","tx","useLegacyTx","encodeABI","from","send","deposit","Pancakeswap","AaveLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","Aave_stkAAVE","aave","AAVE","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","Aave_aUSDC","claimRewardsToOwner","CompoundLoop","WARN_LIQUIDITY_PERCENT_OF_SUPPLY","COMP","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","Compound_cUSDC","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","Loops","SingleVault","revault","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","getArgs","getHealth","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","revaChef","chef","tokens","tvlBusd","WBNB","BUSD","supportedVaults","abi","encodeFunctionSignature","vaults","getUserVaultPrincipal","Revault","uPunks","lp","uJenny","XUnicFarm","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","poolInfo","getxUNICRate","xunicrate","totalLPTokens","Unicly","register","Pancakeswap_LP_BUSD_BNB","Pancakeswap_LP_CAKE_BNB","ORBS","Pancakeswap_LP_ORBS_BUSD","BTCB","Pancakeswap_LP_BTCB_BNB","DOT","Pancakeswap_LP_DOT_BNB","ADA","Pancakeswap_LP_ADA_BNB","LINK","Pancakeswap_LP_LINK_BNB","DOGE","Pancakeswap_LP_DOGE_BNB","Strategies","USDC_EGLD","MEX_EGLD","STORAGE_KEY","loadFromStorage","parse","localStorage","getItem","saveToStorage","setItem","AllPositionsState","load","dispatch","addPosition","getState","position","create","delete","posId","sendTransaction","harvest","console","log","warmup","values","catch","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","health","fmtHealth","fmt18","reduce","sum","add","split","useAllPositions","length","AddPositionDialogState","show","valid","allTypes","sort","closeDialog","setType","isValidInput","setAddress","useAddPositionDialog","AddPositionBtn","isConnected","Button","variant","size","disabled","onClick","AddPositionDialog","appStateActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","style","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","onChange","target","MenuItem","TextField","DialogActions","AppHeader","fontSize","display","flexDirection","justifyContent","ConnectBtn","WalletInfo","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","indexOf","BN","positionMethods","selectedMethodArgTypes","assets","rewardAssets","positionData","columns","field","headerName","width","align","AllPositionsTable","appState","appActions","rows","positionDialogActions","useEffect","height","minHeight","onCellClick","PositionDialog","allPositionsActions","DialogContentText","argType","autoFocus","margin","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","href","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","hidden","maxWidth","left","top","Geom1","Geom2","document","getElementById","shortname","provider","ProxyProvider","timeout","pool","farm","balanceEGLD","pair","SmartContract","getAccount","r","getAddressEsdtList","base64","esdts","lpTotalStakedInFarm","farmNftTotalSupply","token0Id","farmNfts","creator","farmNftBalance","nft","b","farmNftPercentOfSupply","lpBalance","token0r","token1r","percentOfPool","dec","token1","decimals","zeroAddress","s","Buffer","fn","runQuery","func","ContractFunction","returnData","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","Object","resolve","module","exports"],"mappings":"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","file":"static/js/main.fe67699a.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, bn, getNetwork, Network, setWeb3Instance, web3, zero } from \"@defi.org/web3-candies\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    loading: false,\n    wallet: \"\",\n    balance: zero,\n    network: {} as Network,\n\n    alertDialog: \"\",\n  },\n\n  actions: {\n    connect:\n      () =>\n      async ({ setState }) => {\n        await _withLoading(setState, async () => {\n          setState({ wallet: \"\", balance: zero, network: {} as Network });\n\n          const ethereum = (window as any).ethereum;\n          if (!ethereum) {\n            alert(\"install metamask\");\n            return;\n          }\n          await _onConnect(setState, ethereum);\n\n          ethereum.on(\"accountsChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n          ethereum.on(\"chainChanged\", () => {\n            _onConnect(setState, ethereum);\n          });\n        });\n      },\n\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n  },\n});\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any, ethereum: any) {\n  setWeb3Instance(new Web3(ethereum));\n  const wallet = await account();\n  setState({\n    wallet,\n    network: await getNetwork(),\n    balance: bn(await web3().eth.getBalance(wallet)),\n  });\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet),\n});\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./Position\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network } from \"@defi.org/web3-candies\";\nimport Web3 from \"web3\";\nimport { Address } from \"@elrondnetwork/erdjs/out\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => Position;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): Position | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = args.type + \":\" + args.address;\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: Position, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidInput(type: string, address: string) {\n    return !!type && (Web3.utils.isAddress(address) || isElrondAddress(type, address));\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\") && !Address.fromString(address).isEmpty();\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport Web3 from \"web3\";\nimport { bn18, ether, getNetwork, networks, Token } from \"@defi.org/web3-candies\";\nimport { Position } from \"./Position\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n};\n\nexport class PriceOracle {\n  prices: Record<string, BN> = {};\n\n  async valueOf(token: Token, amount: BN): Promise<BN> {\n    const id = (token as any).tokenId || token.address;\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if ((token as any).esdt) await this.fetchPricesElrond([id]);\n      else await this.fetchPrices((await getNetwork()).id, [id]);\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: Position[]) {\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n\n    await Promise.all([\n      this.fetchPricesElrond(\n        _(bynetwork[ElrondMaiar.network.id])\n          .map((p) => p.getAssets().concat(p.getRewardAssets()))\n          .flatten()\n          .map((a) => a.address)\n          .value()\n      ),\n      ..._(bynetwork)\n        .keys()\n        .filter((id) => parseInt(id) > 0)\n        .map((id) =>\n          this.fetchPrices(\n            id,\n            _(bynetwork[id])\n              .map((p) => p.getAssets().concat(p.getRewardAssets()))\n              .flatten()\n              .map((a) => a.address)\n              .value()\n          )\n        )\n        .value(),\n    ]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n    const response = await fetch(`https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`);\n    const json = (await response.json()) as Record<string, any>;\n\n    const result = _(json)\n      .mapKeys((v, k) => Web3.utils.toChecksumAddress(k))\n      .mapValues((v) => bn18(v.usd))\n      .value();\n\n    return this.updateResults(addresses, result);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    const body = {\n      variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n      query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n    };\n    const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n      headers: {\n        accept: \"*/*\",\n        \"cache-control\": \"no-cache\",\n        \"content-type\": \"application/json\",\n        pragma: \"no-cache\",\n      },\n      body: JSON.stringify(body),\n      method: \"POST\",\n    });\n    const json = await response.json();\n\n    const result = _(json.data)\n      .mapKeys((v, k) => body.variables[k])\n      .mapValues((v) => bn18(v))\n      .value();\n\n    return this.updateResults(tokenIds, result);\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import _ from \"lodash\";\nimport { erc20s as erc20sOrig, contracts as contractsOrig, erc20, contract } from \"@defi.org/web3-candies\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {\n  eth: {\n    UNIC: () => erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\"),\n    XUNIC: () => erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\"),\n\n    Unicly_UPUNK: () => erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n    Unicly_UJENNY: () => erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n    Unicly_LP_UPUNK_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n    Unicly_LP_UJENNY_ETH: () => erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n  },\n  bsc: {\n    REVA: () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\"),\n  },\n});\n\nexport const contracts = _.merge({}, contractsOrig, {\n  eth: {\n    Unicly_XUnicVault: () => contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\"),\n  },\n  bsc: {\n    Revault_Farm: () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\"),\n  },\n});\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, contracts, erc20s, getNetwork, networks, Token, zero } from \"@defi.org/web3-candies\";\nimport type { PancakeswapLPAbi } from \"@defi.org/web3-candies/typechain-abi/PancakeswapLPAbi\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // const POOL_ID_MAPPING_URL = \"https://raw.githubusercontent.com/pancakeswap/pancake-frontend/master/src/config/constants/farms.ts\";\n\n  export class Farm implements Position {\n    masterchef = contracts.bsc.Pancakeswap_Masterchef();\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLPAbi,\n      public poolId: number\n    ) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.bsc;\n    }\n\n    getAssets() {\n      return [this.asset0, this.asset1];\n    }\n\n    getRewardAssets() {\n      return [this.cake];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.masterchef.methods.deposit(this.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  id: string;\n  address: string;\n};\n\nexport interface Position {\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { Position, PositionArgs, Severity } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, bn18, contract, erc20s, ether, getNetwork, networks, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport _ from \"lodash\";\n\nexport namespace Loops {\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements Position {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.Aave_stkAAVE();\n    aave = erc20s.eth.AAVE();\n    weth = erc20s.eth.WETH();\n\n    data = {\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH,\n        value: this.data.totalCollateralValue,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.totalDebtETH,\n        value: this.data.totalDebtValue,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.aave, this.data.rewardAmount);\n\n      const atoken = erc20s.eth.Aave_aUSDC();\n      this.data.tvl = await this.oracle.valueOf(this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimRewardsToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements Position {\n    WARN_LIQUIDITY_PERCENT_OF_SUPPLY = 0.25; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20s.eth.COMP();\n\n    data = {\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance,\n        value: this.data.supplyBalance,\n      },\n      {\n        asset: this.asset,\n        amount: this.data.borrowBalance,\n        value: this.data.borrowBalance,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_SUPPLY).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const ctoken = erc20s.eth.Compound_cUSDC();\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.instance.methods.claimAndTransferAllCompToOwner().send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { account, bn, contract, getNetwork, networks, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s } from \"./consts\";\nimport _ from \"lodash\";\nimport { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\n\nexport namespace Revault {\n  export class SingleVault implements Position {\n    revault = contracts.bsc.Revault_Farm();\n    reva = erc20s.bsc.REVA();\n\n    data = {\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue] = await Promise.all([\n        this.oracle.valueOf(this.asset, this.data.amount),\n        this.oracle.valueOf(this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.asset, this.data.pending),\n      ]);\n\n      const chef = contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), await this.revault.methods.revaChef().call());\n      const { tvlBusd } = await chef.methods.tokens(this.asset.address).call();\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 },\n        [erc20s.bsc.BUSD().address]: { id: 1 },\n        [erc20s.bsc.CAKE().address]: { id: 2 },\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.getUserVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { Position, PositionArgs } from \"./base/Position\";\nimport { account, bn, ether, getNetwork, networks, Token, zero } from \"@defi.org/web3-candies\";\nimport { contracts, erc20s } from \"./consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\n\nexport namespace Unicly {\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20s.eth.Unicly_UPUNK(),\n      lp: erc20s.eth.Unicly_LP_UPUNK_ETH(),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20s.eth.Unicly_UJENNY(),\n      lp: erc20s.eth.Unicly_LP_UJENNY_ETH(),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements Position {\n    xfarm = contracts.eth.Unicly_XUnicVault();\n    unic = erc20s.eth.UNIC();\n    xunic = erc20s.eth.XUNIC();\n    eth = erc20s.eth.WETH();\n\n    data = {\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      if ((await getNetwork()).id !== this.getNetwork().id) return;\n\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call();\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await this.xfarm.methods.deposit(this.strategy.poolId, 0).send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" } as any);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s } from \"./consts\";\nimport { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\n\nexport function registerAllPositions() {\n  PositionFactory.register({\n    \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BUSD_BNB(), 252),\n    \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_CAKE_BNB(), 251),\n    \"bsc:Pancakeswap:Farm:ORBS/BUSD\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), erc20s.bsc.Pancakeswap_LP_ORBS_BUSD(), 416),\n    \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_BTCB_BNB(), 262),\n    \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOT_BNB(), 255),\n    \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_ADA_BNB(), 253),\n    \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_LINK_BNB(), 257),\n    \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Pancakeswap.Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), erc20s.bsc.Pancakeswap_LP_DOGE_BNB(), 376),\n\n    \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.CAKE()),\n    \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.BUSD()),\n    \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new Revault.SingleVault(args, oracle, erc20s.bsc.WBNB()),\n\n    \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n    \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n\n    \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n    \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n\n    \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.USDC_EGLD()),\n    \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, ElrondMaiar.Strategies.MEX_EGLD()),\n    // \"egld:Maiar:Farm:MEX\": (args, oracle) => new ElrondMaiar.Farm(args, oracle, [ElrondMaiar.tokens.MEX()]),\n  });\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { Position, PositionArgs, Threat } from \"../positions/base/Position\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\nimport { registerAllPositions } from \"../positions\";\nimport { fmt18, zero } from \"@defi.org/web3-candies\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nconst loadFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nconst saveToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, Position>,\n  },\n\n  actions: {\n    load:\n      () =>\n      async ({ dispatch }) => {\n        await dispatch(load);\n      },\n\n    addPosition:\n      (type: string, address: string) =>\n      async ({ getState, dispatch }) => {\n        const position = PositionFactory.create({ type, address, id: \"\" });\n        if (!position) {\n          alert(`unknown type ${type} at ${address}`);\n          return;\n        }\n\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        data[position.getArgs().id] = position.getArgs();\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    delete:\n      (posId: string) =>\n      async ({ getState, dispatch }) => {\n        const data = _.mapValues(getState().positions, (p) => p.getArgs());\n        delete data[posId];\n        saveToStorage(data);\n        await dispatch(load);\n      },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load({ getState, setState }: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD\");\n  const current = getState().positions;\n  const positions = _.mapValues(loadFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n  for (const id in positions) if (!positions[id]) delete positions[id];\n  await PositionFactory.oracle.warmup(_.values(positions));\n  await Promise.all(_.map(positions, (p) => p?.load().catch((e) => console.log(p.getArgs().type, e))));\n  setState({ positions });\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        health: fmtHealth(p.getHealth()),\n        value: \"$\" + fmt18(p.getAmounts().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        pending: \"$\" + fmt18(p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero)).split(\".\")[0],\n        tvl: \"$\" + fmt18(p.getTVL()).split(\".\")[0],\n        position: p,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nfunction fmtHealth(health: Threat[]) {\n  if (!health.length) return \"🟢\";\n  return health.map((t) => t.message).join(\"⚠️\");\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positions/base/PositionFactory\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidInput(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidInput(getState().type, address);\n        setState({ address, valid });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button variant={\"contained\"} size={\"large\"} disabled={!isConnected} onClick={() => actions.show()}>\n      Add Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appStateActions.withLoading(() => allPositionActions.addPosition(state.type, state.address)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { useAppState, useIsAppConnected } from \"../state/AppState\";\nimport { Button } from \"@mui/material\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nexport const AppHeader = () => (\n  <div style={{ fontSize: \"large\", minWidth: \"42em\" }}>\n    <br />\n    <br />\n\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ConnectBtn />\n\n      <AddPositionBtn />\n    </div>\n\n    <div />\n    <WalletInfo />\n    <div />\n\n    <br />\n  </div>\n);\n\nconst ConnectBtn = () => {\n  const [isConnected, actions] = useIsAppConnected();\n\n  return (\n    <Button variant={\"contained\"} size={\"large\"} onClick={actions.connect}>\n      {isConnected ? \"Refresh\" : \"Connect\"}\n    </Button>\n  );\n};\n\nconst WalletInfo = () => {\n  const [state] = useAppState();\n  return (\n    <div>\n      <p>Network 🌐 {state.network?.name}</p>\n      <p>Wallet 🔑 {state.wallet}</p>\n      <p>Balance 💰 {fmt18(state.balance)}</p>\n    </div>\n  );\n};\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { Position } from \"../positions/base/Position\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as Position | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: Position) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        showAlert(await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs)));\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), (v) => (v instanceof BN ? fmt18(v) : v)),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      positionData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\n\nconst columns: GridColDef[] = [\n  { field: \"type\", headerName: \"Type\", width: 300, align: \"left\" },\n  { field: \"health\", headerName: \"Health\", width: 60, align: \"center\" },\n  { field: \"value\", headerName: \"Market Value\", width: 100, align: \"right\" },\n  { field: \"pending\", headerName: \"Pending\", width: 100, align: \"right\" },\n  { field: \"tvl\", headerName: \"TVL\", width: 150, align: \"right\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n\n  useEffect(() => {\n    if (appState.network.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: \"100%\", minHeight: 500, width: \"90%\" }}>\n      <DataGrid rows={rows} columns={columns} onCellClick={click} />\n    </div>\n  );\n};\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.positionData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useAppState } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [state] = useAppState();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={state.loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Position, PositionArgs } from \"./base/Position\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, ether, to18, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { Address, ContractFunction, ProxyProvider, SmartContract } from \"@elrondnetwork/erdjs/out\";\nimport _ from \"lodash\";\n\nexport namespace ElrondMaiar {\n  export const network = { id: -508, name: \"Elrond\", shortname: \"egld\" };\n\n  const provider = new ProxyProvider(\"https://gateway.elrond.com\", { timeout: 60 * 1000 });\n\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"EGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string };\n  export const Strategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\",\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\",\n    }),\n  };\n\n  export class Farm implements Position {\n    data = {\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      balanceEGLD: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getArgs = () => this.args;\n\n    getNetwork = () => network;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [tokens.MEX()];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.assets[0],\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.strategy.assets[1],\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const account = new Address(this.args.address);\n      const pair = new SmartContract({ address: new Address(this.strategy.pool) });\n      const farm = new SmartContract({ address: new Address(this.strategy.farm) });\n\n      const [balanceEGLD, esdts, lpTotalStakedInFarm, farmNftTotalSupply, token0Id, reserves] = await Promise.all([\n        provider.getAccount(account).then((r) => bn(r.balance.toString())),\n        provider.getAddressEsdtList(account),\n        call(farm, \"getFarmingTokenReserve\").then((r) => base64(r[0])),\n        call(farm, \"getFarmTokenSupply\").then((r) => base64(r[0])),\n        call(pair, \"getFirstTokenId\").then((r) => r[0]),\n        call(pair, \"getReservesAndTotalSupply\").then((r) => r.map(base64)),\n      ]);\n      this.data.balanceEGLD = balanceEGLD;\n\n      const farmNfts = _.filter(esdts, (v) => v.creator === this.strategy.farm);\n      const farmNftBalance = farmNfts.map((nft) => bn(nft.balance)).reduce((sum, b) => sum.add(b), zero);\n      const farmNftPercentOfSupply = farmNftBalance.mul(ether).div(farmNftTotalSupply);\n      const lpBalance = lpTotalStakedInFarm.mul(farmNftPercentOfSupply).div(ether);\n\n      const [token0r, token1r, totalSupply] = reserves;\n      const percentOfPool = lpBalance.mul(ether).div(totalSupply);\n      const token0 = to18(this.strategy.assets[0].tokenId === token0Id[0] ? token0r : token1r, this.strategy.assets[0].dec);\n      const token1 = to18(this.data.amount0 === token0r ? token1r : token0r, this.strategy.assets[1].dec);\n      this.data.amount0 = percentOfPool.mul(token0).div(ether);\n      this.data.amount1 = percentOfPool.mul(token1).div(ether);\n      [this.data.value0, this.data.value1, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.strategy.assets[0], this.data.amount0),\n        this.oracle.valueOf(this.strategy.assets[1], this.data.amount1),\n        this.oracle.valueOf(this.strategy.assets[0], token0.muln(2).mul(lpTotalStakedInFarm).div(totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  function base64(s: string) {\n    return bn(Buffer.from(s, \"base64\").toString(\"hex\"), 16);\n  }\n\n  function base64Str(s: string) {\n    return Buffer.from(s, \"base64\").toString(\"utf8\");\n  }\n\n  function call(contract: SmartContract, fn: string) {\n    return contract.runQuery(provider, { func: new ContractFunction(fn) }).then((r) => r.returnData);\n  }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n","var map = {\n\t\"./bls.js\": 480,\n\t\"./bls_c.js\": 481\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 975;"],"sourceRoot":""}