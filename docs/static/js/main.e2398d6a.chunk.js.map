{"version":3,"sources":["assets/orbs.png","assets/logo.svg","assets/list-icon1.svg","assets/list-icon2.svg","assets/list-icon3.svg","assets/list-icon4.svg","assets/list-icon5.svg","assets/dotted-line.svg","assets/geom1.png","assets/geom2.png","positionsv1/base/consts.ts","state/AppState.ts","positionsv1/base/PositionFactory.ts","ui/AppHeader.tsx","positionsv1/base/PriceOracle.ts","positionsv1/Pancakeswap.ts","positionsv1/base/PositionV1.ts","positionsv1/Loops.ts","positionsv1/Revault.ts","positionsv1/Unicly.ts","positionsv1/TokenBalances.ts","positionsv1/Uniswap.ts","positionsv1/OffChain.ts","positionsv1/AlphaHomora.ts","positionsv1/Balancer.ts","positionsv1/ElrondMaiar.ts","positionsv1/TraderJoe.ts","positionsv1/Ribbon.ts","positionsv1/LooksRare.ts","positionsv1/SushiSwap.ts","positionsv1/Fodl.ts","positionsv1/QuickSwap.ts","positionsv1/Pangolin.ts","positionsv1/Rook.ts","positionsv1/Aave.ts","positionsv1/SpookySwap.ts","positionsv1/SpiritSwap.ts","positionsv1/Bitcoin.ts","positionsv1/Liquity.ts","positionsv1/Raydium.ts","positionsv1/index.ts","state/AllPositionsState.ts","state/PositionDialogState.ts","state/AddPositionDialogState.ts","ui/AddPositionDialog.tsx","ui/AllPositionsTable.tsx","ui/PositionDialog.tsx","ui/AlertDialog.tsx","ui/ImportExport.tsx","App.tsx","index.tsx","Homepage.tsx"],"names":["erc20s","_","merge","erc20sOrig","networks","networksOrig","off","id","name","shortname","btc","egld","sol","currentNetwork","netId","bn","window","ethereum","chainId","toNumber","console","log","find","n","sendWithTxType","tx","useLegacyTx","account","from","type","send","isNetworkDisabled","network","AppState","createStore","initialState","allNetworks","loading","wallet","alertDialog","actions","withLoading","thunk","setState","_withLoading","showAlert","alert","clickNetwork","networkId","getState","_ethereum","removeAllListeners","on","_onConnect","request","method","_switchNetwork","t","message","stack","setWeb3Instance","Web3","Error","params","utils","numberToHex","useAppState","createHook","useIsAppConnected","selector","state","isAddress","useIsLoading","useAppActions","AppHeader","style","display","flexDirection","justifyContent","margin","ToggleButtonGroup","value","exclusive","onChange","p","parseInt","target","map","ToggleButton","textTransform","disabled","coingeckoIds","eth","bsc","poly","arb","avax","oeth","ftm","PriceOracle","warm","prices","USD","ether","token","tokenId","symbol","coingeckoId","address","price","this","getId","amount","isZero","fetchPricesElrond","fetchCoingeckoPrices","fetchPrices","toString","zero","mul","div","positions","bynetwork","groupBy","getNetwork","coingeckoFetches","keys","filter","getAssets","concat","getRewardAssets","flatten","a","uniq","elrondFetch","Promise","all","addresses","isEmpty","v","k","url","join","fetch","response","json","result","mapKeys","web3","toChecksumAddress","mapValues","bn18","usd","updateResults","tokenIds","body","variables","i","query","headers","JSON","stringify","data","inputs","results","registry","oracle","types","args","uniqueId","current","startsWith","e","isElrondAddress","trim","length","isOffChainSymbol","isBitcoinAddress","isSolanaAddress","PositionFactory","Severity","register","Farm","BUSD","WBNB","erc20","require","CAKE","BTCB","DOT","ADA","LINK","DOGE","LP","ORBS","asset0","asset1","lpToken","poolId","masterchef","contract","cake","chef","options","lp","amount0","amount1","value0","value1","rewardAmount","rewardValue","tvl","getName","getArgs","getData","getHealth","getAmounts","asset","getPendingRewards","getTVL","getContractMethods","functions","methods","userInfo","call","getReserves","token0","totalSupply","pendingCake","balanceOf","reserves","pending","lpStaked","_reserve0","_reserve1","r0","toLowerCase","r1","amountLP","mantissa","valueOf","muln","encodeABI","deposit","then","total0","total1","val0","val1","add","Pancakeswap","Loops","AaveLoop","CompoundLoop","WARN_HEALTH_FACTOR","instance","USDC","rewardAsset","aave","weth","WETH","healthFactor","totalCollateralETH","totalCollateralValue","totalDebtETH","totalDebtValue","sub","lt","severity","Critical","getPositionData","posData","getBalanceReward","atoken","owner","claimRewardsToOwner","WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL","borrowBalance","supplyBalance","accountLiquidity","accountShortfall","minLiquidity","divn","ctoken","exchangeRateCurrent","balanceOfUnderlying","borrowBalanceCurrent","getAccountLiquidityWithInterest","exchangeRate","underlyingBalance","liquidity","to18","claimAndTransferAllCompToOwner","SingleVault","RevaStake","REVA","revault","reva","pendingValue","pendingReva","pendingRevaValue","vaultId","vaultHarvestPayload","findVault","vault","principal","payload","harvestVault","returnedRevaAmount","returnedTokenAmount","tokens","info","tvlBusd","supportedVaults","abi","encodeFunctionSignature","vaults","userVaultPrincipal","staking","pendingAmount","userPoolInfo","poolInfo","Revault","Unicly","XUnicFarm","Strategies","uPunks","uJenny","strategy","xfarm","unic","xunic","amountAsset","amountETH","valueAsset","valueETH","pendingxUNICs","getxUNICRate","xunicrate","totalLPTokens","TokenBalance","mcap","nativeTokens","WMATIC","WAVAX","NativeTokenBalance","getBalance","forEach","input","TokenBalances","maxUint128","pow","subn","V3LP","WBTC","token1","nftPositionManager","nftManager","principal0","principal1","valueIfHodl","valueNow","ilValue","il","pending0","pending1","pendingValue0","pendingValue1","totalFeesValue","High","gt","pos","decreaseLiquidity","maxUint256","res","loadFromPositionGraph","loadTVL","fee","collect","position","pool","totalValueLockedUSD","depositedToken0","withdrawnToken0","depositedToken1","withdrawnToken1","principalValue0","principalValue1","collectedFeesToken0","collectedValue0","collectedFeesToken1","collectedValue1","factory","getPool","a0","a1","v0","v1","Uniswap","AssetPosition","zeroAddress","OffChain","LYF","WETHe","WBTCe","alphaHomoraBank","maxHistoryBlocks","supply0","supply1","borrow0","borrow1","ilAmount","debtRatio","getPositionInfo","lpSupplied","collateralSize","farmAbi","internalType","outputs","stateMutability","nft","collToken","getUnderlyingToken","collId","totalLPs","share","getPositionDebts","debts","indexOf","totalValue0","totalValue1","AlphaHomora","DAI","USDT","overridePrice","balToken","balV2","gaugeAddress","gauge","bal","amounts","values","loadFromPool","lp_token","lpTokenAddress","workingBalance","totalWorkingBalance","claimable_tokens","catch","claimable_reward_write","bpt","totalBptsStaked","bptTotalSupply","bptBalance","getPoolTokens","poolTokens","every","eqIgnoreCase","balances","poolAmounts","poolValues","reduce","sum","b","x","Balancer","esdt","USDC_EGLD","assets","farm","L_USDC_EGLD","MEX_EGLD","L_MEX_EGLD","mex","lpBalanceStaked","getESDTs","getTotalSupply","farmEsdts","pairEsdts","totalLPSupply","totalLPStaked","tokenIdentifier","balance","asset0InPair","asset1InPair","asset0TotalValue","asset1TotalValue","esdts","lpNameSuffix","split","lps","MexFarm","MEX","L_MEX","totalAssetStaked","farmNftWrapper","creator","decimals","dec","get","ElrondMaiar","FarmStrategies","MexFarmStrategies","masterchefAddress","reward","pendingTokens","lpTotalSupply","lpAmount","pendingJoe","lpAddress","TraderJoe","ThetaVault","rewardTokens","vaultAddress","rewardToken","strike","depositReceipts","unredeemedShares","liquidityGauge","pricePerShare","fbalance","fratio","staked","totalBalance","total","currentOption","bn9","Ribbon","Staking","AutoCompund","looks","checkPending","calculateSharesValueInLOOKS","calculatePendingRewards","totalShares","calculateSharePriceInLOOKS","stakedLooks","pendingEth","sharePrice","tvlAmount","LooksRare","getFarmContract","getRewardContract","pendingSushi","SushiSwap","Fodl","XFodlStake","fodl","xfodl","myXfodl","xfodlTotalSupply","fodlStaked","orbs","stakingAddress","earned","stakingToken","stakedBalance","totalStaked","amount0InLp","amount1InLp","totalLpSupply","tvl_amount0","tvl_amount1","tvl_value0","tvl_value1","stake","QuickSwap","pendingReward","Pangolin","XRook","rook","xrook","totalValueLocked","Rook","Collateral","aToken","Aave","boo","pendingBOO","SpookySwap","SpiritSwap","BitcoinBalance","bech32","fetchTVL","fetchBalance","fetchPrice","r","convertDecimals","parseFloat","Bitcoin","Pool","CDP","lusd","lqty","manager","CR_LIQUIDATION","CR_RECOVERY","debt","cr","ltv","liquidationPrice","entireSystemDebt","entireSystemCR","recoveryMode","lte","to3","getEntireDebtAndColl","getEntireSystemColl","getEntireSystemDebt","checkRecoveryMode","systemColl","systemDebt","coll","crWithGasFeeRebate","pendingRewardValue","pendingETH","pendingETHValue","getTotalLUSDDeposits","getCompoundedLUSDDeposit","getDepositorLQTYGain","getDepositorETHGain","totalDeposits","rewards","withdrawFromSP","Liquity","tokenName","lpMintAddress","amountToken","amountSol","valueToken","valueSol","fetchLpAmount","fetchLpInfo","lpInfo","totalLps","tokenAmountLp","totalTokens","tokenAmountCoin","totalSol","tokenAmountPc","totalTokensValue","totalSolValue","pairs","lpMint","jsonrpc","mint","encoding","it","parsed","tokenAmount","Raydium","STORAGE_KEY","loadPositionsFromStorage","parse","localStorage","getItem","savePositionsToStorage","setItem","AllPositionsState","load","api","addPosition","create","update","newArgs","delete","posId","sendTransaction","harvest","warmup","shouldLoad","loaded","useAllPositionsActions","useAllPositionRows","createSelector","sortBy","chain","health","marketValue","num","useAllPositions","useAllPositionsValuePerPosition","Math","round","rows","sorted","labels","useAllPositionsValuePerAssetClass","reduced","ext","includes","assetClass","key","ac","useAllPositionsValuePerChain","grouped","totalPerChain","totalMarketValue","grandtotal","PositionDialogState","useLegacy","selectedMethod","selectedMethodArgs","showPosition","closeDialog","selectMethod","setMethodArg","index","arg","setUseLegacy","callContract","usePositionDialogActions","usePositionDialogSelector","m","endsWith","substring","fmtData","positionMethods","selectedMethodArgTypes","rewardAssets","rawData","isArray","BN","fmt18","AddPositionDialogState","show","valid","allTypes","sort","setType","isValidArgs","setAddress","setInput","setName","useAddPositionDialog","AddPositionBtn","isConnected","Button","onClick","AddPositionDialog","appActions","allPositionActions","close","Dialog","open","onClose","DialogTitle","minWidth","DialogContent","FormControl","fullWidth","InputLabel","Select","label","MenuItem","TextField","variant","DialogActions","size","ChartJS","ArcElement","Tooltip","Legend","columns","field","headerName","headerAlign","width","align","valueFormatter","commafy","toFixed","sortable","AllPositionsTable","appState","positionDialogActions","totalValuesPerChain","valuesPerPosition","valuesPerAssetClass","useEffect","height","ListItemText","datasets","backgroundColor","colorOf","responsive","plugins","legend","DataGrid","onCellClick","autoHeight","hideFooter","bgColors","PositionDialog","appStateActions","allPositionsActions","DialogContentText","argType","autoFocus","FormGroup","FormControlLabel","control","Switch","checked","memAlert","AlertDialog","whiteSpace","exportPositionsJson","fileName","fileType","blob","Blob","document","createElement","download","href","URL","createObjectURL","dispatchEvent","MouseEvent","view","bubbles","cancelable","remove","downloadFile","Date","toISOString","importPositionsJson","accept","hidden","addEventListener","file","files","reader","FileReader","onload","str","location","reload","readAsText","ImportExport","ButtonGroup","darkTheme","createTheme","palette","mode","Loading","Backdrop","sx","color","zIndex","theme","modal","CircularProgress","ReactDOM","render","StrictMode","path","component","ThemeProvider","className","paddingTop","marginTop","src","OrbsLogo","alt","DeFiLogo","LI1","LI2","LI3","LI4","LI5","DotLine","maxWidth","left","top","Geom1","Geom2","getElementById"],"mappings":"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","file":"static/js/main.e2398d6a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/orbs.edf8d68f.png\";","export default __webpack_public_path__ + \"static/media/logo.c2738899.svg\";","export default __webpack_public_path__ + \"static/media/list-icon1.18bcd298.svg\";","export default __webpack_public_path__ + \"static/media/list-icon2.4b928706.svg\";","export default __webpack_public_path__ + \"static/media/list-icon3.596f4d83.svg\";","export default __webpack_public_path__ + \"static/media/list-icon4.cd9ac7ff.svg\";","export default __webpack_public_path__ + \"static/media/list-icon5.5be90266.svg\";","export default __webpack_public_path__ + \"static/media/dotted-line.a7040ce9.svg\";","export default __webpack_public_path__ + \"static/media/geom1.75a84b0d.png\";","export default __webpack_public_path__ + \"static/media/geom2.3a3b2e04.png\";","import _ from \"lodash\";\nimport { account, bn, erc20abi, erc20s as erc20sOrig, networks as networksOrig, web3 } from \"@defi.org/web3-candies\";\nimport { ContractCallContext, Multicall } from \"ethereum-multicall\";\n\nexport const erc20s = _.merge({}, erc20sOrig, {});\n\nexport const networks = _.merge({}, networksOrig, {\n  off: { id: -1, name: \"OffChain\", shortname: \"off\" },\n  btc: { id: -2, name: \"Bitcoin\", shortname: \"btc\" },\n  egld: { id: -508, name: \"Elrond\", shortname: \"egld\" },\n  sol: { id: -600, name: \"Solana\", shortname: \"sol\" },\n});\n\nexport async function currentNetwork() {\n  const netId = bn((window as any).ethereum.chainId, 16).toNumber();\n  console.log(\"detected networkId\", netId);\n  return _.find(networks, (n) => n.id === netId);\n}\n\nexport async function sendWithTxType(tx: any, useLegacyTx: boolean) {\n  await tx.send({ from: await account(), type: useLegacyTx ? \"0x0\" : \"0x2\" });\n}\n\nexport async function performMulticallBalanceOf(wallet: string, tokens: string[]) {\n  if (!tokens.length) return [];\n  try {\n    const multicall = new Multicall({ web3Instance: web3(), tryAggregate: true });\n    const calls = _.map(\n      tokens,\n      (t) =>\n        ({\n          reference: t,\n          contractAddress: t,\n          abi: erc20abi,\n          calls: [{ reference: t, methodName: \"balanceOf\", methodParameters: [wallet] }],\n        } as ContractCallContext)\n    );\n    const result = await multicall.call(calls);\n\n    return _.map(result.results, (v) => {\n      const t = _.find(tokens, (t) => t === v.callsReturnContext[0].reference)!;\n      return { address: t, balance: bn(v.callsReturnContext[0].returnValues[0].hex || \"\", 16) };\n    });\n  } catch (e) {\n    return tokens;\n  }\n}\n","import Web3 from \"web3\";\nimport { createHook, createStore } from \"react-sweet-state\";\nimport { account, Network, setWeb3Instance } from \"@defi.org/web3-candies\";\nimport { currentNetwork, networks } from \"../positionsv1/base/consts\";\n\n// defaults.middlewares.add((storeState: any) => (next: any) => (arg: any) => {\n//   const result = next(arg);\n//   console.log(storeState.key, \":\", storeState.getState());\n//   return result;\n// });\n\nexport function isNetworkDisabled(network?: Network) {\n  return !network || network.id < 0;\n}\n\nconst AppState = createStore({\n  name: \"AppState\",\n\n  initialState: {\n    allNetworks: networks,\n    loading: false,\n    wallet: \"\",\n    network: null as Network | null,\n    alertDialog: \"\",\n  },\n\n  actions: {\n    withLoading:\n      (thunk: () => any) =>\n      async ({ setState }) => {\n        await _withLoading(setState, thunk);\n      },\n\n    showAlert:\n      (alert: string) =>\n      async ({ setState }) => {\n        setState({ alertDialog: alert });\n      },\n\n    clickNetwork:\n      (networkId: number) =>\n      async ({ setState, getState }) => {\n        await _withLoading(setState, async () => {\n          if (!_ethereum()) {\n            alert(\"install metamask\");\n            return;\n          }\n\n          _ethereum().removeAllListeners();\n          _ethereum().on(\"chainChanged\", async () => {\n            await _onConnect(setState);\n          });\n\n          await _ethereum().request({ method: \"eth_requestAccounts\" });\n\n          await _switchNetwork(networkId);\n\n          if (!getState().network || getState().network?.id === networkId) {\n            await _onConnect(setState);\n          }\n        });\n      },\n  },\n});\n\nfunction _ethereum() {\n  return (window as any).ethereum;\n}\n\nasync function _withLoading(setState: any, t: () => Promise<void>) {\n  try {\n    setState({ loading: true });\n    await t();\n  } catch (e: any) {\n    alert(`${e.message} ${e.stack}`);\n  } finally {\n    setState({ loading: false });\n  }\n}\n\nasync function _onConnect(setState: any) {\n  setState({ wallet: \"\", network: null });\n\n  setWeb3Instance(new Web3(_ethereum()));\n  const wallet = await account();\n  const network = await currentNetwork();\n  console.log(\"onConnect: network\", network);\n\n  if (isNetworkDisabled(network)) throw new Error(`network ${network?.name} not supported yet`);\n\n  setState({ wallet, network });\n}\n\nasync function _switchNetwork(networkId: number) {\n  try {\n    await _ethereum().request({\n      method: \"wallet_switchEthereumChain\",\n      params: [{ chainId: Web3.utils.numberToHex(networkId) }],\n    });\n  } catch (switchError) {\n    // This error code indicates that the chain has not been added to MetaMask.\n    // if (switchError.code === 4902) {\n    //   try {\n    //     await ethereum.request({\n    //       method: \"wallet_addEthereumChain\",\n    //       params: [{ chainId: network.id, rpcUrl: network. }],\n    //     });\n    //   } catch (addError) {\n    //     // handle \"add\" error\n    //   }\n    // }\n    // handle other \"switch\" errors\n  }\n}\n\nexport const useAppState = createHook(AppState);\nexport const useIsAppConnected = createHook(AppState, {\n  selector: (state) => Web3.utils.isAddress(state.wallet) && !!state.network?.id,\n});\nexport const useIsLoading = createHook(AppState, {\n  selector: (state) => state.loading,\n});\nexport const useAppActions = createHook(AppState, {\n  selector: null,\n});\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./PositionV1\";\nimport { PriceOracle } from \"./PriceOracle\";\nimport { Network, web3 } from \"@defi.org/web3-candies\";\n\ntype Factory = (args: PositionArgs, oracle: PriceOracle) => PositionV1;\n\nconst registry = {} as Record<string, Factory>;\n\nexport namespace PositionFactory {\n  export const oracle = new PriceOracle();\n\n  export function register(types: Record<string, Factory>) {\n    _.merge(registry, types);\n  }\n\n  export function allTypes() {\n    return _.keys(registry);\n  }\n\n  export function create(args: PositionArgs): PositionV1 | null {\n    if (!registry[args.type]) return null;\n\n    if (!args.id) args.id = _.uniqueId(args.type + \":\" + args.address + \"-\" + args.name + \"-\");\n\n    return registry[args.type](args, oracle);\n  }\n\n  export function shouldLoad(p: PositionV1, current: Network) {\n    return p.getNetwork().id === current.id || p.getNetwork().id < 0; // non-web3 network\n  }\n\n  export function isValidArgs(type: string, address: string) {\n    return (\n      (!!type && (web3()?.utils?.isAddress(address) || isElrondAddress(type, address) || isOffChainSymbol(type, address))) ||\n      isBitcoinAddress(type, address) ||\n      isSolanaAddress(type, address)\n    );\n  }\n\n  function isElrondAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"egld:\") && address.startsWith(\"erd1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isOffChainSymbol(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:OffChain:Asset\") && _.trim(address).length > 0;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isBitcoinAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"x:Bitcoin\") && _.trim(address).length > 0 && address.startsWith(\"bc1\");\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function isSolanaAddress(type: string, address: string) {\n    try {\n      return type.startsWith(\"sol:\") && _.trim(address).length === 44;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n","import React from \"react\";\nimport { isNetworkDisabled, useAppState } from \"../state/AppState\";\nimport { ToggleButton, ToggleButtonGroup } from \"@mui/material\";\nimport _ from \"lodash\";\n\nexport const AppHeader = () => {\n  const [state, actions] = useAppState();\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\", margin: 24 }}>\n      <ToggleButtonGroup value={state.network?.id} exclusive onChange={(p: any) => actions.clickNetwork(parseInt(p.target.value))}>\n        {_.map(state.allNetworks, (network) => (\n          <ToggleButton value={network.id} key={network.shortname} style={{ textTransform: \"none\" }} disabled={isNetworkDisabled(network)}>\n            {network.name}\n          </ToggleButton>\n        ))}\n      </ToggleButtonGroup>\n    </div>\n  );\n};\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { bn18, ether, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1 } from \"./PositionV1\";\nimport { ElrondMaiar } from \"../ElrondMaiar\";\nimport { networks } from \"./consts\";\nimport { OffChain } from \"../OffChain\";\nimport { Raydium } from \"../Raydium\";\n\nconst coingeckoIds = {\n  [networks.eth.id]: \"ethereum\",\n  [networks.bsc.id]: \"binance-smart-chain\",\n  [networks.poly.id]: \"polygon-pos\",\n  [networks.arb.id]: \"arbitrum-one\",\n  [networks.avax.id]: \"avalanche\",\n  [networks.oeth.id]: \"optimistic-ethereum\",\n  [networks.ftm.id]: \"fantom\",\n};\n\nexport class PriceOracle {\n  warm = false;\n  prices: Record<string, BN> = {\n    USD: ether,\n  };\n\n  getId(networkId: number, token: Token) {\n    if (networkId === networks.egld.id) return (token as ElrondMaiar.ESDT).tokenId;\n    if (networkId === networks.off.id) return (token as OffChain.Asset).symbol;\n    if (networkId === networks.sol.id) return (token as Raydium.SolToken).coingeckoId;\n    return token.address;\n  }\n\n  overridePrice(networkId: number, token: Token, price: BN) {\n    this.prices[this.getId(networkId, token)] = price;\n  }\n\n  async valueOf(networkId: number, token: Token, amount: BN): Promise<BN> {\n    const id = this.getId(networkId, token);\n\n    if (!this.prices[id] || this.prices[id].isZero()) {\n      if (networkId === networks.egld.id) await this.fetchPricesElrond([id]);\n      else if (networkId === networks.sol.id) await this.fetchCoingeckoPrices([id]);\n      else await this.fetchPrices(networkId, [id]);\n    }\n\n    if (!this.prices[id]) {\n      console.log(`no price for ${token.name} ${token.address} for amount ${amount.toString()} on ${networkId}`);\n      return zero;\n    }\n\n    return amount.mul(this.prices[id]).div(ether);\n  }\n\n  async warmup(positions: PositionV1[]) {\n    if (this.warm) return;\n    this.warm = true;\n    const bynetwork = _.groupBy(positions, (p) => p.getNetwork().id);\n    console.log(\"warming up prices for\", bynetwork);\n\n    const coingeckoFetches = _(bynetwork)\n      .keys()\n      .filter((id) => parseInt(id) > 0)\n      .map((id) =>\n        this.fetchPrices(\n          id,\n          _(bynetwork[id])\n            .map((p) => p.getAssets().concat(p.getRewardAssets()))\n            .flatten()\n            .map((a) => a.address)\n            .uniq()\n            .value()\n        )\n      )\n      .value();\n\n    const elrondFetch = this.fetchPricesElrond(\n      _(bynetwork[networks.egld.id])\n        .map((p) => p.getAssets().concat(p.getRewardAssets()))\n        .flatten()\n        .map((a) => (a as any).tokenId)\n        .uniq()\n        .value()\n    );\n\n    await Promise.all([...coingeckoFetches, elrondFetch]);\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchPrices(networkId: number | string, addresses: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(addresses)) return {};\n    console.log(\"fetchPrices\", addresses);\n\n    try {\n      const coingeckoId = _.find(coingeckoIds, (v, k) => k === networkId.toString())!;\n      const url = `https://api.coingecko.com/api/v3/simple/token_price/${coingeckoId}?contract_addresses=${addresses.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapKeys((v, k) => web3().utils.toChecksumAddress(k))\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(addresses, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token ID\n   */\n  async fetchPricesElrond(tokenIds: string[]): Promise<{ [address: string]: BN }> {\n    if (_.isEmpty(tokenIds)) return {};\n    console.log(\"fetchPricesElrond\", tokenIds);\n\n    try {\n      const body = {\n        variables: _.mapKeys(tokenIds, (id, i) => `token${i}`),\n        query: `query (${_.map(tokenIds, (id, i) => `$token${i}: String!`).join(\", \")}) {\n              ${_.map(tokenIds, (id, i) => `token${i}: getTokenPriceUSD(tokenID: $token${i})`).join(\"\\n\")}\n            }`,\n      };\n\n      const response = await fetch(\"https://graph.maiar.exchange/graphql\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify(body),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      const result = _(json.data)\n        .mapKeys((v, k) => body.variables[k])\n        .mapValues((v) => bn18(v))\n        .value();\n\n      return this.updateResults(tokenIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  /**\n   * returns price in USD 18 decimals by token address\n   */\n  async fetchCoingeckoPrices(coingeckoIds: string[]): Promise<{ [ids: string]: BN }> {\n    if (_.isEmpty(coingeckoIds)) return {};\n    console.log(\"fetchCoingeckoPrices\", coingeckoIds);\n\n    try {\n      const url = `https://api.coingecko.com/api/v3/simple/price?ids=${coingeckoIds.join(\",\")}&vs_currencies=usd`;\n      const response = await fetch(url);\n      const json = (await response.json()) as Record<string, any>;\n\n      const result = _(json)\n        .mapValues((v) => bn18(v.usd))\n        .value();\n\n      return this.updateResults(coingeckoIds, result);\n    } catch (e) {\n      return {};\n    }\n  }\n\n  updateResults(inputs: any, results: { [p: string]: BN }) {\n    if (_.isEmpty(results)) throw new Error(`no price for ${inputs}`);\n    return _.merge(this.prices, results);\n  }\n}\n","import { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PancakeswapMasterchefV2Abi } from \"../../typechain-abi/PancakeswapMasterchefV2Abi\";\nimport { PancakeswapLpAbi } from \"../../typechain-abi/PancakeswapLpAbi\";\nimport _ from \"lodash\";\n\nexport namespace Pancakeswap {\n  // https://docs.pancakeswap.finance/code/migration/masterchef-v2/list-of-farms\n\n  export function register() {\n    const lp_BUSD_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BUSD/BNB\", \"0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_BTCB_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP BTCB/BNB\", \"0x61EB789d75A95CAa3fF50ed7E47b96c132fEc082\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_CAKE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP CAKE/BNB\", \"0x0eD7e52944161450477ee417DE9Cd3a859b14fD0\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ORBS_BUSD = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ORBS/BUSD\", \"0xB87b857670A44356f2b70337E0F218713D2378e8\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOT_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOT/BNB\", \"0xDd5bAd8f8b360d76d12FdA230F8BAF42fe0022CF\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_ADA_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP ADA/BNB\", \"0x28415ff2C35b65B9E5c7de82126b4015ab9d031F\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_LINK_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP LINK/BNB\", \"0x824eb9faDFb377394430d2744fa7C42916DE3eCe\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_DOGE_BNB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP DOGE/BNB\", \"0xac109C8025F272414fd9e2faA805a583708A017f\", require(\"../abi/PancakeswapLpAbi.json\"));\n    const lp_TON_BTCB = () => erc20<PancakeswapLpAbi>(\"Pancakeswap: LP TON/BTCB\", \"0x1893da6b92660b85538f58217808685b80fb083e\", require(\"../abi/PancakeswapLpAbi.json\"));\n\n    PositionFactory.register({\n      \"bsc:Pancakeswap:Farm:BUSD/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BUSD(), erc20s.bsc.WBNB(), lp_BUSD_BNB(), 3),\n      \"bsc:Pancakeswap:Farm:CAKE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.CAKE(), erc20s.bsc.WBNB(), lp_CAKE_BNB(), 2),\n      \"bsc:Pancakeswap:Farm:BTCB/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.BTCB(), erc20s.bsc.WBNB(), lp_BTCB_BNB(), 11),\n      \"bsc:Pancakeswap:Farm:DOT/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOT(), erc20s.bsc.WBNB(), lp_DOT_BNB(), 5),\n      \"bsc:Pancakeswap:Farm:ADA/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.ADA(), erc20s.bsc.WBNB(), lp_ADA_BNB(), 4),\n      \"bsc:Pancakeswap:Farm:LINK/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.LINK(), erc20s.bsc.WBNB(), lp_LINK_BNB(), 6),\n      \"bsc:Pancakeswap:Farm:DOGE/BNB\": (args, oracle) => new Farm(args, oracle, erc20s.bsc.DOGE(), erc20s.bsc.WBNB(), lp_DOGE_BNB(), 37),\n\n      \"bsc:Pancakeswap:LP:ORBS/BUSD\": (args, oracle) => new LP(args, oracle, erc20s.bsc.ORBS(), erc20s.bsc.BUSD(), lp_ORBS_BUSD()),\n      \"bsc:Pancakeswap:LP:TON/BTCB\": (args, oracle) => new LP(args, oracle, erc20(\"TON\", \"0x76A797A59Ba2C17726896976B7B3747BfD1d220f\"), erc20s.bsc.BTCB(), lp_TON_BTCB()),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<PancakeswapMasterchefV2Abi>(require(\"../abi/PancakeswapMasterchefV2Abi.json\"), \"0xa5f8C5Dbd5F286960b9d90548680aE5ebFf07652\");\n    cake = erc20s.bsc.CAKE();\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      lp: this.lpToken.address,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public lpToken: Token & PancakeswapLpAbi,\n      public poolId: number\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.bsc;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.cake];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.cake,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, lpStaked] = await Promise.all([\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.lpToken.methods.getReserves().call(),\n        this.lpToken.methods.token0().call(),\n        this.lpToken.methods.totalSupply().call(),\n        this.masterchef.methods.pendingCake(this.poolId, this.args.address).call(),\n        this.lpToken.methods.balanceOf(this.masterchef.options.address).call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.asset0.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      const amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = bn(pending);\n\n      this.data.amount0 = await this.asset0.mantissa(bn(r0).mul(amountLP).div(bn(totalSupply)));\n      this.data.amount1 = await this.asset1.mantissa(bn(r1).mul(amountLP).div(bn(totalSupply)));\n\n      [this.data.value0, this.data.value1, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.cake, this.data.rewardAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, bn(r1).muln(2).mul(bn(lpStaked)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), true);\n    }\n  }\n\n  class LP extends Farm {\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpToken: Token & PancakeswapLpAbi) {\n      super(args, oracle, asset0, asset1, lpToken, -1);\n    }\n\n    async load() {\n      const [total0, total1, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpToken.address).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpToken.address).call().then(this.asset1.mantissa),\n        this.lpToken.methods.totalSupply().call().then(this.lpToken.mantissa),\n      ]);\n      const amountLP = await this.lpToken.methods.balanceOf(this.args.address).call().then(this.lpToken.mantissa);\n      this.data.amount0 = total0.mul(amountLP).div(totalSupply);\n      this.data.amount1 = total1.mul(amountLP).div(totalSupply);\n\n      let val0, val1;\n      [this.data.value0, this.data.value1, val0, val1] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1),\n        this.oracle.valueOf(this.getNetwork().id, this.asset0, total0),\n        this.oracle.valueOf(this.getNetwork().id, this.asset1, total1),\n      ]);\n      this.data.tvl = val0.add(val1);\n    }\n  }\n}\n","import BN from \"bn.js\";\nimport { Network, Token } from \"@defi.org/web3-candies\";\n\nexport type PositionArgs = {\n  type: string;\n  address: string;\n  id: string;\n  input?: string;\n  name?: string;\n};\n\nexport interface PositionV1 {\n  getName(): string;\n  getArgs(): PositionArgs;\n  getNetwork(): Network;\n  getAssets(): Token[];\n  getRewardAssets(): Token[];\n\n  // TODO getGovernance\n  load(): Promise<void>;\n  getData(): { [key: string]: BN | string | number | BN[] };\n\n  getHealth(): Threat[];\n  getAmounts(): TokenAmount[];\n  getPendingRewards(): TokenAmount[];\n  getTVL(): BN;\n  // getAPR(): BN;\n\n  getContractMethods(): string[];\n  callContract(method: string, args: string[]): Promise<any>;\n  sendTransaction(method: string, args: string[], useLegacyTx: boolean): Promise<void>;\n  harvest(useLegacyTx: boolean): Promise<void>;\n}\n\nexport interface TokenAmount {\n  asset: Token;\n  /**\n   * ERC20 amount\n   */\n  amount: BN;\n  /**\n   * USD, 18 decimals\n   */\n  value: BN;\n}\n\nexport enum Severity {\n  Critical,\n  High,\n  Medium,\n  Low,\n}\n\nexport interface Threat {\n  severity: Severity;\n  message: string;\n}\n","import { PositionV1, PositionArgs, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20, erc20s, ether, to18, zero } from \"@defi.org/web3-candies\";\nimport type { AaveLoopAbi } from \"../../typechain-abi/AaveLoopAbi\";\nimport type { CompoundLoopAbi } from \"../../typechain-abi/CompoundLoopAbi\";\nimport type { AaveSAAVEAbi } from \"../../typechain-abi/AaveSAAVEAbi\";\nimport type { CompoundCTokenAbi } from \"../../typechain-abi/CompoundCTokenAbi\";\nimport _ from \"lodash\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Loops {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Loops:AaveLoop\": (args, oracle) => new Loops.AaveLoop(args, oracle),\n      \"eth:Loops:CompoundLoop\": (args, oracle) => new Loops.CompoundLoop(args, oracle),\n    });\n  }\n\n  /**\n   * Aave on Ethereum\n   */\n  export class AaveLoop implements PositionV1 {\n    WARN_HEALTH_FACTOR = bn18(\"1.0641\");\n\n    instance = contract<AaveLoopAbi>(require(\"../abi/AaveLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20<AaveSAAVEAbi>(\"stkAAVE\", \"0x4da27a545c0c5B758a6BA100e3a049001de870f5\", require(\"../abi/AaveSAAVEAbi.json\"));\n    aave = erc20(\"AAVE\", \"0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9\");\n    weth = erc20s.eth.WETH();\n\n    data = {\n      contract: this.instance.options.address,\n      healthFactor: zero,\n      totalCollateralETH: zero,\n      totalCollateralValue: zero,\n      totalDebtETH: zero,\n      totalDebtValue: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getHealth() {\n      if (!this.data.healthFactor.isZero() && this.data.healthFactor.lt(this.WARN_HEALTH_FACTOR)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Health Factor!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.totalCollateralETH.sub(this.data.totalDebtETH),\n        value: this.data.totalCollateralValue.sub(this.data.totalDebtValue),\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const posData = await this.instance.methods.getPositionData().call();\n      this.data.healthFactor = bn(posData.healthFactor);\n      this.data.totalCollateralETH = bn(posData.totalCollateralETH);\n      this.data.totalDebtETH = bn(posData.totalDebtETH);\n\n      this.data.totalCollateralValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalCollateralETH);\n      this.data.totalDebtValue = await this.oracle.valueOf(this.getNetwork().id, this.weth, this.data.totalDebtETH);\n      this.data.rewardAmount = bn(await this.instance.methods.getBalanceReward().call());\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.aave, this.data.rewardAmount);\n\n      const atoken = erc20(\"Aave: aUSDC\", \"0xBcca60bB61934080951369a648Fb03DF4F96263C\");\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.asset, await atoken.mantissa(await atoken.methods.totalSupply().call()));\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimRewardsToOwner(), useLegacyTx);\n    }\n  }\n\n  /**\n   * Compound on ethereum\n   */\n  export class CompoundLoop implements PositionV1 {\n    WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL = 0.005; // percent of total supply 0.25% => ex. $10M principal, $40M supply, $100k min liquidity\n\n    instance = contract<CompoundLoopAbi>(require(\"../abi/CompoundLoopAbi.json\"), this.args.address);\n    asset = erc20s.eth.USDC();\n    rewardAsset = erc20(\"COMP\", \"0xc00e94Cb662C3520282E6f5717214004A7f26888\");\n\n    data = {\n      contract: this.instance.options.address,\n      borrowBalance: zero,\n      supplyBalance: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      accountLiquidity: zero,\n      accountShortfall: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getArgs() {\n      return this.args;\n    }\n\n    getNetwork() {\n      return networks.eth;\n    }\n\n    getAssets() {\n      return [this.asset];\n    }\n\n    getRewardAssets() {\n      return [this.rewardAsset];\n    }\n\n    getData = () => this.data;\n\n    getAmounts = () => [\n      {\n        asset: this.asset,\n        amount: this.data.supplyBalance.sub(this.data.borrowBalance),\n        value: this.data.supplyBalance.sub(this.data.borrowBalance),\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    getPendingRewards = () => [\n      {\n        asset: this.rewardAsset,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getHealth() {\n      const minLiquidity = this.data.supplyBalance.muln(this.WARN_LIQUIDITY_PERCENT_OF_PRINCIPAL).divn(100);\n      if (!this.data.accountShortfall.isZero() || bn(this.data.accountLiquidity).lt(minLiquidity)) {\n        return [\n          {\n            severity: Severity.Critical,\n            message: \"Low Liquidity!\",\n          },\n        ];\n      }\n      return [];\n    }\n\n    async load() {\n      const ctoken = erc20<CompoundCTokenAbi>(\"Compound: cUSDC\", \"0x39AA39c021dfbaE8faC545936693aC917d5E7563\", require(\"../abi/CompoundCTokenAbi.json\"));\n      const [totalSupply, exchangeRate, underlyingBalance, borrowBalance, pending, liquidity] = await Promise.all([\n        ctoken.methods.totalSupply().call(),\n        ctoken.methods.exchangeRateCurrent().call(),\n        ctoken.methods.balanceOfUnderlying(this.args.address).call(),\n        this.instance.methods.borrowBalanceCurrent().call(),\n        this.instance.methods[\"claimComp()\"]().call(),\n        this.instance.methods.getAccountLiquidityWithInterest().call(),\n      ]);\n\n      this.data.supplyBalance = await this.asset.mantissa(underlyingBalance);\n      this.data.borrowBalance = await this.asset.mantissa(borrowBalance);\n      this.data.rewardAmount = bn(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardAsset, this.data.rewardAmount);\n      this.data.accountLiquidity = bn(liquidity.accountLiquidity);\n      this.data.accountShortfall = bn(liquidity.accountShortfall);\n\n      this.data.tvl = (await ctoken.mantissa(totalSupply)).mul(to18(exchangeRate, 16)).div(ether);\n    }\n\n    getContractMethods = () => _.functions(this.instance.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.instance.methods as any)[method](...args);\n      return await tx.call({ from: await this.instance.methods.owner().call() });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.instance.methods as any)[method](...args);\n      alert(`target:\\n${this.instance.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.instance.methods.claimAndTransferAllCompToOwner(), useLegacyTx);\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport type { RevaultFarmAbi } from \"../../typechain-abi/RevaultFarmAbi\";\nimport type { RevaultChefAbi } from \"../../typechain-abi/RevaultChefAbi\";\nimport type { RevaultStakingAbi } from \"../../typechain-abi/RevaultStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Revault {\n  export function register() {\n    PositionFactory.register({\n      \"bsc:Revault:SingleVault:CAKE\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.CAKE()),\n      \"bsc:Revault:SingleVault:BUSD\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.BUSD()),\n      \"bsc:Revault:SingleVault:BNB\": (args, oracle) => new SingleVault(args, oracle, erc20s.bsc.WBNB()),\n    });\n    for (let i = 0; i < 4; i++) {\n      PositionFactory.register({\n        [`bsc:Revault:RevaStaking:x${i + 1}`]: (args, oracle) => new RevaStake(args, oracle, i),\n      });\n    }\n  }\n\n  const REVA = () => erc20(\"REVA\", \"0x4FdD92Bd67Acf0676bfc45ab7168b3996F7B4A3B\");\n  const revaultFarm = () => contract<RevaultFarmAbi>(require(\"../abi/RevaultFarmAbi.json\"), \"0x2642fa04bd1f7250be6539c5bDa36335333d9Ccd\");\n  const revaultChef = () => contract<RevaultChefAbi>(require(\"../abi/RevaultChefAbi.json\"), \"0xd7550285532f1642511b16Df858546F2593d638B\");\n  const revaStaking = () => contract<RevaultStakingAbi>(require(\"../abi/RevaultStakingAbi.json\"), \"0x8B7b2a115201ACd7F95d874D6A9432FcEB9C466A\");\n\n  class SingleVault implements PositionV1 {\n    revault = revaultFarm();\n    chef = revaultChef();\n    reva = REVA();\n\n    data = {\n      revault: this.revault.options.address,\n      chef: this.chef.options.address,\n      amount: zero,\n      value: zero,\n      pending: zero,\n      pendingValue: zero,\n      pendingReva: zero,\n      pendingRevaValue: zero,\n      tvl: zero,\n      vaultId: 0,\n      vaultHarvestPayload: \"\",\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset: Token) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.asset];\n\n    getRewardAssets = () => [this.asset, this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [\n      { asset: this.asset, amount: this.data.pending, value: this.data.pendingValue },\n      { asset: this.reva, amount: this.data.pendingReva, value: this.data.pendingRevaValue },\n    ];\n\n    async load() {\n      const vault = await this.findVault();\n      this.data.vaultId = vault.id;\n      this.data.amount = vault.principal;\n      this.data.vaultHarvestPayload = vault.payload;\n\n      const { returnedRevaAmount, returnedTokenAmount } = await this.revault.methods\n        .harvestVault(this.data.vaultId, this.data.vaultHarvestPayload)\n        .call({ from: this.args.address });\n      this.data.pendingReva = bn(returnedRevaAmount);\n      this.data.pending = bn(returnedTokenAmount);\n\n      let info;\n      [this.data.value, this.data.pendingRevaValue, this.data.pendingValue, info] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingReva),\n        this.oracle.valueOf(this.getNetwork().id, this.asset, this.data.pending),\n        this.chef.methods.tokens(this.asset.address).call(),\n      ]);\n      const { tvlBusd } = info;\n      this.data.tvl = bn(tvlBusd);\n    }\n\n    private async findVault() {\n      const supportedVaults = {\n        [erc20s.bsc.WBNB().address]: { id: 0 }, // bunny\n        [erc20s.bsc.BUSD().address]: { id: 1 }, // bunny\n        [erc20s.bsc.CAKE().address]: { id: 2 }, // bunny\n      };\n      const payload = web3().eth.abi.encodeFunctionSignature(\"getReward()\"); //all bunny vaults\n      const vaultId = supportedVaults[this.asset.address].id;\n      const [vault, principal] = await Promise.all([this.revault.methods.vaults(vaultId).call(), this.revault.methods.userVaultPrincipal(vaultId, this.args.address).call()]);\n      return { ...vault, id: vaultId, principal: bn(principal), payload };\n    }\n\n    getContractMethods = () => _.functions(this.revault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.revault.methods as any)[method](...args);\n      alert(`target:\\n${this.revault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {\n      await sendWithTxType(this.revault.methods.harvestVault(this.data.vaultId, this.data.vaultHarvestPayload), true);\n    }\n  }\n\n  class RevaStake implements PositionV1 {\n    staking = revaStaking();\n    reva = REVA();\n\n    data = {\n      staking: this.staking.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public poolId: number) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.bsc;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.reva];\n\n    getRewardAssets = () => [this.reva];\n\n    getHealth = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    getAmounts = () => [{ asset: this.reva, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [{ asset: this.reva, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n\n    async load() {\n      const [userInfo, pending, poolInfo] = await Promise.all([\n        this.staking.methods.userPoolInfo(this.poolId, this.args.address).call(),\n        this.staking.methods.pendingReva(this.poolId, this.args.address).call(),\n        this.staking.methods.poolInfo(this.poolId).call(),\n      ]);\n      this.data.amount = bn(userInfo.amount);\n      this.data.pendingAmount = bn(pending);\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.reva, bn(poolInfo.totalSupply)),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport type { UniclyLpAbi } from \"../../typechain-abi/UniclyLpAbi\";\nimport type { UniclyXUnicAbi } from \"../../typechain-abi/UniclyXUnicAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Unicly {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Unicly:XUnicFarm:uPunks\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uPunks()),\n      \"eth:Unicly:XUnicFarm:uJenny\": (args, oracle) => new Unicly.XUnicFarm(args, oracle, Unicly.Strategies.uJenny()),\n    });\n  }\n\n  interface Strategy {\n    asset: Token;\n    lp: Token & UniclyLpAbi;\n    poolId: number;\n  }\n\n  export const Strategies = {\n    uPunks: () => ({\n      asset: erc20(\"Unicly: uPUNK\", \"0x8d2BFfCbB19Ff14A698C424FbcDcFd17aab9b905\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uPUNK/ETH\", \"0xc809Af9E3490bCB2B3bA2BF15E002f0A6a1F6835\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 3,\n    }),\n    uJenny: () => ({\n      asset: erc20(\"Unicly: uJenny\", \"0xa499648fD0e80FD911972BbEb069e4c20e68bF22\"),\n      lp: erc20<UniclyLpAbi>(\"Unicly: LP uJenny/ETH\", \"0xEC5100AD159F660986E47AFa0CDa1081101b471d\", require(\"../abi/UniclyLpAbi.json\")),\n      poolId: 18,\n    }),\n  };\n\n  export class XUnicFarm implements PositionV1 {\n    xfarm = contract<UniclyXUnicAbi>(require(\"../abi/UniclyXUnicAbi.json\"), \"0x07306aCcCB482C8619e7ed119dAA2BDF2b4389D0\");\n    unic = erc20(\"UNIC\", \"0x94E0BAb2F6Ab1F19F4750E42d7349f2740513aD5\");\n    xunic = erc20(\"xUNIC\", \"0xA62fB0c2Fb3C7b27797dC04e1fEA06C0a2Db919a\");\n    eth = erc20s.eth.WETH();\n\n    data = {\n      xfarm: this.xfarm.options.address,\n      unic: this.unic.options.address,\n      xunic: this.xunic.options.address,\n      amountLP: zero,\n      amountAsset: zero,\n      amountETH: zero,\n      valueAsset: zero,\n      valueETH: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.eth;\n\n    getAssets = () => [this.strategy.asset, this.eth];\n\n    getRewardAssets = () => [this.xunic];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.strategy.asset,\n        amount: this.data.amountAsset,\n        value: this.data.valueAsset,\n      },\n      {\n        asset: this.eth,\n        amount: this.data.amountETH,\n        value: this.data.valueETH,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.xunic,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [userInfo, reserves, token0, totalSupply, pending, poolInfo, xunicrate] = await Promise.all([\n        this.xfarm.methods.userInfo(this.strategy.poolId, this.args.address).call(),\n        this.strategy.lp.methods.getReserves().call(),\n        this.strategy.lp.methods.token0().call(),\n        this.strategy.lp.methods.totalSupply().call(),\n        this.xfarm.methods.pendingxUNICs(this.strategy.poolId, this.args.address).call(),\n        this.xfarm.methods.poolInfo(this.strategy.poolId).call(),\n        this.xfarm.methods.getxUNICRate().call(),\n      ]);\n      const { _reserve0, _reserve1 } = reserves;\n      const r0 = token0.toLowerCase() === this.strategy.asset.address.toLowerCase() ? _reserve0 : _reserve1;\n      const r1 = r0 === _reserve0 ? _reserve1 : _reserve0;\n      this.data.amountLP = bn(userInfo.amount);\n      this.data.rewardAmount = await this.xunic.mantissa(pending);\n\n      this.data.amountAsset = await this.strategy.asset.mantissa(bn(r0).mul(this.data.amountLP).div(bn(totalSupply)));\n      this.data.amountETH = await this.eth.mantissa(bn(r1).mul(this.data.amountLP).div(bn(totalSupply)));\n\n      [this.data.valueAsset, this.data.valueETH, this.data.rewardValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.strategy.asset, this.data.amountAsset),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.amountETH),\n        this.oracle.valueOf(this.getNetwork().id, this.unic, this.data.rewardAmount.mul(bn(xunicrate)).div(ether)),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, bn(r1).muln(2).mul(bn(poolInfo.totalLPTokens)).div(bn(totalSupply))),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.xfarm.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfarm.methods as any)[method](...args);\n      alert(`target:\\n${this.xfarm.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.xfarm.methods.deposit(this.strategy.poolId, 0), useLegacyTx);\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport Web3 from \"web3\";\n\nexport namespace TokenBalances {\n  class TokenBalance implements PositionV1 {\n    data = {\n      name: \"\",\n      amount: zero,\n      value: zero,\n      totalSupply: zero,\n      mcap: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token: Token) {\n      token.name = args.name || token.name;\n    }\n\n    getName = () => this.data.name;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      [this.data.name, this.data.amount, this.data.totalSupply] = await Promise.all([\n        this.token.methods.name().call(),\n        this.token.methods.balanceOf(this.args.address).call().then(this.token.mantissa),\n        this.token.methods.totalSupply().call().then(this.token.mantissa),\n      ]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.mcap;\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  const nativeTokens = {\n    eth: () => _.merge(erc20s.eth.WETH(), { name: \"ETH\" }),\n    bsc: () => _.merge(erc20s.bsc.WBNB(), { name: \"BNB\" }),\n    poly: () => _.merge(erc20s.poly.WMATIC(), { name: \"MATIC\" }),\n    avax: () => _.merge(erc20s.avax.WAVAX(), { name: \"AVAX\" }),\n    arb: () => _.merge(erc20s.arb.WETH(), { name: \"AETH\" }),\n    oeth: () => _.merge(erc20s.oeth.WETH(), { name: \"ETH\" }),\n  };\n\n  class NativeTokenBalance extends TokenBalance {\n    getName = () => this.token.name;\n\n    async load() {\n      [this.data.amount, this.data.totalSupply] = await Promise.all([web3().eth.getBalance(this.args.address).then(bn), this.token.methods.totalSupply().call().then(bn)]);\n      this.data.value = await this.oracle.valueOf(this.network.id, this.token, this.data.amount);\n      this.data.mcap = await this.oracle.valueOf(this.network.id, this.token, this.data.totalSupply);\n    }\n  }\n\n  export function register() {\n    _.forEach(networks, (n) => {\n      if (n.id < 0) return;\n      PositionFactory.register({\n        [`${n.shortname}:Token`]: (args, oracle) => new TokenBalance(args, oracle, n, erc20(\"\", Web3.utils.toChecksumAddress(args.input!))),\n      });\n\n      const t = (nativeTokens as any)[n.shortname];\n      if (t) PositionFactory.register({ [`${n.shortname}:TokenBase`]: (args, oracle) => new NativeTokenBalance(args, oracle, n, t()) });\n    });\n  }\n}\n","import { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn18, contract, erc20, ether, maxUint256, Network, Token, web3, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { UniswapNftManagerAbi } from \"../../typechain-abi/UniswapNftManagerAbi\";\nimport _ from \"lodash\";\nimport { UniswapV3FactoryAbi } from \"../../typechain-abi/UniswapV3FactoryAbi\";\n\nconst maxUint128 = bn(2).pow(bn(128)).subn(1).toString();\n\nexport namespace Uniswap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.WBTC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:USDC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH()),\n      \"eth:Uniswap:V3LP:TON/ETH\": (args, oracle) => new V3LP(args, oracle, networks.eth, erc20(\"TON\", \"0x582d872A1B094FC48F5DE31D3B73F2D9bE47def1\"), erc20s.eth.WETH()),\n\n      \"arb:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.arb, erc20(\"WBTC\", \"0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f\"), erc20s.arb.WETH()),\n\n      \"poly:Uniswap:V3LP:MATIC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.poly, erc20s.poly.WMATIC(), erc20s.poly.WETH()),\n\n      \"oeth:Uniswap:V3LP:WBTC/ETH\": (args, oracle) => new V3LP(args, oracle, networks.oeth, erc20s.oeth.WETH(), erc20s.oeth.WBTC()),\n    });\n  }\n\n  class V3LP implements PositionV1 {\n    nftPositionManager = contract<UniswapNftManagerAbi>(require(\"../abi/UniswapNftManagerAbi.json\"), \"0xC36442b4a4522E871399CD717aBDD847Ab11FE88\");\n\n    data = {\n      nftManager: this.nftPositionManager.options.address,\n      id: 0,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      principal0: zero,\n      principal1: zero,\n      valueIfHodl: zero,\n      valueNow: zero,\n      ilValue: zero,\n      il: zero,\n      pending0: zero,\n      pending1: zero,\n      pendingValue0: zero,\n      pendingValue1: zero,\n      totalFeesValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!) || 0;\n      if (this.data.id <= 0) throw new Error(\"unknown positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [this.token0, this.token1];\n    getPendingRewards = () => [\n      { asset: this.token0, amount: this.data.pending0, value: this.data.pendingValue0 },\n      { asset: this.token1, amount: this.data.pending1, value: this.data.pendingValue1 },\n    ];\n    getHealth = () => {\n      if (this.data.value0.isZero() || this.data.value1.isZero())\n        return [\n          {\n            severity: Severity.High,\n            message: \"Range\",\n          },\n        ];\n      if (!this.data.totalFeesValue.isZero() && this.data.ilValue.gt(this.data.totalFeesValue))\n        return [\n          {\n            severity: Severity.High,\n            message: \"IL\",\n          },\n        ];\n      return [];\n    };\n\n    async load() {\n      const pos = await this.nftPositionManager.methods.positions(this.data.id).call();\n      if (web3().utils.toChecksumAddress(pos.token0) !== web3().utils.toChecksumAddress(this.token0.address)) throw new Error(`invalid tokens for pos, ${JSON.stringify(pos)}`);\n\n      const res = await this.nftPositionManager.methods.decreaseLiquidity([this.data.id, pos.liquidity, 0, 0, maxUint256]).call({ from: this.args.address });\n      this.data.amount0 = await this.token0.mantissa(res.amount0);\n      this.data.amount1 = await this.token1.mantissa(res.amount1);\n\n      [this.data.value0, this.data.value1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.amount0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.amount1),\n      ]);\n\n      if (this.getNetwork().id === networks.eth.id) await this.loadFromPositionGraph();\n\n      if (this.data.tvl.isZero()) await this.loadTVL(parseInt(pos.fee));\n    }\n\n    getContractMethods = () => _.functions(this.nftPositionManager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.nftPositionManager.methods as any)[method](...args);\n      alert(`target:\\n${this.nftPositionManager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]), useLegacyTx);\n    }\n\n    async loadFromPositionGraph() {\n      const response = await fetch(\"https://api.thegraph.com/subgraphs/name/uniswap/uniswap-v3\", {\n        headers: {\n          \"content-type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          query: `{position(id:${this.data.id}) {\n          depositedToken0\n          depositedToken1\n          withdrawnToken0\n          withdrawnToken1\n          collectedFeesToken0\n          collectedFeesToken1\n          pool {\n            id\n            totalValueLockedUSD\n          }\n        }\n      }`,\n        }),\n        method: \"POST\",\n      });\n      const json = await response.json();\n\n      this.data.tvl = bn18(json.data.position.pool.totalValueLockedUSD);\n      this.data.principal0 = bn18(json.data.position.depositedToken0).sub(bn18(json.data.position.withdrawnToken0));\n      this.data.principal1 = bn18(json.data.position.depositedToken1).sub(bn18(json.data.position.withdrawnToken1));\n\n      const [principalValue0, principalValue1] = await Promise.all([\n        this.oracle.valueOf(this.network.id, this.token0, this.data.principal0),\n        this.oracle.valueOf(this.network.id, this.token1, this.data.principal1),\n      ]);\n      this.data.valueIfHodl = principalValue0.add(principalValue1);\n      this.data.valueNow = this.data.value0.add(this.data.value1);\n      this.data.ilValue = this.data.valueIfHodl.sub(this.data.valueNow);\n      this.data.il = ether.sub(this.data.valueNow.mul(ether).div(this.data.valueIfHodl));\n      const pending = await this.nftPositionManager.methods.collect([this.data.id, this.args.address, maxUint128, maxUint128]).call({ from: this.args.address });\n      this.data.pending0 = await this.token0.mantissa(pending.amount0);\n      this.data.pending1 = await this.token1.mantissa(pending.amount1);\n      this.data.pendingValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.pending0);\n      this.data.pendingValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.pending1);\n      const collectedValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, bn18(json.data.position.collectedFeesToken0));\n      const collectedValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, bn18(json.data.position.collectedFeesToken1));\n\n      this.data.totalFeesValue = this.data.pendingValue0.add(this.data.pendingValue1).add(collectedValue0).add(collectedValue1);\n    }\n\n    async loadTVL(fee: number) {\n      const factory = contract<UniswapV3FactoryAbi>(require(\"../abi/UniswapV3FactoryAbi.json\"), await this.nftPositionManager.methods.factory().call());\n      const pool = await factory.methods.getPool(this.token0.address, this.token1.address, fee).call();\n      const [a0, a1] = await Promise.all([\n        this.token0.methods.balanceOf(pool).call().then(this.token0.mantissa),\n        this.token1.methods.balanceOf(pool).call().then(this.token1.mantissa),\n      ]);\n      const [v0, v1] = await Promise.all([this.oracle.valueOf(this.network.id, this.token0, a0), this.oracle.valueOf(this.network.id, this.token1, a1)]);\n      this.data.tvl = v0.add(v1);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn18, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace OffChain {\n  export function register() {\n    PositionFactory.register({\n      \"x:OffChain:Asset\": (args, oracle) => new AssetPosition(args, oracle),\n    });\n  }\n\n  export type Asset = Token & { symbol: string };\n\n  class AssetPosition implements PositionV1 {\n    token: Asset;\n    data = {\n      amount: zero,\n      value: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.input) throw new Error(\"input amount required\");\n      if (!args.address) throw new Error(\"address symbol required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { symbol: args.address });\n      this.data.amount = bn18(args.input);\n    }\n\n    getName = () => `OffChain:${this.token.name}`;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.off;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.token];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => zero;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { Abi, bn, contract, erc20, ether, Token, zero } from \"@defi.org/web3-candies\";\nimport type { AlphaHomoraBankAbi } from \"../../typechain-abi/AlphaHomoraBankAbi\";\nimport _ from \"lodash\";\n\nexport namespace AlphaHomora {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AlphaHomora:WETHe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX()),\n      \"avax:AlphaHomora:WBTCe/AVAX\": (args, oracle) => new LYF(args, oracle, erc20s.avax.WBTCe(), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class LYF implements PositionV1 {\n    alphaHomoraBank = contract<AlphaHomoraBankAbi>(require(\"../abi/AlphaHomoraBankAbi.json\"), \"0x376d16C7dE138B01455a51dA79AD65806E9cd694\");\n    maxHistoryBlocks = {\n      [networks.avax.id]: 10_000_000,\n    };\n\n    data = {\n      contract: this.alphaHomoraBank.options.address,\n      id: 0,\n      supply0: zero,\n      supply1: zero,\n      borrow0: zero,\n      borrow1: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      pending: zero,\n      pendingValue: zero,\n      tvl: zero,\n      valueIfHodl: zero,\n      ilAmount: zero,\n      il: zero,\n      debtRatio: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public token0: Token, public token1: Token) {\n      this.data.id = parseInt(args.input!);\n      if (!this.data.id) throw new Error(\"invalid input positionId\");\n    }\n\n    getName = () => \"\";\n    getNetwork = () => networks.avax;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.token0, this.token1];\n    getAmounts = () => [\n      { asset: this.token0, amount: this.data.amount0, value: this.data.value0 },\n      { asset: this.token1, amount: this.data.amount1, value: this.data.value1 },\n    ];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n\n    async load() {\n      const pos = await this.alphaHomoraBank.methods.getPositionInfo(this.data.id).call();\n      const lpSupplied = bn(pos.collateralSize);\n      const farmAbi = [\n        {\n          inputs: [{ internalType: \"uint256\", name: \"id\", type: \"uint256\" }],\n          name: \"getUnderlyingToken\",\n          outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ] as Abi;\n      const nft = contract(farmAbi, pos.collToken);\n      const lpToken = erc20(\"\", await nft.methods.getUnderlyingToken(pos.collId).call());\n      const totalLPs = await lpToken.methods.totalSupply().call().then(bn);\n      const share = lpSupplied.mul(ether).div(totalLPs);\n      const total0 = await this.token0.methods.balanceOf(lpToken.address).call().then(this.token0.mantissa);\n      const total1 = await this.token1.methods.balanceOf(lpToken.address).call().then(this.token1.mantissa);\n      this.data.supply0 = total0.mul(share).div(ether);\n      this.data.supply1 = total1.mul(share).div(ether);\n\n      const debts = await this.alphaHomoraBank.methods.getPositionDebts(this.data.id).call();\n      this.data.borrow0 = await this.token0.mantissa(debts.debts[_.indexOf(debts.tokens, this.token0.address)]);\n      this.data.borrow1 = await this.token1.mantissa(debts.debts[_.indexOf(debts.tokens, this.token1.address)]);\n\n      this.data.amount0 = this.data.supply0.sub(this.data.borrow0);\n      this.data.amount1 = this.data.supply1.sub(this.data.borrow1);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, this.data.amount1);\n\n      const totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, total0);\n      const totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, total1);\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    //     private async loadDeposits() {\n    //       const depositAbi = _(this.alphaHomoraBank.options.jsonInterface).find((x) => x.type === \"function\" && x.name === \"execute\")!;\n    //       const depositSig = web3().eth.abi.encodeFunctionSignature(depositAbi);\n    //\n    //       const currentBlock = await web3().eth.getBlockNumber();\n    //       const earliestBlock = currentBlock - this.maxHistoryBlocks[this.getNetwork().id];\n    //\n    //       const apiKey = \"\";\n    //       const alltxsResponse = await fetch(`https://api.snowtrace.io/api?module=account&action=txlist\n    // &fromBlock=${earliestBlock}\n    // &toBlock=${currentBlock}\n    // &address=${this.args.address}\n    // &sort=asc&apikey=${apiKey}`);\n    //       const alltxs = await alltxsResponse.json();\n    //       const relevantTxs = _.filter(alltxs.result, (tx) => eqIgnoreCase(tx.to, this.alphaHomoraBank.options.address) && tx.input.startsWith(depositSig));\n    //       if (relevantTxs.length !== 1) {\n    //         console.error(\"no / too many deposits\");\n    //         return;\n    //       }\n    //       const deposit = relevantTxs[0];\n    //       const receipt = await web3().eth.getTransactionReceipt(deposit.hash);\n    //       const events = parseEvents(receipt, this.token0);\n    //\n    //       const depositEvent = events.find((e) => e.event === \"Transfer\" && eqIgnoreCase(e.address, this.token0.address) && eqIgnoreCase(e.returnValues.from, this.args.address))!;\n    //       const deposit0 = bn(depositEvent.returnValues.value);\n    //       const deposit1 = _.reduce(relevantTxs, (sum, tx) => sum.add(bn(tx.value)), zero);\n    //       const valueNow0 = await this.oracle.valueOf(this.getNetwork().id, this.token0, deposit0);\n    //       const valueNow1 = await this.oracle.valueOf(this.getNetwork().id, this.token1, deposit1);\n    //\n    //       this.data.valueIfHodl = valueNow0.add(valueNow1);\n    //       const valueNow = this.data.value0.add(this.data.value1);\n    //       this.data.ilAmount = this.data.valueIfHodl.sub(valueNow);\n    //       this.data.il = ether.sub(valueNow.mul(ether).div(this.data.valueIfHodl));\n    //     }\n\n    //   private async loadDebtRatio() {\n    //     /*\n    //       struct TokenFactors {\n    //     uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //     uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //     uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    //     mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // }\n    //        */\n    //\n    //     /*\n    //       struct TokenFactors {\n    //   uint16 borrowFactor; // The borrow factor for this token, multiplied by 1e4.\n    //   uint16 collateralFactor; // The collateral factor for this token, multiplied by 1e4.\n    //   uint16 liqIncentive; // The liquidation incentive, multiplied by 1e4.\n    // }\n    //\n    // IBaseOracle public immutable source; // Main oracle source\n    // mapping(address => TokenFactors) public tokenFactors; // Mapping from token address to oracle info.\n    // mapping(address => bool) public whitelistERC1155; // Mapping from token address to whitelist status\n    //      */\n    //     const proxyOracleAbi: Abi = [\n    //       {\n    //         name: \"tokenFactors\",\n    //         type: \"function\",\n    //         stateMutability: \"view\",\n    //         inputs: [\n    //           {\n    //             internalType: \"address\",\n    //             name: \"token\",\n    //             type: \"address\",\n    //           },\n    //         ],\n    //         outputs: [\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"borrowFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"collateralFactor\",\n    //             type: \"uint256\",\n    //           },\n    //           {\n    //             internalType: \"uint256\",\n    //             name: \"liqIncentive\",\n    //             type: \"uint256\",\n    //           },\n    //         ],\n    //       },\n    //     ];\n    //     const o = contract(proxyOracleAbi, await this.alphaHomoraBank.methods.oracle().call());\n    //     const f0 = bn((await o.methods.tokenFactors(this.token0.address).call()).borrowFactor).toNumber() / 1e4;\n    //     const f1 = bn((await o.methods.tokenFactors(this.token1.address).call()).borrowFactor).toNumber() / 1e4;\n    //     console.log(f0, f1);\n    //   }\n\n    getContractMethods = () => _.functions(this.alphaHomoraBank.methods);\n    async callContract(method: string, args: string[]) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.alphaHomoraBank.methods as any)[method](...args);\n      alert(`target:\\n${this.alphaHomoraBank.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn, contract, eqIgnoreCase, erc20, ether, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport { BalancerV2VaultAbi } from \"../../typechain-abi/BalancerV2VaultAbi\";\nimport { BalancerGaugeAbi } from \"../../typechain-abi/BalancerGaugeAbi\";\n\nexport namespace Balancer {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Balancer:WBTC/ETH\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.eth,\n          [erc20s.eth.WBTC(), erc20s.eth.WETH()],\n          \"0xa6f548df93de924d73be7d25dc02554c6bd66db500020000000000000000000e\",\n          \"0x4E3c048BE671852277Ad6ce29Fd5207aA12fabff\"\n        ),\n\n      \"poly:Balancer:USDC/DAI/MAI/USDT\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.USDC(), erc20s.poly.DAI(), erc20(\"MAI\", \"0xa3Fa99A148fA48D14Ed51d610c367C61876997F1\"), erc20s.poly.USDT()],\n          \"0x06df3b2bbb68adc8b0e302443692037ed9f91b42000000000000000000000012\"\n        ),\n      \"poly:Balancer:MATIC/sMATIC\": (args, oracle) =>\n        new Farm(\n          args,\n          oracle,\n          networks.poly,\n          [erc20s.poly.WMATIC(), erc20(\"sMATIC\", \"0x3A58a54C066FdC0f2D55FC9C89F0415C92eBf3C4\")],\n          \"0xaf5e0b5425de1f5a630a8cb5aa9d97b8141c908d000200000000000000000366\",\n          \"0x9928340f9E1aaAd7dF1D95E27bd9A5c715202a56\"\n        ),\n\n      \"arb:Balancer:MAI/USDT/USDC\": (args, oracle) => {\n        oracle.overridePrice(networks.arb.id, erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"), ether);\n        return new Farm(\n          args,\n          oracle,\n          networks.arb,\n          [\n            erc20(\"MAI\", \"0x3F56e0c36d275367b8C502090EDF38289b3dEa0d\"),\n            erc20(\"USDT\", \"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9\"),\n            erc20(\"USDC\", \"0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8\"),\n          ],\n          \"0x0510ccf9eb3ab03c1508d3b9769e8ee2cfd6fdcf00000000000000000000005d\"\n        );\n      },\n    });\n  }\n\n  const balToken = {\n    [networks.eth.id]: () => erc20(\"BAL\", \"0xba100000625a3754423978a60c9317c58a424e3D\"),\n    [networks.poly.id]: () => erc20(\"BAL\", \"0x9a71012B13CA4d3D0Cdc72A177DF3ef03b0E76A3\"),\n    [networks.arb.id]: () => erc20(\"BAL\", \"0x040d1EdC9569d4Bab2D15287Dc5A4F10F56a56B8\"),\n  };\n\n  const balV2 = () => contract<BalancerV2VaultAbi>(require(\"../abi/BalancerV2VaultAbi.json\"), \"0xBA12222222228d8Ba445958a75a0704d566BF2C8\");\n\n  class Farm implements PositionV1 {\n    vault = balV2();\n    gauge = contract<BalancerGaugeAbi>(require(\"../abi/BalancerGaugeAbi.json\"), this.gaugeAddress);\n    bal = balToken[this.network.id]();\n\n    data = {\n      vault: this.vault.options.address,\n      gauge: this.gauge.options.address,\n      amounts: [] as BN[],\n      values: [] as BN[],\n      tvl: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public tokens: Token[], public poolId: string, public gaugeAddress: string = \"\") {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => this.tokens;\n    getAmounts = () => _.map(this.tokens, (asset, i) => ({ asset, amount: this.data.amounts[i] || zero, value: this.data.values[i] || zero }));\n    getRewardAssets = () => [this.bal];\n    getPendingRewards = () => [{ asset: this.bal, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      if (!this.gaugeAddress) return await this.loadFromPool();\n\n      const [lpTokenAddress, workingBalance, totalWorkingBalance] = await Promise.all([\n        this.gauge.methods.lp_token().call(),\n        this.gauge.methods.balanceOf(this.args.address).call().then(bn),\n        this.gauge.methods.totalSupply().call().then(bn),\n      ]);\n      const pending = await this.gauge.methods\n        .claimable_tokens(this.args.address)\n        .call()\n        .catch(() => this.gauge.methods.claimable_reward_write(this.args.address, this.bal.address).call())\n        .then(bn);\n\n      const bpt = erc20(\"BPT\", lpTokenAddress);\n      const [totalBptsStaked, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.gaugeAddress).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n      const bptBalance = totalBptsStaked.mul(workingBalance).div(totalWorkingBalance);\n\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(totalBptsStaked).div(bptTotalSupply))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.add(bn(b)), zero);\n\n      this.data.pending = pending;\n      this.data.pendingValue = await this.oracle.valueOf(this.network.id, this.bal, this.data.pending);\n    }\n\n    private async loadFromPool() {\n      const bpt = erc20(\n        \"BPT\",\n        await this.vault.methods\n          .getPool(this.poolId)\n          .call()\n          .then((x) => x[\"0\"])\n      );\n      const poolTokens = await this.vault.methods.getPoolTokens(this.poolId).call();\n      if (!_.every(this.tokens, (t, i) => eqIgnoreCase(t.options.address, poolTokens.tokens[i]))) throw new Error(`invalid Balancer poolBalances`);\n      const [bptBalance, bptTotalSupply] = await Promise.all([bpt.methods.balanceOf(this.args.address).call().then(bn), bpt.methods.totalSupply().call().then(bn)]);\n\n      this.data.amounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]).mul(bptBalance).div(bptTotalSupply))));\n      this.data.values = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, this.data.amounts[i])));\n\n      const poolAmounts = await Promise.all(_.map(this.tokens, (t, i) => t.mantissa(bn(poolTokens.balances[i]))));\n      const poolValues = await Promise.all(_.map(this.tokens, (t, i) => this.oracle.valueOf(this.network.id, t, poolAmounts[i])));\n      this.data.tvl = poolValues.reduce((sum, b) => sum.add(bn(b)), zero);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.gauge.methods.claimable_tokens(this.args.address), useLegacyTx);\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { networks } from \"./base/consts\";\n\nexport namespace ElrondMaiar {\n  export type ESDT = Token & { esdt: true; tokenId: string; dec: number };\n\n  const tokens = {\n    EGLD: () => esdt(\"WEGLD\", \"WEGLD-bd4d79\", 18),\n    USDC: () => esdt(\"USDC\", \"USDC-c76f1f\", 6),\n    MEX: () => esdt(\"MEX\", \"MEX-455c57\", 18),\n    RIDE: () => esdt(\"RIDE\", \"RIDE-7d18e9\", 18),\n    LKMEX: () => esdt(\"LKMEX\", \"LKMEX-aab910\", 18),\n\n    MEX_EGLD: () => esdt(\"MEX/EGLD LP\", \"EGLDMEX-0be9e5\", 18),\n    USDC_EGLD: () => esdt(\"USDC/EGLD LP\", \"EGLDUSDC-594e5e\", 18),\n\n    LKFARM: () => esdt(\"LKFARM\", \"LKFARM-9d1ea8\", 18),\n  };\n\n  export type Strategy = { assets: ESDT[]; pool: string; farm: string; lp: ESDT };\n\n  export const FarmStrategies = {\n    USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    L_USDC_EGLD: () => ({\n      assets: [tokens.USDC(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\",\n      farm: \"erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\",\n      lp: tokens.USDC_EGLD(),\n    }),\n    MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\",\n      lp: tokens.MEX_EGLD(),\n    }),\n    L_MEX_EGLD: () => ({\n      assets: [tokens.MEX(), tokens.EGLD()],\n      pool: \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\",\n      farm: \"erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\",\n      lp: tokens.MEX_EGLD(),\n    }),\n  };\n\n  class Farm implements PositionV1 {\n    mex = tokens.MEX();\n\n    data = {\n      pool: this.strategy.pool,\n      farm: this.strategy.farm,\n      lp: this.strategy.lp.tokenId,\n      lpBalanceStaked: zero,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public strategy: Strategy) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.egld;\n\n    getAssets = () => this.strategy.assets;\n\n    getRewardAssets = () => [this.mex];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () =>\n      this.getAssets().length > 1\n        ? [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n            {\n              asset: this.getAssets()[1],\n              amount: this.data.amount1,\n              value: this.data.value1,\n            },\n          ]\n        : [\n            {\n              asset: this.getAssets()[0],\n              amount: this.data.amount0,\n              value: this.data.value0,\n            },\n          ];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [asset0, asset1] = this.getAssets();\n      const [farmEsdts, pairEsdts, totalLPSupply] = await Promise.all([getESDTs(this.strategy.farm), getESDTs(this.strategy.pool), getTotalSupply(this.strategy.lp)]);\n      const totalLPStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === this.strategy.lp.tokenId)!.balance);\n      const asset0InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset0.tokenId)!.balance);\n      const asset1InPair = bn(_.find(pairEsdts, (t) => t.tokenIdentifier === asset1.tokenId)!.balance);\n      const asset0TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset0, totalLPStaked.mul(asset0InPair).div(totalLPSupply));\n      const asset1TotalValue = await this.oracle.valueOf(this.getNetwork().id, asset1, totalLPStaked.mul(asset1InPair).div(totalLPSupply));\n      this.data.tvl = asset0TotalValue.add(asset1TotalValue);\n\n      const esdts = await getESDTs(this.args.address);\n      const lpNameSuffix = this.strategy.lp.tokenId.split(\"-\")[0];\n      const lps = _.find(esdts, (t) => t.tokenIdentifier.startsWith(lpNameSuffix));\n      if (!lps) return;\n\n      this.data.lpBalanceStaked = bn(lps!.balance);\n      this.data.amount0 = this.data.lpBalanceStaked.mul(asset0InPair).div(totalLPSupply);\n      this.data.amount1 = this.data.lpBalanceStaked.mul(asset1InPair).div(totalLPSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, asset1, this.data.amount1);\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  export const MexFarmStrategies = {\n    MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\",\n      lp: tokens.MEX(),\n    }),\n    L_MEX: () => ({\n      assets: [tokens.MEX()],\n      pool: \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\",\n      farm: \"erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\",\n      lp: tokens.LKMEX(),\n    }),\n  };\n\n  class MexFarm extends Farm {\n    getRewardAssets = () => [(this.strategy as Strategy).lp];\n\n    getPendingRewards = () => [{ asset: this.mex, amount: this.data.rewardAmount, value: this.data.rewardValue }];\n\n    override async load() {\n      const asset = this.getAssets()[0];\n\n      const farmEsdts = await getESDTs(this.strategy.farm);\n      const totalAssetStaked = bn(_.find(farmEsdts, (e) => e.tokenIdentifier === asset.tokenId)!.balance);\n      this.data.tvl = await this.oracle.valueOf(networks.egld.id, asset, totalAssetStaked);\n\n      const esdts = await getESDTs(this.args.address);\n      const farmNftWrapper = _.find(esdts, (e) => e.creator === this.strategy.pool.toString() && e.tokenIdentifier.startsWith(tokens.LKFARM().tokenId));\n      if (!farmNftWrapper) return;\n\n      this.data.amount0 = bn(farmNftWrapper.balance.toString());\n      this.data.value0 = await this.oracle.valueOf(networks.egld.id, asset, this.data.amount0);\n    }\n  }\n\n  function esdt(name: string, tokenId: string, decimals: number): ESDT {\n    const result = erc20(name, zeroAddress) as ESDT;\n    result.esdt = true;\n    result.tokenId = tokenId;\n    result.dec = decimals;\n    return result;\n  }\n\n  async function getESDTs(address: string) {\n    const response = await fetch(`https://gateway.elrond.com/address/${address}/esdt`);\n    const json = await response.json();\n    return _.get(json, [\"data\", \"esdts\"], []);\n  }\n\n  async function getTotalSupply(token: ESDT) {\n    const response = await fetch(`https://gateway.elrond.com/network/esdt/supply/${token.tokenId}`);\n    const json = await response.json();\n    return bn(_.get(json, [\"data\", \"supply\"], \"0\"));\n  }\n\n  export function register() {\n    PositionFactory.register({\n      \"egld:Maiar:Farm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.USDC_EGLD()),\n      \"egld:Maiar:LFarm:USDC/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_USDC_EGLD()),\n      \"egld:Maiar:Farm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.MEX_EGLD()),\n      \"egld:Maiar:LFarm:MEX/EGLD\": (args, oracle) => new Farm(args, oracle, ElrondMaiar.FarmStrategies.L_MEX_EGLD()),\n      \"egld:Maiar:MEXFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.MEX()),\n      \"egld:Maiar:MEXLFarm:MEX\": (args, oracle) => new MexFarm(args, oracle, ElrondMaiar.MexFarmStrategies.L_MEX()),\n    });\n  }\n\n  // export async function balances(oracle: PriceOracle, address: string): Promise<TokenAmount[]> {\n  //   const assets = _.map(tokens, (t) => t());\n\n  // https://gateway.elrond.com/address/:bech32Address/balance\n\n  // const [esdts, balanceEGLD] = await Promise.all([getESDTs(address), provider.getAccount(new Address(address)).then((r) => bn(r.balance.toString()))]);\n\n  // const balances = await Promise.all(\n  //   _(esdts)\n  //     .map((e) => ({ asset: _.find(assets, (asset) => e.tokenIdentifier === asset.tokenId), esdt: e }))\n  //     .filter((t) => !!t.asset)\n  //     .map(async (t) => {\n  //       const amount = to18(t.esdt.balance, t.asset!.dec);\n  //       return {\n  //         asset: t.asset!,\n  //         amount,\n  //         value: await oracle.valueOf(networks.egld.id, t.asset!, amount),\n  //       };\n  //     })\n  //     .value()\n  // );\n\n  // balances.push({ asset: esdt(\"EGLD\", \"\", 18), amount: balanceEGLD, value: await oracle.valueOf(networks.egld.id, tokens.EGLD(), balanceEGLD) });\n\n  // return balances;\n  // }\n}\n\n// const ZERO_ADDRESS = \"erd1qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq6gq4hu\";\n// const ESDT_ISSUE_ADDRESS = \"erd1qqqqqqqqqqqqqqqpqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqzllls8a5w6u\";\n// const LOCKED_ASSET_FACTORY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqjpt0qqgsrdhp2xqygpjtfrpwf76f9nvg2jpsg4q7th\";\n// const ROUTE_ADDRESS = \"erd1qqqqqqqqqqqqqpgqq66xk9gfr4esuhem3jru86wg5hvp33a62jps2fy57p\";\n// const MEXEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqa0fsfshnff4n76jhcye6k7uvd7qacsq42jpsp6shh2\";\n// const USDCEGLD_POOL_ADDRESS = \"erd1qqqqqqqqqqqqqpgqeel2kumf0r8ffyhth7pqdujjat9nx0862jpsg2pqaq\";\n// const MEXEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqye633y7k0zd7nedfnp3m48h24qygm5jl2jpslxallh\";\n// const USDCEGLD_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqsw9pssy8rchjeyfh8jfafvl3ynum0p9k2jps6lwewp\";\n// const MEX_FARM_ADDRESS = \"erd1qqqqqqqqqqqqqpgqv4ks4nzn2cw96mm06lt7s2l3xfrsznmp2jpsszdry5\";\n// const PROXY_ADDRESS = \"erd1qqqqqqqqqqqqqpgqrc4pg2xarca9z34njcxeur622qmfjp8w2jps89fxnl\";\n// const RIDE_EGLD_POOL = \"erd1qqqqqqqqqqqqqpgqav09xenkuqsdyeyy5evqyhuusvu4gl3t2jpss57g8x\";\n// const MEX_TOKEN = \"MEX-455c57\";\n// const LKMEX_TOKEN = \"LKMEX-aab910\";\n// const WEGLD_TOKEN = \"WEGLD-bd4d79\";\n// const USDC_TOKEN = \"USDC-c76f1f\";\n// const EGLDMEXLP = \"EGLDMEX-0be9e5\";\n// const EGLDUSDCLP = \"EGLDUSDC-594e5e\";\n// const EGLDMEXF = \"EGLDMEXF-5bcc57\";\n// const EGLDUSDCF = \"EGLDUSDCF-8600f8\";\n// const MEXFARM = \"MEXFARM-e7af52\";\n// const LOCKED_LP = \"LKLP-03a2fa\";\n// const LOCKED_FARM = \"LKFARM-9d1ea8\";\n// const WEGLD_SHARD0 = \"erd1qqqqqqqqqqqqqpgqvc7gdl0p4s97guh498wgz75k8sav6sjfjlwqh679jy\";\n// const WEGLD_SHARD1 = \"erd1qqqqqqqqqqqqqpgqhe8t5jewej70zupmh44jurgn29psua5l2jps3ntjj3\";\n// const WEGLD_SHARD2 = \"erd1qqqqqqqqqqqqqpgqmuk0q2saj0mgutxm4teywre6dl8wqf58xamqdrukln\";\n\n// farms v2:\n// EGLD/MEX => MEX : erd1qqqqqqqqqqqqqpgqnqvjnn4haygsw2hls2k9zjjadnjf9w7g2jpsmc60a4\n// EGLD/MEX => LKMEX: erd1qqqqqqqqqqqqqpgqyawg3d9r4l27zue7e9sz7djf7p9aj3sz2jpsm070jf\n// EGLD/USDC => MEX: erd1qqqqqqqqqqqqqpgqutddd7dva0x4xmehyljp7wh7ecynag0u2jpskxx6xt\n// EGLD/USDC => LKMEX: erd1qqqqqqqqqqqqqpgqwtzqckt793q8ggufxxlsv3za336674qq2jpszzgqra\n// MEX => MEX: erd1qqqqqqqqqqqqqpgqe9v45fnpkv053fj0tk7wvnkred9pms892jps9lkqrn\n// MEX => LKMEX: erd1qqqqqqqqqqqqqpgq7qhsw8kffad85jtt79t9ym0a4ycvan9a2jps0zkpen\n","import _ from \"lodash\";\nimport type { TraderJoeFarmAbi } from \"../../typechain-abi/TraderJoeFarmAbi\";\nimport { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace TraderJoe {\n  const orbs = () => erc20(\"ORBS\", \"0x340fE1D898ECCAad394e2ba0fC1F93d27c7b717A\");\n\n  export function register() {\n    PositionFactory.register({\n      \"avax:TraderJoe:Farm:WETH/AVAX\": (args, oracle) => new Farm(args, oracle, erc20s.avax.WETHe(), erc20s.avax.WAVAX(), 26),\n      \"avax:TraderJoe:Farm:sAVAX/AVAX\": (args, oracle) =>\n        new Farm(args, oracle, erc20(\"sAVAX\", \"0x2b2C81e08f1Af8835a78Bb2A90AE924ACE0eA4bE\"), erc20s.avax.WAVAX(), 51, \"0x188bed1968b795d5c9022f6a0bb5931ac4c18f00\"),\n\n      \"avax:TraderJoe:LP:ORBS/AVAX\": (args, oracle) => new LP(args, oracle, orbs(), erc20s.avax.WAVAX(), \"0x0315522354037e48C75756aD68358CE185dad911\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = contract<TraderJoeFarmAbi>(require(\"../abi/TraderJoeFarmAbi.json\"), this.masterchefAddress);\n    reward = erc20(\"JOE\", \"0x6e84a6216eA6dACC71eE8E6b0a5B7322EEbC0fDd\");\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(\n      public args: PositionArgs,\n      public oracle: PriceOracle,\n      public asset0: Token,\n      public asset1: Token,\n      public poolId: number,\n      public masterchefAddress: string = \"0xd6a4F121CA35509aF06A0Be99093d08462f53052\"\n    ) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingTokens(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken);\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.mul(lpStaked).div(lpTotalSupply))).add(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.mul(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending.pendingJoe);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.masterchef.methods.deposit(this.poolId, 0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"TraderJoeLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.avax;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, bn9, contract, erc20, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { RibbonThetaVaultAbi } from \"../../typechain-abi/RibbonThetaVaultAbi\";\nimport type { RibbonGaugeAbi } from \"../../typechain-abi/RibbonGaugeAbi\";\n\nexport namespace Ribbon {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Ribbon:T-CC:ETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x25751853Eab4D0eB3652B5eB6ecB102A2789644B\"),\n      \"eth:Ribbon:T-CC:stETH\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WETH(), \"0x53773E034d9784153471813dacAFF53dBBB78E8c\"),\n      \"eth:Ribbon:T-CC:WBTC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.WBTC(), \"0x65a833afDc250D9d38f8CD9bC2B1E3132dB13B2F\"),\n      \"eth:Ribbon:T-CSP:yvUSDC\": (args, oracle) => new ThetaVault(args, oracle, networks.eth, erc20s.eth.USDC(), \"0xCc323557c71C0D1D20a1861Dc69c06C5f3cC9624\"),\n\n      \"avax:Ribbon:T-CC:AVAX\": (args, oracle) => new ThetaVault(args, oracle, networks.avax, erc20s.avax.WAVAX(), \"0x98d03125c62DaE2328D9d3cb32b7B969e6a87787\"),\n    });\n  }\n\n  const rewardTokens = {\n    [networks.eth.id]: () => erc20(\"RBN\", \"0x6123B0049F904d730dB3C36a31167D9d4121fA6B\"),\n    [networks.avax.id]: () => erc20s.avax.WAVAX(),\n  };\n\n  class ThetaVault implements PositionV1 {\n    rewardToken = rewardTokens[this.network.id]();\n    vault = contract<RibbonThetaVaultAbi>(require(\"../abi/RibbonThetaVaultAbi.json\"), this.vaultAddress);\n\n    data = {\n      vault: this.vaultAddress,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      strike: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset: Token, public vaultAddress: string) {}\n\n    getName = () => \"\";\n    getNetwork = () => this.network;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.asset];\n    getAmounts = () => [{ asset: this.asset, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.rewardToken];\n    getPendingRewards = () => [{ asset: this.rewardToken, amount: this.data.pending, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const { amount, unredeemedShares } = await this.vault.methods.depositReceipts(this.args.address).call();\n      this.data.amount = await this.asset.mantissa(bn(amount).add(bn(unredeemedShares)));\n\n      // farms only on ETH\n      if (this.network.id === networks.eth.id) {\n        const farm = contract<RibbonGaugeAbi>(require(\"../abi/RibbonGaugeAbi.json\"), await this.vault.methods.liquidityGauge().call());\n        const [fbalance, fratio] = await Promise.all([farm.methods.balanceOf(this.args.address).call().then(bn), this.vault.methods.pricePerShare().call().then(bn)]);\n        const staked = await this.asset.mantissa(fbalance.mul(fratio).div(await this.asset.amount(1)));\n        this.data.amount = this.data.amount.add(staked);\n\n        this.data.pending = await farm.methods.claimable_tokens(this.args.address).call().then(bn);\n        this.data.pendingValue = await this.oracle.valueOf(this.getNetwork().id, this.rewardToken, this.data.pending);\n      }\n\n      this.data.value = await this.oracle.valueOf(this.network.id, this.asset, this.data.amount);\n\n      const total = await this.asset.mantissa(await this.vault.methods.totalBalance().call());\n      this.data.tvl = await this.oracle.valueOf(this.network.id, this.asset, total);\n\n      const currentOption = contract(require(\"../abi/RibbonOptionAbi.json\"), await this.vault.methods.currentOption().call());\n      this.data.strike = bn9(await currentOption.methods[\"strikePrice()\"]().call()).muln(10);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, contract, erc20, ether, zero } from \"@defi.org/web3-candies\";\nimport { erc20s, networks, sendWithTxType } from \"./base/consts\";\nimport type { LooksrareStakingAbi } from \"../../typechain-abi/LooksrareStakingAbi\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace LooksRare {\n  export function register() {\n    PositionFactory.register({\n      \"eth:LooksRare:LooksStaking\": (args, oracle) => new Staking(args, oracle),\n      \"eth:LooksRare:LooksAutoCompound\": (args, oracle) => new AutoCompund(args, oracle),\n    });\n  }\n\n  class Staking implements PositionV1 {\n    eth = erc20s.eth.WETH();\n    looks = erc20(\"LOOKS\", \"0xf4d2888d29D722226FafA5d9B24F9164c092421E\");\n    vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0xBcD7254A1D759EFA08eC7c3291B2E85c5dCC12ce\");\n    checkPending = true;\n\n    data = {\n      vault: this.vault.options.address,\n      amount: zero,\n      value: zero,\n      pendingAmount: zero,\n      pendingValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getNetwork = () => networks.eth;\n    getArgs = () => this.args;\n    getData = () => this.data;\n    getTVL = () => this.data.tvl;\n    getAssets = () => [this.looks];\n    getAmounts = () => [{ asset: this.looks, amount: this.data.amount, value: this.data.value }];\n    getRewardAssets = () => [this.eth];\n    getPendingRewards = () => [{ asset: this.eth, amount: this.data.pendingAmount, value: this.data.pendingValue }];\n    getHealth = () => [];\n\n    async load() {\n      const [stakedLooks, pendingEth, totalShares, sharePrice] = await Promise.all([\n        this.vault.methods.calculateSharesValueInLOOKS(this.args.address).call().then(bn),\n        this.checkPending ? this.vault.methods.calculatePendingRewards(this.args.address).call().then(bn) : zero,\n        this.vault.methods.totalShares().call().then(bn),\n        this.vault.methods.calculateSharePriceInLOOKS().call().then(bn),\n      ]);\n      this.data.amount = stakedLooks;\n      this.data.pendingAmount = pendingEth;\n      const tvlAmount = totalShares.mul(sharePrice).div(ether);\n\n      [this.data.value, this.data.pendingValue, this.data.tvl] = await Promise.all([\n        this.oracle.valueOf(this.getNetwork().id, this.looks, this.data.amount),\n        this.oracle.valueOf(this.getNetwork().id, this.eth, this.data.pendingAmount),\n        this.oracle.valueOf(this.getNetwork().id, this.looks, tvlAmount),\n      ]);\n    }\n\n    getContractMethods = () => _.functions(this.vault.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.vault.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.vault.methods as any)[method](...args);\n      alert(`target:\\n${this.vault.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class AutoCompund extends Staking {\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      super(args, oracle);\n      this.vault = contract<LooksrareStakingAbi>(require(\"../abi/LooksrareStakingAbi.json\"), \"0x3ab16Af1315dc6C95F83Cbf522fecF98D00fd9ba\");\n      this.data.vault = this.vault.options.address;\n      this.checkPending = false;\n    }\n  }\n}\n","import _ from \"lodash\";\nimport { bn, Contract, contract, erc20, erc20s, Network, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { SushiswapMinichefAbi } from \"../../typechain-abi/SushiswapMinichefAbi\";\n\nexport namespace SushiSwap {\n  export function register() {\n    PositionFactory.register({\n      \"eth:SushiSwap:Farm:USDC/ETH\": (args, oracle) => new Farm(args, oracle, networks.eth, erc20s.eth.USDC(), erc20s.eth.WETH(), 1),\n      \"poly:SushiSwap:Farm:ETH/MATIC\": (args, oracle) => new Farm(args, oracle, networks.poly, erc20s.poly.WETH(), erc20s.poly.WMATIC(), 0),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    masterchef = getFarmContract(this.network);\n    reward = getRewardContract(this.network);\n\n    data = {\n      chef: this.masterchef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.reward];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [poolInfo, userInfo, pending] = await Promise.all([\n        this.masterchef.methods.poolInfo(this.poolId).call(),\n        this.masterchef.methods.userInfo(this.poolId, this.args.address).call(),\n        this.masterchef.methods.pendingSushi(this.poolId, this.args.address).call(),\n      ]);\n      const lpToken = erc20(\"LP\", poolInfo.lpToken || (await this.masterchef.methods.lpToken(this.poolId).call()));\n      const lpTotalSupply = await lpToken.methods.totalSupply().call().then(bn);\n      const lpAmount = bn(userInfo.amount);\n      const [total0, total1, lpStaked] = await Promise.all([\n        this.asset0.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset0.mantissa(x)),\n        this.asset1.methods\n          .balanceOf(lpToken.options.address)\n          .call()\n          .then((x) => this.asset1.mantissa(x)),\n        lpToken.methods.balanceOf(this.masterchef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(lpTotalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(lpTotalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      this.data.tvl = (await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0.mul(lpStaked).div(lpTotalSupply))).add(\n        await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1.mul(lpStaked).div(lpTotalSupply))\n      );\n\n      this.data.rewardAmount = await this.reward.mantissa(pending);\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n    }\n\n    getContractMethods = () => _.functions(this.masterchef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.masterchef.methods as any)[method](...args);\n      alert(`target:\\n${this.masterchef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      const tx = this.network.id === networks.poly.id ? this.masterchef.methods.deposit(this.poolId, 0, this.args.address) : this.masterchef.methods.deposit(this.poolId, 0);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n  }\n\n  function getFarmContract(network: Network): Contract {\n    switch (network.shortname) {\n      case \"poly\":\n        return contract<SushiswapMinichefAbi>(require(\"../abi/SushiswapMinichefAbi.json\"), \"0x0769fd68dFb93167989C6f7254cd0D766Fb2841F\");\n      case \"eth\":\n      default:\n        return contract(require(\"../abi/SushiswapMasterchefAbi.json\"), \"0xc2EdaD668740f1aA35E4D8f227fB8E17dcA888Cd\");\n    }\n  }\n\n  function getRewardContract(network: Network) {\n    switch (network.shortname) {\n      case \"poly\":\n        return erc20(\"SUSHI\", \"0x0b3F868E0BE5597D5DB7fEB59E1CADBb0fdDa50a\");\n      case \"eth\":\n      default:\n        return erc20(\"SUSHI\", \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\");\n    }\n  }\n}\n","import { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { bn, erc20, zero } from \"@defi.org/web3-candies\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport _ from \"lodash\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace Fodl {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Fodl:XFodlStake\": (args, oracle) => new Fodl.XFodlStake(args, oracle),\n    });\n  }\n\n  export class XFodlStake implements PositionV1 {\n    fodl = erc20(\"FODL\", \"0x4C2e59D098DF7b6cBaE0848d66DE2f8A4889b9C3\");\n    xfodl = erc20(\"FODL: xFODL\", \"0x7e05540A61b531793742fde0514e6c136b5fbAfE\");\n\n    data = {\n      fodl: this.fodl.address,\n      xfodl: this.xfodl.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n\n    getNetwork = () => networks.eth;\n\n    getArgs = () => this.args;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.fodl];\n\n    getRewardAssets = () => [this.xfodl];\n\n    getTVL = () => this.data.tvl;\n\n    getHealth = () => [];\n\n    getAmounts = () => [{ asset: this.fodl, amount: this.data.amount, value: this.data.value }];\n\n    getPendingRewards = () => [];\n\n    async load() {\n      const [myXfodl, xfodlTotalSupply, fodlStaked] = await Promise.all([\n        this.xfodl.methods.balanceOf(this.args.address).call().then(bn),\n        this.xfodl.methods.totalSupply().call().then(bn),\n        this.fodl.methods.balanceOf(this.xfodl.address).call().then(bn),\n      ]);\n      this.data.amount = myXfodl.mul(fodlStaked).div(xfodlTotalSupply);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.fodl, this.data.amount);\n\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.fodl, fodlStaked);\n    }\n\n    getContractMethods = () => _.functions(this.xfodl.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.xfodl.methods as any)[method](...args);\n      alert(`target:\\n${this.xfodl.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { QuickswapStakingAbi } from \"../../typechain-abi/QuickswapStakingAbi\";\nimport _ from \"lodash\";\n\nexport namespace QuickSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x614389EaAE0A6821DC49062D56BDA3d9d45Fa2ff\");\n  const quick = () => erc20(\"QUICK\", \"0x831753DD7087CaC61aB5644b308642cc1c33Dc13\");\n\n  export function register() {\n    PositionFactory.register({\n      \"poly:QuickSwap:Farm:ORBS/USDC\": (args, oracle) => new Farm(args, oracle, erc20s.poly.USDC(), orbs(), \"0x9CA237962823A0a74bbC8354764e1DAC9e4057F0\"),\n\n      \"poly:QuickSwap:LP:ORBS/QUICK\": (args, oracle) => new LP(args, oracle, orbs(), quick(), \"0x882624931b4A799d50242e5b25E2Fa2719E4d072\"),\n      \"poly:QuickSwap:LP:ORBS/JPYC\": (args, oracle) =>\n        new LP(args, oracle, orbs(), erc20(\"JPYC\", \"0x431D5dfF03120AFA4bDf332c61A6e1766eF37BDB\"), \"0xD01C074C78E9647a5ddAE2648f1A089b98D5380a\"),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    staking = contract<QuickswapStakingAbi>(require(\"../abi/QuickswapStakingAbi.json\"), this.stakingAddress);\n    reward = erc20(\"dQUICK\", \"0xf28164A485B0B2C90639E47b0f377b4a438a16B1\");\n\n    data = {\n      contract: this.stakingAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public stakingAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, totalStaked, earned, lpAddress] = await Promise.all([\n        this.staking.methods.balanceOf(this.args.address).call().then(bn),\n        this.staking.methods.totalSupply().call().then(bn),\n        this.staking.methods.earned(this.args.address).call().then(bn),\n        this.staking.methods.stakingToken().call(),\n      ]);\n      this.data.rewardAmount = earned;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(lp.mantissa),\n      ]);\n      this.data.amount0 = stakedBalance.mul(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.mul(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_amount0 = totalStaked.mul(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.mul(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.add(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.staking.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.staking.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.staking.methods as any)[method](...args);\n      alert(`target:\\n${this.staking.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.staking.methods.stake(0), useLegacyTx);\n    }\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"QuickswapLP\", this.lpAddress);\n\n    data = {\n      contract: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.poly;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [balance, totalSupply] = await Promise.all([this.lp.methods.balanceOf(this.args.address).call().then(bn), this.lp.methods.totalSupply().call().then(bn)]);\n\n      const [amount0InLp, amount1InLp] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n      ]);\n      this.data.amount0 = amount0InLp.mul(balance).div(totalSupply);\n      this.data.amount1 = amount1InLp.mul(balance).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, amount0InLp);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, amount1InLp);\n      this.data.tvl = tvl_value0.add(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { bn, contract, erc20, erc20s, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport { PangolinChefAbi } from \"../../typechain-abi/PangolinChefAbi\";\nimport _ from \"lodash\";\n\nexport namespace Pangolin {\n  const orbs = () => erc20(\"ORBS\", \"0x340fE1D898ECCAad394e2ba0fC1F93d27c7b717A\");\n  const png = () => erc20(\"PNG\", \"0x60781C2586D68229fde47564546784ab3fACA982\");\n\n  export function register() {\n    PositionFactory.register({\n      \"avax:Pangolin:Farm:ORBS/AVAX\": (args, oracle) => new Farm(args, oracle, orbs(), erc20s.avax.WAVAX(), 36),\n    });\n  }\n\n  class Farm implements PositionV1 {\n    chef = contract<PangolinChefAbi>(require(\"../abi/PangolinChefAbi.json\"), \"0x1f806f7C8dED893fd3caE279191ad7Aa3798E928\");\n    reward = png();\n\n    data = {\n      chef: this.chef.options.address,\n      poolId: this.poolId,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      rewardAmount: zero,\n      rewardValue: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public poolId: number) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.avax;\n    getAssets = () => [this.asset0, this.asset1];\n    getRewardAssets = () => [this.reward];\n    getData = () => this.data;\n    getHealth = () => [];\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.reward,\n        amount: this.data.rewardAmount,\n        value: this.data.rewardValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [stakedBalance, pending, lpAddress] = await Promise.all([\n        this.chef.methods\n          .userInfo(this.poolId, this.args.address)\n          .call()\n          .then((x) => bn(x.amount)),\n        this.chef.methods.pendingReward(this.poolId, this.args.address).call().then(bn),\n        this.chef.methods.lpToken(this.poolId).call(),\n      ]);\n      this.data.rewardAmount = pending;\n      this.data.rewardValue = await this.oracle.valueOf(this.getNetwork().id, this.reward, this.data.rewardAmount);\n\n      const lp = erc20(\"LP\", lpAddress);\n\n      const [amount0InLp, amount1InLp, totalLpSupply, totalStaked] = await Promise.all([\n        this.asset0.methods.balanceOf(lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(lpAddress).call().then(this.asset1.mantissa),\n        lp.methods.totalSupply().call().then(bn),\n        lp.methods.balanceOf(this.chef.options.address).call().then(bn),\n      ]);\n      this.data.amount0 = stakedBalance.mul(amount0InLp).div(totalLpSupply);\n      this.data.amount1 = stakedBalance.mul(amount1InLp).div(totalLpSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n\n      const tvl_amount0 = totalStaked.mul(amount0InLp).div(totalLpSupply);\n      const tvl_amount1 = totalStaked.mul(amount1InLp).div(totalLpSupply);\n      const tvl_value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, tvl_amount0);\n      const tvl_value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, tvl_amount1);\n      this.data.tvl = tvl_value0.isZero() ? tvl_value1.muln(2) : tvl_value0.add(tvl_value1);\n    }\n\n    getContractMethods = () => _.functions(this.chef.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.chef.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.chef.methods as any)[method](...args);\n      alert(`target:\\n${this.chef.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.chef.methods.deposit(this.poolId, 0, this.args.address), useLegacyTx);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { contract, erc20, zero } from \"@defi.org/web3-candies\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { RookLiquidityPoolAbi } from \"../../typechain-abi/RookLiquidityPoolAbi\";\nimport _ from \"lodash\";\n\nexport namespace Rook {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Rook:xRook\": (args, oracle) => new XRook(args, oracle),\n    });\n  }\n\n  class XRook implements PositionV1 {\n    pool = contract<RookLiquidityPoolAbi>(require(\"../abi/RookLiquidityPoolAbi.json\"), \"0x4F868C1aa37fCf307ab38D215382e88FCA6275E2\");\n    rook = erc20(\"ROOK\", \"0xfA5047c9c78B8877af97BDcb85Db743fD7313d4a\");\n    xrook = erc20(\"xROOK\", \"0x8aC32F0a635a0896a8428A9c31fBf1AB06ecf489\");\n\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => \"\";\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [this.xrook];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getTVL = () => this.data.tvl;\n    getAmounts = () => [{ asset: this.rook, amount: this.data.amount, value: this.data.value }];\n\n    async load() {\n      this.data.amount = await this.pool.methods.underlyingBalance(this.rook.address, this.args.address).call().then(this.rook.mantissa);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.rook, this.data.amount);\n      const tvlAmount = await this.pool.methods.totalValueLocked(this.rook.address).call().then(this.rook.mantissa);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.rook, tvlAmount);\n    }\n\n    getContractMethods = () => _.functions(this.xrook.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.xrook.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[]) {\n      const tx = (this.xrook.methods as any)[method](...args);\n      alert(`target:\\n${this.xrook.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, true);\n    }\n\n    async harvest() {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { erc20s, networks } from \"./base/consts\";\nimport { erc20, Network, Token, zero } from \"@defi.org/web3-candies\";\n\nexport namespace Aave {\n  export function register() {\n    PositionFactory.register({\n      \"avax:AaveV3:aAVAX\": (args, oracle) => new Collateral(args, oracle, networks.avax, erc20(\"aAVAX\", \"0x6d80113e533a2C0fe82EaBD35f1875DcEA89Ea97\"), erc20s.avax.WAVAX()),\n    });\n  }\n\n  class Collateral implements PositionV1 {\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public network: Network, public aToken: Token, public token: Token) {}\n\n    getName = () => \"\";\n\n    getArgs = () => this.args;\n\n    getNetwork = () => this.network;\n\n    getData = () => this.data;\n\n    getAssets = () => [this.aToken];\n\n    getRewardAssets = () => [];\n\n    getPendingRewards = () => [];\n\n    getHealth = () => [];\n\n    async load() {\n      const [amount, totalSupply] = await Promise.all([\n        this.aToken.methods.balanceOf(this.args.address).call().then(this.aToken.mantissa),\n        this.aToken.methods.totalSupply().call().then(this.aToken.mantissa),\n      ]);\n\n      this.data.amount = amount;\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, this.token, this.data.amount);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, this.token, totalSupply);\n    }\n\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n\n    getTVL = () => this.data.tvl;\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport { contract, erc20, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\nimport type { SpookyChefAbi } from \"../../typechain-abi\";\n\nexport namespace SpookySwap {\n  const orbs = () => erc20(\"ORBS\", \"0x3E01B7E242D5AF8064cB9A8F9468aC0f8683617c\");\n  const usdc = () => erc20(\"USDC\", \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\");\n  const ftm = () => erc20(\"FTM\", \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\");\n\n  export function register() {\n    PositionFactory.register({\n      \"ftm:SpookySwap:LP:ORBS/USDC\": (args, oracle) => new LP(args, oracle, orbs(), usdc(), \"0x4FaA520fe975228F54b30c6996129950E975BD8f\", 43),\n      \"ftm:SpookySwap:LP:ORBS/FTM\": (args, oracle) => new LP(args, oracle, orbs(), ftm(), \"0x3Ae87E47c69144d1794a78c0709485978C1002A5\", -1),\n    });\n  }\n\n  class LP implements PositionV1 {\n    lp = erc20(\"SpookySwapLP\", this.lpAddress);\n    boo = erc20(\"BOO\", \"0x841FAD6EAe12c286d1Fd18d1d525DFfA75C7EFFE\");\n    masterchef = contract<SpookyChefAbi>(require(\"../abi/SpookyChefAbi.json\"), \"0x18b4f774fdC7BF685daeeF66c2990b1dDd9ea6aD\");\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n      pending: zero,\n      pendingValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string, public poolId: number) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.ftm;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [this.boo];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [\n      {\n        asset: this.boo,\n        amount: this.data.pending,\n        value: this.data.pendingValue,\n      },\n    ];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      let [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      if (this.poolId > 0) {\n        lpAmount = lpAmount.add(await this.lp.mantissa((await this.masterchef.methods.userInfo(this.poolId, this.args.address).call()).amount));\n        this.data.pending = await this.masterchef.methods.pendingBOO(this.poolId, this.args.address).call().then(this.boo.mantissa);\n        this.data.pendingValue = await this.oracle.valueOf(this.getNetwork().id, this.boo, this.data.pending);\n      }\n      this.data.amount0 = total0.mul(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n\n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n\n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import _ from \"lodash\";\nimport {  erc20, Token, zero } from \"@defi.org/web3-candies\";\nimport { PositionV1, PositionArgs } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport { PositionFactory } from \"./base/PositionFactory\";\n\nexport namespace SpiritSwap {\n  const orbs = () => erc20(\"ORBS\", \"0x3E01B7E242D5AF8064cB9A8F9468aC0f8683617c\");\n  const usdc = () => erc20(\"USDC\", \"0x04068DA6C83AFCFA0e13ba15A6696662335D5B75\");\n  const ftm = () => erc20(\"FTM\", \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\");\n\n  export function register() {\n    PositionFactory.register({\n\n      \"ftm:SpiritSwap:LP:ORBS/USDC\": (args, oracle) => new LP(args, oracle, orbs(), usdc(), \"0x4B668A229740b4F6d04cE2D1b05648Ef1d508EC1\"),\n      \"ftm:SpiritSwap:LP:ORBS/FTM\": (args, oracle) => new LP(args, oracle, orbs(), ftm(), \"0x1F0700387Dfe4Aec7b8C99fbf54cdCDbBB5603B5\"),\n\n    });\n  }\n\n\n  class LP implements PositionV1 {\n    lp = erc20(\"SpiritSwapLP\", this.lpAddress);\n\n    data = {\n      lp: this.lpAddress,\n      amount0: zero,\n      amount1: zero,\n      value0: zero,\n      value1: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public asset0: Token, public asset1: Token, public lpAddress: string) {}\n\n    getName = () => ``;\n\n    getArgs = () => this.args;\n\n    getNetwork = () => networks.ftm;\n\n    getAssets = () => [this.asset0, this.asset1];\n\n    getRewardAssets = () => [];\n\n    getData = () => this.data;\n\n    getHealth = () => [];\n\n    getAmounts = () => [\n      {\n        asset: this.asset0,\n        amount: this.data.amount0,\n        value: this.data.value0,\n      },\n      {\n        asset: this.asset1,\n        amount: this.data.amount1,\n        value: this.data.value1,\n      },\n    ];\n\n    getPendingRewards = () => [];\n\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [total0, total1, lpAmount, totalSupply] = await Promise.all([\n        this.asset0.methods.balanceOf(this.lpAddress).call().then(this.asset0.mantissa),\n        this.asset1.methods.balanceOf(this.lpAddress).call().then(this.asset1.mantissa),\n        this.lp.methods.balanceOf(this.args.address).call().then(this.lp.mantissa),\n        this.lp.methods.totalSupply().call().then(this.lp.mantissa),\n      ]);\n      this.data.amount0 = total0.mul(lpAmount).div(totalSupply);\n      this.data.amount1 = total1.mul(lpAmount).div(totalSupply);\n      this.data.value0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, this.data.amount0);\n      this.data.value1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, this.data.amount1);\n      \n      if (this.data.value0.isZero()) this.data.value0 = this.data.value1;\n      else if (this.data.value1.isZero()) this.data.value1 = this.data.value0;\n\n      let totalValue0 = await this.oracle.valueOf(this.getNetwork().id, this.asset0, total0);\n      let totalValue1 = await this.oracle.valueOf(this.getNetwork().id, this.asset1, total1);\n      \n      if (totalValue0.isZero()) totalValue0 = totalValue1;\n      else if (totalValue1.isZero()) totalValue1 = totalValue0;\n      this.data.tvl = totalValue0.add(totalValue1);\n    }\n\n    getContractMethods = () => _.functions(this.lp.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.lp.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.lp.methods as any)[method](...args);\n      alert(`target:\\n${this.lp.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport { bn18, convertDecimals, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport _ from \"lodash\";\n\nexport namespace Bitcoin {\n  export function register() {\n    PositionFactory.register({\n      \"x:Bitcoin\": (args, oracle) => new BitcoinBalance(args, oracle),\n    });\n  }\n\n  export type BTC = Token & { bech32: string };\n\n  class BitcoinBalance implements PositionV1 {\n    token: BTC;\n    data = {\n      amount: zero,\n      value: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {\n      if (!args.address) throw new Error(\"bitcoin bech32 bc1 address required\");\n      this.token = _.merge(erc20(args.address, zeroAddress), { bech32: args.address });\n    }\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.btc;\n    getData = () => this.data;\n    getAssets = () => [this.token];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getAmounts = () => [{ asset: this.token, amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      this.data.tvl = await fetchTVL();\n      this.data.amount = await fetchBalance(this.token.bech32);\n      this.data.value = await fetchPrice().then((p) => this.data.amount.muln(p));\n    }\n\n    getContractMethods = () => [];\n\n    async callContract(method: string, args: string[]) {}\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  async function fetchTVL() {\n    const r = await fetch(\"https://blockchain.info/q/marketcap\");\n    const json = await r.json();\n    return bn18(json);\n  }\n\n  async function fetchBalance(bech32: string) {\n    const r = await fetch(`https://blockchain.info/q/addressbalance/${bech32}`);\n    const json = await r.json();\n    return convertDecimals(json, 8, 18);\n  }\n\n  async function fetchPrice() {\n    const r = await fetch(\"https://blockchain.info/q/24hrprice\");\n    const json = await r.json();\n    return parseFloat(json);\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1, Severity } from \"./base/PositionV1\";\nimport { bn18, contract, erc20, erc20s, ether, to3, zero } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks, sendWithTxType } from \"./base/consts\";\nimport type { LiquityStabilityPoolAbi, LiquityTroveManagerAbi } from \"../../typechain-abi\";\nimport _ from \"lodash\";\n\nexport namespace Liquity {\n  export function register() {\n    PositionFactory.register({\n      \"eth:Liquity:LUSD\": (args, oracle) => new Pool(args, oracle),\n      \"eth:Liquity:Trove\": (args, oracle) => new CDP(args, oracle),\n    });\n  }\n\n  const lusd = () => erc20(\"LUSD\", \"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0\");\n  const lqty = () => erc20(\"LQTY\", \"0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D\");\n\n  class CDP implements PositionV1 {\n    manager = contract<LiquityTroveManagerAbi>(require(\"../abi/LiquityTroveManagerAbi.json\"), \"0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2\");\n\n    CR_LIQUIDATION = bn18(1.1);\n    CR_RECOVERY = bn18(1.5);\n\n    data = {\n      manager: this.manager.options.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      debt: zero,\n      cr: zero,\n      ltv: zero,\n      liquidationPrice: zero,\n      entireSystemDebt: zero,\n      entireSystemCR: zero,\n      recoveryMode: 0,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [erc20s.eth.WETH()];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () =>\n      this.data.cr.lte(this.CR_LIQUIDATION)\n        ? [\n            {\n              severity: Severity.Critical,\n              message: `⚠️ LIQUIDATION`,\n            },\n          ]\n        : this.data.cr.lt(this.CR_RECOVERY)\n        ? [\n            {\n              severity: Severity.High,\n              message: `CR ${to3(this.data.cr, 18).muln(100).toNumber() / 1000}%`,\n            },\n          ]\n        : [];\n    getAmounts = () => [{ asset: erc20s.eth.WETH(), amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const eth = erc20s.eth.WETH();\n      const price = await this.oracle.valueOf(this.getNetwork().id, eth, ether);\n      const [pos, systemColl, systemDebt, recoveryMode] = await Promise.all([\n        this.manager.methods.getEntireDebtAndColl(this.args.address).call(),\n        this.manager.methods.getEntireSystemColl().call().then(eth.mantissa),\n        this.manager.methods.getEntireSystemDebt().call().then(lusd().mantissa),\n        this.manager.methods.checkRecoveryMode(price).call(),\n      ]);\n      this.data.recoveryMode = recoveryMode ? 1 : 0;\n      this.data.amount = await eth.mantissa(pos.coll);\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, eth, this.data.amount);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, eth, systemColl);\n      this.data.debt = await lusd().mantissa(pos.debt);\n      this.data.cr = this.data.value.mul(ether).div(this.data.debt);\n      this.data.ltv = ether.mul(ether).div(this.data.cr);\n      const crWithGasFeeRebate = this.data.value.mul(ether).div(this.data.debt.sub(await lusd().amount(200)));\n      this.data.liquidationPrice = price.mul(this.CR_LIQUIDATION).div(crWithGasFeeRebate);\n      this.data.entireSystemDebt = await lusd().mantissa(systemDebt);\n      this.data.entireSystemCR = this.data.tvl.mul(ether).div(this.data.entireSystemDebt);\n    }\n\n    getContractMethods = () => _.functions(this.manager.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.manager.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.manager.methods as any)[method](...args);\n      alert(`target:\\n${this.manager.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {}\n  }\n\n  class Pool implements PositionV1 {\n    pool = contract<LiquityStabilityPoolAbi>(require(\"../abi/LiquityStabilityPoolAbi.json\"), \"0x66017D22b0f8556afDd19FC67041899Eb65a21bb\");\n\n    data = {\n      pool: this.pool.options.address,\n      amount: zero,\n      value: zero,\n      tvl: zero,\n      pendingReward: zero,\n      pendingRewardValue: zero,\n      pendingETH: zero,\n      pendingETHValue: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle) {}\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.eth;\n    getData = () => this.data;\n    getAssets = () => [lusd()];\n    getRewardAssets = () => [lqty(), erc20s.eth.WETH()];\n    getPendingRewards = () => [\n      { asset: lqty(), amount: this.data.pendingReward, value: this.data.pendingRewardValue },\n      { asset: erc20s.eth.WETH(), amount: this.data.pendingETH, value: this.data.pendingETHValue },\n    ];\n    getHealth = () => [];\n    getAmounts = () => [{ asset: lusd(), amount: this.data.amount, value: this.data.value }];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const [totalDeposits, deposit, rewards, eth] = await Promise.all([\n        this.pool.methods.getTotalLUSDDeposits().call().then(lusd().mantissa),\n        this.pool.methods.getCompoundedLUSDDeposit(this.args.address).call().then(lusd().mantissa),\n        this.pool.methods.getDepositorLQTYGain(this.args.address).call().then(lqty().mantissa),\n        this.pool.methods.getDepositorETHGain(this.args.address).call().then(erc20s.eth.WETH().mantissa),\n      ]);\n      this.data.tvl = await this.oracle.valueOf(this.getNetwork().id, lusd(), totalDeposits);\n      this.data.amount = deposit;\n      this.data.value = await this.oracle.valueOf(this.getNetwork().id, lusd(), this.data.amount);\n      this.data.pendingReward = rewards;\n      this.data.pendingRewardValue = await this.oracle.valueOf(this.getNetwork().id, lqty(), this.data.pendingReward);\n      this.data.pendingETH = eth;\n      this.data.pendingETHValue = await this.oracle.valueOf(this.getNetwork().id, erc20s.eth.WETH(), this.data.pendingETH);\n    }\n\n    getContractMethods = () => _.functions(this.pool.methods);\n\n    async callContract(method: string, args: string[]) {\n      const tx = (this.pool.methods as any)[method](...args);\n      return await tx.call({ from: this.args.address });\n    }\n\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {\n      const tx = (this.pool.methods as any)[method](...args);\n      alert(`target:\\n${this.pool.options.address}\\ndata:\\n${tx.encodeABI()}`);\n      await sendWithTxType(tx, useLegacyTx);\n    }\n\n    async harvest(useLegacyTx: boolean) {\n      await sendWithTxType(this.pool.methods.withdrawFromSP(0), useLegacyTx);\n    }\n  }\n}\n","import { PositionFactory } from \"./base/PositionFactory\";\nimport { PositionArgs, PositionV1 } from \"./base/PositionV1\";\nimport { bn18, convertDecimals, erc20, Token, zero, zeroAddress } from \"@defi.org/web3-candies\";\nimport { PriceOracle } from \"./base/PriceOracle\";\nimport { networks } from \"./base/consts\";\nimport _ from \"lodash\";\n\nexport namespace Raydium {\n  export function register() {\n    PositionFactory.register({\n      \"sol:Raydium:Pool:ORBS/SOL\": (args, oracle) => new Pool(args, oracle, \"ORBS\", \"2iHXwoH2LaMyiLL2WKDNx732rQ7CsMScNRavB1bmT5aZ\", \"orbs\"),\n    });\n  }\n\n  export type SolToken = Token & { sol: true; coingeckoId: string };\n\n  class Pool implements PositionV1 {\n    sol = erc20(\"SOL\", zeroAddress) as SolToken;\n    token = erc20(this.tokenName, zeroAddress) as SolToken;\n\n    data = {\n      tokenName: this.tokenName,\n      lpMintAddress: this.lpMintAddress,\n      amountToken: zero,\n      amountSol: zero,\n      valueToken: zero,\n      valueSol: zero,\n      tvl: zero,\n    };\n\n    constructor(public args: PositionArgs, public oracle: PriceOracle, public tokenName: string, public lpMintAddress: string, coingeckoId: string) {\n      this.sol.sol = true;\n      this.sol.coingeckoId = \"solana\";\n      this.token.sol = true;\n      this.token.coingeckoId = coingeckoId;\n    }\n\n    getName = () => ``;\n    getArgs = () => this.args;\n    getNetwork = () => networks.sol;\n    getData = () => this.data;\n    getAssets = () => [this.token, this.sol];\n    getRewardAssets = () => [];\n    getPendingRewards = () => [];\n    getHealth = () => [];\n    getAmounts = () => [\n      { asset: this.token, amount: this.data.amountToken, value: this.data.valueToken },\n      { asset: this.sol, amount: this.data.amountSol, value: this.data.valueSol },\n    ];\n    getTVL = () => this.data.tvl;\n\n    async load() {\n      const lpAmount = await this.fetchLpAmount();\n      const lpInfo = await this.fetchLpInfo();\n\n      const totalLps = bn18(lpInfo.tokenAmountLp);\n      const totalTokens = bn18(lpInfo.tokenAmountCoin);\n      const totalSol = bn18(lpInfo.tokenAmountPc);\n\n      this.data.amountToken = totalTokens.mul(lpAmount).div(totalLps);\n      this.data.amountSol = totalSol.mul(lpAmount).div(totalLps);\n\n      this.data.valueToken = await this.oracle.valueOf(networks.sol.id, this.token, this.data.amountToken);\n      this.data.valueSol = await this.oracle.valueOf(networks.sol.id, this.sol, this.data.amountSol);\n\n      const totalTokensValue = await this.oracle.valueOf(networks.sol.id, this.token, totalTokens);\n      const totalSolValue = await this.oracle.valueOf(networks.sol.id, this.sol, totalSol);\n      this.data.tvl = totalTokensValue.add(totalSolValue);\n    }\n\n    getContractMethods = () => [];\n    async callContract(method: string, args: string[]) {}\n    async sendTransaction(method: string, args: string[], useLegacyTx: boolean) {}\n    async harvest(useLegacyTx: boolean) {}\n\n    async fetchLpInfo() {\n      const pairs = await fetch(\"https://api.raydium.io/v2/main/pairs\").then((x) => x.json());\n      return _.find(pairs, (p) => p.lpMint === this.lpMintAddress);\n    }\n\n    async fetchLpAmount() {\n      const response = await fetch(`https://api.mainnet-beta.solana.com`, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          jsonrpc: \"2.0\",\n          id: 1,\n          method: \"getTokenAccountsByOwner\",\n          params: [this.args.address, { mint: this.lpMintAddress }, { encoding: \"jsonParsed\" }],\n        }),\n      }).then((it) => it.json());\n      const { amount, decimals } = response.result.value[0].account.data.parsed.info.tokenAmount;\n      return convertDecimals(amount, decimals, 18);\n    }\n  }\n}\n","import { Pancakeswap } from \"./Pancakeswap\";\nimport { Loops } from \"./Loops\";\nimport { Revault } from \"./Revault\";\nimport { Unicly } from \"./Unicly\";\nimport { TokenBalances } from \"./TokenBalances\";\nimport { Uniswap } from \"./Uniswap\";\nimport { OffChain } from \"./OffChain\";\nimport { AlphaHomora } from \"./AlphaHomora\";\nimport { Balancer } from \"./Balancer\";\nimport { ElrondMaiar } from \"./ElrondMaiar\";\nimport { TraderJoe } from \"./TraderJoe\";\nimport { Ribbon } from \"./Ribbon\";\nimport { LooksRare } from \"./LooksRare\";\nimport { SushiSwap } from \"./SushiSwap\";\nimport { Fodl } from \"./Fodl\";\nimport { QuickSwap } from \"./QuickSwap\";\nimport { Pangolin } from \"./Pangolin\";\nimport { Rook } from \"./Rook\";\nimport { Aave } from \"./Aave\";\nimport { SpookySwap } from \"./SpookySwap\";\nimport { SpiritSwap } from \"./SpiritSwap\";\nimport { Bitcoin } from \"./Bitcoin\";\nimport { Liquity } from \"./Liquity\";\nimport { Raydium } from \"./Raydium\";\n\nexport function registerAllPositions() {\n  OffChain.register();\n  TokenBalances.register();\n  Bitcoin.register();\n\n  Uniswap.register();\n  SushiSwap.register();\n  Pancakeswap.register();\n  Revault.register();\n  AlphaHomora.register();\n  Balancer.register();\n  ElrondMaiar.register();\n  TraderJoe.register();\n  Ribbon.register();\n  LooksRare.register();\n  Unicly.register();\n  Fodl.register();\n  Loops.register();\n  QuickSwap.register();\n  Pangolin.register();\n  Rook.register();\n  Aave.register();\n  SpookySwap.register();\n  SpiritSwap.register();\n  Liquity.register();\n  Raydium.register();\n}\n","import _ from \"lodash\";\nimport { createHook, createSelector, createStore, StoreActionApi } from \"react-sweet-state\";\nimport { PositionArgs, PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport { registerAllPositions } from \"../positionsv1\";\nimport { to3, Token, zero } from \"@defi.org/web3-candies\";\nimport { currentNetwork } from \"../positionsv1/base/consts\";\nimport BN from \"bn.js\";\n\nregisterAllPositions();\n\nconst STORAGE_KEY = \"PositionArgs:v1\";\nexport const loadPositionsFromStorage = () => JSON.parse(localStorage.getItem(STORAGE_KEY) || \"{}\") as Record<string, PositionArgs>;\nexport const savePositionsToStorage = (data: Record<string, PositionArgs>) => localStorage.setItem(STORAGE_KEY, JSON.stringify(data));\n\nconst AllPositionsState = createStore({\n  name: \"AllPositionsState\",\n\n  initialState: {\n    positions: {} as Record<string, PositionV1>,\n  },\n\n  actions: {\n    load: () => async (api) => {\n      await load(api);\n    },\n\n    addPosition: (type: string, address: string, input: string, name: string) => async (api) => {\n      const position = PositionFactory.create({ type, address, input, name, id: \"\" });\n      if (!position) {\n        alert(`unknown type ${type} at ${address}`);\n        return;\n      }\n\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = position.getArgs();\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    update: (position: PositionV1, newArgs: PositionArgs) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      data[position.getArgs().id] = newArgs;\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    delete: (posId: string) => async (api) => {\n      const data = _.mapValues(api.getState().positions, (p) => p.getArgs());\n      delete data[posId];\n      savePositionsToStorage(data);\n      await load(api);\n    },\n\n    sendTransaction:\n      (posId: string, useLegacyTx: boolean, method: string, args: string[]) =>\n      async ({ getState }) => {\n        await getState().positions[posId].sendTransaction(method, args, useLegacyTx);\n      },\n\n    harvest:\n      (posId: string, useLegacyTx: boolean) =>\n      async ({ getState }) => {\n        await getState().positions[posId].harvest(useLegacyTx);\n      },\n  },\n});\n\nasync function load(api: StoreActionApi<typeof AllPositionsState.initialState>) {\n  console.log(\"LOAD positions...\");\n  const current = api.getState().positions;\n  const positions = _.mapValues(loadPositionsFromStorage(), (args) => current[args.id] || PositionFactory.create(args));\n\n  for (const id in positions) if (!positions[id]) delete positions[id];\n\n  await PositionFactory.oracle.warmup(_.values(positions));\n\n  const network = await currentNetwork();\n\n  await Promise.all(\n    _.map(positions, (p) => {\n      if (!p || !network || !PositionFactory.shouldLoad(p, network)) return;\n      return p\n        .load()\n        .then(() => ((p as any).loaded = true))\n        .catch((e) => {\n          (p as any).loaded = false;\n          console.log(p.getArgs().type, e);\n        });\n    })\n  );\n  api.setState({ positions });\n  console.log(`...done loading ${network?.name}`);\n}\n\nexport const useAllPositionsActions = createHook(AllPositionsState, { selector: null });\n\nexport const useAllPositionRows = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .values()\n        .sortBy((p) => p.getArgs().type)\n        .value(),\n    (positions) =>\n      _.map(positions, (p) => ({\n        id: p.getArgs().id,\n        type: p.getArgs().type,\n        name: p.getArgs().name || p.getName() || p.getArgs().type,\n        chain: p.getNetwork().name,\n        health: p.getHealth(),\n        marketValue: num(marketValue(p)),\n        pending: num(p.getPendingRewards().reduce((sum, v) => sum.add(v.value), zero)),\n        tvl: num(p.getTVL()),\n        position: p,\n        address: p.getArgs().address,\n        loaded: !!(p as any).loaded,\n      }))\n  ),\n});\nexport const useAllPositions = createHook(AllPositionsState, {\n  selector: (state) => state.positions,\n});\n\nexport const useAllPositionsValuePerPosition = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.map(state.positions, (position) => ({ position, marketValue: Math.round(num(marketValue(position))) })),\n    (rows) => {\n      const sorted = _.sortBy(rows, (r) => -r.marketValue);\n      return {\n        labels: sorted.map((p) => p.position.getArgs().name || p.position.getName() || p.position.getArgs().type),\n        values: sorted.map((p) => p.marketValue),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerAssetClass = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) =>\n      _(state.positions)\n        .map((position) => position.getAmounts())\n        .flatten()\n        .value(),\n    (amounts) => {\n      const reduced = _(amounts)\n        .groupBy((a) => assetClass(a.asset))\n        .map((values, key) => ({ assetClass: key, value: _.reduce(values, (sum, a) => sum + num(a.value), 0) }))\n        .sortBy((v) => -v.value)\n        .value();\n      return {\n        labels: _.map(reduced, (ac) => ac.assetClass),\n        values: _.map(reduced, (ac) => Math.round(ac.value)),\n      };\n    }\n  ),\n});\n\nexport const useAllPositionsValuePerChain = createHook(AllPositionsState, {\n  selector: createSelector(\n    (state) => _.groupBy(state.positions, (p) => p.getNetwork().name),\n    (grouped) => {\n      const totalPerChain = _(grouped)\n        .map((positions, chain) => ({\n          chain,\n          marketValue: Math.round(num(totalMarketValue(positions))),\n        }))\n        .sortBy((t) => -t.marketValue)\n        .value();\n      return {\n        labels: _.map(totalPerChain, (t) => t.chain),\n        values: _.map(totalPerChain, (t) => t.marketValue),\n        grandtotal: _.reduce(totalPerChain, (sum, t) => sum + t.marketValue, 0),\n      };\n    }\n  ),\n});\n\nfunction num(bn: BN) {\n  return to3(bn, 18).toNumber() / 1000;\n}\n\nfunction marketValue(p: PositionV1) {\n  return _.reduce(p.getAmounts(), (sum, v) => sum.add(v.value), zero);\n}\n\nfunction totalMarketValue(positions: PositionV1[]) {\n  return _.reduce(positions, (sum, pos) => sum.add(marketValue(pos)), zero);\n}\n\nfunction assetClass(a: Token): string {\n  const ext = (a as any).symbol || (a as any).tokenId;\n  if (ext) return ext;\n  if (a.name.toLowerCase().includes(\"usd\") || [\"dai\", \"mai\", \"mim\"].includes(a.name.toLowerCase())) return \"USD\";\n  if (a.name.toLowerCase().includes(\"btc\")) return \"BTC\";\n  if (a.name.toLowerCase().includes(\"eth\")) return \"ETH\";\n  if (a.name.toLowerCase().includes(\"bnb\")) return \"BNB\";\n  if (a.name.toLowerCase().includes(\"avax\")) return \"AVAX\";\n  if (a.name.toLowerCase().includes(\"matic\")) return \"MATIC\";\n  if (a.name.toLowerCase().includes(\"ftm\")) return \"FTM\";\n  if ((a as any).bech32) return \"BTC\";\n  return a.name || a.address;\n}\n","import { createHook, createSelector, createStore } from \"react-sweet-state\";\nimport { PositionV1 } from \"../positionsv1/base/PositionV1\";\nimport _ from \"lodash\";\nimport BN from \"bn.js\";\nimport { fmt18 } from \"@defi.org/web3-candies\";\n\nconst PositionDialogState = createStore({\n  name: \"PositionDialogState\",\n\n  initialState: {\n    position: null as PositionV1 | null,\n    useLegacy: false,\n    selectedMethod: \"\",\n    selectedMethodArgs: {},\n  },\n\n  actions: {\n    showPosition:\n      (position: PositionV1) =>\n      async ({ setState, getState }) => {\n        if (getState().position !== position) {\n          setState({ position, selectedMethod: \"\", selectedMethodArgs: {}, useLegacy: false });\n        }\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ position: null });\n      },\n\n    selectMethod:\n      (method: string) =>\n      async ({ setState }) => {\n        setState({ selectedMethod: method, selectedMethodArgs: {} });\n      },\n\n    setMethodArg:\n      (index: number, arg: string) =>\n      async ({ setState, getState }) => {\n        setState({ selectedMethodArgs: { ...getState().selectedMethodArgs, [index]: arg } });\n      },\n\n    setUseLegacy:\n      (useLegacy: boolean) =>\n      async ({ setState }) => {\n        setState({ useLegacy });\n      },\n\n    harvest:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.harvest(getState().useLegacy);\n      },\n\n    send:\n      () =>\n      async ({ getState }) => {\n        await getState().position!.sendTransaction(getState().selectedMethod, _.values(getState().selectedMethodArgs), getState().useLegacy);\n      },\n\n    call:\n      (showAlert: (a: string) => void) =>\n      async ({ getState }) => {\n        try {\n          const result = await getState().position!.callContract(getState().selectedMethod, _.values(getState().selectedMethodArgs));\n          showAlert(_.toString(result) || \"undefined\");\n        } catch (e: any) {\n          showAlert(_.toString(e));\n        }\n      },\n  },\n});\n\nexport const usePositionDialogActions = createHook(PositionDialogState, { selector: null });\nexport const usePositionDialogSelector = createHook(PositionDialogState, {\n  selector: createSelector(\n    (state) => state,\n    (state) => state.position?.getContractMethods().filter((m) => !m.startsWith(\"0x\") && m.endsWith(\")\")) || [],\n    (state) =>\n      state.selectedMethod\n        .substring(state.selectedMethod.indexOf(\"(\") + 1, state.selectedMethod.length - 1)\n        .split(\",\")\n        .filter((a) => a.length > 0),\n    (state) =>\n      _(state.position?.getAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) =>\n      _(state.position?.getRewardAssets())\n        .mapKeys((a) => a.name)\n        .mapValues((v) => v.address)\n        .value(),\n    (state) => _.mapValues(state.position?.getData(), fmtData),\n    (state, positionMethods, selectedMethodArgTypes, assets, rewardAssets, data) => ({\n      position: state.position,\n      positionMethods,\n      selectedMethod: state.selectedMethod,\n      selectedMethodArgTypes,\n      useLegacy: state.useLegacy,\n      rawData: JSON.stringify({ assets, rewardAssets, data }, null, 4),\n    })\n  ),\n});\n\nfunction fmtData(data: any): any {\n  if (_.isArray(data)) return _.map(data, fmtData);\n  return data instanceof BN ? fmt18(data) : data;\n}\n","import { createHook, createStore } from \"react-sweet-state\";\nimport { PositionFactory } from \"../positionsv1/base/PositionFactory\";\nimport _ from \"lodash\";\n\nconst AddPositionDialogState = createStore({\n  name: \"AddPositionDialogState\",\n\n  initialState: {\n    show: false,\n    type: \"\",\n    address: \"\",\n    input: \"\",\n    name: \"\",\n    valid: false,\n    allTypes: PositionFactory.allTypes().sort(),\n  },\n\n  actions: {\n    show:\n      () =>\n      async ({ setState }) => {\n        setState({ show: true, type: \"\", address: \"\", input: \"\", name: \"\", valid: false });\n      },\n\n    closeDialog:\n      () =>\n      async ({ setState }) => {\n        setState({ show: false });\n      },\n\n    setType:\n      (type: string) =>\n      async ({ setState, getState }) => {\n        const valid = PositionFactory.isValidArgs(type, getState().address);\n        setState({ type, valid });\n      },\n\n    setAddress:\n      (address: string) =>\n      async ({ setState, getState }) => {\n        address = _.trim(address);\n        const valid = PositionFactory.isValidArgs(getState().type, address);\n        setState({ address, valid });\n      },\n\n    setInput:\n      (input: string) =>\n      async ({ setState }) => {\n        input = _.trim(input);\n        setState({ input });\n      },\n\n    setName:\n      (name: string) =>\n      async ({ setState }) => {\n        name = _.trim(name);\n        setState({ name });\n      },\n  },\n});\n\nexport const useAddPositionDialog = createHook(AddPositionDialogState);\n","import React from \"react\";\nimport { useAppActions, useIsAppConnected } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from \"@mui/material\";\nimport { useAllPositionsActions } from \"../state/AllPositionsState\";\nimport { useAddPositionDialog } from \"../state/AddPositionDialogState\";\n\nexport const AddPositionBtn = () => {\n  const [isConnected] = useIsAppConnected();\n  const [, actions] = useAddPositionDialog();\n  return (\n    <Button disabled={!isConnected} onClick={() => actions.show()}>\n      + Position\n    </Button>\n  );\n};\n\nexport const AddPositionDialog = () => {\n  const [, appActions] = useAppActions();\n  const [state, actions] = useAddPositionDialog();\n  const [, allPositionActions] = useAllPositionsActions();\n\n  const close = () => actions.closeDialog();\n\n  const add = () => appActions.withLoading(() => allPositionActions.addPosition(state.type, state.address, state.input, state.name)).then(close);\n\n  return (\n    <div>\n      <Dialog open={state.show} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Add Position</DialogTitle>\n\n        <DialogContent>\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Position Type</InputLabel>\n            <Select value={state.type} label=\"Position Type\" onChange={(e) => actions.setType(e.target.value)}>\n              <MenuItem value=\"\" />\n              {state.allTypes.map((type) => (\n                <MenuItem key={type} value={type}>\n                  {type}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          <br />\n          <TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Target Address\" onChange={(e) => actions.setAddress(e.target.value)} />\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Name?\" onChange={(e) => actions.setName(e.target.value)} />}\n\n          <br />\n          <br />\n          {<TextField fullWidth id=\"outlined-basic\" variant=\"outlined\" label=\"Input?\" onChange={(e) => actions.setInput(e.target.value)} />}\n\n          <br />\n          <br />\n        </DialogContent>\n        <DialogActions>\n          <Button size=\"large\" disabled={!state.valid} onClick={add}>\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useAllPositionRows, useAllPositions, useAllPositionsValuePerAssetClass, useAllPositionsValuePerChain, useAllPositionsValuePerPosition } from \"../state/AllPositionsState\";\nimport { DataGrid, GridColDef } from \"@mui/x-data-grid\";\nimport { useAppState } from \"../state/AppState\";\nimport { usePositionDialogActions } from \"../state/PositionDialogState\";\nimport { commafy } from \"@defi.org/web3-candies\";\nimport { Threat } from \"../positionsv1/base/PositionV1\";\nimport { ListItemText } from \"@mui/material\";\nimport { AddPositionBtn } from \"./AddPositionDialog\";\nimport { ArcElement, Chart as ChartJS, Legend, Tooltip } from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst columns: GridColDef[] = [\n  { field: \"loaded\", headerName: \"🌐\", headerAlign: \"center\", width: 20, align: \"center\", valueFormatter: (v) => (v.value ? \"✅\" : \"❔\") },\n  { field: \"chain\", headerName: \"Chain\", headerAlign: \"center\", width: 120, align: \"left\" },\n  { field: \"name\", headerName: \"Position\", headerAlign: \"center\", width: 300, align: \"left\" },\n  {\n    field: \"health\",\n    headerName: \"Health\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"center\",\n    valueFormatter: (v) => {\n      if (!v.value || !(v.value as Threat[]).length) return \"🟢\";\n      return (v.value as Threat[]).map((t) => t.message).join(\"⚠️\");\n    },\n  },\n  {\n    field: \"marketValue\",\n    headerName: \"Market Value\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"pending\",\n    headerName: \"Pending\",\n    headerAlign: \"center\",\n    width: 100,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  {\n    field: \"tvl\",\n    headerName: \"TVL\",\n    headerAlign: \"center\",\n    width: 130,\n    align: \"right\",\n    type: \"number\",\n    valueFormatter: (v) => \"$  \" + commafy((v.value as number).toFixed(0)),\n    sortable: true,\n  },\n  { field: \"address\", headerName: \"Address\", headerAlign: \"center\", width: 450, align: \"left\" },\n];\n\nexport const AllPositionsTable = () => {\n  const [appState, appActions] = useAppState();\n  const [rows, actions] = useAllPositionRows(null);\n  const [positions] = useAllPositions();\n  const [, positionDialogActions] = usePositionDialogActions();\n  const [totalValuesPerChain] = useAllPositionsValuePerChain(null);\n  const [valuesPerPosition] = useAllPositionsValuePerPosition(null);\n  const [valuesPerAssetClass] = useAllPositionsValuePerAssetClass(null);\n\n  useEffect(() => {\n    if (appState.network?.id) appActions.withLoading(actions.load).then();\n  }, [appState.network, appActions, actions]);\n\n  const click = (p: any) => positionDialogActions.showPosition(positions[p.id.toString()]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"90%\" }}>\n      <ListItemText>Total Market Value: $ {commafy(totalValuesPerChain.grandtotal)}</ListItemText>\n\n      <div style={{ display: \"flex\" }}>\n        <div>\n          <ListItemText>Value Per Chain:</ListItemText>\n          <Pie\n            data={{\n              labels: totalValuesPerChain.labels,\n              datasets: [\n                {\n                  data: totalValuesPerChain.values,\n                  backgroundColor: totalValuesPerChain.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Position:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerPosition.labels,\n              datasets: [\n                {\n                  data: valuesPerPosition.values,\n                  backgroundColor: valuesPerPosition.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n\n        <div>\n          <ListItemText>Value Per Asset Class:</ListItemText>\n          <Pie\n            data={{\n              labels: valuesPerAssetClass.labels,\n              datasets: [\n                {\n                  data: valuesPerAssetClass.values,\n                  backgroundColor: valuesPerAssetClass.values.map((v, i) => colorOf(i)),\n                },\n              ],\n            }}\n            options={{ responsive: false, plugins: { legend: { display: false } } }}\n            height=\"200\"\n          />\n        </div>\n      </div>\n\n      <br />\n\n      <DataGrid rows={rows} columns={columns} onCellClick={click} autoHeight hideFooter />\n\n      <br />\n      <AddPositionBtn />\n    </div>\n  );\n};\n\nfunction colorOf(num: number) {\n  return bgColors[num % bgColors.length];\n}\n\nconst bgColors = [\n  \"#413d5e\",\n  \"#495371\",\n  \"#638c93\",\n  \"#98B4AA\",\n  \"#F1E0AC\", //\n];\n","import React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControl,\n  FormControlLabel,\n  FormGroup,\n  InputLabel,\n  MenuItem,\n  Select,\n  Switch,\n  TextField,\n} from \"@mui/material\";\nimport { usePositionDialogSelector } from \"../state/PositionDialogState\";\nimport { useAppState } from \"../state/AppState\";\nimport { useAllPositions } from \"../state/AllPositionsState\";\n\nexport const PositionDialog = () => {\n  const [, appStateActions] = useAppState();\n  const [selector, actions] = usePositionDialogSelector(null);\n  const [, allPositionsActions] = useAllPositions();\n\n  const close = () => actions.closeDialog();\n\n  const deletePos = () => appStateActions.withLoading(() => allPositionsActions.delete(selector.position!.getArgs().id)).then(close);\n\n  // const updatePos = () => appStateActions.withLoading(() => allPositionsActions.update(selector.position!, selector.position!.getArgs())).then(close);\n\n  const showData = () => appStateActions.showAlert(selector.rawData);\n\n  const harvest = () => appStateActions.withLoading(() => actions.harvest()).then(close);\n\n  const send = () => appStateActions.withLoading(() => actions.send()).then(close);\n\n  const call = () => appStateActions.withLoading(() => actions.call(appStateActions.showAlert));\n\n  return (\n    <div>\n      <Dialog open={!!selector.position} onClose={close}>\n        <DialogTitle>Position: {selector.position?.getArgs()?.name || selector.position?.getArgs()?.type}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Network: {selector.position?.getNetwork()?.name}</DialogContentText>\n          <DialogContentText>Address: {selector.position?.getArgs()?.address}</DialogContentText>\n          {selector.position?.getArgs()?.input && <DialogContentText>Input: {selector.position?.getArgs()?.input}</DialogContentText>}\n\n          <br />\n          <FormControl fullWidth>\n            <InputLabel>Method</InputLabel>\n            <Select value={selector.selectedMethod} label=\"Method\" onChange={(e) => actions.selectMethod(e.target.value)}>\n              {selector.positionMethods.map((m) => (\n                <MenuItem key={m} value={m}>\n                  {m}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <br />\n          {selector.selectedMethodArgTypes.length > 0 &&\n            selector.selectedMethodArgTypes.map((argType, i) => (\n              <TextField\n                key={argType + i}\n                autoFocus\n                margin=\"dense\"\n                id={argType + i}\n                label={argType}\n                type=\"text\"\n                fullWidth\n                variant=\"standard\"\n                onChange={(e) => actions.setMethodArg(i, e.target.value)}\n              />\n            ))}\n\n          <br />\n          <br />\n\n          <FormGroup>\n            <FormControlLabel control={<Switch checked={selector.useLegacy} onChange={(e: any) => actions.setUseLegacy(e.target.checked)} />} label=\"Use Legacy Transaction Type\" />\n          </FormGroup>\n        </DialogContent>\n\n        <DialogActions>\n          <Button onClick={deletePos}>Delete Position</Button>\n\n          <Button onClick={showData}>Show Data</Button>\n\n          <Button onClick={harvest}>Just Harvest</Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={call}>\n            Call Contract\n          </Button>\n\n          <Button disabled={!selector.selectedMethod} onClick={send}>\n            Send Transaction\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useAppState } from \"../state/AppState\";\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from \"@mui/material\";\n\nlet memAlert = \"\";\n\nexport const AlertDialog = () => {\n  const [appState, appStateActions] = useAppState();\n  memAlert = appState.alertDialog || memAlert;\n\n  const close = () => appStateActions.showAlert(\"\");\n\n  return (\n    <div>\n      <Dialog open={!!appState.alertDialog} onClose={close}>\n        <DialogTitle style={{ minWidth: \"28em\" }}>Alert</DialogTitle>\n\n        <DialogContent>\n          <DialogContentText style={{ whiteSpace: \"pre\" }}>{memAlert}</DialogContentText>\n        </DialogContent>\n\n        <DialogActions>\n          <Button size=\"large\" onClick={close}>\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonGroup } from \"@mui/material\";\nimport { loadPositionsFromStorage, savePositionsToStorage } from \"../state/AllPositionsState\";\nimport { PositionArgs } from \"../positionsv1/base/PositionV1\";\n\nconst downloadFile = (data: string, fileName: string, fileType: \"text/json\" | \"text/csv\") => {\n  const blob = new Blob([data], { type: fileType });\n\n  const a = document.createElement(\"a\");\n  a.download = fileName;\n  a.href = window.URL.createObjectURL(blob);\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.remove();\n};\n\nconst exportPositionsJson = (e: any) => {\n  const data = JSON.stringify(loadPositionsFromStorage(), null, 2);\n  const name = `Positions-V1-${new Date().toISOString().split(\"T\")[0]}.json`;\n  downloadFile(data, name, \"text/json\");\n};\n\nconst importPositionsJson = (e: any) => {\n  const a = document.createElement(\"input\");\n  a.type = \"file\";\n  a.accept = \"application/json\";\n  a.hidden = true;\n  a.id = \"inputJsonFile\";\n  a.dispatchEvent(\n    new MouseEvent(\"click\", {\n      view: window,\n      bubbles: true,\n      cancelable: true,\n    })\n  );\n  a.addEventListener(\"change\", () => {\n    const file = a.files![0];\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const str = e.target?.result?.toString();\n      const data = JSON.parse(str || \"{}\") as Record<string, PositionArgs>;\n      console.log(\"parsed\", data);\n      savePositionsToStorage(data);\n      a.remove();\n      window.location.reload();\n    };\n    reader.readAsText(file, \"utf8\");\n  });\n};\n\nexport const ImportExport = () => {\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-around\" }}>\n      <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n        <Button onClick={importPositionsJson}>Import JSON</Button>\n        <Button onClick={exportPositionsJson}>Export JSON</Button>\n      </ButtonGroup>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Backdrop, CircularProgress, createTheme, ThemeProvider } from \"@mui/material\";\nimport { useIsLoading } from \"./state/AppState\";\nimport { AppHeader } from \"./ui/AppHeader\";\nimport { AllPositionsTable } from \"./ui/AllPositionsTable\";\nimport { AddPositionDialog } from \"./ui/AddPositionDialog\";\nimport { PositionDialog } from \"./ui/PositionDialog\";\nimport { AlertDialog } from \"./ui/AlertDialog\";\nimport { ImportExport } from \"./ui/ImportExport\";\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: \"dark\",\n  },\n});\n\nexport const App = () => {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <div className=\"App\">\n        <AppHeader />\n\n        <AllPositionsTable />\n\n        <br />\n        <br />\n\n        <ImportExport />\n\n        <br />\n\n        <div>\n          <AddPositionDialog />\n          <PositionDialog />\n          <AlertDialog />\n        </div>\n\n        <div>\n          <Loading />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n};\n\nconst Loading = () => {\n  const [loading] = useIsLoading();\n  return (\n    <Backdrop sx={{ color: \"#fff\", zIndex: (theme) => theme.zIndex.modal + 1 }} open={loading}>\n      <CircularProgress color=\"inherit\" />\n    </Backdrop>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport { Homepage } from \"./Homepage\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <div>\n        <Switch>\n          <Route path=\"/dashboard\" component={App} />\n          <Route path=\"/\" component={Homepage} />\n        </Switch>\n      </div>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals(console.log);\n","import React from \"react\";\nimport \"./Homepage.css\";\nimport OrbsLogo from \"./assets/orbs.png\";\nimport DeFiLogo from \"./assets/logo.svg\";\nimport LI1 from \"./assets/list-icon1.svg\";\nimport LI2 from \"./assets/list-icon2.svg\";\nimport LI3 from \"./assets/list-icon3.svg\";\nimport LI4 from \"./assets/list-icon4.svg\";\nimport LI5 from \"./assets/list-icon5.svg\";\nimport DotLine from \"./assets/dotted-line.svg\";\nimport Geom1 from \"./assets/geom1.png\";\nimport Geom2 from \"./assets/geom2.png\";\n\n/* eslint-disable */\nexport const Homepage = () => {\n  return (\n    <div>\n      <div className=\"PartnersSection row\" style={{ paddingTop: \"0px\" }}>\n        <div className=\"LogoSection column\">\n          <div className=\"StrategicPartnersLabel large\">MANAGING PARTNERS</div>\n          <div className=\"StrategicPartnersList row\" style={{ marginTop: \"25px\" }}>\n            <a className=\"OrbsLogo\" href=\"https://www.orbs.com\">\n              <img className=\"OrbsLogo\" src={OrbsLogo} alt={\"Orbs\"} />\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"TitleSection column\">\n        <img className=\"logo\" src={DeFiLogo} />\n        <div>\n          <h1>\n            DeFi<span className=\"small\">.js</span>\n          </h1>\n          <p>Community-led initiative to standardize the management of Decentralized Finance positions programmatically</p>\n        </div>\n        <p>UNDER CONSTRUCTION</p>\n      </div>\n      <div className=\"LightSection column spaced\">\n        <h3>Simplify and standardize DeFi position management</h3>\n        <div className=\"IconList row\">\n          <div className=\"column\">\n            <img src={LI1} />\n            <p>Discover and quickly assess leading DeFi protocol strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI2} />\n            <p>Monitor key position properties ex. APY, TVL, rewards</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI3} />\n            <p>Monitor position health and governance</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI4} />\n            <p>Compare historical performances between strategies</p>\n          </div>\n          <div className=\"column\">\n            <img src={LI5} />\n            <p>Composability and interop with the ecosystem</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"DarkSection row DarkAbstract\">\n        <div className=\"Half column\">\n          <div className=\"SectionTitle\">\n            <h2>THE API</h2>\n            <img src={DotLine} />\n          </div>\n        </div>\n        <div className=\"Half column\">\n          <ul className=\"BulletList\">\n            <li>getNetwork(): Network</li>\n            <li>getAssets(): Token[]</li>\n            <li>getRewardAssets(): Token[]</li>\n            <li>getTVL(): Promise&lt;BN&gt;</li>\n            <li>getAPR(): Promise&lt;BN&gt;</li>\n            <li>getHealth(): Promise&lt;Threat[]&gt;</li>\n            <li>getPendingRewards(): Promise&lt;TokenAmount[]&gt;</li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"Footer row\">\n        <span>© 2020 defi.org</span>\n        <a href=\"https://www.announcements.defi.org/\">Announcements</a>\n        <a href=\"https://www.privacypolicies.com/generic/\">Privacy</a>\n        <a href=\"https://github.com/defi-org-code\">GitHub</a>\n        <a href=\"https://t.me/defiorg\">Telegram</a>\n        <a href=\"mailto:hello@defi.org\">hello@defi.org</a>\n      </div>\n\n      <div id=\"geometry_container\" hidden={true}>\n        <div style={{ width: \"15%\", maxWidth: \"180px\", position: \"absolute\", left: \"15%\", top: \"-70px\" }}>\n          <img src={Geom1} width=\"100%\" />\n        </div>\n        <div style={{ width: \"15%\", maxWidth: \"360px\", position: \"absolute\", left: \"70%\", top: \"20px\" }}>\n          <img src={Geom2} width=\"100%\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"sourceRoot":""}